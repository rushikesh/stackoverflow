[{"t":"How do JavaScript closures work?","l":"http://stackoverflow.com/questions/111102/how-do-javascript-closures-work","q":"\n\n<p>Like the old <a href=\"http://en.wikipedia.org/wiki/Albert_Einstein\">Albert Einstein</a> <a href=\"http://www.searchquotes.com/quotation/If_you_can%27t_explain_it_to_a_six_year_old,_you_don%27t_understand_it_yourself./333069/\">said</a>: </p>\n\n<blockquote>\n  <p>If you can't explain it to a six-year-old, you really don't understand it yourself.  </p>\n</blockquote>\n\n<p>Well, I tried to explain JavaScript closures to a 27-year-old friend and completely failed.</p>\n\n<p>How would you explain it to someone with a knowledge of the concepts which make up closures (for example, functions, variables and the like), but does not understand closures themselves?</p>\n\n<p>I have seen <a href=\"http://en.wikipedia.org/wiki/Scheme_%28programming_language%29\">the Scheme example</a> given on Stack Overflow, and it did not help.</p>\n    ","a":"\n<p>Whenever you see the function keyword within another function, the inner function has access to variables in the outer function.</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function foo(x) {\n  var tmp = 3;\n\n  function bar(y) {\n    alert(x + y + (++tmp)); // will alert 16\n  }\n\n  bar(10);\n}\n\nfoo(2);</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>This will always alert 16, because <code>bar</code> can access the <code>x</code> which was defined as an argument to <code>foo</code>, and it can also access <code>tmp</code> from <code>foo</code>.</p>\n\n<p>That <strong><em>is</em></strong> a closure. A function doesn't have to <em>return</em> in order to be called a closure. <strong><em>Simply accessing variables outside of your immediate lexical scope creates a closure</em></strong>.</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function foo(x) {\n  var tmp = 3;\n\n  return function (y) {\n    alert(x + y + (++tmp)); // will also alert 16\n  }\n}\n\nvar bar = foo(2); // bar is now a closure.\nbar(10);</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>The above function will also alert 16, because <code>bar</code> can still refer to <code>x</code> and <code>tmp</code>, even though it is no longer directly inside the scope.</p>\n\n<p>However, since <code>tmp</code> is still hanging around inside <code>bar</code>'s closure, it is also being incremented. It will be incremented each time you call <code>bar</code>.</p>\n\n<p>The simplest example of a closure is this:</p>\n\n<pre><code>var a = 10;\nfunction test() {\n  console.log(a); // will output 10\n  console.log(b); // will output 6\n}\nvar b = 6;\ntest();\n</code></pre>\n\n<p>When a JavaScript function is invoked, a new execution context is created. Together with the function arguments and the parent object, this execution context also receives all the variables declared outside of it (in the above example, both 'a' and 'b').</p>\n\n<p>It is possible to create more than one closure function, either by returning a list of them or by setting them to global variables. All of these will refer to the <strong>same</strong> <code>x</code> and the same <code>tmp</code>, they don't make their own copies.</p>\n\n<p>Here the number <code>x</code> is a literal number. As with other literals in JavaScript, when <code>foo</code> is called, the number <code>x</code> is <b>copied</b> into <code>foo</code> as its argument <code>x</code>.</p>\n\n<p>On the other hand, JavaScript always uses references when dealing with objects. If say, you called <code>foo</code> with an object, the closure it returns will <b>reference</b> that original object!</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function foo(x) {\n  var tmp = 3;\n\n  return function (y) {\n    alert(x + y + tmp);\n    x.memb = x.memb ? x.memb + 1 : 1;\n    alert(x.memb);\n  }\n}\n\nvar age = new Number(2);\nvar bar = foo(age); // bar is now a closure referencing age.\nbar(10);</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>As expected, each call to <code>bar(10)</code> will increment <code>x.memb</code>. What might not be expected, is that <code>x</code> is simply referring to the same object as the <code>age</code> variable! After a couple of calls to <code>bar</code>, <code>age.memb</code> will be 2! This referencing is the basis for memory leaks with HTML objects.</p>\n    "},{"t":"How can I make a redirect page using jQuery?","l":"http://stackoverflow.com/questions/503093/how-can-i-make-a-redirect-page-using-jquery","q":"\n\n<p>How can I redirect the user from one page to another using jQuery?</p>\n    ","a":"\n<p>jQuery is not necessary, and <strong><code>window.location.replace(...)</code></strong> will best simulate an HTTP redirect.  </p>\n\n<p>It is better than using <code>window.location.href =</code>, because <code>replace()</code> does not put the originating page in the session history, meaning the user won't get stuck in a never-ending back-button fiasco.  If you want to simulate someone clicking on a link, use <code>location.href</code>.  If you want to simulate an HTTP redirect, use <code>location.replace</code>.</p>\n\n<p><strong>For example:</strong></p>\n\n<pre><code>// similar behavior as an HTTP redirect\nwindow.location.replace(\"http://stackoverflow.com\");\n\n// similar behavior as clicking on a link\nwindow.location.href = \"http://stackoverflow.com\";\n</code></pre>\n    "},{"t":"What does “use strict” do in JavaScript, and what is the reasoning behind it?","l":"http://stackoverflow.com/questions/1335851/what-does-use-strict-do-in-javascript-and-what-is-the-reasoning-behind-it","q":"\n\n<p>Recently, I ran some of my JavaScript code through Crockford's <a href=\"http://www.jslint.com/\">JSLint</a>, and it gave the following error:</p>\n\n<blockquote>\n  <p>Problem at line 1 character 1: Missing \"use strict\" statement.</p>\n</blockquote>\n\n<p>Doing some searching, I realized that some people add <code>\"use strict\";</code> into their JavaScript code. Once I added the statement, the error stopped appearing. Unfortunately, Google did not reveal much of the history behind this string statement. Certainly it must have something to do with how the JavaScript is interpreted by the browser, but I have no idea what the effect would be.</p>\n\n<p>So what is <code>\"use strict\";</code> all about, what does it imply, and is it still relevant?</p>\n\n<p>Do any of the current browsers respond to the <code>\"use strict\";</code> string or is it for future use?</p>\n    ","a":"\n<p>This article about Javascript Strict Mode might interest you: <a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">John Resig - ECMAScript 5 Strict Mode, JSON, and More</a></p>\n\n<p>To quote some interesting parts:</p>\n\n<blockquote>\n  <p>Strict Mode is a new feature in ECMAScript 5 that allows you to place a program, or a function, in a \"strict\" operating context. This strict context prevents certain actions from being taken and throws more exceptions.</p>\n</blockquote>\n\n<p>And:</p>\n\n<blockquote>\n  <p>Strict mode helps out in a couple ways:</p>\n  \n  <ul>\n  <li>It catches some common coding bloopers, throwing exceptions.</li>\n  <li>It prevents, or throws errors, when relatively \"unsafe\" actions are taken (such as gaining access to the global object).</li>\n  <li>It disables features that are confusing or poorly thought out.</li>\n  </ul>\n</blockquote>\n\n<p>Also note you can apply \"strict mode\" to the whole file... Or you can use it only for a specific function <em>(still quoting from John Resig's article)</em>:</p>\n\n<pre><code>// Non-strict code...\n\n(function(){\n  \"use strict\";\n\n  // Define your library strictly...\n})();\n\n// Non-strict code... \n</code></pre>\n\n<p>Which might be helpful if you have to mix old and new code ;-)</p>\n\n<p>So, I suppose it's a bit like the <code>\"use strict\"</code> you can use in Perl <em>(hence the name?)</em>: it helps you make fewer errors, by detecting more things that could lead to breakages.</p>\n\n<p>Currently, it's <a href=\"http://caniuse.com/#use-strict\"><strong>supported by all major browsers</strong></a> <em>(bar IE 9 and below)</em>.</p>\n    "},{"t":"Checking if an element is hidden","l":"http://stackoverflow.com/questions/178325/checking-if-an-element-is-hidden","q":"\n\n<p>In jQuery, it is possible to toggle the visibility of an element, using the functions <code>.hide()</code>, <code>.show()</code> or <code>.toggle()</code>.</p>\n\n<p>Using jQuery, how would you test if an element is visible or hidden?</p>\n    ","a":"\n<p>Since the question refers to a single element, this code might be more suitable:</p>\n\n<pre><code>// Checks for display:[none|block], ignores visible:[true|false]\n$(element).is(\":visible\"); \n</code></pre>\n\n<p>Same as <a href=\"http://stackoverflow.com/questions/178325/how-do-you-test-if-something-is-hidden-in-jquery/178386#178386\">twernt's suggestion</a>, but applied to a single element.</p>\n    "},{"t":"How can I check if one string contains another substring?","l":"http://stackoverflow.com/questions/1789945/how-can-i-check-if-one-string-contains-another-substring","q":"\n\n<p>How can I check if one string contains another substring in JavaScript? \nUsually I would expect a <code>String.contains()</code> method, but there doesn't seem to be one.</p>\n    ","a":"\n<p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/String/indexOf\"><code>indexOf</code></a> returns the position of the string in the other string. If not found, it will return -1:</p>\n\n<pre><code>var s = \"foo\";\nalert(s.indexOf(\"oo\") &gt; -1);\n</code></pre>\n    "},{"t":"var functionName = function() {} vs function functionName() {}","l":"http://stackoverflow.com/questions/336859/var-functionname-function-vs-function-functionname","q":"\n\n<p>I've recently started maintaining someone else's JavaScript code. I'm fixing bugs, adding features and also trying to tidy up the code and make it more consistent.</p>\n\n<p>The previous developer uses two ways of declaring functions and I can't work out if there is a reason behind it or not.</p>\n\n<p>The two ways are:</p>\n\n<pre><code>var functionOne = function() {\n    // Some code\n};\n</code></pre>\n\n\n\n<pre><code>function functionTwo() {\n    // Some code\n}\n</code></pre>\n\n<p>What are the reasons for using these two different methods and what are the pros and cons of each? Is there anything that can be done with one method that can't be done with the other?</p>\n    ","a":"\n<p>The difference is that <code>functionOne</code> is defined at run-time, whereas <code>functionTwo</code> is defined at parse-time for a script block.  For example:</p>\n\n<pre><code>&lt;script&gt;\n  // Error\n  functionOne();\n\n  var functionOne = function() {\n  };\n&lt;/script&gt;\n\n&lt;script&gt;\n  // No error\n  functionTwo();\n\n  function functionTwo() {\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This also means you can't conditionally define functions using the second syntax:</p>\n\n<pre><code>&lt;script&gt;\n  if (test) {\n     // Error or misbehavior\n     function functionThree() { doSomething(); }\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>The above actually defines <code>functionThree</code> irrespective of <code>test</code>'s value — unless <code>use strict</code> is in effect, in which case it simply raises an error.</p>\n    "},{"t":"Does it matter which equals operator (== vs ===) I use in JavaScript comparisons?","l":"http://stackoverflow.com/questions/359494/does-it-matter-which-equals-operator-vs-i-use-in-javascript-comparisons","q":"\n\n<p>I'm using <a href=\"http://en.wikipedia.org/wiki/JSLint\">JSLint</a> to go through JavaScript, and it's returning many suggestions to replace <code>==</code> (two equals signs) with <code>===</code> (three equals signs) when doing things like comparing <code>idSele_UNVEHtype.value.length == 0</code> inside of an <code>if</code> statement.</p>\n\n<p>Is there a performance benefit to replacing <code>==</code> with <code>===</code>? </p>\n\n<p>Any performance improvement would be welcomed as many comparison operators exist.</p>\n\n<p>If no type conversion takes place, would there be a performance gain over <code>==</code>?</p>\n    ","a":"\n<p>The identity (<code>===</code>) operator behaves identically to the equality (<code>==</code>) operator except no type conversion is done, and the types must be the same to be considered equal.</p>\n\n<p>Reference: <a href=\"http://www.c-point.com/javascript_tutorial/jsgrpComparison.htm\">Javascript Tutorial: Comparison Operators</a></p>\n\n<p>The <code>==</code> operator will compare for equality <em>after doing any necessary type conversions</em>.  The <code>===</code> operator will <strong>not</strong> do the conversion, so if two values are not the same type <code>===</code> will simply return <code>false</code>. It's this case where <code>===</code> will be faster, and may return a different result than <code>==</code>. In all other cases performance will be the same.</p>\n\n<p>To quote Douglas Crockford's excellent <a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\">JavaScript: The Good Parts</a>,</p>\n\n<blockquote>\n  <p>JavaScript has two sets of equality operators: <code>===</code> and <code>!==</code>, and their evil twins <code>==</code> and <code>!=</code>.  The good ones work the way you would expect.  If the two operands are of the same type and have the same value, then <code>===</code> produces <code>true</code> and <code>!==</code> produces <code>false</code>.  The evil twins do the right thing when the operands are of the same type, but if they are of different types, they attempt to coerce the values.  the rules by which they do that are complicated and unmemorable.  These are some of the interesting cases:</p>\n\n<pre><code>'' == '0'           // false\n0 == ''             // true\n0 == '0'            // true\n\nfalse == 'false'    // false\nfalse == '0'        // true\n\nfalse == undefined  // false\nfalse == null       // false\nnull == undefined   // true\n\n' \\t\\r\\n ' == 0     // true\n</code></pre>\n  \n  <p>The lack of transitivity is alarming.  My advice is to never use the evil twins.  Instead, always use <code>===</code> and <code>!==</code>.  All of the comparisons just shown produce <code>false</code> with the <code>===</code> operator.</p>\n</blockquote>\n\n<hr>\n\n<h3>Update:</h3>\n\n<p>A good point was brought up by <a href=\"http://stackoverflow.com/users/165495/casebash\">@Casebash</a> in the comments and in <a href=\"http://stackoverflow.com/users/113570/philippe-leybaert\">@Phillipe Laybaert's</a> <a href=\"http://stackoverflow.com/a/957602/1288\">answer</a> concerning reference types.  For reference types <code>==</code> and <code>===</code> act consistently with one another (except in a special case).</p>\n\n<pre><code>var a = [1,2,3];\nvar b = [1,2,3];\n\nvar c = { x: 1, y: 2 };\nvar d = { x: 1, y: 2 };\n\nvar e = \"text\";\nvar f = \"te\" + \"xt\";\n\na == b            // false\na === b           // false\n\nc == d            // false\nc === d           // false\n\ne == f            // true\ne === f           // true\n</code></pre>\n\n<p>The special case is when you compare a literal with an object that evaluates to the same literal, due to its <code>toString</code> or <code>valueOf</code> method. For example, consider the comparison of a string literal with a string object created by the <code>String</code> constructor.</p>\n\n<pre><code>\"abc\" == new String(\"abc\")    // true\n\"abc\" === new String(\"abc\")   // false\n</code></pre>\n\n<p>Here the <code>==</code> operator is checking the values of the two objects and returning <code>true</code>, but the <code>===</code> is seeing that they're not the same type and returning <code>false</code>.  Which one is correct?  That really depends on what you're trying to compare.  My advice is to bypass the question entirely and just don't use the <code>String</code> constructor to create string objects.</p>\n\n<p><strong>Reference</strong><br>\n<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3\">http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3</a></p>\n    "},{"t":"How can I get query string values in JavaScript?","l":"http://stackoverflow.com/questions/901115/how-can-i-get-query-string-values-in-javascript","q":"\n\n<p>Is there a plugin-less way of retrieving <a href=\"http://en.wikipedia.org/wiki/Query_string\">query string</a> values via jQuery (or without)? </p>\n\n<p>If so, how? If not, is there a plugin which can do so?</p>\n    ","a":"\n<p>You don't need jQuery for that purpose. You can use just some pure JavaScript:</p>\n\n<pre><code>function getParameterByName(name) {\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    var regex = new RegExp(\"[\\\\?&amp;]\" + name + \"=([^&amp;#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n</code></pre>\n\n<p><strong>Usage:</strong></p>\n\n<pre><code>var prodId = getParameterByName('prodId');\n</code></pre>\n    "},{"t":"Can I comment a JSON file?","l":"http://stackoverflow.com/questions/244777/can-i-comment-a-json-file","q":"\n\n<p>Can I comment a JSON file? If so, how?</p>\n    ","a":"\n<p>I don't believe you can have an actual comment.  The JSON should all be data, and if you include a comment, then it will be data too.</p>\n\n<p>You could have a designated data element called \"_comment\" (or something) that would be ignored by apps that use the json data.</p>\n\n<p>You would probably be better having the comment in the processes that generate/receive the json, as they are supposed to know what the json data will be in advance, or at least the structure of it. </p>\n\n<p>But if you decided to...</p>\n\n<pre><code>{\n   \"_comment\": \"comment text goes here...\",\n   \"glossary\": {\n      \"title\": \"example glossary\",\n      \"GlossDiv\": {\n         \"title\": \"S\",\n         \"GlossList\": {\n            \"GlossEntry\": {\n               \"ID\": \"SGML\",\n               \"SortAs\": \"SGML\",\n               \"GlossTerm\": \"Standard Generalized Markup Language\",\n               \"Acronym\": \"SGML\",\n               \"Abbrev\": \"ISO 8879:1986\",\n               \"GlossDef\": {\n                  \"para\": \"A meta-markup language, used to create markup languages such as DocBook.\",\n                  \"GlossSeeAlso\": [\"GML\", \"XML\"]\n               },\n               \"GlossSee\": \"markup\"\n            }\n         }\n      }\n   }\n}\n</code></pre>\n    "},{"t":"Href attribute for JavaScript links: “#” or “javascript:void(0)”?","l":"http://stackoverflow.com/questions/134845/href-attribute-for-javascript-links-or-javascriptvoid0","q":"\n\n<p>The following are two methods of building a link that has the sole purpose of running JavaScript code. Which is better, in terms of functionality, page load speed, validation purposes, etc.?</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function myJsFunc() {\n  alert(\"myJsFunc\");\n}</code></pre>\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;a href=\"#\" onclick=\"myJsFunc();\"&gt;Run JavaScript Code&lt;/a&gt;</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>or</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>  function myJsFunc() {\n    alert(\"myJsFunc\");\n  }</code></pre>\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code> &lt;a href=\"javascript:void(0)\" onclick=\"myJsFunc();\"&gt;Run JavaScript Code&lt;/a&gt;</code></pre>\n</div>\n</div>\n<p></p>\n    ","a":"\n<p>I use <code>javascript:void(0)</code>.</p>\n\n<p>Three reasons. Encouraging the use of # amongst a team of developers inevitably leads to some using the return value of the function called like this:</p>\n\n<pre><code>function doSomething() {\n    //Some code\n    return false;\n}\n</code></pre>\n\n<p>But then they forget to use <code>return doSomething()</code> in the onclick and just use <code>doSomething()</code>.</p>\n\n<p>A second reason for avoiding <code>#</code> is that the final <code>return false;</code> will not execute if the called function throws an error. Hence the developers have to also remember to handle any error appropriately in the called function.</p>\n\n<p>A third reason is that there are cases where the <code>onclick</code> event property is assigned dynamically.  I prefer to be able to call a function or assign it dynamically without having to code the function specifically for one method of attachment or another. Hence my <code>onclick</code> (or on anything) in HTML markup look like this:</p>\n\n<pre><code>onclick=\"someFunc.call(this)\"\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>onclick=\"someFunc.apply(this, arguments)\"\n</code></pre>\n\n<p>Using <code>javascript:void(0)</code> avoids all of the above headaches, and I haven't found any examples of a downside.</p>\n\n<p>So if you're a lone developer then you can clearly make your own choice, but if you work as a team you have to either state:</p>\n\n<p>Use <code>href=\"#\"</code>, make sure <code>onclick</code> always contains <code>return false;</code> at the end, that any called function does not throw an error and if you attach a function dynamically to the <code>onclick</code> property make sure that as well as not throwing an error it returns <code>false</code>.</p>\n\n<p>OR</p>\n\n<p>Use <code>href=\"javascript:void(0)\"</code></p>\n\n<p>The second is clearly much easier to communicate.</p>\n    "},{"t":"What is the most efficient way to clone an object?","l":"http://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-clone-an-object","q":"\n\n<p>What is the most efficient way to clone a JavaScript object? I've seen <code>obj = eval(uneval(o));</code> being used, but that's currently Firefox-only. In Mootools 1.2, I've done things like <code>obj = JSON.decode(JSON.encode(o));</code> but question the efficiency.</p>\n\n<p>I've also seen recursive copying functions with various flaws. I'm surprised no canonical solution exists.</p>\n    ","a":"\n<blockquote>\n  <p><strong>Note:</strong> This is a reply to another answer, not a proper response to this question. If you wish to have fast object cloning please follow <a href=\"http://stackoverflow.com/a/5344074/1438393\">Corban's advice in his answer</a> to this question.</p>\n</blockquote>\n\n<hr>\n\n<p>I want to note that the <a href=\"http://api.jquery.com/clone/\"><code>.clone()</code></a> method in <strong>jQuery</strong> only clones DOM elements. In order to clone JavaScript objects, you would do:</p>\n\n<pre><code>// Shallow copy\nvar newObject = jQuery.extend({}, oldObject);\n\n// Deep copy\nvar newObject = jQuery.extend(true, {}, oldObject);\n</code></pre>\n\n<p>More information can be found in the <a href=\"http://api.jquery.com/jQuery.extend/\">jQuery documentation</a>.</p>\n\n<p>I also want to note that the deep copy is actually much smarter than what is shown above – it's able to avoid many traps (trying to deep extend a DOM element, for example). It's used frequently in jQuery core and in plugins to great effect.</p>\n    "},{"t":"Check checkbox checked property","l":"http://stackoverflow.com/questions/901712/check-checkbox-checked-property","q":"\n\n<p>I need to check the <code>checked</code> property of a checkbox and perform an action based on the checked property using <a href=\"http://en.wikipedia.org/wiki/JQuery\">jQuery</a>.</p>\n\n<p>For example, if the age checkbox is checked, then I need to show a textbox to enter age, else hide the textbox.</p>\n\n<p>But the following code returns <code>false</code> by default:</p>\n\n<pre><code>if($('#isAgeSelected').attr('checked')) {\n    $(\"#txtAge\").show();\n} else {\n    $(\"#txtAge\").hide();\n}\n</code></pre>\n\n<p>How do I successfully query the <code>checked</code> property?</p>\n    ","a":"\n<p>This worked for me:</p>\n\n<pre><code>$get(\"isAgeSelected \").checked == true\n</code></pre>\n\n<p>Where <code>isAgeSelected</code> is the id of the control.</p>\n\n<p>Also, @karim79's <a href=\"http://stackoverflow.com/questions/901712/check-checkbox-checked-property-using-jquery/901727#901727\">answer</a> works fine. I am not sure what I missed at the time I tested it.</p>\n\n<p><strong>Note, this is answer uses Microsoft Ajax, not jQuery</strong></p>\n    "},{"t":"Include a JavaScript file in another JavaScript file?","l":"http://stackoverflow.com/questions/950087/include-a-javascript-file-in-another-javascript-file","q":"\n\n<p>Is there something similar to <code>@import</code> in CSS in JavaScript that allows you to include a JavaScript file inside another JavaScript file?</p>\n    ","a":"\n<p>JavaScript has no import, include, or require. There are other ways for JavaScript to include external JavaScript contents, though.</p>\n\n<h3>Ajax Loading</h3>\n\n<p>Load an additional script with an Ajax call and then use <code>eval</code>. This is the most straightforward way, but it is limited to your domain because of the JavaScript sandbox security model. Using <code>eval</code> also opens the door to bugs and hacks.</p>\n\n<h3>jQuery Loading</h3>\n\n<p>The <a href=\"http://jquery.com/\">jQuery</a> library provides loading functionality <a href=\"http://api.jquery.com/jQuery.getScript/\">in one line</a>:</p>\n\n<pre><code>$.getScript(\"my_lovely_script.js\", function(){\n\n   alert(\"Script loaded but not necessarily executed.\");\n\n});\n</code></pre>\n\n<h3>Dynamic Script Loading</h3>\n\n<p>Add a script tag with the script URL in the HTML. To avoid the overhead of jQuery, this is an ideal solution.</p>\n\n<p>The script can even reside on a different server. Furthermore, the browser evaluates the code. The <code>&lt;script&gt;</code> tag can be injected into either the web page <code>&lt;head&gt;</code>, or inserted just before the closing <code>&lt;/body&gt;</code> tag.</p>\n\n<p>Both of these solutions are discussed and illustrated in <em><a href=\"http://unixpapa.com/js/dyna.html\">JavaScript Madness: Dynamic Script Loading</a></em>.</p>\n\n<h2>Detecting when the script has been executed</h2>\n\n<p>Now, there is a big issue you must know about. Doing that implies that <em>you remotely load the code</em>. Modern web browsers will load the file and keep executing your current script because they load everything asynchronously to improve performance. (This applies to both the jQuery method and the manual dynamic script loading method.)</p>\n\n<p>It means that if you use these tricks directly, <em>you won't be able to use your newly loaded code the next line after you asked it to be loaded</em>, because it will be still loading.</p>\n\n<p>For example: <code>my_lovely_script.js</code> contains <code>MySuperObject</code>:</p>\n\n<pre><code>var js = document.createElement(\"script\");\n\njs.type = \"text/javascript\";\njs.src = jsFilePath;\n\ndocument.body.appendChild(js);\n\nvar s = new MySuperObject();\n\nError : MySuperObject is undefined\n</code></pre>\n\n<p>Then you reload the page hitting <kbd>F5</kbd>. And it works! Confusing...</p>\n\n<p><strong>So what to do about it ?</strong></p>\n\n<p>Well, you can use the hack the author suggests in the link I gave you. In summary, for people in a hurry, he uses en event to run a callback function when the script is loaded. So you can put all the code using the remote library in the callback function. For example:</p>\n\n<pre><code>function loadScript(url, callback)\n{\n    // Adding the script tag to the head as suggested before\n    var head = document.getElementsByTagName('head')[0];\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n\n    // Then bind the event to the callback function.\n    // There are several events for cross browser compatibility.\n    script.onreadystatechange = callback;\n    script.onload = callback;\n\n    // Fire the loading\n    head.appendChild(script);\n}\n</code></pre>\n\n<p>Then you write the code you want to use AFTER the script is loaded in a <a href=\"http://en.wikipedia.org/wiki/Anonymous_function\">lambda function</a>:</p>\n\n<pre><code>var myPrettyCode = function() {\n\n   // Here, do what ever you want\n};\n</code></pre>\n\n<p>Then you run all that:</p>\n\n<pre><code>loadScript(\"my_lovely_script.js\", myPrettyCode);\n</code></pre>\n\n<p>Note that the script may execute after the DOM has loaded, or before, depending on the browser and whether you included the line <code>script.async = false;</code>. There's a <a href=\"http://www.html5rocks.com/en/tutorials/speed/script-loading/\">great article on Javascript loading in general</a> which discusses this.</p>\n\n<h3>Source Code Merge</h3>\n\n<p>Another <a href=\"http://stackoverflow.com/q/5511989/59087\">solution</a> is to combine the two files into a single file. This can be used with minification to produce a single, minimally sized JavaScript file to include as normal.</p>\n    "},{"t":"How to remove a property from a JavaScript object","l":"http://stackoverflow.com/questions/208105/how-to-remove-a-property-from-a-javascript-object","q":"\n\n<p>Say I create an object thusly:</p>\n\n<pre><code>var myJSONObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\", \"regex\": \"^http://.*\"};\n</code></pre>\n\n<p>What is the best way to remove the property 'regex' to end up with this new <code>myJSONObject</code>:</p>\n\n<pre><code>var myJSONObject = {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\"};\n</code></pre>\n    ","a":"\n<p>Like this:</p>\n\n<pre><code>delete myJSONObject.regex;\n// or,\ndelete myJSONObject['regex'];\n// or,\nvar prop = \"regex\";\ndelete myJSONObject[prop];\n</code></pre>\n\n<p>For anyone interested in reading more about it, Stack Overflow user <a href=\"http://stackoverflow.com/users/130652/kangax\">kangax</a> has written an incredibly in-depth blog post about the <code>delete</code> statement on his blog, <em><a href=\"http://perfectionkills.com/understanding-delete/\">Understanding delete</a></em>. It is highly recommended.</p>\n    "},{"t":"How do you get a timestamp in JavaScript?","l":"http://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript","q":"\n\n<p>How can I get a timestamp in JavaScript?</p>\n\n<p>Something similar to Unix's timestamp, that is, a single number that represents the current time and date. Either as a number or a string.</p>\n    ","a":"\n<p>On almost all current browsers you can use <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.4.4\"><code>Date.now()</code></a> to get the UTC timestamp in <strong>milliseconds</strong>; a notable exception to this is IE8 and earlier (see <a href=\"http://kangax.github.io/compat-table/es5/#Date.now\">compatibility table</a>).</p>\n\n<p>You can easily make a shim for this, though:</p>\n\n<pre><code>if (!Date.now) {\n    Date.now = function() { return new Date().getTime(); }\n}\n</code></pre>\n\n<p>To get the timestamp in <strong>seconds</strong>, you can use:</p>\n\n<pre><code>Math.floor(Date.now() / 1000)\n</code></pre>\n\n<p>Or alternatively you could use:</p>\n\n<pre><code>Date.now() / 1000 | 0\n</code></pre>\n\n<p>Which should be slightly faster, but also less readable (also <a href=\"http://stackoverflow.com/questions/7487977/using-bitwise-or-0-to-floor-a-number\">see this answer</a>).</p>\n\n<p>I would recommend using <code>Date.now()</code> (with compatibility shim). It's slightly better because it's shorter &amp; doesn't create a new <code>Date</code> object. However, if you don't want a shim &amp; maximum compatibility, you could use the \"old\" method to get the timestamp in <strong>miliseconds</strong>:</p>\n\n<pre><code>new Date().getTime()\n</code></pre>\n\n<p>Which you can then convert to seconds using the same method as above.</p>\n    "},{"t":"Why does Google prepend while(1); to their JSON responses?","l":"http://stackoverflow.com/questions/2669690/why-does-google-prepend-while1-to-their-json-responses","q":"\n\n<p>This is something I've always been curious about, is exactly why Google prepends <code>while(1);</code> to their (private) JSON responses.</p>\n\n<p>For example, here's a response while turning a calendar on and off in Google Calendar:</p>\n\n<pre><code>while(1);[['u',[['smsSentFlag','false'],['hideInvitations','false'],\n  ['remindOnRespondedEventsOnly','true'],\n  ['hideInvitations_remindOnRespondedEventsOnly','false_true'],\n  ['Calendar ID stripped for privacy','false'],['smsVerifiedFlag','true']]]]\n</code></pre>\n\n<p>I would assume this is to prevent people from doing an <code>eval()</code> on it, but all you'd really have to do is replace the while and then you'd be set. I would assume eval prevention is to make sure people write safe JSON parsing code.</p>\n\n<p>I've seen this used in a couple other places, too, but a lot more so with Google (Mail, Calendar, Contacts, etc.) Strangely enough, Google Docs starts with <code>&amp;&amp;&amp;START&amp;&amp;&amp;</code> instead, and Google Contacts seems to start with <code>while(1); &amp;&amp;&amp;START&amp;&amp;&amp;</code>.</p>\n\n<p>Does anyone know what's going on here?</p>\n    ","a":"\n<p>It prevents <a href=\"http://haacked.com/archive/2009/06/25/json-hijacking.aspx\">JSON hijacking</a>.</p>\n\n<p>Contrived example: say Google has a URL like <code>mail.google.com/json?action=inbox</code> which returns the first 50 messages of your inbox in JSON format. Evil websites on other domains can't make AJAX requests to get this data due to the same-origin policy, but they can include the URL via a <code>&lt;script&gt;</code> tag. The URL is visited with <em>your</em> cookies, and by <a href=\"http://ejohn.org/blog/re-securing-json/\">overriding the global array constructor or accessor methods</a> they can have a method called whenever an object (array or hash) attribute is set, allowing them to read the JSON content.</p>\n\n<p>The <code>while(1);</code> or <code>&amp;&amp;&amp;BLAH&amp;&amp;&amp;</code> prevents this: an AJAX request at <code>mail.google.com</code> will have full access to the text content, and can strip it away. But a <code>&lt;script&gt;</code> tag insertion blindly executes the JavaScript without any processing, resulting in either an infinite loop or a syntax error.</p>\n\n<p>This does not address the issue of cross-site request forgery.</p>\n    "},{"t":"Remove a specific element from an array?","l":"http://stackoverflow.com/questions/5767325/remove-a-specific-element-from-an-array","q":"\n\n<p>I have an array of integers, which I'm using the <code>.push()</code> method to add to.</p>\n\n<p>Is there a simple way to remove a specific element from an array? The equivalent of something like <code>array.remove(int);</code></p>\n\n<p>I have to use good ol' fashioned JavaScript - no frameworks allowed.</p>\n    ","a":"\n<p>First, find the <code>index</code> of the element you want to remove:</p>\n\n<pre><code>var array = [2, 5, 9];\nvar index = array.indexOf(5);\n</code></pre>\n\n<p><em>Note: <a href=\"http://kangax.github.io/es5-compat-table/#Array.prototype.indexOf\">browser support for indexOf</a> is limited</em>, it is not supported in IE7-8.</p>\n\n<p>Then remove it with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\"><code>splice</code></a>:</p>\n\n<pre><code>if (index &gt; -1) {\n    array.splice(index, 1);\n}\n</code></pre>\n\n<p>The second parameter of <code>splice</code> is the number of elements to remove. Note, <code>splice</code> modifies the array in place and returns a new array containing the elements that have been removed.</p>\n    "},{"t":"For-each over an array in JavaScript?","l":"http://stackoverflow.com/questions/9329446/for-each-over-an-array-in-javascript","q":"\n\n<p>How can I loop through all the objects in an array using JavaScript?</p>\n\n<p>I thought of something like this (where objects is my array of objects):</p>\n\n<pre><code>forEach(instance in objects)\n</code></pre>\n\n<p>But this does not seem to be correct.</p>\n    ","a":"\n<h2>For Actual Arrays</h2>\n\n<p><em>(See \"For Array-Like Objects\" below for array-like objects.)</em></p>\n\n<p>You currently have three options and will soon have two more:</p>\n\n<p>You have three options in <a href=\"http://ecma-international.org/ecma-262/5.1/\">ECMAScript&nbsp;5</a> (ES5), the current version of JavaScript; and will soon have two more in <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html\">ECMAScript&nbsp;6</a> (ES6), the next version of JavaScript:</p>\n\n<ol>\n<li>Use <code>forEach</code> and related (ES5+)</li>\n<li>Use a simple <code>for</code> loop</li>\n<li>Use <code>for-in</code> <em>correctly</em></li>\n<li>Use <code>for-of</code> (use an iterator implicitly) (ES6+)</li>\n<li>Use an iterator explicitly (ES6+)</li>\n</ol>\n\n<p>Details:</p>\n\n<h3>1. Use <code>forEach</code> and related</h3>\n\n<p>If you're using an environment that supports the <code>Array</code> features of ES5 (directly or using a shim), you can use the new <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.18\"><code>forEach</code></a> function:</p>\n\n<pre><code>var a = [\"a\", \"b\", \"c\"];\na.forEach(function(entry) {\n    console.log(entry);\n});\n</code></pre>\n\n<p><code>forEach</code> accepts an iterator function and, optionally, a value to use as <code>this</code> when calling that iterator function (not used above). The iterator function is called for each entry in the array, in order, skipping non-existent entries in sparse arrays. Although I only used one argument above, the iterator function is called with three: The value of each entry, the index of that entry, and a reference to the array you're iterating over (in case your function doesn't already have it handy).</p>\n\n<p>Using <code>forEach</code> on a general-purpose web page still (as of March 2014) requires that you include a \"shim\" for it for browsers that don't support it natively, because IE8 and earlier don't have it (and they're used by somewhere between 7% and 21% of the global browser users depending on who you believe; that figure is skewed a bit by markedly higher use in China vs. elsewhere, always check your own stats to see what you need to support). But shimming/polyfilling it is easily done (search for \"es5 shim\" for several options).</p>\n\n<p><code>forEach</code> has the benefit that you don't have to declare indexing and value variables in the containing scope, as they're supplied as arguments to the iteration function, and so nicely scoped to just that iteration.</p>\n\n<p>If you're worried about the runtime cost of making a function call for each array entry, don't be; <a href=\"http://blog.niftysnippets.org/2012/02/foreach-and-runtime-cost.html\">details</a>.</p>\n\n<p>Additionally, <code>forEach</code> is the \"loop through them all\" function, but ES5 defined several other useful \"work your way through the array and do things\" functions, including:</p>\n\n<ul>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.16\"><code>every</code></a> (stops looping the first time the iterator returns <code>false</code> or something falsey)</li>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.17\"><code>some</code></a> (stops looping the first time the iterator returns <code>true</code> or something truthy)</li>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.20\"><code>filter</code></a> (creates a new array including elements where the filter function returns <code>true</code> and omitting the ones where it returns <code>false</code>)</li>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.19\"><code>map</code></a> (creates a new array from the values returned by the iterator function)</li>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.21\"><code>reduce</code></a> (builds up a value by repeated calling the iterator, passing in previous values; see the spec for the details; useful for summing the contents of an array and many other things)</li>\n<li><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.22\"><code>reduceRight</code></a> (like <code>reduce</code>, but works in descending rather than ascending order)</li>\n</ul>\n\n<h3>2. Use a simple <code>for</code> loop</h3>\n\n<p>Sometimes the old ways are the best:</p>\n\n<pre><code>var index;\nvar a = [\"a\", \"b\", \"c\"];\nfor (index = 0; index &lt; a.length; ++index) {\n    console.log(a[index]);\n}\n</code></pre>\n\n<p>If the length of the array won't change during the loop, and it's in performance-sensitive code (unlikely), a slightly more complicated version grabbing the length up front might be a <strong><em>tiny</em></strong> bit faster:</p>\n\n<pre><code>var index, len;\nvar a = [\"a\", \"b\", \"c\"];\nfor (index = 0, len = a.length; index &lt; len; ++index) {\n    console.log(a[index]);\n}\n</code></pre>\n\n<p>And/or counting backward:</p>\n\n<pre><code>var index;\nvar a = [\"a\", \"b\", \"c\"];\nfor (index = a.length - 1; index &gt;= 0; --index) {\n    console.log(a[index]);\n}\n</code></pre>\n\n<p>But with modern JavaScript engines, it's rare you need to eke out that last bit of juice.</p>\n\n<h3>3. Use <code>for-in</code> <em>correctly</em></h3>\n\n<p>You'll get people telling you to use <code>for-in</code>, but <a href=\"http://blog.niftysnippets.org/2010/11/myths-and-realities-of-forin.html\">that's not what <code>for-in</code> is for</a>. <code>for-in</code> loops through the <em>enumerable properties of an object</em>, not the indexes of an array. Up through ES5, the <strong>order is not guaranteed</strong>; as of ES6, the order <strong>is</strong> guaranteed (by <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ordinary-object-internal-methods-and-internal-slots-ownpropertykeys\"><code>[[OwnPropertyKeys]]</code></a>, <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ordinary-object-internal-methods-and-internal-slots-enumerate\"><code>[[Enumerate]]</code></a>, and <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-runtime-semantics-forin-div-ofheadevaluation-tdznames-expr-iterationkind-labelset\">the definition of <code>for-in</code>/<code>for-of</code></a>). (Details in <a href=\"http://stackoverflow.com/a/30864462/157247\">this other answer</a>.)</p>\n\n<p>Still, it <em>can</em> be useful, particularly for <a href=\"http://en.wikipedia.org/wiki/Sparse_array\"><em>sparse</em> arrays</a>, if you use appropriate safeguards:</p>\n\n<pre><code>// `a` is a sparse array\nvar key;\nvar a = [];\na[0] = \"a\";\na[10] = \"b\";\na[10000] = \"c\";\nfor (key in a) {\n    if (a.hasOwnProperty(key)  &amp;&amp;        // These are explained\n        /^0$|^[1-9]\\d*$/.test(key) &amp;&amp;    // and then hidden\n        key &lt;= 4294967294                // away below\n        ) {\n        console.log(a[key]);\n    }\n}\n</code></pre>\n\n<p>Note the two checks:</p>\n\n<ol>\n<li><p>That the object has its <em>own</em> property by that name (not one it inherits from its prototype), and</p></li>\n<li><p>That the key is a base-10 numeric string in its normal string form and its value is &lt;= 2^32 - 2 (which is 4,294,967,294). Where does that number come from? It's part of the definition of an array index <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4\">in the specification, §10.5</a>. Other numbers (non-integers, negative numbers, numbers greater than 2^32 - 2) are not array indexes. The reason it's 2^32 - <strong>2</strong> is that that makes the greatest index value one lower than 2^32 - <strong>1</strong>, which is the maximum value an array's <code>length</code> can have. (E.g., an array's length fits in a 32-bit unsigned integer.) <em>(Props to RobG for pointing out in a comment <a href=\"http://blog.niftysnippets.org/2010/11/myths-and-realities-of-forin.html\">on my blog post</a> that my previous test wasn't quite right.)</em></p></li>\n</ol>\n\n<p>That's a tiny bit of added overhead per loop iteration on most arrays, but if you have a <em>sparse</em> array, it can be a more efficient way to loop because it only loops for entries that actually exist. E.g., for the array above, we loop a total of three times (for keys <code>\"0\"</code>, <code>\"10\"</code>, and <code>\"10000\"</code>&nbsp;— remember, they're strings), not 10,001 times.</p>\n\n<p>Now, you won't want to write that every time, so you might put this in your toolkit:</p>\n\n<pre><code>function arrayHasOwnIndex(array, prop) {\n    return array.hasOwnProperty(prop) &amp;&amp; /^0$|^[1-9]\\d*$/.test(prop) &amp;&amp; prop &lt;= 4294967294; // 2^32 - 2\n}\n</code></pre>\n\n<p>And then we'd use it like this:</p>\n\n<pre><code>for (key in a) {\n    if (arrayHasOwnIndex(a, key)) {\n        console.log(a[key]);\n    }\n}\n</code></pre>\n\n<p>Or if you're interested in just a \"good enough for most cases\" test, you could use this, but while it's close, it's not quite correct:</p>\n\n<pre><code>for (key in a) {\n    // \"Good enough\" for most cases\n    if (String(parseInt(key, 10)) === key &amp;&amp; a.hasOwnProperty(key)) {\n        console.log(a[key]);\n    }\n}\n</code></pre>\n\n<h3>4. Use <code>for-of</code> (use an iterator implicitly) (ES6+)</h3>\n\n<p>ES6 (currently <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts\">being finalized</a>) will add <em>iterators</em> to JavaScript. The easiest way to use iterators is the new <code>for-of</code> statement. It looks like this:</p>\n\n<pre><code>var val;\nvar a = [\"a\", \"b\", \"c\"];\nfor (val of a) {\n    console.log(val);\n}\n</code></pre>\n\n<p>Output:</p>\n\n<pre>a\nb\nc\n</pre>\n\n<p>Under the covers, that gets an <em>iterator</em> from the array and loops through it, getting the values from it. This doesn't have the issue that using <code>for-in</code> has, because it uses an iterator defined by the object (the array), and arrays define that their iterators iterate through their <em>entries</em> (not their properties). Unlike <code>for-in</code> in ES5, the order in which the entries are visited is the numeric order of their indexes.</p>\n\n<h3>5. Use an iterator explicitly (ES6+)</h3>\n\n<p>Sometimes, you might want to use an iterator <em>explicitly</em>. You can do that, too, although it's a lot clunkier than <code>for-of</code>. It looks like this:</p>\n\n<pre><code>var a = [\"a\", \"b\", \"c\"];\nvar it = a.values();\nvar entry;\nwhile (!(entry = it.next()).done) {\n    console.log(entry.value);\n}\n</code></pre>\n\n<p>The iterator is a function (specifically, a <em>generator</em>) that returns a new object each time you call <code>next</code>. The object returned by the iterator has a property, <code>done</code>, telling us whether it's done, and a property <code>value</code> with the value for that iteration.</p>\n\n<p>The meaning of <code>value</code> varies depending on the iterator; arrays support (at least) three functions that return iterators:</p>\n\n<ul>\n<li><code>values()</code>: This is the one I used above. It returns an iterator where each <code>value</code> is the value for that iteration.</li>\n<li><code>keys()</code>: Returns an iterator where each <code>value</code> is the key for that iteration (so for our <code>a</code> above, that would be <code>\"0\"</code>, then <code>\"1\"</code>, then <code>\"2\"</code>).</li>\n<li><code>entries()</code>: Returns an iterator where each <code>value</code> is an array in the form <code>[key, value]</code> for that iteration.</li>\n</ul>\n\n<p>(As of this writing, Firefox 29 supports <code>entries</code> and <code>keys</code> but not <code>values</code>.)</p>\n\n<h2>For Array-Like Objects</h2>\n\n<p>Aside from true arrays, there are also <em>array-like</em> objects that have a <code>length</code> property and properties with numeric names: <code>NodeList</code> instances, the <code>arguments</code> object, etc. How do we loop through their contents?</p>\n\n<h3>Use any of the options above for arrays</h3>\n\n<p>At least some, and possibly most or even all, of the array approaches above frequently apply equally well to array-like objects:</p>\n\n<ol>\n<li><p><strong>Use <code>forEach</code> and related (ES5+)</strong></p>\n\n<p>The various functions on <code>Array.prototype</code> are \"intentionally generic\" and can usually be used on array-like objects via <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.4.4\"><code>Function#call</code></a> or <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.4.3\"><code>Function#apply</code></a>. (See the <em>Caveat for host-provided objects</em> at the end of this answer, but it's a rare issue.)</p>\n\n<p>Suppose you wanted to use <code>forEach</code> on a <code>Node</code>'s <code>childNodes</code> property. You'd do this:</p>\n\n<pre><code>Array.prototype.forEach.call(node.childNodes, function(child) {\n    // Do something with `child`\n});\n</code></pre>\n\n<p>If you're going to do that a lot, you might want to grab a copy of the function reference into a variable for reuse, e.g.:</p>\n\n<pre><code>// (This is all presumably in some scoping function)\nvar forEach = Array.prototype.forEach;\n\n// Then later...\nforEach.call(node.childNodes, function(child) {\n    // Do something with `child`\n});\n</code></pre></li>\n<li><p><strong>Use a simple <code>for</code> loop</strong></p>\n\n<p>Obviously, a simple <code>for</code> loop applies to array-like objects.</p></li>\n<li><p><strong>Use <code>for-in</code> <em>correctly</em></strong></p>\n\n<p><code>for-in</code> with the same safeguards as with an array should work with array-like objects as well; the caveat for host-provided objects on #1 above may apply.</p></li>\n<li><p><strong>Use <code>for-of</code> (use an iterator implicitly) (ES6+)</strong></p>\n\n<p><code>for-of</code> will use the iterator provided by the object (if any); we'll have to see how this plays with the various array-like objects, particularly host-provided ones.</p></li>\n<li><p><strong>Use an iterator explicitly (ES6+)</strong></p>\n\n<p>See #4, we'll have to see how iterators play out.</p></li>\n</ol>\n\n<h3>Create a true array</h3>\n\n<p>Other times, you may want to convert an array-like object into a true array. Doing that is surprisingly easy: We use the <code>slice</code> method of arrays, which like the other methods mentioned above is \"intentionally generic\" and so can be used with array-like objects, like this:</p>\n\n<pre><code>var trueArray = Array.prototype.slice.call(arrayLikeObject, 0);\n</code></pre>\n\n<p>So for instance, if we want to convert a <code>NodeList</code> into a true array, we could do this:</p>\n\n<pre><code>var divs = Array.prototype.slice.call(document.querySelectorAll(\"div\"), 0);\n</code></pre>\n\n<p>See the <em>Caveat for host-provided objects</em> below.</p>\n\n<h3>Caveat for host-provided objects</h3>\n\n<p>If you use <code>Array.prototype</code> functions with <em>host-provided</em> array-like objects (DOM lists and other things provided by the browser rather than the JavaScript engine), you need to be sure to test in your target environments to make sure the host-provided object behaves properly. <strong>Most do behave properly</strong> (now), but it's important to test. The reason is that most of the <code>Array.prototype</code> methods you're likely to want to use rely on the host-provided object giving an honest answer to the abstract <a href=\"http://en.wikipedia.org/wiki/Sparse_array\"><code>[[HasProperty]]</code></a> operation. As of this writing, browsers do a very good job of this, but the spec does allow for the possibility a host-provided object may not be honest; it's in <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.6.2\">§8.6.2</a> (several paragraphs below the big table near the beginning of that section), where it says:</p>\n\n<blockquote>\n  <p>Host objects may implement these internal methods in any manner unless specified otherwise; for example, one possibility is that <code>[[Get]]</code> and <code>[[Put]]</code> for a particular host object indeed fetch and store property values but <code>[[HasProperty]]</code> always generates <strong>false</strong>.</p>\n</blockquote>\n\n<p>Again, as of this writing the common host-provided array-like objects in modern browsers (<code>NodeList</code> instances, for instance) <strong>do</strong> handle <code>[[HasProperty]]</code> correctly, but it's important to test.</p>\n    "},{"t":"Create GUID / UUID in JavaScript?","l":"http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript","q":"\n\n<p>I'm trying to create globally-unique identifiers in JavaScript.  I'm not sure what routines are available on all browsers, how \"random\" and seeded the built-in random number generator is, etc..</p>\n\n<p>The GUID / UUID should be at least 32 characters and should stay in the ASCII range to avoid trouble when passing them around.</p>\n    ","a":"\n<p>There have been a couple attempts at this. The question is: do you want actual GUIDs, or just random numbers that <em>look</em> like GUIDs? It's easy enough to generate random numbers. From <a href=\"http://note19.com/2007/05/27/javascript-guid-generator/\">http://note19.com/2007/05/27/javascript-guid-generator/</a> (after some clean-up for clarity's sake):</p>\n\n<pre><code>function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n    s4() + '-' + s4() + s4() + s4();\n}\n</code></pre>\n\n<p><strike>\nHowever, note in the comments that such values are not genuine GUIDs. There's no way to generate real GUIDs in Javascript, because they depend on properties of the local computer that browsers do not expose. You'll need to use OS-specific services like ActiveX: <a href=\"http://p2p.wrox.com/topicindex/20339.htm\">http://p2p.wrox.com/topicindex/20339.htm</a>\n</strike> Edit: not correct - RFC4122 allows random (\"version 4\") ids.  See other answers for specifics.</p>\n\n<p>Use:</p>\n\n<pre><code>var uuid = guid();\n</code></pre>\n    "},{"t":"event.preventDefault() vs. return false","l":"http://stackoverflow.com/questions/1357118/event-preventdefault-vs-return-false","q":"\n\n<p>When I want to prevent other event handlers from executing after a certain event is fired, I can use one of two techniques. I'll use jQuery in the examples, but this applies to plain-JS as well:</p>\n\n<h3>1. <code>event.preventDefault()</code></h3>\n\n<pre><code>$('a').click(function (e) {\n    // custom handling here\n    e.preventDefault();\n});\n</code></pre>\n\n<h3>2. <code>return false</code></h3>\n\n<pre><code>$('a').click(function () {\n    // custom handling here\n    return false;\n});\n</code></pre>\n\n<p>Is there any significant difference between those two methods of stopping event propagation?</p>\n\n<p>For me, <code>return false;</code> is simpler, shorter and probably less error prone than executing a method. With the method, you have to remember about correct casing, parenthesis, etc. </p>\n\n<p>Also, I have to define the first parameter in callback to be able to call the method. Perhaps, there are some reasons why I should avoid doing it like this and use <code>preventDefault</code> instead? What's the better way?</p>\n    ","a":"\n<p><code>return false</code> from <em>within a jQuery event handler</em> is effectively the same as calling both  <code>e.preventDefault</code> and <code>e.stopPropagation</code> on the passed <a href=\"http://api.jquery.com/category/events/event-object/\">jQuery.Event object.</a></p>\n\n<p><code>e.preventDefault()</code> will prevent the default event from occuring, <code>e.stopPropagation()</code> will prevent the event from bubbling up and <code>return false</code> will do both. Note that this behaviour differs from <em>normal</em> (non-jQuery) event handlers, in which, notably, <code>return false</code> <a href=\"http://jsfiddle.net/APQk6/\">does <em>not</em> stop the event from bubbling up</a>.</p>\n\n<p>Source: <a href=\"http://ejohn.org/\">John Resig</a></p>\n\n<p><a href=\"http://www.mail-archive.com/jquery-en@googlegroups.com/msg71371.html\"><strong>Any benefit to using event.preventDefault() over \"return false\" to cancel out an href click?</strong></a></p>\n    "},{"t":"How to decide when to use Node.js?","l":"http://stackoverflow.com/questions/5062614/how-to-decide-when-to-use-node-js","q":"\n\n<p>I am new to this kind of stuff, but lately I've been hearing a lot about how good <a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a> is. Considering how much I love working with jQuery and JavaScript in general, I can't help but wonder how to decide when to use Node.js. The web application I have in mind is something like <a href=\"https://en.wikipedia.org/wiki/Bitly\">Bitly</a> - takes some content, archives it. </p>\n\n<p>From all the homework I have been doing in the last few days, I obtained the following information. Node.js </p>\n\n<ul>\n<li>is a command-line tool that can be run as a regular web server and lets one run JavaScript programs</li>\n<li>utilizes the great <a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\">V8 JavaScript engine</a></li>\n<li>is very good when you need to do several things at the same time</li>\n<li>is event-based so all the wonderful <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\">Ajax</a>-like stuff can be done on the server side</li>\n<li>lets us share code between the browser and the backend</li>\n<li>lets us talk with MySQL</li>\n</ul>\n\n<p>Some of the sources that I have come across are:</p>\n\n<ul>\n<li><a href=\"http://www.stoimen.com/blog/2010/11/16/diving-into-node-js-introduction-and-installation/\">Diving into Node.js – Introduction and Installation</a></li>\n<li><a href=\"http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb\">Understanding NodeJS</a></li>\n<li><a href=\"http://blog.osbutler.com/categories/node-by-example/?page=3\">Node by Example</a></li>\n<li><a href=\"http://dailyjs.com/2010/11/01/node-tutorial/\">Let’s Make a Web App: NodePad</a></li>\n</ul>\n\n<p>Considering that Node.js can be run almost out-of-the-box on <a href=\"http://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud\">Amazon's EC2</a> instances, I am trying to understand what type of problems require Node.js as opposed to any of the mighty kings out there like <a href=\"http://en.wikipedia.org/wiki/PHP\">PHP</a>, <a href=\"http://en.wikipedia.org/wiki/Python_%28programming_language%29\">Python</a> and <a href=\"http://en.wikipedia.org/wiki/Ruby_%28programming_language%29\">Ruby</a>. I understand that it really depends on the expertise one has on a language, but my question falls more into the general category of: When to use a particular framework and what type of problems is it particularly suited for?</p>\n    ","a":"\n<p>You did a great job of summarizing what's awesome about Node.js. My feeling is that Node.js is especially suited for applications where you'd like to maintain a persistent connection from the browser back to the server. Using a technique known as <a href=\"http://en.wikipedia.org/wiki/Push_technology#Long_polling\">\"long-polling\"</a>, you can write an application that sends updates to the user in real time. Doing long polling on many of the web's giants, like <a href=\"http://en.wikipedia.org/wiki/Ruby_on_Rails\">Ruby on Rails</a> or <a href=\"http://en.wikipedia.org/wiki/Django_%28web_framework%29\">Django</a>, would create immense load on the server, because each active client eats up one server process. This situation amounts to a <a href=\"http://en.wikipedia.org/wiki/Tarpit_%28networking%29\">tarpit</a> attack. When you use something like Node.js, the server has no need of maintaining separate threads for each open connection.  </p>\n\n<p>This means you can create a <a href=\"https://github.com/rivalslayer/node_chat\">browser-based chat application</a> in Node.js that takes almost no system resources to serve a great many clients. Any time you want to do this sort of long-polling, Node.js is a great option.  </p>\n\n<p>It's worth mentioning that Ruby and Python both have tools to do this sort of thing (<a href=\"http://rubyeventmachine.com/\">eventmachine</a> and <a href=\"https://twistedmatrix.com/trac/\">twisted</a>, respectively), but that Node.js does it exceptionally well, and from the ground up. JavaScript is exceptionally well situated to a callback-based concurrency model, and it excels here. Also, being able to serialize and deserialize with JSON native to both the client and the server is pretty nifty. </p>\n\n<p>I look forward to reading other answers here, this is a fantastic question. </p>\n\n<p>It's worth pointing out that Node.js is also great for situations in which you'll be reusing a lot of code across the client/server gap. The <a href=\"http://meteor.com\">Meteor framework</a> makes this really easy, and a lot of folks are suggesting this might be the future of web development. I can say from experience that it's a whole lot of fun to write code in Meteor, and a big part of this is spending less time thinking about how you're going to restructure your data, so the code that runs in the browser can easily manipulate it and pass it back. </p>\n\n<p>Here's an article on Pyramid and long-polling, which turns out to be very easy to set up with a little help from gevent: <a href=\"http://michael.merickel.org/2011/6/21/tictactoe-and-long-polling-with-pyramid/\"><em>TicTacToe and Long Polling with Pyramid</em></a>.</p>\n    "},{"t":"array.contains(obj) in JavaScript","l":"http://stackoverflow.com/questions/237104/array-containsobj-in-javascript","q":"\n\n<p>What is the most concise and efficient way to find out if a JavaScript array contains an obj?</p>\n\n<p>This is the only way I know to do it:</p>\n\n<pre><code>function contains(a, obj) {\n    for (var i = 0; i &lt; a.length; i++) {\n        if (a[i] === obj) {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>Is there a better and more concise way to accomplish this?</p>\n\n<p>This is very closely related to Stack Overflow question <em><a href=\"http://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array\">Best way to find an item in a JavaScript Array?</a></em> which addresses finding objects in an array using <code>indexOf</code>.</p>\n    ","a":"\n<p>Modern browsers have <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\"><code>Array#indexOf</code></a>, which does exactly that; this is in the new(ish) ECMAScript 5th edition specification, but it has been in several browsers for years. Older browsers can be supported using the code listed in the \"compatibility\" section at the bottom of that page.</p>\n\n<p><a href=\"http://api.jquery.com/jquery.inarray/\">jQuery has a utility function</a> for this:</p>\n\n<pre><code>$.inArray(value, array)\n</code></pre>\n\n<p>It returns the index of a value in an array. It returns -1 if the array does not contain the value.</p>\n\n<p>jQuery has several useful <a href=\"http://docs.jquery.com/Utilities\">utility functions</a>. </p>\n\n<p>An excellent JavaScript utility library is <a href=\"http://documentcloud.github.com/underscore/\">underscore.js</a>:</p>\n\n<ul>\n<li><a href=\"http://documentcloud.github.com/underscore/#contains\"><code>_.contains(list, value)</code></a>, alias <code>_.include(list, value)</code> (underscore's contains/include  uses <a href=\"http://documentcloud.github.com/underscore/#indexOf\">indexOf</a> internally if passed a JavaScript array). </li>\n</ul>\n\n<p>Some other frameworks:</p>\n\n<ul>\n<li>Dojo Toolkit: <code>dojo.indexOf(array, value, [fromIndex, findLast])</code> <a href=\"http://dojotoolkit.org/reference-guide/dojo/indexOf.html\">documentation</a>. Dojo has a lot of utility functions, see <a href=\"http://api.dojotoolkit.org\">http://api.dojotoolkit.org</a>.</li>\n<li>Prototype: <code>array.indexOf(value)</code> <a href=\"http://api.prototypejs.org/language/Array/prototype/indexOf/\">documentation</a></li>\n<li>MooTools: <code>array.indexOf(value)</code> <a href=\"http://mootools.net/docs/core/Native/Array#Array:indexOf\">documentation</a></li>\n<li>MochiKit: <code>findValue(array, value)</code> <a href=\"http://mochi.github.io/mochikit/doc/html/MochiKit/Base.html#fn-findvalue\">documentation</a></li>\n<li>MS Ajax: <code>array.indexOf(value)</code> <a href=\"http://www.asp.net/ajaxlibrary/Reference.Array-indexOf-Function.ashx\">documentation</a></li>\n<li>Ext: <code>Ext.Array.indexOf(array, value, [from])</code> <a href=\"http://docs.sencha.com/ext-js/4-0/#/api/Ext.Array\">documentation</a></li>\n</ul>\n\n<p>Notice that some frameworks implement this as a function, while others add the function to the array prototype.</p>\n\n<h2>Languages that compile to JavaScript</h2>\n\n<p>In <a href=\"http://coffeescript.org/#try:a%20%3D%20[1%2C%202%2C%203%2C%204]%0Aalert%282%20in%20a%29\">CoffeeScript</a>, the <code>in</code> operator is the equivalent of <code>contains</code>:</p>\n\n<pre><code>a = [1, 2, 3, 4]\nalert(2 in a)\n</code></pre>\n\n<p><a href=\"http://www.dartlang.org/docs/dart-up-and-running/ch03.html#ch03-collections\">Dart</a>:</p>\n\n<pre><code>var mylist = [1, 2, 3];\nassert(mylist.contains(1));\nassert(mylist.indexOf(1) == 0);\n</code></pre>\n    "},{"t":"How can I upload files asynchronously?","l":"http://stackoverflow.com/questions/166221/how-can-i-upload-files-asynchronously","q":"\n\n<p>I would like to upload a file asynchronously with jQuery. This is my HTML:</p>\n\n<pre><code>&lt;span&gt;File&lt;/span&gt;\n&lt;input type=\"file\" id=\"file\" name=\"file\" size=\"10\"/&gt;\n&lt;input id=\"uploadbutton\" type=\"button\" value=\"Upload\"/&gt;\n</code></pre>\n\n<p>And here my JavaScript code:</p>\n\n<pre><code>$(document).ready(function () {\n    $(\"#uploadbutton\").click(function () {\n        var filename = $(\"#file\").val();\n\n        $.ajax({\n            type: \"POST\",\n            url: \"addFile.do\",\n            enctype: 'multipart/form-data',\n            data: {\n                file: filename\n            },\n            success: function () {\n                alert(\"Data Uploaded: \");\n            }\n        });\n    });\n});\n</code></pre>\n\n<p>Instead of the file being uploaded, I am only getting the filename. What can I do to fix this problem?</p>\n\n<h3>Current Solution</h3>\n\n<p>I am using the <a href=\"http://malsup.com/jquery/form/#code-samples\">jQuery Form Plugin</a> to upload files.</p>\n    ","a":"\n<p>With <a href=\"http://en.wikipedia.org/wiki/HTML5\">HTML5</a> you CAN make file uploads with Ajax and jQuery. Not only that, you can do file validations (name, size, and MIME-type) or handle the progress event with the HTML5 progress tag (or a div). Recently I had to make a file uploader, but I didn't want to use <a href=\"http://en.wikipedia.org/wiki/Adobe_Flash\">Flash</a> nor Iframes or plugins and after some research I came up with the solution.</p>\n\n<p>The HTML:</p>\n\n<pre><code>&lt;form enctype=\"multipart/form-data\"&gt;\n    &lt;input name=\"file\" type=\"file\" /&gt;\n    &lt;input type=\"button\" value=\"Upload\" /&gt;\n&lt;/form&gt;\n&lt;progress&gt;&lt;/progress&gt;\n</code></pre>\n\n<p>First, you can do some validation if you want. For example, in the onChange event of the file:</p>\n\n<pre><code>$(':file').change(function(){\n    var file = this.files[0];\n    var name = file.name;\n    var size = file.size;\n    var type = file.type;\n    //Your validation\n});\n</code></pre>\n\n<p>Now the Ajax submit with the button's click:</p>\n\n<pre><code>$(':button').click(function(){\n    var formData = new FormData($('form')[0]);\n    $.ajax({\n        url: 'upload.php',  //Server script to process data\n        type: 'POST',\n        xhr: function() {  // Custom XMLHttpRequest\n            var myXhr = $.ajaxSettings.xhr();\n            if(myXhr.upload){ // Check if upload property exists\n                myXhr.upload.addEventListener('progress',progressHandlingFunction, false); // For handling the progress of the upload\n            }\n            return myXhr;\n        },\n        //Ajax events\n        beforeSend: beforeSendHandler,\n        success: completeHandler,\n        error: errorHandler,\n        // Form data\n        data: formData,\n        //Options to tell jQuery not to process data or worry about content-type.\n        cache: false,\n        contentType: false,\n        processData: false\n    });\n});\n</code></pre>\n\n<p>Now if you want to handle the progress.</p>\n\n<pre><code>function progressHandlingFunction(e){\n    if(e.lengthComputable){\n        $('progress').attr({value:e.loaded,max:e.total});\n    }\n}\n</code></pre>\n\n<p>As you can see, with HTML5 (and some research) file uploading not only becomes possible but super easy. Try it with <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Google Chrome</a> as some of the HTML5 components of the examples aren't available in every browser.</p>\n    "},{"t":"What is the difference between call and apply?","l":"http://stackoverflow.com/questions/1986896/what-is-the-difference-between-call-and-apply","q":"\n\n<p>What is the difference between using call and apply to invoke a function?</p>\n\n<pre><code>var func = function(){\n  alert('hello!');\n};\n</code></pre>\n\n<p><code>func.apply();</code></p>\n\n<p>vs</p>\n\n<pre><code>func.call();\n</code></pre>\n\n<p>Are there performance differences between the two methods? When is it best to use call over apply and vice versa?</p>\n    ","a":"\n<p>The difference is that <code>apply</code> lets you invoke the function with arguments as an array; <code>call</code> requires the parameters be listed explicitly. A useful mnemonic is \"A for array and C for comma.\"</p>\n\n<p>See <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/apply\">here</a> and <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/call\">here</a>.</p>\n\n<p>Pseudo syntax:</p>\n\n<p><code>theFunction.apply(valueForThis, arrayOfArgs)</code></p>\n\n<p><code>theFunction.call(valueForThis, arg1, arg2, ...)</code></p>\n\n<p>Sample code:</p>\n\n<pre><code>function theFunction(name, profession) {\n    alert(\"My name is \" + name + \" and I am a \" + profession + \".\");\n}\ntheFunction(\"John\", \"fireman\");\ntheFunction.apply(undefined, [\"Susan\", \"school teacher\"]);\ntheFunction.call(undefined, \"Claude\", \"mathematician\");\n</code></pre>\n    "},{"t":"Validate decimal numbers in JavaScript - IsNumeric()","l":"http://stackoverflow.com/questions/18082/validate-decimal-numbers-in-javascript-isnumeric","q":"\n\n<p>What's the cleanest, most effective way to validate decimal numbers in JavaScript?</p>\n\n<p>Bonus points for:</p>\n\n<ol>\n<li>Clarity. Solution should be clean and simple.</li>\n<li>Cross-platform.</li>\n</ol>\n\n<p>Test cases:</p>\n\n<pre><code> 01. IsNumeric('-1') =&gt; true\n 02. IsNumeric('-1.5') =&gt; true\n 03. IsNumeric('0') =&gt; true\n 04. IsNumeric('0.42') =&gt; true\n 05. IsNumeric('.42') =&gt; true\n 06. IsNumeric('99,999') =&gt; false\n 07. IsNumeric('0x89f') =&gt; false\n 08. IsNumeric('#abcdef')=&gt; false\n 09. IsNumeric('1.2.3') =&gt; false\n 10. IsNumeric('') =&gt; false\n 11. IsNumeric('blah') =&gt; false\n</code></pre>\n    ","a":"\n<p><a href=\"http://stackoverflow.com/questions/18082/validate-numbers-in-javascript-isnumeric/174921#174921\">@Joel's answer</a> is pretty close, but it will fail in the following cases:</p>\n\n<pre><code>// Whitespace strings:\nIsNumeric(' ') == true;\nIsNumeric('\\t\\t') == true;\nIsNumeric('\\n\\r') == true;\n\n// Number literals:\nIsNumeric(-1) == false;\nIsNumeric(0) == false;\nIsNumeric(1.1) == false;\nIsNumeric(8e5) == false;\n</code></pre>\n\n<p>Some time ago I had to implement an <code>IsNumeric</code> function, to find out if a variable contained a numeric value, <strong>regardless its type</strong>, it could be a <code>String</code> containing a numeric value (I had to consider also exponential notation, etc.), a <code>Number</code> object, virtually anything could be passed to that function, I couldn't make any type assumption,  taking care of type coercion (eg. <code>+true == 1;</code> but <code>true</code> shouldn't be considered as <code>\"numeric\"</code>).</p>\n\n<p>I think is worth sharing this set of <a href=\"http://run.plnkr.co/plunks/93FPpacuIcXqqKMecLdk/\"><strong>+30 unit tests</strong></a> (<a href=\"http://dl.getdropbox.com/u/35146/js/tests/isNumber.html\">old link</a>) made to numerous function implementations, and also share the one that passes all my tests:</p>\n\n<pre><code>function isNumeric(n) {\n  return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n}\n</code></pre>\n\n<p><strong>Update</strong> : \n<a href=\"https://github.com/jquery/jquery/blob/c869a1ef8a031342e817a2c063179a787ff57239/src/core.js#L214\">Here's how jQuery does it now (Mid-2014)</a> : </p>\n\n<pre><code>isNumeric: function( obj ) {\n    return !jQuery.isArray( obj ) &amp;&amp; (obj - parseFloat( obj ) + 1) &gt;= 0;\n}\n</code></pre>\n\n<p><strong>P.S.</strong> <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\">isNaN</a> &amp; <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isFinite\">isFinite</a> have a confusing behavior due to forced conversion to number. In ES6, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\">Number.isNaN</a> &amp; <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite\">Number.isFinite</a> would fix these issues. Keep that in mind when using them. </p>\n    "},{"t":"$(this) selector and children?","l":"http://stackoverflow.com/questions/306583/this-selector-and-children","q":"\n\n<p>I have a layout similar to this:</p>\n\n<pre><code>&lt;div id=\"...\"&gt;&lt;img src=\"...\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and would like to use a jQuery selector to select the child <code>img</code> inside the <code>div</code> on click.</p>\n\n<p>To get the <code>div</code>, I've got this selector:</p>\n\n<pre><code>$(this)\n</code></pre>\n\n<p>How can I get the child <code>img</code> using a selector?</p>\n    ","a":"\n<p>The jQuery constructor accepts a 2nd parameter called <a href=\"http://api.jquery.com/jQuery/#jQuery-selector-context\"><code>context</code></a> which can be used to override the context of the selection. </p>\n\n<pre><code>jQuery(\"img\", this);\n</code></pre>\n\n<p>Which is the same as using <a href=\"http://api.jquery.com/find\"><code>.find()</code></a> like this:</p>\n\n<pre><code>jQuery(this).find(\"img\");\n</code></pre>\n\n<p>If the imgs you desire are <strong>only</strong> direct descendants of the clicked element, you can also use <a href=\"http://api.jquery.com/children\"><code>.children()</code></a>:</p>\n\n<pre><code>jQuery(this).children(\"img\");\n</code></pre>\n    "},{"t":"Detecting an undefined object property","l":"http://stackoverflow.com/questions/27509/detecting-an-undefined-object-property","q":"\n\n<p>What's the best way of checking if an object property in JavaScript is undefined?</p>\n    ","a":"\n<p>Use:</p>\n\n<pre><code>if (typeof something === \"undefined\") {\n    alert(\"something is undefined\");\n}\n</code></pre>\n\n<p>If an object variable which have some properties you can use same thing like this:</p>\n\n<pre><code>if (typeof my_obj.someproperties === \"undefined\"){\n    console.log('the property is not available...'); // print into console\n}\n</code></pre>\n    "},{"t":"Validate email address in JavaScript?","l":"http://stackoverflow.com/questions/46155/validate-email-address-in-javascript","q":"\n\n<p>How can an email address be validated in JavaScript?</p>\n    ","a":"\n<p>Using <a href=\"http://en.wikipedia.org/wiki/Regular_expression\">regular expressions</a> is probably the best way. Here's an example (<a href=\"http://jsbin.com/ozeyag/19\">live demo</a>):</p>\n\n<pre><code>function validateEmail(email) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n}\n</code></pre>\n\n<p>Here's the example of regular expresion that accepts unicode:</p>\n\n<pre><code>var re = /^(([^&lt;&gt;()[\\]\\.,;:\\s@\\\"]+(\\.[^&lt;&gt;()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^&lt;&gt;()[\\]\\.,;:\\s@\\\"]+\\.)+[^&lt;&gt;()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n</code></pre>\n\n<p>But keep in mind that one should not rely only upon JavaScript validation. JavaScript can  easily be disabled. This should be validated on the server side as well.</p>\n    "},{"t":"Capitalize the first letter of string in JavaScript","l":"http://stackoverflow.com/questions/1026069/capitalize-the-first-letter-of-string-in-javascript","q":"\n\n<p>How do I capitalize the first character of a string, but not change the case of any of the other letters?</p>\n\n<p>For example:</p>\n\n<ul>\n<li>this is a test -&gt; This is a test</li>\n<li>the Eiffel Tower -&gt; The Eiffel Tower</li>\n<li>/index.html -&gt; /index.html</li>\n</ul>\n    ","a":"\n<p>Another solution:</p>\n\n<pre><code>function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n</code></pre>\n\n<p>You could also add it to the <code>String.prototype</code> so you could chain it with other methods:</p>\n\n<pre><code>String.prototype.capitalizeFirstLetter = function() {\n    return this.charAt(0).toUpperCase() + this.slice(1);\n}\n</code></pre>\n\n<p>and use it like this:</p>\n\n<pre><code>'string'.capitalizeFirstLetter() // String\n</code></pre>\n    "},{"t":"Encode URL in JavaScript?","l":"http://stackoverflow.com/questions/332872/encode-url-in-javascript","q":"\n\n<p>How do you safely encode a URL using JavaScript such that it can be put into a GET string?</p>\n\n<pre><code>var myUrl = \"http://example.com/index.html?param=1&amp;anotherParam=2\";\nvar myOtherUrl = \"http://example.com/index.html?url=\" + myUrl;\n</code></pre>\n\n<p>I assume that you need to encode the <code>myUrl</code> variable on that second line?</p>\n    ","a":"\n<p>Check out the built-in function <code>encodeURIComponent(str)</code> and <code>encodeURI(str)</code>.<br>\nIn your case, this should work:</p>\n\n<pre><code>var myOtherUrl = \n       \"http://example.com/index.html?url=\" + encodeURIComponent(myUrl);\n</code></pre>\n    "},{"t":"How do I copy to the clipboard in JavaScript?","l":"http://stackoverflow.com/questions/400212/how-do-i-copy-to-the-clipboard-in-javascript","q":"\n\n<p>What is the best way to copy text to the clipboard? (multi-browser)</p>\n\n<p>I have tried: </p>\n\n<pre><code>function copyToClipboard(text) {\n    if (window.clipboardData) { // Internet Explorer\n        window.clipboardData.setData(\"Text\", text);\n    } else {  \n        unsafeWindow.netscape.security.PrivilegeManager.enablePrivilege(\"UniversalXPConnect\");  \n        const clipboardHelper = Components.classes[\"@mozilla.org/widget/clipboardhelper;1\"].getService(Components.interfaces.nsIClipboardHelper);  \n        clipboardHelper.copyString(text);\n    }\n}\n</code></pre>\n\n<p>but in Internet Explorer it gives a syntax error. In Firefox, it says <code>unsafeWindow is not defined</code>.</p>\n\n<p><strong>Edit</strong> A nice trick without flash: <a href=\"http://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard\">How does Trello access the user's clipboard?</a></p>\n    ","a":"\n<p>Automatic copying to clipboard may be dangerous, therefore most browsers (except IE) make it very difficult. Personally, I use the following simple trick:</p>\n\n<pre><code>function copyToClipboard(text) {\n  window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", text);\n}\n</code></pre>\n\n<p>The user is presented with the prompt box, where the text to be copied is already selected. Now it's enough to press <kbd>Ctrl</kbd>+<kbd>C</kbd> and <kbd>Enter</kbd> (to close the box) -- and voila!</p>\n\n<p>Now the clipboard copy operation is SAFE, because the user does it manually (but in a pretty straightforward way). Of course, works in all browsers.</p>\n    "},{"t":"Is it possible to apply CSS to half of a character?","l":"http://stackoverflow.com/questions/23569441/is-it-possible-to-apply-css-to-half-of-a-character","q":"\n\n<p><strong>What I am looking for:</strong></p>\n\n<p>A way to style one <strong>HALF</strong> of a character. (In this case, half the letter being transparent)</p>\n\n<p><strong>What I have currently searched for and tried (With no luck):</strong></p>\n\n<ul>\n<li>Methods for styling half of a character/letter</li>\n<li>Styling part of a character with CSS or JavaScript</li>\n<li>Apply CSS to 50% of a character</li>\n</ul>\n\n<p>Below is an example of what I am trying to obtain.</p>\n\n<p><img src=\"http://i.stack.imgur.com/SaH8v.png\" alt=\"x\"></p>\n\n<p>Does a CSS or JavaScript solution exists for this or am I going to have to resort to images? I would prefer not to go the image route as this text will end up being generated dynamically.</p>\n\n<hr>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>Since many have asked why I would ever want to style half of a character, this is why. My city had recently spent $250,000 to define a new \"brand\" for itself. This <strong><a href=\"http://halifaxdefined.ca/img/halifax_logo_new.png\">LOGO</a></strong> is what they came up with. Many people have complained about the simplicity and lack of creativity and continue to do so. My goal was to come up with this <strong><a href=\"http://gameovercancer.ca/tests/brandgenerator/\">WEBSITE</a></strong> as a joke. Type in 'Halifax' and you will see what I mean. :)</p>\n    ","a":"\n<h1><a href=\"https://github.com/arbelh/HalfStyle\">Now on GitHub as a Plugin!</a></h1>\n\n<p><img src=\"http://i.stack.imgur.com/Glo2Q.png\" alt=\"enter image description here\"> Feel free to fork and improve.</p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/820/\">Demo</a> | <a href=\"https://github.com/arbelh/HalfStyle/archive/master.zip\">Download Zip</a> | <a href=\"http://www.half-style.com\">Half-Style.com</a> (Redirects to GitHub)</h1>\n\n<hr>\n\n<ul>\n<li><strong>Pure CSS</strong> for a Single Character</li>\n<li>JavaScript used for automation accross text or multiple characters</li>\n<li>Preserves Text Accessibility for screen readers for the blind or visually\nimpaired</li>\n</ul>\n\n<h1>Part1: Basic Solution</h1>\n\n<p><img src=\"http://i.stack.imgur.com/ZYic1.png\" alt=\"Half Style on text\"></p>\n\n<p><strong>Demo:</strong> <a href=\"http://jsfiddle.net/pd9yB/817/\">http://jsfiddle.net/pd9yB/817/</a></p>\n\n<hr>\n\n<p>This works on any dynamic text, or a single character, and is all automated. All you need to do is add a class on the target text and the rest is taken care of.</p>\n\n<p>Also, the accessibility of the original text is preserved for screen readers for the blind or visually impaired.</p>\n\n<p><strong>Explanation for a single character:</strong></p>\n\n<p>Pure CSS. All you need to do is to apply <code>.halfStyle</code> class to each element that contains the character you want to be half-styled.</p>\n\n<p>For each span element containing the character, you can create a data attribute, for example here <code>data-content=\"X\"</code>, and on the pseudo element use <code>content: attr(data-content);</code> so the <code>.halfStyle:before</code> class will be dynamic and you won't need to hard code it for every instance.</p>\n\n<p><strong>Explanation for any text:</strong></p>\n\n<p>Simply add <code>textToHalfStyle</code> class to the element containing the text.</p>\n\n<hr>\n\n<p><strong>CSS:</strong></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.halfStyle {\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: black; /* or transparent, any color */\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n}\n.halfStyle:before {\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    left:0;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    color: #f00;\n}\n</code></pre>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;p&gt;Single Characters:&lt;/p&gt;\n&lt;span class=\"halfStyle\" data-content=\"X\"&gt;X&lt;/span&gt;\n&lt;span class=\"halfStyle\" data-content=\"Y\"&gt;Y&lt;/span&gt;\n&lt;span class=\"halfStyle\" data-content=\"Z\"&gt;Z&lt;/span&gt;\n&lt;span class=\"halfStyle\" data-content=\"A\"&gt;A&lt;/span&gt;\n\n&lt;hr/&gt;\n&lt;p&gt;Automated:&lt;/p&gt;\n\n&lt;span class=\"textToHalfStyle\"&gt;Half-style, please.&lt;/span&gt;\n</code></pre>\n\n<hr>\n\n<p>To make it automated, simply add <code>textToHalfStyle</code> class to the element containing the text.</p>\n\n<p><strong>jQuery</strong> for automated mode:</p>\n\n<pre><code>jQuery(function($) {\n    var text, chars, $el, i, output;\n\n    // Iterate over all class occurences\n    $('.textToHalfStyle').each(function(idx, el) {\n        $el = $(el);\n        text = $el.text();\n        chars = text.split('');\n\n        // Set the screen-reader text\n        $el.html('&lt;span style=\"position: absolute !important;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);\"&gt;' + text + '&lt;/span&gt;');\n\n        // Reset output for appending\n        output = '';\n\n        // Iterate over all chars in the text\n        for (i = 0; i &lt; chars.length; i++) {\n            // Create a styled element for each character and append to container\n            output += '&lt;span aria-hidden=\"true\" class=\"halfStyle\" data-content=\"' + chars[i] + '\"&gt;' + chars[i] + '&lt;/span&gt;';\n        }\n\n        // Write to DOM only once\n        $el.append(output);\n    });\n});\n</code></pre>\n\n<p><strong>Demo:</strong> <a href=\"http://jsfiddle.net/pd9yB/819/\">http://jsfiddle.net/pd9yB/819/</a></p>\n\n<hr>\n\n<h1>Part2: Advanced solution - Independent left and right parts</h1>\n\n<p><img src=\"http://i.stack.imgur.com/zYa0F.png\" alt=\"Half Style on text - advanced\"></p>\n\n<p><strong><em>With this solution you can style left and right parts, individually and independently</em></strong>.</p>\n\n<p>Everything is the same, only more advanced CSS does the magic.</p>\n\n<p><strong>Demo:</strong> <a href=\"http://jsfiddle.net/pd9yB/819/\">http://jsfiddle.net/pd9yB/819/</a></p>\n\n<pre class=\"lang-css prettyprint-override\"><code>.halfStyle {\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: transparent; /* hide the base character */\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n}\n.halfStyle:before { /* creates the left part */\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #f00; /* for demo purposes */\n    text-shadow: 2px -2px 0px #af0; /* for demo purposes */\n}\n.halfStyle:after { /* creates the right part */\n    display:block;\n    direction: rtl; /* very important, will make the width to start from right */\n    position:absolute;\n    z-index:2;\n    top:0;\n    left:50%;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #000; /* for demo purposes */\n    text-shadow: 2px 2px 0px #0af; /* for demo purposes */\n}\n</code></pre>\n\n<p></p><hr>\n<hr><p></p>\n\n<h1>Part3: Mix-Match and Improve</h1>\n\n<p>Now that we know what is possible, let's create some variations.</p>\n\n<hr>\n\n<h2>-Horizontal Half Parts</h2>\n\n<p><img src=\"http://i.stack.imgur.com/2eDaQ.png\" alt=\"halfStyle - Horizontal Half Parts\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/821/\">Demo</a></h1>\n\n<pre><code>.halfStyle {\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: transparent; /* hide the base character */\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n}\n.halfStyle:before { /* creates the top part */\n    display:block;\n    z-index:2;\n    position:absolute;\n    top:0;\n    height: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #f00; /* for demo purposes */\n    text-shadow: 2px -2px 0px #af0; /* for demo purposes */\n}\n.halfStyle:after { /* creates the bottom part */\n    display:block;\n    position:absolute;\n    z-index:1;\n    top:0;\n    height: 100%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #000; /* for demo purposes */\n    text-shadow: 2px 2px 0px #0af; /* for demo purposes */\n}\n</code></pre>\n\n<hr>\n\n<hr>\n\n<h2>-Vertical 1/3 Parts</h2>\n\n<p><img src=\"http://i.stack.imgur.com/ypn4X.png\" alt=\"halfStyle - Vertical 1/3 Parts\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/850/\">Demo</a></h1>\n\n<pre><code>.halfStyle { /* base char and also the right 1/3 */\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: transparent; /* hide the base character */\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n    color: #f0f; /* for demo purposes */\n    text-shadow: 2px 2px 0px #0af; /* for demo purposes */\n}\n.halfStyle:before { /* creates the left 1/3 */\n    display:block;\n    z-index:2;\n    position:absolute;\n    top:0;\n    width: 33.33%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #f00; /* for demo purposes */\n    text-shadow: 2px -2px 0px #af0; /* for demo purposes */\n}\n.halfStyle:after { /* creates the middle 1/3 */\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    width: 66.66%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #000; /* for demo purposes */\n    text-shadow: 2px 2px 0px #af0; /* for demo purposes */\n}\n</code></pre>\n\n<hr>\n\n<hr>\n\n<h2>-Horizontal 1/3 Parts</h2>\n\n<p><img src=\"http://i.stack.imgur.com/UeuxW.png\" alt=\"halfStyle - Horizontal 1/3 Parts\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/823/\">Demo</a></h1>\n\n<pre><code>.halfStyle { /* base char and also the bottom 1/3 */\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: transparent;\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n    color: #f0f;\n    text-shadow: 2px 2px 0px #0af; /* for demo purposes */\n}\n.halfStyle:before { /* creates the top 1/3 */\n    display:block;\n    z-index:2;\n    position:absolute;\n    top:0;\n    height: 33.33%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #f00; /* for demo purposes */\n    text-shadow: 2px -2px 0px #fa0; /* for demo purposes */\n}\n.halfStyle:after { /* creates the middle 1/3 */\n    display:block;\n    position:absolute;\n    z-index:1;\n    top:0;\n    height: 66.66%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #000; /* for demo purposes */\n    text-shadow: 2px 2px 0px #af0; /* for demo purposes */\n}\n</code></pre>\n\n<hr>\n\n<hr>\n\n<h2>-HalfStyle Improvement By @KevinGranger</h2>\n\n<p><img src=\"http://i.stack.imgur.com/PgdJ6.png\" alt=\"halfStyle - KevinGranger\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/824/\">DEMO</a></h1>\n\n<pre><code>body{\n    background-color: black;\n}\n\n.textToHalfStyle{\n    display:block;\n    margin: 200px 0 0 0;\n    text-align:center;\n}\n\n.halfStyle {\n    font-family: 'Libre Baskerville', serif;\n    position:relative;\n    display:inline-block;\n    width:1;\n    font-size:70px;\n    color: black;\n    overflow:hidden;\n    white-space: pre;\n    text-shadow: 1px 2px 0 white;\n}\n.halfStyle:before {\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    color: white;\n}\n</code></pre>\n\n<p></p><hr>\n<hr><p></p>\n\n<h2>-PeelingStyle improvement of HalfStyle by @SamTremaine</h2>\n\n<p><img src=\"http://i.stack.imgur.com/r67KC.png\" alt=\"halfStyle - SamTremaine\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/826/\">Demo</a> and on <a href=\"http://experimental.samtremaine.co.uk/half-style/\">samtremaine.co.uk</a></h1>\n\n<pre><code>.halfStyle {\n    position: relative;\n    display: inline-block;\n    font-size: 68px;\n    color: rgba(0, 0, 0, 0.8);\n    overflow: hidden;\n    white-space: pre;\n    transform: rotate(4deg);\n    text-shadow: 2px 1px 3px rgba(0, 0, 0, 0.3);\n}\n.halfStyle:before { /* creates the left part */\n    display: block;\n    z-index: 1;\n    position: absolute;\n    top: -0.5px;\n    left: -3px;\n    width: 100%;\n    content: attr(data-content);\n    overflow: hidden;\n    pointer-events: none;\n    color: #FFF;\n    transform: rotate(-4deg);\n    text-shadow: 0px 0px 1px #000;\n}\n</code></pre>\n\n<p></p><hr>\n<hr><p></p>\n\n<h1>Part4: Ready for Production</h1>\n\n<p>Customized different Half-Style style-sets can be used on desired elements on the same page.\nYou can define multiple style-sets and tell the plugin which one to use.</p>\n\n<p>The plugin uses data attribute <code>data-halfstyle=\"[-CustomClassName-]\"</code> on the target <code>.textToHalfStyle</code> elements and makes all the necessary changes automatically.</p>\n\n<p>So, simply on the element containing the text add <code>textToHalfStyle</code> class and data attribute <code>data-halfstyle=\"[-CustomClassName-]\"</code>. The plugin will do the rest of the job.</p>\n\n<p><img src=\"http://i.stack.imgur.com/RxjKF.png\" alt=\"halfStyle - Multiple on Same Page\"></p>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/787/\">Demo</a> of Multiple Half-Styles on the same page.</h1>\n\n<pre><code>jQuery(function($) {\n    var halfstyle_text, halfstyle_chars, $halfstyle_el, halfstyle_i, halfstyle_output, halfstyle_style;\n\n    // Iterate over all class occurrences\n    $('.textToHalfStyle').each(function(idx, halfstyle_el) {\n        $halfstyle_el = $(halfstyle_el);\n        halfstyle_style = $halfstyle_el.data('halfstyle');\n        halfstyle_text = $halfstyle_el.text();\n        halfstyle_chars = halfstyle_text.split('');\n\n        // Set the screen-reader text\n        $halfstyle_el.html('&lt;span style=\"position: absolute !important;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);\"&gt;' + halfstyle_text + '&lt;/span&gt;');\n\n        // Reset output for appending\n        halfstyle_output = '';\n\n        // Iterate over all chars in the text\n        for (halfstyle_i = 0; halfstyle_i &lt; halfstyle_chars.length; halfstyle_i++) {\n            // Create a styled element for each character and append to container\n            halfstyle_output += '&lt;span aria-hidden=\"true\" class=\"halfStyle ' + halfstyle_style + '\" data-content=\"' + halfstyle_chars[halfstyle_i] + '\"&gt;' + halfstyle_chars[halfstyle_i] + '&lt;/span&gt;';\n        }\n\n        // Write to DOM only once\n        $halfstyle_el.append(halfstyle_output);\n    });\n});\n</code></pre>\n\n<p>Also the CSS style-sets' class definitions match the <code>[-CustomClassName-]</code> part mentioned above and is chained to <code>.halfStyle</code>, so we will have <code>.halfStyle.[-CustomClassName-]</code></p>\n\n<pre><code> /* start half-style hs-base */\n .halfStyle.hs-base {\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n    color: #000; /* for demo purposes */\n}\n.halfStyle.hs-base:before {\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    pointer-events: none; /* so the base char is selectable by mouse */\n    overflow:hidden;\n    color: #f00; /* for demo purposes */\n}\n /* end half-style hs-base */\n\n/* start half-style hs-horizontal-third */\n.halfStyle.hs-horizontal-third { /* base char and also the bottom 1/3 */\n    position:relative;\n    display:inline-block;\n    font-size:80px; /* or any font size will work */\n    color: transparent;\n    overflow:hidden;\n    white-space: pre; /* to preserve the spaces from collapsing */\n    color: #f0f;\n    text-shadow: 2px 2px 0px #0af; /* for demo purposes */\n}\n.halfStyle.hs-horizontal-third:before { /* creates the top 1/3 */\n    display:block;\n    z-index:2;\n    position:absolute;\n    top:0;\n    height: 33.33%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #f00; /* for demo purposes */\n    text-shadow: 2px -2px 0px #fa0; /* for demo purposes */\n}\n.halfStyle.hs-horizontal-third:after { /* creates the middle 1/3 */\n    display:block;\n    position:absolute;\n    z-index:1;\n    top:0;\n    height: 66.66%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    pointer-events: none; /* so the base char is selectable by mouse */\n    color: #000; /* for demo purposes */\n    text-shadow: 2px 2px 0px #af0; /* for demo purposes */\n}\n/* end half-style hs-horizontal-third */\n\n/* start half-style hs-PeelingStyle, by user SamTremaine on Stackoverflow.com */\n.halfStyle.hs-PeelingStyle {\n    position: relative;\n    display: inline-block;\n    font-size: 68px;\n    color: rgba(0, 0, 0, 0.8);\n    overflow: hidden;\n    white-space: pre;\n    transform: rotate(4deg);\n    text-shadow: 2px 1px 3px rgba(0, 0, 0, 0.3);\n}\n.halfStyle.hs-PeelingStyle:before { /* creates the left part */\n    display: block;\n    z-index: 1;\n    position: absolute;\n    top: -0.5px;\n    left: -3px;\n    width: 100%;\n    content: attr(data-content);\n    overflow: hidden;\n    pointer-events: none;\n    color: #FFF;\n    transform: rotate(-4deg);\n    text-shadow: 0px 0px 1px #000;\n}\n/* end half-style hs-PeelingStyle */\n\n/* start half-style hs-KevinGranger, by user KevinGranger on StackOverflow.com*/\n.textToHalfStyle.hs-KevinGranger {\n    display:block;\n    margin: 200px 0 0 0;\n    text-align:center;\n}\n\n.halfStyle.hs-KevinGranger {\n    font-family: 'Libre Baskerville', serif;\n    position:relative;\n    display:inline-block;\n    width:1;\n    font-size:70px;\n    color: black;\n    overflow:hidden;\n    white-space: pre;\n    text-shadow: 1px 2px 0 white;\n}\n.halfStyle.hs-KevinGranger:before {\n    display:block;\n    z-index:1;\n    position:absolute;\n    top:0;\n    width: 50%;\n    content: attr(data-content); /* dynamic content for the pseudo element */\n    overflow:hidden;\n    color: white;\n}\n/* end half-style hs-KevinGranger\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p&gt;\n    &lt;span class=\"textToHalfStyle\" data-halfstyle=\"hs-base\"&gt;Half-style, please.&lt;/span&gt;\n&lt;/p&gt;\n&lt;p&gt;\n    &lt;span class=\"textToHalfStyle\" data-halfstyle=\"hs-horizontal-third\"&gt;Half-style, please.&lt;/span&gt;\n&lt;/p&gt;\n&lt;p&gt;\n    &lt;span class=\"textToHalfStyle\" data-halfstyle=\"hs-PeelingStyle\"&gt;Half-style, please.&lt;/span&gt;\n&lt;/p&gt;\n&lt;p style=\"background-color:#000;\"&gt;\n    &lt;span class=\"textToHalfStyle\" data-halfstyle=\"hs-KevinGranger\"&gt;Half-style, please.&lt;/span&gt;\n&lt;/p&gt;\n</code></pre>\n\n<h1><a href=\"http://jsfiddle.net/pd9yB/787/\">Demo</a> of Multiple Half-Styles on the same page.</h1>\n    "},{"t":"How do I get started with Node.js","l":"http://stackoverflow.com/questions/2353818/how-do-i-get-started-with-node-js","q":"\n\n<p>Are there any good resources to get started with Node.JS? Any good tutorials, blogs or books?</p>\n\n<p>Of course, I have visited its official website <a href=\"http://nodejs.org/\">http://nodejs.org/</a>, but I didn't think the documentation they have is a good starting point.</p>\n    ","a":"\n<p><strong>Tutorials</strong></p>\n\n<ul>\n<li><a href=\"http://nodeschool.io/\">NodeSchool.io interactive lessons</a></li>\n<li><a href=\"https://github.com/maxogden/art-of-node/#the-art-of-node\">The Art of Node (an introduction to Node)</a></li>\n<li><a href=\"http://node.blog.com/2014/12/29/hello-world-with-node-and-express/\">Hello World Example</a></li>\n<li><a href=\"http://www.nodebeginner.org/#hello-world\">Hello World</a></li>\n<li><a href=\"http://www.nodebeginner.org/#building-the-application-stack\">Hello World Web Server</a></li>\n<li><a href=\"http://nodeguide.com/\">Node.js guide</a></li>\n<li><a href=\"http://howtonode.org/express-mongodb\">Build a blog with Node.js, express and MongoDB</a></li>\n<li><a href=\"http://project70.com/\">Node.Js Tutorials At Project 70</a></li>\n<li><a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/node-js-for-beginners/\">Node.js for Beginners</a></li>\n<li><a href=\"http://javascriptissexy.com/learn-node-js-completely-and-with-confidence/\">Learn Node.js Completely and with Confidence</a></li>\n<li><a href=\"http://blog.modulus.io/absolute-beginners-guide-to-nodejs\">Absolute Beginners Guide To Node.js</a></li>\n</ul>\n\n<p><strong>Developer Sites</strong></p>\n\n<ul>\n<li><a href=\"http://www.joyent.com/developers/node\">Joyent's developer site for node</a></li>\n</ul>\n\n<p><strong>Videos</strong></p>\n\n<ul>\n<li><a href=\"http://nodetuts.com/\">Node tuts</a></li>\n<li><a href=\"http://www.youtube.com/watch?v=jo_B4LTHi3I\">Introduction to Node.js with Ryan Dahl</a></li>\n<li><a href=\"http://www.infoq.com/presentations/nodejs\">Node.js: Asynchronous Purity Leads to Faster Development</a></li>\n<li><a href=\"http://www.infoq.com/presentations/Parallel-Programming-with-Nodejs\">Parallel Programming with Node.js</a></li>\n<li><a href=\"http://vimeo.com/18077379\">Server-side JavaScript with Node, Connect &amp; Express</a></li>\n<li><a href=\"http://www.lynda.com/Nodejs-tutorials/Nodejs-First-Look/101554-2.html\">Node.js First Look</a></li>\n<li><a href=\"http://www.youtube.com/watch?v=0_GNHWZHc-o\">Node.js with MongoDB</a></li>\n<li><a href=\"http://www.youtube.com/watch?v=F6k8lTrAE2g\">Ryan Dahl's Google Tech Talk</a></li>\n<li><a href=\"http://node.codeschool.com/levels/1\">Real Time Web with Node.js</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PL6gx4Cwl9DGBMdkKFn3HasZnnAqVjzHn_\">Node.js Tutorials for Beginners</a></li>\n<li><a href=\"http://www.pluralsight.com/search/?searchTerm=Node.js\">Pluralsight courses (paid)</a></li>\n</ul>\n\n<p><strong>Screencasts</strong></p>\n\n<ul>\n<li><a href=\"http://learnallthenodes.com\">Learn All The Nodes</a></li>\n<li><a href=\"http://nodetuts.com/\">NodeTuts</a></li>\n<li><a href=\"http://nodecasts.net/\">NodeCasts</a></li>\n<li><a href=\"http://www.develop.com/webcasts/watch/5318c4d5d588bf08c461f4b1/create-server-side-mvc-apps-with-node-js-and-express\">Create server-side MVC apps with Node.js and Express</a></li>\n</ul>\n\n<p><strong>Books</strong></p>\n\n<ul>\n<li><a href=\"http://nodebeginner.org/\">The Node Beginner Book</a></li>\n<li><a href=\"https://github.com/tj/masteringnode\">Mastering Node.js</a></li>\n<li><a href=\"http://chimera.labs.oreilly.com/books/1234000001808/index.html\">Up and Running with Node.js</a></li>\n<li><a href=\"http://www.manning.com/cantelon/\">Node.js in Action</a></li>\n<li><a href=\"http://amzn.com/B008Z5OEUY\">Smashing Node.js: JavaScript Everywhere</a></li>\n<li><a href=\"http://www.amazon.de/dp/389864829X\">Node.js &amp; Co. (in German)</a></li>\n<li><a href=\"http://nodejsbook.io/\">Sam's Teach Yourself Node.js in 24 Hours</a></li>\n<li><a href=\"http://jsbooks.revolunet.com/\">Most detailed list of free JavaScript Books</a></li>\n<li><a href=\"http://book.mixu.net/node/index.html\">Mixu's Node Book</a></li>\n<li><a href=\"http://pragprog.com/book/jwnode/node-js-the-right-way\">Node.js the Right Way: Practical, Server-Side JavaScript That Scale</a></li>\n<li><a href=\"https://leanpub.com/webdevelopmentwithnodejs\">Beginning Web Development with Node.js</a></li>\n<li><a href=\"http://www.packtpub.com/node-javascript-web-development/book\">Node Web Development</a></li>\n<li><a href=\"http://nicholasjohnson.com/courses/nodejs/book\">NodeJS for Righteous Universal Domination!</a></li>\n</ul>\n\n<p><strong>Courses</strong></p>\n\n<ul>\n<li><a href=\"http://node.codeschool.com/\">Real Time Web with Node.js</a></li>\n<li><a href=\"http://www.develop.com/training-course/nodejs-featuring-node-npm-express-mocha-mongodb-with-mongoose\">Essential Node.js from DevelopMentor</a></li>\n</ul>\n\n<p><strong>Blogs</strong></p>\n\n<ul>\n<li><a href=\"http://blog.nodejs.org/\">The Node.js blog</a></li>\n<li><a href=\"http://howtonode.org/\">How To Node</a></li>\n<li><a href=\"http://dailyjs.com/\">DailyJS</a></li>\n<li><a href=\"http://blog.nodejitsu.com/\">Nodejitsu blog</a></li>\n<li><a href=\"http://www.wilcoxd.com/whitepapers/node_js/\">Ryan Wilcox's Whitepaper</a></li>\n<li><a href=\"http://www.devthought.com/\">devthought</a></li>\n</ul>\n\n<p><strong>Podcasts</strong></p>\n\n<ul>\n<li><a href=\"http://nodeup.com/\">NodeUp</a></li>\n</ul>\n\n<p><strong>JavaScript resources</strong></p>\n\n<ul>\n<li><a href=\"http://yuiblog.com/crockford/\">Crockford's videos</a> (must see!)</li>\n<li><a href=\"http://www.addyosmani.com/resources/essentialjsdesignpatterns/book/\">Essential JavaScript Design Patterns For Beginners</a></li>\n<li><a href=\"http://bonsaiden.github.com/JavaScript-Garden/\">JavaScript garden</a></li>\n<li><a href=\"http://oreilly.com/catalog/9780596806767\">JavaScript Patterns</a> book</li>\n<li><a href=\"http://oreilly.com/catalog/9780596517748/\">JavaScript: The Good Parts</a> book</li>\n</ul>\n\n<p><strong>Node.js Modules</strong></p>\n\n<ul>\n<li><a href=\"http://npmjs.org/\">Search for registered Node.js modules</a></li>\n<li><a href=\"https://github.com/joyent/node/wiki/modules\">Wiki List on GitHub/Joyent/Node.js</a> (start here last!)</li>\n<li><a href=\"http://www.freshblurbs.com/articles/important-node-js-modules.html\">A completely biased and incomplete selection of useful Node.js modules</a></li>\n</ul>\n\n<p><strong>Other</strong></p>\n\n<ul>\n<li><a href=\"http://jsapp.us/\">JSApp.US - like jsfiddle, but for Node.js</a></li>\n<li><a href=\"https://www.ebayopensource.org/index.php/VJET/NodeJS\">Node with VJET JS (for Eclipse IDE)</a></li>\n<li>Production sites with published source: \n\n<ul>\n<li><a href=\"http://nodeknockout.com/\">Node Knockout Hackathon</a> <a href=\"https://github.com/nko3/website\">(source)</a></li>\n</ul></li>\n<li><a href=\"http://coding.smashingmagazine.com/2011/09/16/useful-node-js-tools-tutorials-and-resources/\">Useful Node.js Tools, Tutorials and Resources</a></li>\n<li><a href=\"http://runnable.com/\">Runnable.com - like jsfiddle, but for server side as well</a></li>\n<li><a href=\"https://devcenter.heroku.com/categories/nodejs\">Getting Started with Node.js on Heroku</a></li>\n<li><a href=\"https://blog.openshift.com/run-your-nodejs-projects-on-openshift-in-two-simple-steps/\">Getting Started with Node.js on Open-Shift</a></li>\n<li><a href=\"http://passportjs.org/guide/\">Authentication using Passport</a></li>\n</ul>\n    "},{"t":"Get current URL in web browser","l":"http://stackoverflow.com/questions/1034621/get-current-url-in-web-browser","q":"\n\n<p>How do I get the website URL?</p>\n\n<p>Not the URL as taken from a link. On the loading page, I want to get the full, current URL of the current web page and store its value in a variable.</p>\n    ","a":"\n<p>Use:</p>\n\n<pre><code>window.location.href \n</code></pre>\n\n<p>As noted in the comments, the line below works but is bugged for Firefox.</p>\n\n<pre><code>document.URL;\n</code></pre>\n\n<p>See <em><a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437\">URL of type DOMString, readonly</a></em>.</p>\n    "},{"t":"Add table row in jQuery","l":"http://stackoverflow.com/questions/171027/add-table-row-in-jquery","q":"\n\n<p>What is the best method in jQuery to add an additional row to a table as the last row?</p>\n\n<p><strong>Update</strong></p>\n\n<p>Is this acceptable:</p>\n\n<pre><code>$('#myTable').append('&lt;tr&gt;&lt;td&gt;my data&lt;/td&gt;&lt;td&gt;more data&lt;/td&gt;&lt;/tr&gt;');\n</code></pre>\n\n<p>Are there limitations to what you can add to a table like this (such as inputs, selects, number of rows)?</p>\n    ","a":"\n<p>The approach you suggest is not guaranteed to give you the result you're looking for - what if you had a <code>tbody</code> for example:</p>\n\n<pre><code>&lt;table id=\"myTable\"&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;...&lt;/tr&gt;\n    &lt;tr&gt;...&lt;/tr&gt;\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>You would end up with the following:</p>\n\n<pre><code>&lt;table id=\"myTable\"&gt;\n  &lt;tbody&gt;\n    &lt;tr&gt;...&lt;/tr&gt;\n    &lt;tr&gt;...&lt;/tr&gt;\n  &lt;/tbody&gt;\n  &lt;tr&gt;...&lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>I would therefore recommend this approach instead:</p>\n\n<pre><code>$('#myTable tr:last').after('&lt;tr&gt;...&lt;/tr&gt;&lt;tr&gt;...&lt;/tr&gt;');\n</code></pre>\n\n<p>You can include anything within the <code>after()</code> method as long as it's valid HTML, including multiple rows as per the example above.</p>\n\n<p><strong>Update:</strong> Revisiting this answer following recent activity with this question. eyelidlessness makes a good comment that there will always be a <code>tbody</code> in the DOM; this is true, but only if there is at least one row. If you have no rows, there will be no <code>tbody</code> unless you have specified one yourself.</p>\n\n<p>DaRKoN_ <a href=\"http://stackoverflow.com/questions/171027/jquery-add-table-row/468240#468240\">suggests</a> appending to the <code>tbody</code> rather than adding content after the last <code>tr</code>. This gets around the issue of having no rows, but still isn't bulletproof as you could theoretically have multiple <code>tbody</code> elements and the row would get added to each of them.</p>\n\n<p>Weighing everything up, I'm not sure there is a single one-line solution that accounts for every single possible scenario. You will need to make sure the jQuery code tallies with your markup.</p>\n\n<p>I think the safest solution is probably to ensure your <code>table</code> always includes at least one <code>tbody</code> in your markup, even if it has no rows. On this basis, you can use the following which will work however many rows you have (and also account for multiple <code>tbody</code> elements):</p>\n\n<pre><code>$('#myTable &gt; tbody:last-child').append('&lt;tr&gt;...&lt;/tr&gt;&lt;tr&gt;...&lt;/tr&gt;');\n</code></pre>\n    "},{"t":"Appending to array","l":"http://stackoverflow.com/questions/351409/appending-to-array","q":"\n\n<p>How do I append to an array in JavaScript?</p>\n    ","a":"\n<p>Use the <code>push()</code> function to append to an array:</p>\n\n<pre><code>// initialize array\nvar arr = [\n    \"Hi\",\n    \"Hello\",\n    \"Bonjour\"\n];\n\n// append new value to the array\narr.push(\"Hola\");\n\n// display all values\nfor (var i = 0; i &lt; arr.length; i++) {\n    console.log(arr[i]);\n}\n</code></pre>\n\n<p>Will print:</p>\n\n<pre><code>Hi\nHello\nBonjour\nHola \n</code></pre>\n    "},{"t":".prop() vs .attr()","l":"http://stackoverflow.com/questions/5874652/prop-vs-attr","q":"\n\n<p>So <a href=\"http://api.jquery.com/category/version/1.6/\">jQuery 1.6</a> has the new function <a href=\"http://api.jquery.com/prop/\"><code>prop()</code></a>.</p>\n\n<pre><code>$(selector).click(function(){\n    //instead of:\n    this.getAttribute('style');\n    //do i use:\n    $(this).prop('style');\n    //or:\n    $(this).attr('style');\n})\n</code></pre>\n\n<p>or in this case do they do the same thing?</p>\n\n<p>And if I <em>do</em> have to switch to using <code>prop()</code>, all the old <code>attr()</code> calls will break if i switch to 1.6?</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>See this fiddle: <a href=\"http://jsfiddle.net/maniator/JpUF2/\">http://jsfiddle.net/maniator/JpUF2/</a></p>\n\n<p>The console logs the <code>getAttribute</code> as a string, and the <code>attr</code> as a string, but the <code>prop</code> as a <code>CSSStyleDeclaration</code>, Why? And how does that affect my coding in the future?</p>\n    ","a":"\n<p><strong>Update 1 November 2012</strong></p>\n\n<p>My original answer applies specifically to jQuery 1.6. My advice remains the same but jQuery 1.6.1 changed things slightly: in the face of the predicted pile of broken websites, the jQuery team <a href=\"http://blog.jquery.com/2011/05/12/jquery-1-6-1-released/\">reverted <code>attr()</code> to something close to (but not exactly the same as) its old behaviour for Boolean attributes</a>. John Resig also <a href=\"http://ejohn.org/blog/jquery-16-and-attr/\">blogged about it</a>. I can see the difficulty they were in but still disagree with his recommendation to prefer <code>attr()</code>.</p>\n\n<p><strong>Original answer</strong></p>\n\n<p>If you've only ever used jQuery and not the DOM directly, this could be a confusing change, although it is definitely an improvement conceptually. Not so good for the bazillions of sites using jQuery that will break as a result of this change though.</p>\n\n<p>I'll summarize the main issues:</p>\n\n<ul>\n<li>You usually want <code>prop()</code> rather than <code>attr()</code>.</li>\n<li>In the majority of cases, <code>prop()</code> does what <code>attr()</code> used to do. Replacing calls to <code>attr()</code> with <code>prop()</code> in your code will generally work.</li>\n<li>Properties are generally simpler to deal with than attributes. An attribute value may only be a string whereas a property can be of any type. For example, the <code>checked</code> property is a Boolean, the <code>style</code> property is an object with individual properties for each style, the <code>size</code> property is a number.</li>\n<li>Where both a property and an attribute with the same name exists, usually updating one will update the other, but this is not the case for certain attributes of inputs, such as <code>value</code> and <code>checked</code>: for these attributes, the property always represents the current state while the attribute (except in old versions of IE) corresponds to the default value/checkedness of the input (reflected in the <code>defaultValue</code> / <code>defaultChecked</code> property).</li>\n<li>This change removes some of the layer of magic jQuery stuck in front of attributes and properties, meaning jQuery developers will have to learn a bit about the difference between properties and attributes. This is a good thing.</li>\n</ul>\n\n<p>If you're a jQuery developer and are confused by this whole business about properties and attributes, you need to take a step back and learn a little about it, since jQuery is no longer trying so hard to shield you from this stuff. For the authoritative but somewhat dry word on the subject, there's the specs: <a href=\"http://www.w3.org/TR/dom/\">DOM4</a>, <a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/\">HTML DOM</a>, <a href=\"http://www.w3.org/TR/DOM-Level-2-Core\">DOM Level 2</a>, <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/\">DOM Level 3</a>. Mozilla's DOM documentation is valid for most modern browsers and is easier to read than the specs, so you may find their <a href=\"https://developer.mozilla.org/en/gecko_dom_reference\">DOM reference</a> helpful. There's a <a href=\"https://developer.mozilla.org/en/DOM/element#Properties\">section on element properties</a>.</p>\n\n<p>As an example of how properties are simpler to deal with than attributes, consider a checkbox that is initially checked. Here are two possible pieces of valid HTML to do this:</p>\n\n<pre><code>&lt;input id=\"cb\" type=\"checkbox\" checked&gt;\n&lt;input id=\"cb\" type=\"checkbox\" checked=\"checked\"&gt;\n</code></pre>\n\n<p>So, how do you find out if the checkbox is checked with jQuery? Look on Stack Overflow and you'll commonly find the following suggestions:</p>\n\n<ul>\n<li><code>if ( $(\"#cb\").attr(\"checked\") === true ) {...}</code></li>\n<li><code>if ( $(\"#cb\").attr(\"checked\") == \"checked\" ) {...}</code></li>\n<li><code>if ( $(\"#cb\").is(\":checked\") ) {...}</code></li>\n</ul>\n\n<p>This is actually the simplest thing in the world to do with the <code>checked</code> Boolean property, which has existed and worked flawlessly in every major scriptable browser since 1995:</p>\n\n<p><code>if (document.getElementById(\"cb\").checked) {...}</code></p>\n\n<p>The property also makes checking or unchecking the checkbox trivial:</p>\n\n<p><code>document.getElementById(\"cb\").checked = false</code></p>\n\n<p>In jQuery 1.6, this unambiguously becomes</p>\n\n<p><code>$(\"#cb\").prop(\"checked\", false)</code></p>\n\n<p>The idea of using the <code>checked</code> attribute for scripting a checkbox is unhelpful and unnecessary. The property is what you need.</p>\n\n<ul>\n<li>It's not obvious what the correct way to check or uncheck the checkbox is using the <code>checked</code> attribute</li>\n<li>The attribute value reflects the default rather than the current visible state (except in some older versions of IE, thus making things still harder). The attribute tells you nothing about the whether the checkbox on the page is checked. See <a href=\"http://jsfiddle.net/VktA6/49/\">http://jsfiddle.net/VktA6/49/</a>.</li>\n</ul>\n    "},{"t":"How to return the response from an asynchronous call?","l":"http://stackoverflow.com/questions/14220321/how-to-return-the-response-from-an-asynchronous-call","q":"\n\n<p>I have a function <code>foo</code> which makes an Ajax request. How can I return the response from <code>foo</code>? </p>\n\n<p>I tried to return the value from the <code>success</code> callback as well as assigning the response to a local variable inside the function and return that one, but none of those ways actually return the response.</p>\n\n<pre><code>function foo() {\n    var result;\n\n    $.ajax({\n        url: '...',\n        success: function(response) {\n            result = response;\n            // return response; // &lt;- tried that one as well\n        }\n    });\n\n    return result;\n}\n\nvar result = foo(); // always ends up being `undefined`.\n</code></pre>\n    ","a":"\n<blockquote>\n  <p><em><code>-&gt;</code> For a more general explanation of async behavior with different examples, please see</em> <a href=\"http://stackoverflow.com/q/23667086/218196\">Why is my variable unaltered after I modify it inside of a function? - Asynchronous code reference</a>  </p>\n  \n  <p><em><code>-&gt;</code> If you already understand the problem, skip to the possible solutions below.</em></p>\n</blockquote>\n\n<h1>Explanation of the problem</h1>\n\n<p>The <strong>A</strong> in AJAX stands for <strong>asynchronous</strong>. That means sending the request (or rather receiving the response) is taken out of the normal execution flow. In your example, <code>$.ajax</code> returns immediately and the next statement, <code>return result;</code>, is executed before the function you passed as <code>success</code> callback was even called.</p>\n\n<p>Here is an analogy which hopefully makes the difference between synchronous and asynchronous flow clearer: </p>\n\n<h2>Synchronous</h2>\n\n<p>Imagine you make a phone call to a friend and ask him to look something up for you. Although it might take a while, you wait on the phone and stare into space, until your friend gives you the answer you needed.</p>\n\n<p>The same is happening when you make a function call containing \"normal\" code:</p>\n\n<pre><code>function findItem() {\n    var item;\n    while(item_not_found) {\n        // search\n    }\n    return item;\n}\n\nvar item = findItem();\n// do something with item\ndoSomethingElse();\n</code></pre>\n\n<p>Even though <code>findItem</code> might take a long time to execute, any code coming after <code>var item = findItem();</code> has to <em>wait</em> until the function returns the result.</p>\n\n<h2>Asynchronous</h2>\n\n<p>You call your friend again for the same reason. But this time you tell him that you are in a hurry and he should <em>call you back</em> on your mobile phone. You hang up, leave the house and do whatever you planned to do. Once your friend calls you back, you are dealing with the information he gave to you.</p>\n\n<p>That's exactly what's happening when you do an AJAX request. </p>\n\n<pre><code>findItem(function(item) {\n    // do something with item\n});\ndoSomethingElse();\n</code></pre>\n\n<p>Instead of waiting for the response, the execution continues immediately and the statement after the AJAX call is executed. To get the response eventually, you provide a function to be called once the response was received, a <em>callback</em> (notice something? <em>call back</em> ?). Any statement coming after that call is executed before the callback is called.</p>\n\n<hr>\n\n<h1>Solution(s)</h1>\n\n<p><strong>Embrace the asynchronous nature of JavaScript!</strong> While certain asynchronous operations provide synchronous counterparts (so does \"Ajax\"), it's generally discouraged to use them, especially in a browser context.</p>\n\n<p>Why is it bad do you ask?</p>\n\n<p>JavaScript runs in the UI thread of the browser and any long running process will lock the UI, making it unresponsive. Additionally, there is an upper limit on the execution time for JavaScript and the browser will ask the user whether to continue the execution or not. \nAll of this is really bad user experience. The user won't be able to tell whether everything is working fine or not.  Furthermore the effect will be worse for users with a slow connection.</p>\n\n<h2>Restructure code</h2>\n\n<h3>Let functions accept callbacks</h3>\n\n<p>The better approach is to organize your code properly around callbacks. In the example in the question, you can make <code>foo</code> accept a callback and use it as <code>success</code> callback. So this</p>\n\n<pre><code>var result = foo();\n// code that depends on 'result'\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>foo(function(result) {\n    // code that depends on 'result'\n});\n</code></pre>\n\n<p>Here we pass a function as argument to <code>foo</code>. You can pass any function reference, for example:</p>\n\n<pre><code>function myCallback(result) {\n    // code that depends on 'result'\n}\n\nfoo(myCallback);\n</code></pre>\n\n<p><code>foo</code> itself is defined as follows:</p>\n\n<pre><code>function foo(callback) {\n    $.ajax({\n        // ...\n        success: callback\n    });\n}\n</code></pre>\n\n<p><code>callback</code> will refer to the function we pass to <code>foo</code> when we call it and we simply pass it on to <code>success</code>. I.e. once the AJAX request is successful, <code>$.ajax</code> will call <code>callback</code> and pass the response to the callback (which can be referred to with <code>result</code>, since this is how we defined the callback).</p>\n\n<p>You can also process the response before passing it to the callback:</p>\n\n<pre><code>function foo(callback) {\n    $.ajax({\n        // ...\n        success: function(response) {\n            // e.g. filter the response\n            callback(filtered_response);\n        }\n    });\n}\n</code></pre>\n\n<p>It's easier to write code using callbacks than it seems. After all, JavaScript in the browser is heavily event driven (DOM events). Receiving the AJAX response is nothing else but an event.<br>\nDifficulties could arise when you have to work with third party code, but most problems can be solved by just thinking through the application flow.</p>\n\n<h3>Use promises</h3>\n\n<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\" rel=\"nofollow\">Promise API</a> is a new feature of ECMAScript 6, but it has good browser support already. There are also many libraries which implement the standard Promises API and provide additional methods to ease the use and composition of asynchronous functions (e.g. <a href=\"https://github.com/petkaantonov/bluebird\" rel=\"nofollow\">bluebird</a>).</p>\n\n<p>Promises are containers for <em>future</em> values. When the promise receives the value (it is <em>resolved</em>) or when it is cancelled (<em>rejected</em>), it notifies all of its \"listeners\" who want to access this value.</p>\n\n<p>The advantage over plain callbacks is that they allow you do decouple your code and they are easier to compose.</p>\n\n<p>Here is a simple example of using a promise:</p>\n\n<pre><code>function delay() {\n  // `delay` returns a promise\n  return new Promise(function(resolve, reject) {\n    // only `delay` is able to resolve or reject the promise\n    setTimeout(function() {\n      resolve(42); // after 3s, resolve the promise with value 42\n    }, 3000);\n  });\n}\n\ndelay().then(function(v) { // `delay` returns a promise\n  console.log(v); // log the value once it is resolved\n}).catch(function(v) {\n  // or do something else if it is rejected \n  // (would not happen in this example, since `reject` is not called\n});\n</code></pre>\n\n<p>Applied to our Ajax call we could use promises like this:</p>\n\n<pre><code>function ajax(url) {\n  return new Promise(function(resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.onload = function() {\n      resolve(this.responseText);\n    };\n    xhr.onerror = reject;\n    xhr.open('GET', url);\n    xhr.send();\n  });\n}\n\najax(\"/echo/json\").then(function(result) {\n  // code depending on result\n}).catch(function() {\n  // an error occurred\n});\n</code></pre>\n\n<p>Describing all the advantages that promises offer is beyond the scope of this answer, but if you write new code, you should seriously consider them. They provide a great abstraction and separation of your code.</p>\n\n<p>More information about promises: <a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" rel=\"nofollow\">HTML5 rocks - JavaScript Promises</a></p>\n\n<h3>jQuery: Use deferred objects</h3>\n\n<p><a href=\"http://stackoverflow.com/questions/4866721/what-are-deferred-objects\">Deferred objects</a> are jQuery's custom implementation ofpPromises (before the Promise API was standardized). They behave almost like promises, but expose a slightly different API.</p>\n\n<p>Every AJAX method of jQuery already returns a \"deferred object\" (actually a promise of a deferred object) which you can just return from your function:</p>\n\n<pre><code>function ajax() {\n    return $.ajax(...);\n}\n\najax().done(function(result) {\n    // code depending on result\n}).fail(function() {\n    // an error occurred\n});\n</code></pre>\n\n<p><strong>Promise gotchas</strong></p>\n\n<p>Keep in mind that promises and deferred objects are just <em>containers</em> for a future value, they are not the value itself. For example suppose you had the following:</p>\n\n<pre><code>function checkPassword() {\n    return $.ajax({\n        url: '/password',\n        data: {\n            username: $('#username').val()\n            password: $('#password').val()\n        },\n        type: 'POST',\n        dataType: 'json'\n    });\n}\n\nif (checkPassword()) {\n    // Tell the user they're logged in\n}\n</code></pre>\n\n<p>This code misunderstands the above asynchrony issues. Specifically, <code>$.ajax()</code> doesn't freeze the code while it checks the '/password' page on your server - it sends a request to the server and while it waits, immediately returns a jQuery Ajax Deferred object, not the response from the server. That means the <code>if</code> statement is going to always get this Deferred object, treat it as <code>true</code>, and proceed as though the user is logged in. Not good.</p>\n\n<p>But the fix is easy:</p>\n\n<pre><code>checkPassword()\n.done(function(r) {\n    if (r) {\n        // Tell the user they're logged in\n    } else {\n        // Tell the user their password was bad\n    }\n})\n.fail(function(x) {\n    // Tell the user something bad happened\n});\n</code></pre>\n\n<p>So now we're still calling the '/password' page on the server, but our code now properly handles the wait time for the server to respond. The <code>$.ajax()</code> call still returns immediately with a jQuery Ajax Deferred object, but we use it to attach event listeners to <code>.done()</code> and <code>.fail()</code>. In the <code>.done()</code> call, where the server responded with a normal response (HTTP 200), we check the object returned by the server. In this example the server is just returning true if the login was successful, false if not, so <code>if (r)</code> is checking for true/false.</p>\n\n<p>In the <code>.fail()</code> handler we're dealing with something going wrong - for example if the user lost their internet connection while they were typing in their username and password, or if your server went down.</p>\n\n<hr>\n\n<h3>Not recommended: Synchronous \"AJAX\" calls</h3>\n\n<p>As I mentioned, some asynchronous operations have synchronous counterparts. While I don't advocate there use, for completeness, here is how you would perform a synchronous call:</p>\n\n<h3>Without jQuery</h3>\n\n<p>If you directly use a <a href=\"http://www.w3.org/TR/XMLHttpRequest/\" rel=\"nofollow\"><code>XMLHTTPRequest</code></a> object, pass <code>false</code> as third argument to <a href=\"http://www.w3.org/TR/XMLHttpRequest/#the-open%28%29-method\" rel=\"nofollow\"><code>.open</code></a>.</p>\n\n<h3>jQuery</h3>\n\n<p>If you use <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">jQuery</a>, you can set the <code>async</code> option to <code>false</code>. Note that this option is <em>deprecated</em> since jQuery 1.8.\nYou can then either still use a <code>success</code> callback or access the <code>responseText</code> property of the <a href=\"http://api.jquery.com/jQuery.ajax/#jqXHR\" rel=\"nofollow\">jqXHR object</a>:</p>\n\n<pre><code>function foo() {\n    var jqXHR = $.ajax({\n        //...\n        async: false\n    });\n    return jqXHR.responseText;\n}\n</code></pre>\n\n<p>If you use any other jQuery AJAX method, such as <code>$.get</code>, <code>$.getJSON</code>, etc., you have to change it to <code>$.ajax</code> (since you can only pass configuration parameters to <code>$.ajax</code>).</p>\n\n<p><strong>Heads up!</strong> It is not possible to make a synchronous <a href=\"http://stackoverflow.com/questions/2067472/please-explain-jsonp\">JSONP</a> request. JSONP by its very nature is always asynchronous (one more reason to not even consider this option).</p>\n    "},{"t":"How does JavaScript .prototype work?","l":"http://stackoverflow.com/questions/572897/how-does-javascript-prototype-work","q":"\n\n<p>I'm not that into dynamic programming languages but I've written my fair share of JavaScript code. I never really got my head around this prototype-based programming, does any one know how this works? </p>\n\n<pre><code>var obj = new Object();\nobj.prototype.test = function() { alert('Hello?'); };\nvar obj2 = new obj();\nobj2.test();\n</code></pre>\n\n<p>I remember a lot discussion I had with people a while back (I'm not exactly sure what I'm doing) but as I understand it, there's no concept of a class. It's just an object, and instances of those objects are clones of the original, right?</p>\n\n<p>But what is the exact purpose of this \".prototype\" property in JavaScript? How does it relate to instantiating objects?</p>\n\n<h3>Update: correct way</h3>\n\n<pre><code>var obj = new Object(); // not a functional object\nobj.prototype.test = function() { alert('Hello?'); }; // this is wrong!\n\nfunction MyObject() {} // a first class functional object\nMyObject.prototype.test = function() { alert('OK'); } // OK\n</code></pre>\n\n<p>Also these <a href=\"http://ejohn.org/apps/learn/#64\" rel=\"nofollow\">slides</a> really helped a lot.</p>\n    ","a":"\n<p>Every JavaScript object has an internal property called <em>[[Prototype]]</em>. If you look up a property via <code>obj.propName</code> or <code>obj['propName']</code> and the object does not have such a property - which can be checked via <code>obj.hasOwnProperty('propName')</code> - the runtime looks up the property in the object referenced by [[Prototype]] instead. If the prototype-object also doesn't have such a property, its prototype is checked in turn, thus walking the original object's <em>prototype-chain</em> until a match is found or its end is reached.</p>\n\n<p>Some JavaScript implementations allow direct access to the [[Prototype]] property, eg via a non-standard property named <code>__proto__</code>. In general, it's only possible to set an object's prototype during object creation: If you create a new object via <code>new Func()</code>, the object's [[Prototype]] property will be set to the object referenced by <code>Func.prototype</code>.</p>\n\n<p>This allows to simulate classes in JavaScript, although JavaScript's inheritance system is - as we have seen - prototypical, and not class-based:</p>\n\n<p>Just think of constructor functions as classes and the properties of the prototype (ie of the object referenced by the constructor function's <code>prototype</code> property) as shared members, ie members which are the same for each instance. In class-based systems, methods are implemented the same way for each instance, so methods are normally added to the prototype, whereas an object's fields are instance-specific and therefore added to the object itself during construction.</p>\n    "},{"t":"Change an element's class with JavaScript","l":"http://stackoverflow.com/questions/195951/change-an-elements-class-with-javascript","q":"\n\n<p>How can I change a class of an HTML element in response to an <code>onClick</code> event using JavaScript?</p>\n    ","a":"\n<h2>Adding and Removing Classes, with simple cross-browser JavaScript</h2>\n\n<p>The standard JavaScript way to select an element is using <a href=\"https://developer.mozilla.org/en-US/docs/DOM/document.getElementById\"><code>document.getElementById(\"Id\")</code></a>, which is what the following examples use - you can of course obtain elements in other ways, and in the right situation may simply use <code>this</code> instead - however, going into detail on this is beyond the scope of the answer.</p>\n\n<h3>To change all classes for an element:</h3>\n\n<p>To replace all existing classes with one or more new classes, set the className attribute:</p>\n\n<pre><code>document.getElementById(\"MyElement\").className = \"MyClass\";\n</code></pre>\n\n<p>(You can use a space-delimited list to apply multiple classes.)</p>\n\n<h3>To add an additional class to an element:</h3>\n\n<p>To add a class to an element, without removing/affecting existing values, append a space and the new classname, like so:</p>\n\n<pre><code>document.getElementById(\"MyElement\").className += \" MyClass\";\n</code></pre>\n\n<h3>To remove a class from an element:</h3>\n\n<p>To remove a single class to an element, without affecting other potential classes, a simple regex replace is required:</p>\n\n<pre><code>document.getElementById(\"MyElement\").className =\n   document.getElementById(\"MyElement\").className.replace\n      ( /(?:^|\\s)MyClass(?!\\S)/g , '' )\n/* code wrapped for readability - above is all one statement */\n</code></pre>\n\n<p>An explanation of this regex is as follows:</p>\n\n<pre><code>(?:^|\\s) # match the start of the string, or any single whitespace character\n\nMyClass  # the literal text for the classname to remove\n\n(?!\\S)   # negative lookahead to verify the above is the whole classname\n         # ensures there is no non-space character following\n         # (i.e. must be end of string or a space)\n</code></pre>\n\n<p>The <code>g</code> flag tells the replace to repeat as required, in case the class name has been added multiple times.</p>\n\n<h3>To check if a class is already applied to an element:</h3>\n\n<p>The same regex used above for removing a class can also be used as a check as to whether a particular class exists:</p>\n\n<pre><code>if ( document.getElementById(\"MyElement\").className.match(/(?:^|\\s)MyClass(?!\\S)/) )\n</code></pre>\n\n<p><br></p>\n\n<h3>Assigning these actions to onclick events:</h3>\n\n<p>Whilst it is possible to write JavaScript directly inside the HTML event attributes (such as <code>onclick=\"this.className+=' MyClass'\"</code>) this is not recommended behaviour. Especially on larger applications, more maintainable code is achieved by separating HTML markup from JS interaction logic.</p>\n\n<p>The first step to achieving this is by creating a function, and calling the function in the onclick attribute, for example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function changeClass()\n    {\n        // code examples from above\n    }\n&lt;/script&gt;\n...\n&lt;button onclick=\"changeClass()\"&gt;My Button&lt;/button&gt;\n</code></pre>\n\n<p><sub><em>(It is not required to have this code in script tags, this is simply for brevity of example, and including the JS in a distinct file may be more appropriate.)</em></sub></p>\n\n<p>The second step is to move the onclick event out of the HTML and into JavaScript, for example using <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener\">addEventListener</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function changeClass()\n    {\n        // code examples from above\n    }\n\n    window.onload = function()\n    {\n        document.getElementById(\"MyElement\").addEventListener( 'click' , changeClass );\n    }\n&lt;/script&gt;\n...\n&lt;button id=\"MyElement\"&gt;My Button&lt;/button&gt;\n</code></pre>\n\n<p>(Note that the window.onload part is required so that the contents of that function are executed <em>after</em> the HTML has finished loading - without this, the MyElement might not exist when the JS is called, so that line would fail.)</p>\n\n<p><br></p>\n\n<h2>JavaScript Frameworks and Libraries</h2>\n\n<p>The above code is all in standard JavaScript, however it is common practise to use either a framework or a library to simplify common tasks, as well as benefit from fixed bugs and edge cases that you might not think of when writing your code.</p>\n\n<p>Whilst some people consider it overkill to add a ~50KB framework for simply changing a class, if you are doing any substantial amount of JavaScript work, or anything that might have unusual cross-browser behaviour, it is well worth considering.</p>\n\n<p><em>(Very roughly, a library is a set of tools designed for a specific task, whilst a framework generally contains multiple libraries and performs a complete set of duties.)</em></p>\n\n<p>The examples above have been reproduced below using <a href=\"http://jquery.com\">jQuery</a>, probably the most commonly used JavaScript library (though there are others worth investigating too).</p>\n\n<p>(Note that <code>$</code> here is the jQuery object.)</p>\n\n<h3>Changing Classes with jQuery:</h3>\n\n<pre><code>$('#MyElement').addClass('MyClass');\n\n$('#MyElement').removeClass('MyClass');\n\nif ( $('#MyElement').hasClass('MyClass') )\n</code></pre>\n\n<p>In addition, jQuery provides a shortcut for adding a class if it doesn't apply, or removing a class that does:</p>\n\n<pre><code>$('#MyElement').toggleClass('MyClass');\n</code></pre>\n\n<p><br></p>\n\n<h3>Assigning a function to a click event with jQuery:</h3>\n\n<pre><code>$('#MyElement').click(changeClass);\n</code></pre>\n\n<p>or, without needing an id:</p>\n\n<pre><code>$(':button:contains(My Button)').click(changeClass);\n</code></pre>\n\n<p><br></p>\n\n<h2>HTML5 Techniques for changing classes</h2>\n\n<p>Modern browsers have added <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.classList\"><strong>classList</strong></a> which provides methods to make it easier to manipulate classes without needing a library:</p>\n\n<pre><code>document.getElementById(\"MyElement\").classList.add('class');\n\ndocument.getElementById(\"MyElement\").classList.remove('class');\n\nif ( document.getElementById(\"MyElement\").classList.contains('class') )\n\ndocument.getElementById(\"MyElement\").classList.toggle('class');\n</code></pre>\n\n<p>Unfortunately, these do not work in Internet Explorer prior to v10, though there is a <a href=\"http://en.wikipedia.org/wiki/Shim_%28computing%29\">shim</a> to add support for it to IE8 and IE9, available from <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.classList\">this page</a>.</p>\n    "},{"t":"How to empty an array in JavaScript?","l":"http://stackoverflow.com/questions/1232040/how-to-empty-an-array-in-javascript","q":"\n\n<p>Is there a way to empty an array and if so possibly with <code>.remove()</code>?</p>\n\n<p>For instance, </p>\n\n<pre><code>A = [1,2,3,4];\n</code></pre>\n\n<p>How can I empty that?</p>\n    ","a":"\n<p>This has been a hot topic and the cause of a lot of controversy. There are actually many correct answers and because this answer has been marked as the accepted answer for a very long time, I will include all of the methods here. If you vote for this answer, please upvote the other answers that I have referenced as well. <em>(most of the comments on this answer are about method 1, which was my original answer)</em></p>\n\n<hr>\n\n<p>Ways to clear an existing array <code>A</code>:</p>\n\n<p><strong>Method 1</strong></p>\n\n<p>(this was my original answer to the question)</p>\n\n<pre><code>A = [];\n</code></pre>\n\n<p>This code will set the variable <code>A</code> to a new empty array. This is perfect if you don't have <strong>references to the original array <code>A</code></strong> anywhere else because this actually creates a brand new (empty) array. You should be careful with this method because if you have referenced this array from another variable or property, the original array will remain unchanged. Only use this if you only reference the array by its original variable <code>A</code>.</p>\n\n<p>This is also the fastest solution.</p>\n\n<p><strong>Method 2</strong> (as <a href=\"http://stackoverflow.com/a/1234337/113570\">suggested</a> by <a href=\"http://stackoverflow.com/users/2214/matthew-crumley\">Matthew Crumley</a>)</p>\n\n<pre><code>A.length = 0\n</code></pre>\n\n<p>This will clear the existing array by setting its length to 0. Some have argued that this may not work in all implementations of Javascript but it turns out that this is not the case. It also works when using \"strict mode\" in Ecmascript 5 because the length property of an array is a read/write property.</p>\n\n<p><strong>Method 3</strong> (as <a href=\"http://stackoverflow.com/a/8134354/113570\">suggested</a> by <a href=\"http://stackoverflow.com/users/1047275/anthony\">Anthony</a>)</p>\n\n<pre><code>A.splice(0,A.length)\n</code></pre>\n\n<p>Using <code>.splice()</code> will work perfectly, but since <code>.splice()</code> function will return an array with all the removed items, it will actually return a copy of the original array. Benchmarks suggests that this has no effect on performance whatsoever.</p>\n\n<p><strong>Method 4</strong> (as <a href=\"http://stackoverflow.com/a/17306971/113570\">suggested</a> by <a href=\"http://stackoverflow.com/users/990356/tanguy-k\">tanguy_k</a>)</p>\n\n<pre><code>while(A.length &gt; 0) {\n    A.pop();\n}\n</code></pre>\n\n<p>This solution is not very succinct and it is also the slowest solution, contrary to earlier benchmarks referenced in the original answer.</p>\n\n<p><strong>Performance</strong></p>\n\n<p>Of all the methods of clearing an <strong><em>existing array</em></strong>, methods 2 and 3 are very similar in performance and are a lot faster than method 4. See this <a href=\"http://jsperf.com/array-destroy/151\">benchmark</a>.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>As pointed out by <a href=\"http://stackoverflow.com/users/47401/diadistis\">Diadistis</a> in his <a href=\"http://stackoverflow.com/a/28548360/113570\">answer</a> below, the original benchmarks that were used to determine the performance of the four methods described above were flawed. The original benchmark reused the cleared array so the 2nd iteration was clearing an array that was already empty.</p>\n\n<p>The following benchmark fixes this flaw: <a href=\"http://jsperf.com/array-destroy/151\">http://jsperf.com/array-destroy/151</a> . It clearly shows that methods #2 (length property) and #3 (splice) are the fastest (not counting method #1 which doesn't change the original array).</p>\n    "},{"t":"What is JSONP all about?","l":"http://stackoverflow.com/questions/2067472/what-is-jsonp-all-about","q":"\n\n<p>I understand JSON, but not JSONP. <a href=\"http://en.wikipedia.org/wiki/JSON\">Wikipedia's document on JSON</a> is (was) the top search result for JSONP. It says this:</p>\n\n<blockquote>\n  <p>JSONP or \"JSON with padding\" is a JSON extension wherein a prefix is specified as an input argument of the call itself.</p>\n</blockquote>\n\n<p>Huh? What call? That doesn't make any sense to me. JSON is a data format. There's no call.</p>\n\n<p>The <a href=\"http://remysharp.com/2007/10/08/what-is-jsonp/\">2nd search result</a> is from some guy named <a href=\"http://stackoverflow.com/users/22617/remy-sharp\">Remy</a>, who writes this about JSONP:</p>\n\n<blockquote>\n  <p>JSONP is script tag injection, passing the response from the server in to a user specified function.</p>\n</blockquote>\n\n<p>I can sort of understand that, but it's still not making any sense.</p>\n\n<hr>\n\n<p>So what is JSONP? Why was it created (what problem does it solve)? And why would I use it? </p>\n\n<hr>\n\n<p><strong>Addendum</strong>: I've just created <a href=\"http://en.wikipedia.org/wiki/JSONP\">a new page for JSONP</a> on Wikipedia; it now has a clear and thorough description of JSONP, based on <a href=\"http://stackoverflow.com/users/25330/jvenema\">jvenema</a>'s answer.</p>\n    ","a":"\n<p>It's actually not too complicated...</p>\n\n<p>Say you're on domain example.com, and you want to make a request to domain example.net. To do so, you need to cross domain boundaries, a no-no in most of browserland. </p>\n\n<p>The one item that bypasses this limitation is &lt;script&gt; tags. When you use a script tag, the domain limitation is ignored, but under normal circumstances, you can't really DO anything with the results, the script just gets evaluated.</p>\n\n<p>Enter JSONP. When you make your request to a server that is JSONP enabled, you pass a special parameter that tells the server a little bit about your page. That way, the server is able to nicely wrap up its response in a way that your page can handle. </p>\n\n<p>For example, say the server expects a parameter called \"callback\" to enable its JSONP capabilities. Then your request would look like:</p>\n\n<pre><code>http://www.example.net/sample.aspx?callback=mycallback\n</code></pre>\n\n<p>Without JSONP, this might return some basic JavaScript object, like so:</p>\n\n<pre><code>{ foo: 'bar' }\n</code></pre>\n\n<p>However, with JSONP, when the server receives the \"callback\" parameter, it wraps up the result a little differently, returning something like this:</p>\n\n<pre><code>mycallback({ foo: 'bar' });\n</code></pre>\n\n<p>As you can see, it will now invoke the method you specified. So, in your page, you define the callback function:</p>\n\n<pre><code>mycallback = function(data){\n  alert(data.foo);\n};\n</code></pre>\n\n<p>And now, when the script is loaded, it'll be evaluated, and your function will be executed. Voila, cross-domain requests!</p>\n\n<p>It's also worth noting the one major issue with JSONP: you lose a lot of control of the request. For example, there is no \"nice\" way to get proper failure codes back. As a result, you end up using timers to monitor the request, etc, which is always a bit suspect. The proposition for <a href=\"http://www.json.org/JSONRequest.html\">JSONRequest</a> is a great solution to allowing cross domain scripting, maintaining security, and allowing proper control of the request.</p>\n\n<p>Edit: These days, <a href=\"http://en.wikipedia.org/wiki/Cross-origin_resource_sharing\">CORS</a> is the recommeded approach vs. JSONRequest. JSONP is still useful for older browser support, but given the security implications, unless you have no choice CORS is the better choice.</p>\n    "},{"t":"How does Facebook disable the browser's integrated Developer Tools?","l":"http://stackoverflow.com/questions/21692646/how-does-facebook-disable-the-browsers-integrated-developer-tools","q":"\n\n<p>So apparently because of the recent scams, the developer tools is exploited by people to post spam and even used to \"hack\" accounts. Facebook has blocked the developer tools, and I can't even use the console.</p>\n\n<p><img src=\"http://i.stack.imgur.com/Wiatp.png\" alt=\"Enter image description here\"></p>\n\n<p>How did they do that?? <a href=\"http://stackoverflow.com/questions/7559409/disable-developer-tools\">One Stack Overflow post claimed that it is not possible</a>, but Facebook has proven them wrong.</p>\n\n<p>Just go to Facebook and open up the developer tools, type one character into the console, and this warning pops up. No matter what you put in, it will not get executed.</p>\n\n<p>How is this possible?</p>\n\n<p>They even blocked auto-complete in the console:</p>\n\n<p><img src=\"http://i.stack.imgur.com/j0Zmx.png\" alt=\"Enter image description here\"></p>\n    ","a":"\n<p>I'm a security engineer at Facebook and this is my fault. We're testing this for some users to see if it can slow down some attacks where users are tricked into pasting (malicious) JavaScript code into the browser console.</p>\n\n<p>Just to be clear: trying to block hackers client-side is a <a href=\"http://stackoverflow.com/questions/7559409/disable-developer-tools\">bad idea</a> in general;\nthis is to protect against a <a href=\"https://www.facebook.com/photo.php?v=956977232793\">specific social engineering attack</a>.</p>\n\n<p>If you ended up in the test group and are annoyed by this, sorry. I tried to\nmake <a href=\"https://www.facebook.com/selfxss\">the opt-out page</a> as simple as\npossible while still being scary enough to stop at least <em>some</em> of the\nvictims.</p>\n\n<p>The actual code is pretty similar to <a href=\"http://stackoverflow.com/a/21692733\">@joeldixon66's link</a>; ours is a little more complicated for no good reason.</p>\n\n<p>Chrome wraps all console code in</p>\n\n<pre><code>with ((console &amp;&amp; console._commandLineAPI) || {}) {\n  &lt;code goes here&gt;\n}\n</code></pre>\n\n<p>... so the site redefines <code>console._commandLineAPI</code> to throw:</p>\n\n<pre><code>Object.defineProperty(console, '_commandLineAPI',\n   { get : function() { throw 'Nooo!' } })\n</code></pre>\n\n<p>This is <a href=\"http://escape.alf.nu/20\">not quite enough (try it!)</a>, but that's the\nmain trick.</p>\n\n<hr>\n\n<p>Epilogue: The Chrome team decided that defeating the console from user-side JS was a bug and <a href=\"https://code.google.com/p/chromium/issues/detail?id=349993\">fixed the issue</a>, rendering this technique invalid. Afterwards, additional protection was added to <a href=\"https://code.google.com/p/chromium/issues/detail?id=345205#c21\">protect users from self-xss</a>. </p>\n    "},{"t":"Get selected text from drop-down list (select box) using jQuery","l":"http://stackoverflow.com/questions/1643227/get-selected-text-from-drop-down-list-select-box-using-jquery","q":"\n\n<p>How can I get an <a href=\"http://en.wikipedia.org/wiki/Active_Server_Pages\">ASP</a> drop-down list selected text in jQuery, not using the selected value?</p>\n    ","a":"\n<pre><code>$(\"#yourdropdownid option:selected\").text();\n</code></pre>\n    "},{"t":"How do you check for an empty string in JavaScript?","l":"http://stackoverflow.com/questions/154059/how-do-you-check-for-an-empty-string-in-javascript","q":"\n\n<p>I saw this <a href=\"http://stackoverflow.com/questions/10230/checking-for-string-contents-string-length-vs-empty-string\">thread</a>, but I didn't see a JavaScript specific example. Is there a simple <code>string.Empty</code> available in JavaScript, or is it just a case of checking for <code>\"\"</code>?</p>\n    ","a":"\n<p>If you just want to check whether there's any value, you can do </p>\n\n<pre><code>if (strValue) {\n    //do something\n}\n</code></pre>\n\n<p>If you need to check specifically for an empty string over null, I would think checking against <code>\"\"</code> is your best bet, using <a href=\"http://www.webreference.com/js/column26/stricteq.html\">the <code>===</code> operator</a> (so that you know that it is, in fact, a string you're comparing against).</p>\n    "},{"t":"Loop through array in JavaScript","l":"http://stackoverflow.com/questions/3010840/loop-through-array-in-javascript","q":"\n\n<p>In Java you can use a <code>for()</code> loop to go through objects in an array like so:</p>\n\n<pre><code>String[] myStringArray = {\"Hello\",\"World\"};\nfor(String s : myStringArray)\n{\n    //Do something\n}\n</code></pre>\n\n<p>Can you do the same in JavaScript?</p>\n    ","a":"\n<p>Use a sequential <code>for</code> loop:</p>\n\n<pre><code>var myStringArray = [\"Hello\",\"World\"];\nvar arrayLength = myStringArray.length;\nfor (var i = 0; i &lt; arrayLength; i++) {\n    alert(myStringArray[i]);\n    //Do something\n}\n</code></pre>\n\n<p>@zipcodeman suggests the use of the <code>for...in</code> statement, but for iterating arrays <code>for-in</code> should be avoided, that statement is meant to <strong>enumerate</strong> object properties.</p>\n\n<p>It shouldn't be used for array-like objects because:</p>\n\n<ul>\n<li>The order of iteration is not guaranteed, the array indexes may not be visited in numeric order.</li>\n<li>Inherited properties are also enumerated.</li>\n</ul>\n\n<p>The second point is that it can give you a lot of problems, for example, if you extend the <code>Array.prototype</code> object to include a method there, that property will be also enumerated.</p>\n\n<p>For example:</p>\n\n<pre><code>Array.prototype.foo = \"foo!\";\nvar array = ['a', 'b', 'c'];\n\nfor (var i in array) {\n  alert(array[i]);\n}\n</code></pre>\n\n<p>The above code will alert, \"a\", \"b\", \"c\" and \"foo!\".</p>\n\n<p>That be particularly a problem if you use some library that relies heavily on native prototypes augmention (such as MooTools for example).</p>\n\n<p>The <code>for-in</code> statement as I said before is there to <em>enumerate</em> object properties, for example:</p>\n\n<pre><code>var obj = {\n  \"a\": 1,\n  \"b\": 2,\n  \"c\": 3\n};\n\nfor (var prop in obj) {\n  if (obj.hasOwnProperty(prop)) { \n  // or if (Object.prototype.hasOwnProperty.call(obj,prop)) for safety...\n    alert(\"prop: \" + prop + \" value: \" + obj[prop])\n  }\n}\n</code></pre>\n\n<p>In the above example the <code>hasOwnProperty</code> method allows you to enumerate only <em>own properties</em>, that's it, only the properties that the object physically has, no inherited properties.</p>\n\n<p>I would recommend you to read the following article:</p>\n\n<ul>\n<li><a href=\"http://web.archive.org/web/20101213150231/http://dhtmlkitchen.com/?category=/JavaScript/&amp;date=2007/10/21/&amp;entry=Iteration-Enumeration-Primitives-and-Objects\">Enumeration VS Iteration</a></li>\n</ul>\n    "},{"t":"Storing Objects in HTML5 localStorage","l":"http://stackoverflow.com/questions/2010892/storing-objects-in-html5-localstorage","q":"\n\n<p>I'd like to store a JavaScript object in HTML5 <code>localStorage</code>, but my object is apparently being converted to a string.</p>\n\n<p>I can store and retrieve primitive JavaScript types and arrays using <code>localStorage</code>, but objects don't seem to work.  Should they? </p>\n\n<p>Here's my code:</p>\n\n<pre><code>var testObject = { 'one': 1, 'two': 2, 'three': 3 };\nconsole.log('typeof testObject: ' + typeof testObject);\nconsole.log('testObject properties:');\nfor (var prop in testObject) {\n    console.log('  ' + prop + ': ' + testObject[prop]);\n}\n\n// Put the object into storage\nlocalStorage.setItem('testObject', testObject);\n\n// Retrieve the object from storage\nvar retrievedObject = localStorage.getItem('testObject');\n\nconsole.log('typeof retrievedObject: ' + typeof retrievedObject);\nconsole.log('Value of retrievedObject: ' + retrievedObject);\n</code></pre>\n\n<p>The console output is</p>\n\n<pre><code>typeof testObject: object\ntestObject properties:\n  one: 1\n  two: 2\n  three: 3\ntypeof retrievedObject: string\nValue of retrievedObject: [object Object]\n</code></pre>\n\n<p>It looks to me like the <code>setItem</code> method is converting the input to a string before storing it.</p>\n\n<p>I see this behavior in Safari, Chrome, and Firefox, so I assume it's my misunderstanding of the <a href=\"http://www.w3.org/TR/webstorage/\">HTML5 Web Storage</a> spec, not a browser-specific bug or limitation.</p>\n\n<p>I've tried to make sense of the <em>structured clone</em> algorithm described in <a href=\"http://www.w3.org/TR/html5/infrastructure.html\">http://www.w3.org/TR/html5/infrastructure.html</a>.  I don't fully understand what it's saying, but maybe my problem has to do with my object's properties not being enumerable (???)  </p>\n\n<p>Is there an easy workaround?</p>\n    ","a":"\n<p>Looking at the <a href=\"http://developer.apple.com/safari/library/documentation/iPhone/Conceptual/SafariJSDatabaseGuide/Name-ValueStorage/Name-ValueStorage.html#//apple_ref/doc/uid/TP40007256-CH6-SW1\">Apple</a>, <a href=\"https://developer.mozilla.org/en/DOM/Storage\">Mozilla</a> and <a href=\"http://msdn.microsoft.com/en-us/library/cc197050%28VS.85%29.aspx\">Microsoft</a> documentation, the functionality seems to be limited to handle only string key/value pairs.</p>\n\n<p>A workaround can be to <a href=\"http://www.json.org/js.html\"><em>stringify</em></a> your object before storing it, and later parse it when you retrieve it:</p>\n\n<pre><code>var testObject = { 'one': 1, 'two': 2, 'three': 3 };\n\n// Put the object into storage\nlocalStorage.setItem('testObject', JSON.stringify(testObject));\n\n// Retrieve the object from storage\nvar retrievedObject = localStorage.getItem('testObject');\n\nconsole.log('retrievedObject: ', JSON.parse(retrievedObject));\n</code></pre>\n    "},{"t":"What is the 'new' keyword in JavaScript?","l":"http://stackoverflow.com/questions/1646698/what-is-the-new-keyword-in-javascript","q":"\n\n<p>The <code>new</code> keyword in JavaScript can be quite confusing when it is first encountered, as people tend to think that JavaScript is not an object-oriented programming language.</p>\n\n<ul>\n<li>What is it?</li>\n<li>What problems does it solve?</li>\n<li>When is it appropriate and when not?</li>\n</ul>\n    ","a":"\n<p>It is 4 things:</p>\n\n<ol>\n<li>It creates a new object.  The type of this object, is simply <em>object</em>.</li>\n<li>It sets this new object's internal, inaccessible, <em>[[prototype]]</em> property to be the constructor function's external, accessible, <em>prototype</em> object (every function object automatically has a <em>prototype</em> property).</li>\n<li>It executes the constructor function, using the newly created object whenever <code>this</code> is mentioned.</li>\n<li>It returns the newly created object, unless the constructor function returns a non-primitive value. In this case, that non-primitive value will be returned.</li>\n</ol>\n\n<p>Note: <em>constructor function</em> refers the function after the <code>new</code> keyword, as in </p>\n\n<pre><code>new constructorFunction(arg1, arg2)\n</code></pre>\n\n<p>Once this is done, if an undefined property of the new object is requested, the script will check the object's <em>[[prototype]]</em> object for the property instead. This is how you can get something similar to traditional class inheritance in JavaScript. </p>\n\n<p>The most difficult part about this is point number 2.  Every object (including functions) has this internal property called <em>[[prototype]]</em>. It can <em>only</em> be set at object creation time, either with <em>new</em>, with <em>Object.create</em>, or based on the literal (functions default to Function.prototype, numbers to Number.prototype, etc.). It can only be read with <em>Object.getPrototypeOf(someObject)</em>. There is <em>no</em> other way to set or read this value.</p>\n\n<p>Functions, in addition to the hidden <em>[[prototype]]</em> property, also have a property called <em>prototype</em>, and it is this that you can access, and modify, to provide inherited properties and methods for the objects you make.</p>\n\n<hr>\n\n<p>Here is an example:</p>\n\n<pre><code>ObjMaker = function() {this.a = 'first';};\n// ObjMaker is just a function, there's nothing special about it that makes \n// it a constructor.\n\nObjMaker.prototype.b = 'second';\n// like all functions, ObjMaker has an accessible prototype property that \n// we can alter. I just added a property called 'b' to it. Like \n// all objects, ObjMaker also has an inaccessible [[prototype]] property\n// that we can't do anything with\n\nobj1 = new ObjMaker();\n// 3 things just happened.\n// A new, empty object was created called obj1.  At first obj1 was the same\n// as {}. The [[prototype]] property of obj1 was then set to the current\n// object value of the ObjMaker.prototype (if ObjMaker.prototype is later\n// assigned a new object value, obj1's [[prototype]] will not change, but you\n// can alter the properties of ObjMaker.prototype to add to both the\n// prototype and [[prototype]]). The ObjMaker function was executed, with\n// obj1 in place of this... so obj1.a was set to 'first'.\n\nobj1.a;\n// returns 'first'\nobj1.b;\n// obj1 doesn't have a property called 'b', so JavaScript checks \n// its [[prototype]]. Its [[prototype]] is the same as ObjMaker.prototype\n// ObjMaker.prototype has a property called 'b' with value 'second'\n// returns 'second'\n</code></pre>\n\n<p>It's like class inheritance because now, any objects you make using <code>new ObjMaker()</code> will also appear to have inherited the 'b' property.</p>\n\n<p>If you want something like a subclass, then you do this:</p>\n\n<pre><code>SubObjMaker = function () {};\nSubObjMaker.prototype = new ObjMaker(); // note: this pattern is deprecated!\n// Because we used 'new', the [[prototype]] property of SubObjMaker.prototype\n// is now set to the object value of ObjMaker.prototype.\n// The modern way to do this is with Object.create(), which was added in ECMAScript 5:\n// SubObjMaker.prototype = Object.create(ObjMaker.prototype);\n\nSubObjMaker.prototype.c = 'third';  \nobj2 = new SubObjMaker();\n// [[prototype]] property of obj2 is now set to SubObjMaker.prototype\n// Remember that the [[prototype]] property of SubObjMaker.prototype\n// is ObjMaker.prototype. So now obj2 has a prototype chain!\n// obj2 ---&gt; SubObjMaker.prototype ---&gt; ObjMaker.prototype\n\nobj2.c;\n// returns 'third', from SubObjMaker.prototype\n\nobj2.b;\n// returns 'second', from ObjMaker.prototype\n\nobj2.a;\n// returns 'first', from SubObjMaker.prototype, because SubObjMaker.prototype \n// was created with the ObjMaker function, which assigned a for us\n</code></pre>\n\n<hr>\n\n<p>I read a ton of rubbish on this subject before finally finding <a href=\"http://joost.zeekat.nl/constructors-considered-mildly-confusing.html\">this page</a>, where this is explained very well with nice diagrams.</p>\n    "},{"t":"Replacing all occurrences of a string in JavaScript","l":"http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript","q":"\n\n<p>I have this string:</p>\n\n<pre>Test abc test test abc test test\ntest abc test test abc \n</pre>\n\n<p>Doing</p>\n\n<pre><code>str = str.replace('abc', '');\n</code></pre>\n\n<p>seems to only remove the first occurrence of <code>abc</code> in the string above. How can I replace <strong>all</strong> occurrences of it?</p>\n    ","a":"\n<pre><code>str = str.replace(/abc/g, '');\n</code></pre>\n\n<p>In response to comment:</p>\n\n<pre><code>var find = 'abc';\nvar re = new RegExp(find, 'g');\n\nstr = str.replace(re, '');\n</code></pre>\n\n<p>In response to <a href=\"http://stackoverflow.com/users/49153/click-upvote\">Click Upvote</a>'s comment, you could simplify it even more:</p>\n\n<pre><code>function replaceAll(find, replace, str) {\n  return str.replace(new RegExp(find, 'g'), replace);\n}\n</code></pre>\n\n<p><strong>Note:</strong> Regular expressions contain special (meta) characters, and as such it is dangerous to blindly pass an argument in the <code>find</code> function above without pre-processing it to escape those characters.  This is covered in the <a href=\"https://developer.mozilla.org/en-US/\">Mozilla Developer Network</a>'s <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\">JavaScript Guide on Regular Expressions</a>, where they present the following utility function:</p>\n\n<pre><code>function escapeRegExp(string) {\n    return string.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n</code></pre>\n\n<p>So in order to make the <code>replaceAll</code> function above safer, it could be modified to the following if you also include <code>escapeRegExp</code>:</p>\n\n<pre><code>function replaceAll(string, find, replace) {\n  return string.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n</code></pre>\n    "},{"t":"Checking if an array key exists in a JavaScript object or array?","l":"http://stackoverflow.com/questions/1098040/checking-if-an-array-key-exists-in-a-javascript-object-or-array","q":"\n\n<p>How do I check if a particular key exists in a JavaScript object or array?</p>\n\n<p>If a key doesn't exist and I try to access it, will it return false? Or throw an error?</p>\n    ","a":"\n<p>Actually, checking for undefined-ness is not an accurate way of testing whether a key exists. What if the key exists but the value is actually <code>undefined</code>?</p>\n\n<pre><code>var obj = { key: undefined };\nobj[\"key\"] != undefined // false, but the key exists!\n</code></pre>\n\n<p>You should instead use the <code>in</code> operator:</p>\n\n<pre><code>\"key\" in obj // true, regardless of the actual value\n</code></pre>\n\n<p>If you want to check if a key doesn't exist, remember to use parenthesis:</p>\n\n<pre><code>!(\"key\" in obj) // true if \"key\" doesn't exist in object\n!\"key\" in obj   // ERROR!  Equivalent to \"false in obj\"\n</code></pre>\n\n<p>Or, if you want to particularly test for properties of the object instance (and not inherited properties), use <code>hasOwnProperty</code>:</p>\n\n<pre><code>obj.hasOwnProperty(\"key\") // true\n</code></pre>\n    "},{"t":"Set a default parameter value for a JavaScript function","l":"http://stackoverflow.com/questions/894860/set-a-default-parameter-value-for-a-javascript-function","q":"\n\n<p>I would like a JavaScript function to have optional arguments which I set a default on, which gets used if the value isn't defined.  In ruby you can do it like this:</p>\n\n<pre><code>def read_file(file, delete_after = false)\n  # code\nend\n</code></pre>\n\n<p>Does this work in JavaScript?</p>\n\n<pre><code>function read_file(file, delete_after = false) {\n  // Code\n}\n</code></pre>\n    ","a":"\n<p>There are a lot of ways, but this is my preferred method - it lets you pass in anything you want, including false or null. (<code>typeof null == \"object\"</code>)</p>\n\n<pre><code> function foo(a, b)\n {\n   a = typeof a !== 'undefined' ? a : 42;\n   b = typeof b !== 'undefined' ? b : 'default_b';\n   ...\n }\n</code></pre>\n    "},{"t":"How can I refresh a page with jQuery?","l":"http://stackoverflow.com/questions/5404839/how-can-i-refresh-a-page-with-jquery","q":"\n\n<p>How can I refresh a page with jQuery?</p>\n    ","a":"\n<pre><code>$('#something').click(function() {\n    location.reload();\n});\n</code></pre>\n\n<p>Like mplungjan explained in the comment below, the <code>reload()</code> function takes an optional parameter that can be set to <code>true</code> to reload from the server rather than the cache. The parameter defaults to <code>false</code>, so by default the page reloads from the browser's cache.</p>\n    "},{"t":"Abort Ajax requests using jQuery","l":"http://stackoverflow.com/questions/446594/abort-ajax-requests-using-jquery","q":"\n\n<p>Using jQuery, how can I <strong>cancel/abort an Ajax request</strong> that I have not yet received the response from?</p>\n    ","a":"\n<p>Most of the jQuery Ajax methods return an XMLHttpRequest (or the equivalent) object, so you can just use <code>abort()</code>.</p>\n\n<p>See the documentation:</p>\n\n<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/library/ms535920%28VS.85%29.aspx\">abort Method</a> (<a href=\"http://en.wikipedia.org/wiki/Microsoft%5fDeveloper%5fNetwork\">MSDN</a>). Cancels the current HTTP request.</li>\n<li><a href=\"https://developer.mozilla.org/en/XMLHttpRequest#abort%28%29\">abort()</a> (<a href=\"http://en.wikipedia.org/wiki/Mozilla%5fDeveloper%5fNetwork\">MDN</a>). If the request has been sent already, this method will abort the request.</li>\n</ul>\n\n\n\n<pre><code>var xhr = $.ajax({\n    type: \"POST\",\n    url: \"some.php\",\n    data: \"name=John&amp;location=Boston\",\n    success: function(msg){\n       alert( \"Data Saved: \" + msg );\n    }\n});\n\n//kill the request\nxhr.abort()\n</code></pre>\n\n<p><strong>UPDATE:</strong>\nAs of jQuery 1.5 the returned object is a wrapper for the native XMLHttpRequest object called jqXHR. This object appears to expose all of the native properties and methods so the above example still works. See <em><a href=\"http://api.jquery.com/jQuery.ajax/#jqXHR\">The jqXHR Object</a></em> (jQuery API documentation).</p>\n    "},{"t":"How to check if a string “StartsWith” another string?","l":"http://stackoverflow.com/questions/646628/how-to-check-if-a-string-startswith-another-string","q":"\n\n<p>How would I write the equivalent of C#'s <a href=\"http://msdn.microsoft.com/en-us/library/baketfxw.aspx\"><code>String.StartsWith</code></a> in Javascript?</p>\n\n<pre><code>var data = 'hello world';\nvar input = 'he';\n\n//data.startsWith(input) == true\n</code></pre>\n    ","a":"\n<p>You can add this function to the <code>String prototype</code>:</p>\n\n<pre><code>if (typeof String.prototype.startsWith != 'function') {\n  // see below for better implementation!\n  String.prototype.startsWith = function (str){\n    return this.indexOf(str) === 0;\n  };\n}\n</code></pre>\n\n<p>Then you can use it directly on string values:</p>\n\n<pre><code>\"Hello World!\".startsWith(\"He\"); // true\n\nvar data = \"Hello world\";\nvar input = 'He';\ndata.startsWith(input); // true\n</code></pre>\n\n<p><strong>Edit:</strong> Note that I'm checking if the function exists before defining it, that's because in the future, the language might have this strings extras methods defined as built-in functions, and native implementations are always faster and preferred, see the <a href=\"http://wiki.ecmascript.org/doku.php?id=harmony:string_extras\"><em>ECMAScript Harmony String Extras</em></a> proposal.</p>\n\n<p><strong>Edit:</strong> As others noted, <code>indexOf</code> will be inefficient for large strings, its complexity is <code>O(N)</code>. For a constant-time solution (<code>O(1)</code>), you can use either, <code>substring</code> as <a href=\"http://stackoverflow.com/questions/646628/javascript-startswith/646631#646631\">@cobbal</a> suggested, or <code>String.prototype.slice</code>, which behaves similarly (note that I don't recommend using the <code>substr</code>, because it's inconsistent between implementations (most notably on JScript) ):</p>\n\n<pre><code>if (typeof String.prototype.startsWith != 'function') {\n  String.prototype.startsWith = function (str){\n    return this.slice(0, str.length) == str;\n  };\n}\n</code></pre>\n\n<p>The difference between <code>substring</code> and <code>slice</code> is basically that <code>slice</code> can take negative indexes, to manipulate characters from the end of the string, for example you could write the counterpart <code>endsWith</code> method by:</p>\n\n<pre><code>if (typeof String.prototype.endsWith != 'function') {\n  String.prototype.endsWith = function (str){\n    return this.slice(-str.length) == str;\n  };\n}\n</code></pre>\n    "},{"t":"JavaScript equivalent to printf/string.format","l":"http://stackoverflow.com/questions/610406/javascript-equivalent-to-printf-string-format","q":"\n\n<p>I'm looking for a good JavaScript equivalent of the C/PHP <code>printf()</code> or for C#/Java programmers, <code>String.Format()</code> (<code>IFormatProvider</code> for .NET).</p>\n\n<p>My basic requirement is a thousand separator format for numbers for now, but something that handles lots of combinations (including dates) would be good.</p>\n\n<p>I realize Microsoft's <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\">Ajax</a> library provides a version of <code>String.Format()</code>, but we don't want the entire overhead of that framework.</p>\n    ","a":"\n<p>Try <a href=\"https://github.com/alexei/sprintf.js\">sprintf() for JavaScript</a>.</p>\n\n<hr>\n\n<p><strong>Update</strong>&nbsp;&nbsp;&nbsp;&nbsp;Ok, if you really want to do a simple format method on your own, don’t do the replacements successively but do them simultaneously.</p>\n\n<p>Because most of the other proposals that are mentioned fail when a replace string of previous replacement does also contain a format sequence like this:</p>\n\n<pre><code>\"{0}{1}\".format(\"{1}\", \"{0}\")\n</code></pre>\n\n<p>Normally you would expect the output to be <code>{1}{0}</code> but the actual output is <code>{1}{1}</code>. So do a simultaneously replacement instead like in <a href=\"http://stackoverflow.com/questions/610406/javascript-printf-string-format/4673436#4673436\">fearphage’s suggestion</a>.</p>\n    "},{"t":"How to detect a click outside an element?","l":"http://stackoverflow.com/questions/152975/how-to-detect-a-click-outside-an-element","q":"\n\n<p>I have some HTML menus, which I show completely when a user clicks on the head of these menus. I would like to hide these elements when the user clicks outside the menus' area.</p>\n\n<p>Is something like this possible with jQuery?</p>\n\n<pre><code>$(\"#menuscontainer\").clickOutsideThisElement(function() {\n    // hide the menus\n});\n</code></pre>\n    ","a":"\n<p>Attach a click event to the document body which closes the window. Attach a separate click event to the window which stops propagation to the document body.</p>\n\n<pre><code>$('html').click(function() {\n//Hide the menus if visible\n});\n\n$('#menucontainer').click(function(event){\n    event.stopPropagation();\n});\n</code></pre>\n\n<p>Warning, if using this technique, be aware of <a href=\"http://css-tricks.com/dangers-stopping-event-propagation/\">the dangers of stopping propagation</a>.</p>\n    "},{"t":"Trim string in JavaScript?","l":"http://stackoverflow.com/questions/498970/trim-string-in-javascript","q":"\n\n<p>How do I trim a string in JavaScript?</p>\n    ","a":"\n<p>Since new Browsers (IE9+) have <code>trim()</code> already implemented, you should only implement <code>trim()</code> if it is not already available on the Prototype-Object (overriding it is a huge performance hit). This is generally recommended when extending Native Objects! Note that the added property is enumerable unless you use ES5 <code>Object.defineProperty</code>!</p>\n\n<p>For those browsers who does not support <code>trim()</code>, you can use this polyfill from <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim\">MDN</a>:</p>\n\n<pre><code>if (!String.prototype.trim) {\n    (function() {\n        // Make sure we trim BOM and NBSP\n        var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n        String.prototype.trim = function() {\n            return this.replace(rtrim, '');\n        };\n    })();\n}\n</code></pre>\n\n<hr>\n\n<p>See this:</p>\n\n<pre><code>String.prototype.trim=function(){return this.replace(/^\\s+|\\s+$/g, '');};\n\nString.prototype.ltrim=function(){return this.replace(/^\\s+/,'');};\n\nString.prototype.rtrim=function(){return this.replace(/\\s+$/,'');};\n\nString.prototype.fulltrim=function(){return this.replace(/(?:(?:^|\\n)\\s+|\\s+(?:$|\\n))/g,'').replace(/\\s+/g,' ');};\n</code></pre>\n    "},{"t":"Where can I find documentation on formatting a date in JavaScript?","l":"http://stackoverflow.com/questions/1056728/where-can-i-find-documentation-on-formatting-a-date-in-javascript","q":"\n\n<p>I noticed that JavaScript's <code>new Date()</code> function is very smart in accepting dates in several formats.</p>\n\n<pre><code>Xmas95 = new Date(\"25 Dec, 1995 23:15:00\")\nXmas95 = new Date(\"2009 06 12,12:52:39\")\nXmas95 = new Date(\"20 09 2006,12:52:39\")\n</code></pre>\n\n<p>I could not find documentation anywhere showing all the valid string formats while calling <code>new Date()</code> function.</p>\n\n<p>This is for converting a string to a date. If we look at the opposite side, that is, converting a date object to a string, until now I was under the impression that JavaScript doesn't have a built-in API to format a date object into a string.</p>\n\n<blockquote>\n  <p><strong>Editor's note:</strong> The following approach is the asker's attempt that worked on a particular browser but does <em>not</em> work in general; <strong>see the answers on this page</strong> to see some actual solutions.</p>\n</blockquote>\n\n<p>Today, I played with the <code>toString()</code> method on the date object and surprisingly it serves the purpose of formatting date to strings.</p>\n\n<pre><code>var d1 = new Date();\nd1.toString('yyyy-MM-dd');       //Returns \"2009-06-29\" in Internet Explorer, but not Firefox or Chrome\nd1.toString('dddd, MMMM ,yyyy')  //Returns \"Monday, June 29,2009\" in Internet Explorer, but not Firefox or Chrome\n</code></pre>\n\n<p>Also here I couldn't find any documentation on all the ways we can format the date object into a string.</p>\n\n<p>Where is the documentation which lists the format specifiers supported by the <code>Date()</code> object?</p>\n    ","a":"\n<p>I love <em><a href=\"http://www.webdevelopersnotes.com/tips/html/10_ways_to_format_time_and_date_using_javascript.php3\">10 ways to format time and date using JavaScript</a></em> and <em><a href=\"http://www.elated.com/articles/working-with-dates/\">Working with Dates</a></em>.</p>\n\n<p>Basically, you have three methods and you have to combine the strings for yourself:</p>\n\n<pre><code>getDate() // Returns the date\ngetMonth() // Returns the month\ngetFullYear() // Returns the year\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var d = new Date();\n    var curr_date = d.getDate();\n    var curr_month = d.getMonth() + 1; //Months are zero based\n    var curr_year = d.getFullYear();\n    document.write(curr_date + \"-\" + curr_month + \"-\" + curr_year);\n&lt;/script&gt;\n</code></pre>\n    "},{"t":"Most elegant way to clone a JavaScript object","l":"http://stackoverflow.com/questions/728360/most-elegant-way-to-clone-a-javascript-object","q":"\n\n<p>I have an object <code>x</code>. I'd like to copy it as object <code>y</code>, such that changes to <code>y</code> do not modify <code>x</code>.</p>\n\n<p>What's the most elegant way of doing this in JavaScript?</p>\n\n<p>Edit: I realize that copying objects derived from built-in JavaScript objects will result in extra, unwanted properties. This isn't a problem, since I'm copying one of my own, literal-constructed objects.</p>\n    ","a":"\n<p>To do this for any object in JavaScript will not be simple or straightforward. You will run into the problem of erroneously picking up attributes from the object's prototype that should be left in the prototype and not copied to the new instance. If, for instance, you are adding a <strong>clone</strong> method to <strong>Object.prototype</strong>, as some answers depict, you will need to explicitly skip that attribute. But what if there are other additional methods added to <strong>Object.prototype</strong>, or other intermediate prototypes, that you don't know about? In that case, you will copy attributes you shouldn't, so you need to detect unforeseen, non-local attributes with the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/hasOwnProperty\">hasOwnProperty</a> method.</p>\n\n<p>In addition to non-enumerable attributes, you'll encounter a tougher problem when you try to copy objects that have hidden properties. For example, <strong>prototype</strong> is a hidden property of a function. Also, an object's prototype is referenced with the attribute <strong>__proto__</strong>, which is also hidden, and will not be copied by a for/in loop iterating over the source object's attributes. I think <strong>__proto__</strong> might be specific to Firefox's JavaScript interpreter and it may be something different in other browsers, but you get the picture. Not everything is enumerable. You can copy a hidden attribute if you know its name, but I don't know of any way to discover it automatically.</p>\n\n<p>Yet another snag in the quest for an elegant solution is the problem of setting up the prototype inheritance correctly. If your source object's prototype is <strong>Object</strong>, then simply creating a new general object with {} will work, but if the source's prototype is some descendant of <strong>Object</strong>, then you are going to be missing the additional members from that prototype which you skipped using the <strong>hasOwnProperty</strong> filter, or which were in the prototype, but weren't enumerable in the first place. One solution might be to call the source object's <strong>constructor</strong> property to get the initial copy object and then copy over the attributes, but then you still will not get non-enumerable attributes. For example, a <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Date\">Date</a> object stores its data as a hidden member:</p>\n\n<pre><code>function clone(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\nvar d1 = new Date();\n\n/* Wait for 5 seconds. */\nvar start = (new Date()).getTime();\nwhile ((new Date()).getTime() - start &lt; 5000);\n\n\nvar d2 = clone(d1);\nalert(\"d1 = \" + d1.toString() + \"\\nd2 = \" + d2.toString());\n</code></pre>\n\n<p>The date string for d1 will be 5 seconds behind that of d2. A way to make one Date the same as another is by calling the <strong>setTime</strong> method, but that is specific to the Date class. I don't think there is a bullet-proof general solution to this problem, though I would be happy to be wrong!</p>\n\n<p>When I had to implement general deep copying I ended up compromising by assuming that I would only need to copy a plain <strong>Object</strong>, <strong>Array</strong>, <strong>Date</strong>, <strong>String</strong>, <strong>Number</strong>, or <strong>Boolean</strong>. The last 3 types are immutable, so I could perform a shallow copy and not worry about it changing. I further assumed that any elements contained in Object or Array would also be one of the 6 simple types in that list. This can be accomplished with code like the following:</p>\n\n<pre><code>function clone(obj) {\n    var copy;\n\n    // Handle the 3 simple types, and null or undefined\n    if (null == obj || \"object\" != typeof obj) return obj;\n\n    // Handle Date\n    if (obj instanceof Date) {\n        copy = new Date();\n        copy.setTime(obj.getTime());\n        return copy;\n    }\n\n    // Handle Array\n    if (obj instanceof Array) {\n        copy = [];\n        for (var i = 0, len = obj.length; i &lt; len; i++) {\n            copy[i] = clone(obj[i]);\n        }\n        return copy;\n    }\n\n    // Handle Object\n    if (obj instanceof Object) {\n        copy = {};\n        for (var attr in obj) {\n            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n        }\n        return copy;\n    }\n\n    throw new Error(\"Unable to copy obj! Its type isn't supported.\");\n}\n</code></pre>\n\n<p>The above function will work adequately for the 6 simple types I mentioned, as long as the data in the objects and arrays form a tree structure. That is, there isn't more than one reference to the same data in the object. For example:</p>\n\n<pre><code>// This would be cloneable:\nvar tree = {\n    \"left\"  : { \"left\" : null, \"right\" : null, \"data\" : 3 },\n    \"right\" : null,\n    \"data\"  : 8\n};\n\n// This would kind-of work, but you would get 2 copies of the \n// inner node instead of 2 references to the same copy\nvar directedAcylicGraph = {\n    \"left\"  : { \"left\" : null, \"right\" : null, \"data\" : 3 },\n    \"data\"  : 8\n};\ndirectedAcyclicGraph[\"right\"] = directedAcyclicGraph[\"left\"];\n\n// Cloning this would cause a stack overflow due to infinite recursion:\nvar cylicGraph = {\n    \"left\"  : { \"left\" : null, \"right\" : null, \"data\" : 3 },\n    \"data\"  : 8\n};\ncylicGraph[\"right\"] = cylicGraph;\n</code></pre>\n\n<p>It will not be able to handle any JavaScript object, but it may be sufficient for many purposes as long as you don't assume that it will just work for anything you throw at it.</p>\n    "},{"t":"What is the scope of variables in JavaScript?","l":"http://stackoverflow.com/questions/500431/what-is-the-scope-of-variables-in-javascript","q":"\n\n<p>What is the scope of variables in javascript? Do they have the same scope inside as opposed to outside a function? Or does it even matter? Also, where are the variables stored if they are defined globally?</p>\n    ","a":"\n<p>I think about the best I can do is give you a bunch of examples to study.\nJavascript programmers are practically ranked by how well they understand scope.\nIt can at times be quite counter-intuitive.</p>\n\n<ol>\n<li><p><strong>A globally-scoped variable</strong></p>\n\n<pre><code>var a = 1;\n\n// global scope\nfunction one() {\n  alert(a);\n}\n</code></pre></li>\n<li><p><strong>Local scope</strong></p>\n\n<pre><code>var a = 1;\n\nfunction two(a) {\n  alert(a);\n}\n\n// local scope again\nfunction three() {\n  var a = 3;\n  alert(a);\n}\n</code></pre></li>\n<li><p><strong>Intermediate</strong>: <em>No such thing as block scope in JavaScript</em> (ES5; ES6 introduces <code>let</code>)</p>\n\n<pre><code>var a = 1;\n\nfunction four() {\n  if (true) {\n    var a = 4;\n  }\n\n  alert(a); // alerts '4', not the global value of '1'\n}\n</code></pre></li>\n<li><p><strong>Intermediate</strong>: <em>Object properties</em></p>\n\n<pre><code>var a = 1;\n\nfunction five() {\n  this.a = 5;\n}\n</code></pre></li>\n<li><p><strong>Advanced</strong>: <em>Closure</em></p>\n\n<pre><code>var a = 1;\n\nvar six = (function() {\n  var a = 6;\n\n  return function() {\n    // JavaScript \"closure\" means I have access to 'a' in here,\n    // because it is defined in the function in which I was defined.\n    alert(a);\n  };\n})();\n</code></pre></li>\n<li><p><strong>Advanced</strong>: <em>Prototype-based scope resolution</em></p>\n\n<pre><code>var a = 1;\n\nfunction seven() {\n  this.a = 7;\n}\n\n// [object].prototype.property loses to\n// [object].property in the lookup chain. For example...\n\n// Won't get reached, because 'a' is set in the constructor above.\nseven.prototype.a = -1;\n\n// Will get reached, even though 'b' is NOT set in the constructor.\nseven.prototype.b = 8;\n</code></pre></li>\n<li><p><strong>Altogether</strong></p>\n\n<pre><code>// These will print 1-8\none();\ntwo(2);\nthree();\nfour();\nalert(new five().a);\nsix();\nalert(new seven().a);\nalert(new seven().b);\n</code></pre>\n\n<hr></li>\n<li><p><strong>Global+Local</strong>: <em>An extra complex Case</em></p>\n\n<pre><code>var x = 5;\n\n(function () {\n    console.log(x);\n    var x = 10;\n    console.log(x); \n})();\n</code></pre>\n\n<p>This will print out <code>undefined</code> and <code>10</code> rather than <code>5</code> and <code>10</code> since JavaScript always moves variable declarations (not initializations) to the top of the scope, making the code equivalent to:</p>\n\n<pre><code>var x = 5;\n\n(function () {\n    var x;\n    console.log(x);\n    x = 10;\n    console.log(x); \n})();\n</code></pre></li>\n<li><p><strong>Catch clause-scoped variable</strong></p>\n\n<pre><code>var e = 5;\nconsole.log(e);\ntry {\n    throw 6;\n} catch (e) {\n    console.log(e);\n}\nconsole.log(e);\n</code></pre>\n\n<p>This will print out <code>5</code>, <code>6</code>, <code>5</code>. Inside the catch clause <code>e</code> shadows global and local variables. But this special scope is only for the caught variable. If you write <code>var f;</code> inside the catch clause, then it's exactly the same as if you had defined it before or after the try-catch block.</p></li>\n</ol>\n    "},{"t":"What is the function of the var keyword and when to use it (or omit it)?","l":"http://stackoverflow.com/questions/1470488/what-is-the-function-of-the-var-keyword-and-when-to-use-it-or-omit-it","q":"\n\n<blockquote>\n  <p><strong><em>NOTE</em></strong><em>: This question was asked from the viewpoint of ECMAScript version 3 or 5. The answers might become outdated with the introduction of new features in the release of ECMAScript 6.</em></p>\n</blockquote>\n\n<p>What exactly is the function of the <code>var</code> keyword in Javascript, and what is the difference between:</p>\n\n<pre><code>var someNumber = 2;\nvar someFunction = function() { doSomething; }\nvar someObject = { }\nvar someObject.someProperty = 5;\n</code></pre>\n\n<p>and:</p>\n\n<pre><code>someNumber = 2;\nsomeFunction = function() { doSomething; }\nsomeObject = { }\nsomeObject.someProperty = 5;\n</code></pre>\n\n<p>When would you use either one, and why/what does it do?</p>\n    ","a":"\n<p>If you're in the global scope then there's no difference.</p>\n\n<p>If you're in a function then <strong><code>var</code></strong> will create a local variable, \"no var\" will look up the scope chain until it finds the variable or hits the global scope (at which point it will create it):</p>\n\n<pre><code>// These are both globals\nvar foo = 1;\nbar = 2;\n\nfunction()\n{\n    var foo = 1; // Local\n    bar = 2;     // Global\n\n    // Execute an anonymous function\n    (function()\n    {\n        var wibble = 1; // Local\n        foo = 2; // Inherits from scope above (creating a closure)\n        moo = 3; // Global\n    }())\n}\n</code></pre>\n\n<p>If you're not doing an assignment then you need to use <code>var</code>:</p>\n\n<pre><code>var x; // Declare x\n</code></pre>\n    "},{"t":"What is the !! (not not) operator in JavaScript?","l":"http://stackoverflow.com/questions/784929/what-is-the-not-not-operator-in-javascript","q":"\n\n<p>I saw some code that seems to use an operator I don't recognize, in the form of two exclamation points, like so: <code>!!</code>. Can someone please tell me what this operator does?</p>\n\n<p>The context in which I saw this was,</p>\n\n<pre><code>this.vertical = vertical !== undefined ? !!vertical : this.vertical;\n</code></pre>\n    ","a":"\n<p>Coerces <code>oObject</code> to boolean. If it was falsey (e.g. 0, <code>null</code>, <code>undefined</code>, etc.), it will be <code>false</code>, otherwise, <code>true</code>.</p>\n\n<pre><code>!oObject  //Inverted boolean\n!!oObject //Non inverted boolean so true boolean representation\n</code></pre>\n\n<p>So <code>!!</code> is not an operator, it's just the <code>!</code> operator twice.</p>\n    "},{"t":"Get current URL in JavaScript?","l":"http://stackoverflow.com/questions/406192/get-current-url-in-javascript","q":"\n\n<p>I am using jQuery. How do I get the path of the current URL and assign it to a variable?</p>\n\n<p>Example URL:</p>\n\n<pre><code>http://localhost/menuname.de?foo=bar&amp;amp;number=0\n</code></pre>\n    ","a":"\n<p>To get the path, you can use:</p>\n\n<pre><code>var pathname = window.location.pathname; // Returns path only\nvar url      = window.location.href;     // Returns full URL\n</code></pre>\n    "},{"t":"Databinding in AngularJS","l":"http://stackoverflow.com/questions/9682092/databinding-in-angularjs","q":"\n\n<p>How does databinding work in the AngularJS framework?</p>\n\n<p>I haven't found technical details on <a href=\"http://angularjs.org\">their site</a>. It's more or less clear how it works when data is propagated from view to model. But how does AngularJS track changes of model properties without setters and getters? I found that there are <a href=\"http://stackoverflow.com/questions/1029241/javascript-object-watch-for-all-browsers\">JavaScript watchers</a> that may do this work. But they are not supported in <a href=\"http://en.wikipedia.org/wiki/Internet_Explorer_6\">Internet&nbsp;Explorer&nbsp;6</a> and <a href=\"http://en.wikipedia.org/wiki/Internet_Explorer_7\">Internet&nbsp;Explorer&nbsp;7</a>. So how does AngularJS know that I changed for example:</p>\n\n<pre><code>myobject.myproperty=\"new value\";\n</code></pre>\n\n<p>and reflect this change on a view?</p>\n    ","a":"\n<p>AngularJS remembers the value and compares it to previous value. This is basic dirty-checking. If there is a change in value, then it fires the change event. </p>\n\n<p>The <code>$apply()</code> method, which is what you call when you are transitioning from a non-AngularJS world into an AngularJS world, calls <code>$digest()</code>. A digest is just plain old dirty-checking. It works on all browsers and is totally predictable.</p>\n\n<p>To contrast dirty-checking (AngularJS) vs change listeners (<a href=\"http://en.wikipedia.org/wiki/KnockoutJS\">KnockoutJS</a> and <a href=\"https://en.wikipedia.org/wiki/Backbone.js\">Backbone.js</a>): While dirty-checking may seem simple, and even inefficient (I will address that later), it turns out that it is semantically correct all the time, while change listeners have lots of weird corner cases and need things like dependency tracking to make it more semantically correct. KnockoutJS dependency tracking is a clever feature for a problem which AngularJS does not have.</p>\n\n<h1>Issues with change listeners:</h1>\n\n<ul>\n<li>Syntax is atrocious, since browsers do not support it natively. Yes, there are proxies, but they are not semantically correct in all cases, and of course no proxies on old browsers. The bottom line is that dirty-checking allows you to do <a href=\"http://en.wikipedia.org/wiki/Plain_Old_Java_Object\">POJO</a>, whereas KnockoutJS and Backbone.js force you to inherit from their classes, and access your data through accessors.</li>\n<li>Change coalescence. Suppose you have an array of items. Say you want to add items into an array, as you are looping to add, each time you add you are firing events on change, which is rendering the UI. This is very bad for performance. What you want is to update the UI only once, at the end. The change events are too fine grained.</li>\n<li>Change listeners fire immediately on a setter, which is a problem, since the change listener can further change data, which fires more change events. This is bad since on your stack you may have several change events happening at once. Suppose you have two arrays which need to be kept in sync for whatever reason. You can only add to one or the other, but each time you add you fire a change event, which now has an inconsistent view of the world. This is a very similar problem to thread locking, which JavaScript avoids since each callback executes exclusively and to completion. Change events break this since setters can have far reaching consequences which are not intended and non obvious, which creates the thread problem all over again. It turns out that what you want to do is to delay the listener execution, and guarantee, that only one listener runs at a time, hence any code is free to change data, and it knows that no other code runs while it is doing so.</li>\n</ul>\n\n<h1>What about performance?</h1>\n\n<p>So it may seem that we are slow, since dirty-checking is inefficient. This is where we need to look at real numbers rather than just have theoretical arguments, but first let's define some constraints.</p>\n\n<p>Humans are:</p>\n\n<ul>\n<li><p><em>Slow</em> — Anything faster than 50&nbsp;ms is imperceptible to humans and thus can be considered as \"instant\".</p></li>\n<li><p><em>Limited</em> — You can't really show more than about 2000 pieces of information to a human on a single page. Anything more than that is really bad UI, and humans can't process this anyway.</p></li>\n</ul>\n\n<p>So the real question is this: How many comparisons can you do on a browser in 50&nbsp;ms? This is a hard question to answer as many factors come into play, but here is a test case: <a href=\"http://jsperf.com/angularjs-digest/6\">http://jsperf.com/angularjs-digest/6</a> which creates 10,000 watchers. On a modern browser this takes just under 6&nbsp;ms. On <a href=\"http://en.wikipedia.org/wiki/Internet_Explorer_8\">Internet&nbsp;Explorer&nbsp;8</a> it takes about 40&nbsp;ms. As you can see, this is not an issue even on slow browsers these days. There is a caveat: the comparisons need to be simple to fit into the time limit... Unfortunately it is way too easy to add a slow comparison into AngularJS, so it is easy to build slow applications when you don't know what you are doing. But we hope to have an answer by providing an instrumentation module, which would show you which are the slow comparisons.</p>\n\n<p>It turns out that video games and GPUs use the dirty-checking approach, specifically because it is consistent. As long as they get over the monitor refresh rate (typically 50-60 hz, or every 16.6-20 ms), any performance over that is a waste, so you're better off drawing more stuff, than getting FPS higher.</p>\n    "},{"t":"Why does ++[[]][+[]]+[+[]] return the string “10”?","l":"http://stackoverflow.com/questions/7202157/why-does-return-the-string-10","q":"\n\n<p>This is valid and returns the string <code>\"10\"</code> in JavaScript (<a href=\"http://sla.ckers.org/forum/read.php?24,33349,33405\">more examples here</a>):</p>\n\n<pre><code>++[[]][+[]]+[+[]]\n</code></pre>\n\n<p>Why? What is happening here?</p>\n    ","a":"\n<p>If we split it up, the mess is equal to:</p>\n\n<pre><code>++[[]][+[]]\n+\n[+[]]\n</code></pre>\n\n<p>In JavaScript, it is true that <code>+[] === 0</code>. <code>+</code> converts something into a number, and in this case it will come down to <code>+\"\"</code> or <code>0</code> (see specification details below).</p>\n\n<p>Therefore, we can simplify it (<code>++</code> has precendence over <code>+</code>):</p>\n\n<pre><code>++[[]][0]\n+\n[0]\n</code></pre>\n\n<p>Because <code>[[]][0]</code> means: get the first element from <code>[[]]</code>, it is true that:</p>\n\n<ul>\n<li><code>[[]][0]</code> returns the inner array (<code>[]</code>). Due to references it's wrong to say <code>[[]][0] === []</code>, but let's call the inner array <code>A</code> to avoid the wrong notation.</li>\n<li><code>++[[]][0] == A + 1</code>, since <code>++</code> means 'increment by one'.</li>\n<li><code>++[[]][0] === +(A + 1)</code>; in other words, it will always be a number (<code>+1</code> does not necessarily return a number, whereas <code>++</code> always does - thanks to Tim Down for pointing this out).</li>\n</ul>\n\n<p>Again, we can simplify the mess into something more legible. Let's substitute <code>[]</code> back for <code>A</code>:</p>\n\n<pre><code>+([] + 1)\n+\n[0]\n</code></pre>\n\n<p>In JavaScript, this is true as well: <code>[] + 1 === \"1\"</code>,  because <code>[] == \"\"</code> (joining an empty array), so:</p>\n\n<ul>\n<li><code>+([] + 1) === +(\"\" + 1)</code>, and</li>\n<li><code>+(\"\" + 1) === +(\"1\")</code>, and</li>\n<li><code>+(\"1\") === 1</code></li>\n</ul>\n\n<p>Let's simplify it even more:</p>\n\n<pre><code>1\n+\n[0]\n</code></pre>\n\n<p>Also, this is true in JavaScript: <code>[0] == \"0\"</code>, because it's joining an array with one element. Joining will concatenate the elements separated by <code>,</code>. With one element, you can deduce that this logic will result in the first element itself.</p>\n\n<p>So, in the end we obtain (number + string = string):</p>\n\n<pre><code>1\n+\n\"0\"\n\n=== \"10\" // Yay!\n</code></pre>\n\n<hr>\n\n<p>Specification details for <code>+[]</code>:</p>\n\n<p>This is quite a maze, but to do <code>+[]</code>, first it is being converted to a string because that's what <code>+</code> says:</p>\n\n<blockquote>\n  <p>11.4.6 Unary + Operator</p>\n  \n  <p>The unary + operator converts its operand to Number type.</p>\n  \n  <p>The production UnaryExpression : + UnaryExpression is evaluated as follows:</p>\n  \n  <ol>\n  <li><p>Let expr be the result of evaluating UnaryExpression.</p></li>\n  <li><p>Return ToNumber(GetValue(expr)).</p></li>\n  </ol>\n</blockquote>\n\n<p><code>ToNumber()</code> says:</p>\n\n<blockquote>\n  <p>Object</p>\n  \n  <p>Apply the following steps:</p>\n  \n  <ol>\n  <li><p>Let primValue be ToPrimitive(input argument, hint String).</p></li>\n  <li><p>Return ToString(primValue).</p></li>\n  </ol>\n</blockquote>\n\n<p><code>ToPrimitive()</code> says:</p>\n\n<blockquote>\n  <p>Object</p>\n  \n  <p>Return a default value for the Object. The default value of an object is retrieved by calling the [[DefaultValue]] internal method of the object, passing the optional hint PreferredType. The behaviour of the [[DefaultValue]] internal method is defined by this specification for all native ECMAScript objects in 8.12.8.</p>\n</blockquote>\n\n<p><code>[[DefaultValue]]</code> says:</p>\n\n<blockquote>\n  <p>8.12.8 [[DefaultValue]] (hint)</p>\n  \n  <p>When the [[DefaultValue]] internal method of O is called with hint String, the following steps are taken:</p>\n  \n  <ol>\n  <li><p>Let toString be the result of calling the [[Get]] internal method of object O with argument \"toString\".</p></li>\n  <li><p>If IsCallable(toString) is true then,</p></li>\n  </ol>\n  \n  <p>a. Let str be the result of calling the [[Call]] internal method of toString, with O as the this value and an empty argument list.</p>\n  \n  <p>b. If str is a primitive value, return str.</p>\n</blockquote>\n\n<p>The <code>.toString</code> of an array says:</p>\n\n<blockquote>\n  <p>15.4.4.2 Array.prototype.toString ( )</p>\n  \n  <p>When the toString method is called, the following steps are taken:</p>\n  \n  <ol>\n  <li><p>Let array be the result of calling ToObject on the this value.</p></li>\n  <li><p>Let func be the result of calling the [[Get]] internal method of array with argument \"join\".</p></li>\n  <li><p>If IsCallable(func) is false, then let func be the standard built-in method Object.prototype.toString (15.2.4.2).</p></li>\n  <li><p>Return the result of calling the [[Call]] internal method of func providing array as the this value and an empty arguments list.</p></li>\n  </ol>\n</blockquote>\n\n<p>So <code>+[]</code> comes down to <code>+\"\"</code>, because <code>[].join() === \"\"</code>.</p>\n\n<p>Again, the <code>+</code> is defined as:</p>\n\n<blockquote>\n  <p>11.4.6 Unary + Operator</p>\n  \n  <p>The unary + operator converts its operand to Number type.</p>\n  \n  <p>The production UnaryExpression : + UnaryExpression is evaluated as follows:</p>\n  \n  <ol>\n  <li><p>Let expr be the result of evaluating UnaryExpression.</p></li>\n  <li><p>Return ToNumber(GetValue(expr)).</p></li>\n  </ol>\n</blockquote>\n\n<p><code>ToNumber</code> is defined for <code>\"\"</code> as:</p>\n\n<blockquote>\n  <p>The MV of StringNumericLiteral ::: [empty] is 0.</p>\n</blockquote>\n\n<p>So <code>+\"\" === 0</code>, and thus <code>+[] === 0</code>.</p>\n    "},{"t":"Is Safari on iOS 6 caching $.ajax results?","l":"http://stackoverflow.com/questions/12506897/is-safari-on-ios-6-caching-ajax-results","q":"\n\n<p>Since the upgrade to iOS 6, we are seeing Safari's web view take the liberty of caching <code>$.ajax</code> calls. This is in the context of a PhoneGap application so it is using the Safari WebView. Our <code>$.ajax</code> calls are <code>POST</code> methods and we have cache set to false <code>{cache:false}</code>, but still this is happening. We tried manually adding a <code>TimeStamp</code> to the headers but it did not help.</p>\n\n<p>We did more research and found that Safari is only returning cached results for web services that have a function signature that is static and does not change from call to call.  For instance, imagine a function called something like:</p>\n\n<pre><code>getNewRecordID(intRecordType)\n</code></pre>\n\n<p>This function receives the same input parameters over and over again, but the data it returns should be different every time.</p>\n\n<p>Must be in Apple's haste to make iOS 6 zip along impressively they got too happy with the cache settings.  Has anyone else seen this behavior on iOS 6? If so, what exactly is causing it?</p>\n\n<hr>\n\n<p>The workaround that we found was to modify the function signature to be something like this:</p>\n\n<pre><code>getNewRecordID(intRecordType, strTimestamp)\n</code></pre>\n\n<p>and then always pass in a <code>TimeStamp</code> parameter as well, and just discard that value on the server side.  This works around the issue.  I hope this helps some other poor soul who spends 15 hours on this issue like I did!</p>\n    ","a":"\n<p>After a bit of investigation, turns out that Safari on iOS6 will cache POSTs that have either no Cache-Control headers or even \"Cache-Control: max-age=0\".</p>\n\n<p>The only way I've found of preventing this caching from happening at a global level rather than having to hack random querystrings onto the end of service calls is to set \"Cache-Control: no-cache\".</p>\n\n<p>So:</p>\n\n<ul>\n<li>No Cache-Control or Expires headers = iOS6 Safari will cache</li>\n<li>Cache-Control max-age=0 and an immediate Expires = iOS6 Safari will cache</li>\n<li>Cache-Control: no-cache = iOS6 Safari will NOT cache</li>\n</ul>\n\n<p>I suspect that Apple is taking advantage of this from the HTTP spec in section 9.5 about POST:</p>\n\n<blockquote>\n  <p>Responses to this method are not cacheable, unless the response\n     includes appropriate Cache-Control or Expires header fields. However,\n     the 303 (See Other) response can be used to direct the user agent to\n     retrieve a cacheable resource.</p>\n</blockquote>\n\n<p>So in theory you can cache POST responses...who knew. But no other browser maker has ever thought it would be a good idea until now. But that does NOT account for the caching when no Cache-Control or Expires headers are set, only when there are some set. So it must be a bug.</p>\n\n<p>Below is what I use in the right bit of my Apache config to target the whole of my API because as it happens I don't actually want to cache anything, even gets. What I don't know is how to set this just for POSTs.</p>\n\n<pre><code>Header set Cache-Control \"no-cache\"\n</code></pre>\n\n<p>Update: Just noticed that I didn't point out that it is only when the POST is the same, so change any of the POST data or URL and you're fine. So you can as mentioned elsewhere just add some random data to the URL or a bit of POST data.</p>\n\n<p>Update: You can limit the \"no-cache\" just to POSTs if you wish like this in Apache:</p>\n\n<pre><code>SetEnvIf Request_Method \"POST\" IS_POST\nHeader set Cache-Control \"no-cache\" env=IS_POST\n</code></pre>\n    "},{"t":"Parse JSON in JavaScript? [duplicate]","l":"http://stackoverflow.com/questions/4935632/parse-json-in-javascript","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/45015/safely-turning-a-json-string-into-an-object\" dir=\"ltr\">Safely turning a JSON string into an object</a>\n                <span class=\"question-originals-answer-count\">\n                    15 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I want to parse a JSON string in JavaScript. The response is something like</p>\n\n<pre><code>var response = '{\"result\":true,\"count\":1}';\n</code></pre>\n\n<p>How can I get the values <code>result</code> and <code>count</code> from this?</p>\n    ","a":"\n<p>Most browsers support <a href=\"http://msdn.microsoft.com/en-us/library/cc836466%28v=vs.85%29.aspx\"><code>JSON.parse()</code></a>, which is defined in ECMA-262 5th Edition (the specification that JS is based on).  Its usage is simple:</p>\n\n<pre><code>var json = '{\"result\":true,\"count\":1}',\n    obj = JSON.parse(json);\n\nalert(obj.count);\n</code></pre>\n\n<p>For the browsers that don't you can implement it using <a href=\"https://github.com/douglascrockford/JSON-js/blob/master/json2.js\">json2.js</a>.</p>\n\n<p>As noted in the comments, if you're already using jQuery, there is a <code>$.parseJSON</code> function that maps to <code>JSON.parse</code> if available or a form of <code>eval</code> in older browsers. However, this performs additional, unnecessary checks that are also performed by <code>JSON.parse</code>, so for the best all round performance I'd recommend using it like so:</p>\n\n<pre><code>var json = '{\"result\":true,\"count\":1}',\n    obj = JSON &amp;&amp; JSON.parse(json) || $.parseJSON(json);\n</code></pre>\n\n<p>This will ensure you use native <code>JSON.parse</code> immediately, rather than having jQuery perform sanity checks on the string before passing it to the native parsing function.</p>\n    "},{"t":"Creating multiline strings in JavaScript","l":"http://stackoverflow.com/questions/805107/creating-multiline-strings-in-javascript","q":"\n\n<p>I have the following code in Ruby. I want to convert this code into JavaScript. what's the equivalent code in JS?</p>\n\n<pre><code>text = &lt;&lt;\"HERE\"\nThis\nIs\nA\nMultiline\nString\nHERE\n</code></pre>\n    ","a":"\n<p>Javascript doesn't have a here-document syntax. You can escape the literal newline, however, which comes close:</p>\n\n<pre><code>\"foo \\\nbar\"\n</code></pre>\n    "},{"t":"When to Use Double or Single Quotes in JavaScript","l":"http://stackoverflow.com/questions/242813/when-to-use-double-or-single-quotes-in-javascript","q":"\n\n<p><code>console.log(\"double\");</code> <strong>vs</strong> <code>console.log('single');</code></p>\n\n<p>I see more and more JavaScript libraries out there using single quotes when handling strings. What are the reasons to use one over the other? I thought they're pretty much interchangeable.</p>\n    ","a":"\n<p>I wouldn't say there is a preferred method. You can use either. However, if you are using one form of quote in the string, you might want to use the other as the literal.</p>\n\n<pre><code>alert('Say \"Hello\"');\nalert(\"Say 'Hello'\");\n</code></pre>\n\n<p>The most likely reason is programmer preference / API consistency.</p>\n    "},{"t":"Modify the URL without reloading the page","l":"http://stackoverflow.com/questions/824349/modify-the-url-without-reloading-the-page","q":"\n\n<p>Is there any way I can modify the URL of the current page without reloading the page?</p>\n\n<p>I would like to access the portion <strong>before</strong> the # hash if possible.</p>\n\n<p>I only need to change the portion <strong>after</strong> the domain, so its not like I'm violating cross-domain policies.</p>\n\n<pre><code> window.location.href = \"www.mysite.com/page2.php\";  // sadly this reloads\n</code></pre>\n    ","a":"\n<p>This can now be done in Chrome, Safari, FF4+, and IE10pp4+!</p>\n\n<p>See this question's answer for more info:\n<a href=\"http://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page\">Updating address bar with new URL without hash or reloading the page</a></p>\n\n<p>Example:</p>\n\n<pre><code> function processAjaxData(response, urlPath){\n     document.getElementById(\"content\").innerHTML = response.html;\n     document.title = response.pageTitle;\n     window.history.pushState({\"html\":response.html,\"pageTitle\":response.pageTitle},\"\", urlPath);\n }\n</code></pre>\n\n<p>You can then use <code>window.onpopstate</code> to detect the back/forward button navigation:</p>\n\n<pre><code>window.onpopstate = function(e){\n    if(e.state){\n        document.getElementById(\"content\").innerHTML = e.state.html;\n        document.title = e.state.pageTitle;\n    }\n};\n</code></pre>\n\n<hr>\n\n<p>For a more in-depth look at manipulating browser history see <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history\">this MDN article</a>.</p>\n    "},{"t":"How to check for “undefined” in JavaScript? [duplicate]","l":"http://stackoverflow.com/questions/3390396/how-to-check-for-undefined-in-javascript","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/27509/detecting-an-undefined-object-property\" dir=\"ltr\">Detecting an undefined object property</a>\n                <span class=\"question-originals-answer-count\">\n                    29 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>What is the most appropriate way to test if a variable is undefined in JavaScript? I've seen several possible ways:</p>\n\n<pre><code>if (window.myVariable)\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>if (typeof(myVariable) != \"undefined\")\n</code></pre>\n\n<p>Or</p>\n\n<pre><code>if (myVariable) //This throws an error if undefined. Should this be in Try/Catch?\n</code></pre>\n    ","a":"\n<p>If you are interested in finding out whether a variable has been declared regardless of its value, then using the <code>in</code> operator is the safest way to go. Consider this example.</p>\n\n<pre><code>// global scope\nvar theFu; // theFu has been declared, but its value is undefined\ntypeof theFu; // \"undefined\"\n</code></pre>\n\n<p>But this may not be the intended result for some cases, since the variable or property was declared but just not initialized. Use the <code>in</code> operator for a more robust check.</p>\n\n<pre><code>\"theFu\" in window; // true\n\"theFoo\" in window; // false\n</code></pre>\n\n<p>If you are interested in knowing whether the variable hasn't been declared or has the value <code>undefined</code>, then use the <code>typeof</code> operator.</p>\n\n<pre><code>if (typeof myVar != 'undefined')\n</code></pre>\n\n<p>The <code>typeof</code> operator is guaranteed to return a string. Direct comparisons against <code>undefined</code> are troublesome as <code>undefined</code> can be overwritten. </p>\n\n<pre><code>window.undefined = \"omg\";\n\"omg\" == undefined // true\n</code></pre>\n\n<p>As @CMS pointed out, this has been patched in ECMAScript 5th ed., and <code>undefined</code> is non-writable.</p>\n\n<p><code>if (window.myVar)</code> will also include these falsy values, so it's not very robust:</p>\n\n<pre>false\n0\n\"\"\nNaN\nnull\nundefined\n</pre>\n\n<p>Thanks to @CMS for pointing out that your third case - <code>if (myVariable)</code> can also throw an error in two cases. The first is when the variable hasn't been defined which throws a <code>ReferenceError</code>. </p>\n\n<pre><code>// abc was never declared.\nif (abc) {\n    // ReferenceError: abc is not defined\n} \n</code></pre>\n\n<p>The other case is when the variable has been defined, but has a getter function which throws an error when invoked. For example,</p>\n\n<pre><code>// or it's a property that can throw an error\nObject.defineProperty(window, \"myVariable\", { \n    get: function() { throw new Error(\"W00t?\"); }, \n    set: undefined \n});\nif (myVariable) {\n    // Error: W00t?\n}\n</code></pre>\n    "},{"t":"Best practice: escape, or encodeURI / encodeURIComponent","l":"http://stackoverflow.com/questions/75980/best-practice-escape-or-encodeuri-encodeuricomponent","q":"\n\n<p>When encoding a query string to be sent to a web server - what is the best practice to use from javascript:</p>\n\n<p>Use escape:</p>\n\n<pre><code>escape(\"% +&amp;=\");\n</code></pre>\n\n<p>OR</p>\n\n<p>use encodeURI() / encodeURIComponent()</p>\n\n<pre><code>encodeURI(\"http://www.google.com?var1=value1&amp;var2=value2\");\n\nencodeURIComponent(\"var1=value1&amp;var2=value2\");\n</code></pre>\n    ","a":"\n<h1>escape()</h1>\n\n<p>Don't use it, as it has been deprecated since ECMAScript v3.</p>\n\n<h1>encodeURI()</h1>\n\n<p>Use encodeURI when you want a working URL. Make this call:</p>\n\n<pre><code>encodeURI(\"http://www.google.com/a file with spaces.html\")\n</code></pre>\n\n<p>to get:</p>\n\n<pre>http://www.google.com/a%20file%20with%20spaces.html\n</pre>\n\n<p>Don't call encodeURIComponent since it would destroy the URL and return</p>\n\n<pre>http%3A%2F%2Fwww.google.com%2Fa%20file%20with%20spaces.html\n</pre>\n\n<h1>encodeURIComponent()</h1>\n\n<p>Use encodeURIComponent when you want to encode a URL parameter.</p>\n\n<pre><code>param1 = encodeURIComponent(\"http://xyz.com/?a=12&amp;b=55\")\n</code></pre>\n\n<p>Then you may create the URL you need:</p>\n\n<pre><code>url = \"http://domain.com/?param1=\" + param1 + \"&amp;param2=99\";\n</code></pre>\n\n<p>And you will get this complete URL:</p>\n\n<p><code>http://www.domain.com/?param1=http%3A%2F%2Fxyz.com%2F%Ffa%3D12%26b%3D55&amp;param2=99</code></p>\n\n<p>Note that encodeURIComponent does not escape the ' character. A common bug is to use it to create html attributes such as <code>href='MyUrl'</code>, which could suffer an injection bug. If you are constructing html from strings, either use \" instead of ' for attribute quotes, or add an extra layer of encoding (' can be encoded as %27).</p>\n\n<p>For more information on this type of encoding you can check: <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">http://en.wikipedia.org/wiki/Percent-encoding</a></p>\n    "},{"t":"Enums in JavaScript?","l":"http://stackoverflow.com/questions/287903/enums-in-javascript","q":"\n\n<p>What is the preferred syntax for defining enums in JavaScript? Something like:</p>\n\n<pre><code>my.namespace.ColorEnum = {\n    RED : 0,\n    GREEN : 1,\n    BLUE : 2\n}\n\n// later on\n\nif(currentColor == my.namespace.ColorEnum.RED) {\n   // whatever\n}\n</code></pre>\n\n<p>Or is there a more preferable idiom?</p>\n    ","a":"\n<p>This isn't much of an answer, but I'd say that works just fine, personally</p>\n\n<p>Having said that, since it doesn't matter what the values are (you've used 0, 1, 2), I'd use a meaningful string in case you ever wanted to output the current value.</p>\n    "},{"t":"JavaScript closure inside loops – simple practical example","l":"http://stackoverflow.com/questions/750486/javascript-closure-inside-loops-simple-practical-example","q":"\n\n<p>Closures are one of those things that have been discussed a lot on SO, but this situation pops up a lot for me and I'm always left scratching my head.</p>\n\n<pre><code>var funcs = {};\nfor (var i = 0; i &lt; 3; i++) {          // let's create 3 functions\n    funcs[i] = function() {            // and store them in funcs\n        console.log(\"My value: \" + i); // each should log its value.\n    };\n}\nfor (var j = 0; j &lt; 3; j++) {\n    funcs[j]();                        // and now let's run each one to see\n}\n</code></pre>\n\n<p>It outputs this:</p>\n\n<blockquote>\n  <p>My value: 3<br>\n  My value: 3<br>\n  My value: 3</p>\n</blockquote>\n\n<p>Whereas I'd like it to output:</p>\n\n<blockquote>\n  <p>My value: 0<br>\n  My value: 1<br>\n  My value: 2</p>\n</blockquote>\n\n<p>What's the solution to this basic problem?</p>\n    ","a":"\n<p>Well, the problem is that the variable i, within each of your anonymous functions, is bound to the same variable outside of the function.</p>\n\n<p>What you want to do is bind the variable within each function to a separate, unchanging value outside of the function:</p>\n\n<pre><code>var funcs = [];\n\nfunction createfunc(i) {\n    return function() { console.log(\"My value: \" + i); };\n}\n\nfor (var i = 0; i &lt; 3; i++) {\n    funcs[i] = createfunc(i);\n}\n\nfor (var j = 0; j &lt; 3; j++) {\n    funcs[j]();                        // and now let's run each one to see\n}\n</code></pre>\n\n<p>Since there is no block scope in JavaScript - only function scope - by wrapping the function creation in a new function, you ensure that the value of \"i\" remains as you intended.</p>\n\n<hr>\n\n<p><strong>Update:</strong> with the relatively widespread availability of the <code>Array.prototype.forEach</code> function (in 2015), it's worth noting that in those situations involving iteration primarily over an array of values, <code>.forEach()</code> provides a clean, natural way to get a distinct closure for every iteration. That is, assuming you've got some sort of array containing values (DOM references, objects, whatever), and the problem arises of setting up callbacks specific to each element, you can do this:</p>\n\n<pre><code>var someArray = [ /* whatever */ ];\n// ...\nsomeArray.forEach(function(arrayElement) {\n  // ... code code code for this one element\n  someAsynchronousFunction(arrayElement, function() {\n    arrayElement.doSomething();\n  });\n});\n</code></pre>\n\n<p>The idea is that each invocation of the callback function used with the <code>.forEach</code> loop will be its own closure. The parameter passed in to that handler is the array element specific to that particular step of the iteration. If it's used in an asynchronous callback, it won't collide with any of the other callbacks established at other steps of the iteration.</p>\n\n<p>If you happen to be working in jQuery, the <code>$.each()</code> function gives you a similar capability.</p>\n\n<p><strong>Update 2:</strong>\nECMAScript 6 (ES6), the newest version of JavaScript, is now starting to be implemented in many evergreen browsers and backend systems. There are also transpilers like <a href=\"http://babeljs.io/\">Babel</a> that will convert ES6 to ES5 to allow usage of new features on older systems.</p>\n\n<p>ES6 introduces new <code>let</code> and <code>const</code> keywords that are scoped differently than <code>var</code>-based variables. For example, in a loop with a <code>let</code>-based index, each iteration through the loop will have a new value of <code>i</code> where each value is scoped inside the loop, so your code would work as you expect. There are many resources, but I'd recommend <a href=\"http://www.2ality.com/2015/02/es6-scoping.html\">2ality's block-scoping post</a> as a great source of information.</p>\n\n<pre><code>for (let i = 0; i &lt; 3; i++) {\n    funcs[i] = function() {\n        console.log(\"My value: \" + i);\n    };\n}\n</code></pre>\n    "},{"t":"Length of a JavaScript object (that is, associative array)","l":"http://stackoverflow.com/questions/5223/length-of-a-javascript-object-that-is-associative-array","q":"\n\n<p>If I have a JavaScript associative array, say:</p>\n\n<pre><code>var myArray = new Object();\nmyArray[\"firstname\"] = \"Gareth\";\nmyArray[\"lastname\"] = \"Simpson\";\nmyArray[\"age\"] = 21;\n</code></pre>\n\n<p>Is there a built-in or accepted best practice way to get the length of this array?</p>\n\n<p>JavaScript does not have associative arrays -- it only has objects, <em>which can be used as a notion of associative arrays</em>.**</p>\n    ","a":"\n<p>The most robust answer (i.e. that captures the intent of what you're trying to do while causing the fewest bugs) would be:</p>\n\n<pre><code>Object.size = function(obj) {\n    var size = 0, key;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n};\n\n// Get the size of an object\nvar size = Object.size(myArray);\n</code></pre>\n\n<p>There's a sort of convention in JavaScript that you <a href=\"http://stackoverflow.com/questions/10757455/object-prototype-is-verboten\">don't add things to Object.prototype</a>, because it can break enumerations in various libraries. Adding methods to Object is usually safe, though.</p>\n    "},{"t":"Why is using “for…in” with array iteration such a bad idea?","l":"http://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-such-a-bad-idea","q":"\n\n<p>I've been told not to use \"for...in\" with arrays in JavaScript. Why not?</p>\n    ","a":"\n<p>The reason is that one construct...</p>\n\n<pre><code>var a = [];\na[5] = 5; // Perfectly legal JavaScript that resizes the array.\n\nfor (var i=0; i&lt;a.length; i++) {\n    // Iterates over numeric indexes from 0 to 5, as everyone expects.\n}\n</code></pre>\n\n<p>can sometimes be totally different from the other...</p>\n\n<pre><code>var a = [];\na[5] = 5;\nfor (var x in a) {\n    // Shows only the explicitly set index of \"5\", and ignores 0-4\n}\n</code></pre>\n\n<p>Also consider that <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> libraries might do things like this, which will affect any array you create:</p>\n\n<pre><code>// Somewhere deep in your JavaScript library...\nArray.prototype.foo = 1;\n\n// Now you have no idea what the below code will do.\nvar a = [1,2,3,4,5];\nfor (var x in a){\n    // Now foo is a part of EVERY array and \n    // will show up here as a value of 'x'.\n}\n</code></pre>\n    "},{"t":"Convert JavaScript String to be all lower case?","l":"http://stackoverflow.com/questions/154862/convert-javascript-string-to-be-all-lower-case","q":"\n\n<p>How can I convert a JavaScript string value to be in all lower case letters?</p>\n\n<p>Example: \"Your Name\" to \"your name\"</p>\n    ","a":"\n<pre><code>\"Your Name\".toLowerCase();\n</code></pre>\n    "},{"t":"Check if object is array?","l":"http://stackoverflow.com/questions/4775722/check-if-object-is-array","q":"\n\n<p>I'm trying to write a function that either accepts a list of strings, or a single string. If it's a string, then I want to convert it to an array with just the one item. Then I can loop over it without fear of an error. </p>\n\n<p>So how do I check if the variable is an array?</p>\n\n<hr>\n\n<p>I've rounded up the various solutions below and created a <a href=\"http://jsperf.com/js-isarray-comparison\">jsperf test</a>.</p>\n    ","a":"\n<p>The method given in the ECMAScript standard to find the class of Object is to use the <code>toString</code> method from <code>Object.prototype</code>.</p>\n\n<pre><code>if( Object.prototype.toString.call( someVar ) === '[object Array]' ) {\n    alert( 'Array!' );\n}\n</code></pre>\n\n<p>Or you could use <code>typeof</code> to test if it is a String:</p>\n\n<pre><code>if( typeof someVar === 'string' ) {\n    someVar = [ someVar ];\n}\n</code></pre>\n\n<p>Or if you're not concerned about performance, you could just do a <code>concat</code> to a new empty Array.</p>\n\n<pre><code>someVar = [].concat( someVar );\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> Check out a <a href=\"http://blog.niftysnippets.org/2010/09/say-what.html\">thorough treatment</a> from <a href=\"http://stackoverflow.com/users/157247/t-j-crowder\">@T.J. Crowder's</a> blog, as posted in his comment below.</p>\n    "},{"t":"How to move an element into another element?","l":"http://stackoverflow.com/questions/1279957/how-to-move-an-element-into-another-element","q":"\n\n<p>I would like to move one DIV element inside another. For example, I want to move this (including all children):</p>\n\n<pre><code>&lt;div id=\"source\"&gt;\n...\n&lt;/div&gt;\n</code></pre>\n\n<p>into this:</p>\n\n<pre><code>&lt;div id=\"destination\"&gt;\n...\n&lt;/div&gt;\n</code></pre>\n\n<p>so that I have this:</p>\n\n<pre><code>&lt;div id=\"destination\"&gt;\n  &lt;div id=\"source\"&gt;\n    ...\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n    ","a":"\n<p>You may want to use the <a href=\"http://api.jquery.com/appendTo/\"><code>appendTo</code></a> function (which adds to the end of the element):</p>\n\n<pre><code>$(\"#source\")\n    .appendTo(\"#destination\");\n</code></pre>\n\n<p>Alternatively you could use the <a href=\"http://api.jquery.com/prependTo/\"><code>prependTo</code></a> function (which adds to the beginning of the element):</p>\n\n<pre><code>$(\"#source\")\n    .prependTo(\"#destination\");\n</code></pre>\n    "},{"t":"Serializing to JSON in jQuery","l":"http://stackoverflow.com/questions/191881/serializing-to-json-in-jquery","q":"\n\n<p>I need to serialize an object to JSON. I'm using jQuery. Is there a \"standard\" way to do this?</p>\n\n<p>My specific situation: I have an array defined something like this:</p>\n\n<pre><code>var countries = new Array();\ncountries[0] = 'ga';\ncountries[1] = 'cd';\n...\n</code></pre>\n\n<p>and I need to turn this into a string to pass to <code>$.ajax()</code> like this:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: \"Concessions.aspx/GetConcessions\",\n    data: \"{'countries':['ga','cd']}\",\n...\n</code></pre>\n    ","a":"\n<p><a href=\"https://github.com/douglascrockford/JSON-js\">JSON-js</a> - JSON in JavaScript.</p>\n\n<p>To convert an object to a string, use <code>JSON.stringify</code>:</p>\n\n<pre><code>var json_text = JSON.stringify(your_object, null, 2);\n</code></pre>\n\n<p>To convert a JSON string to object, use <code>JSON.parse</code>:</p>\n\n<pre><code>var your_object = JSON.parse(json_text);\n</code></pre>\n\n<p>It was recently recommended by <a href=\"http://ejohn.org/blog/ecmascript-5-strict-mode-json-and-more/\">John Resig</a>:</p>\n\n<blockquote>\n  <p>...PLEASE start migrating\n  your JSON-using applications over to\n  Crockford's json2.js. It is fully\n  compatible with the ECMAScript 5\n  specification and gracefully degrades\n  if a native (faster!) implementation\n  exists.</p>\n  \n  <p>In fact, I just landed a change in jQuery yesterday that utilizes the\n  JSON.parse method if it exists, now\n  that it has been completely specified.</p>\n</blockquote>\n\n<p>I tend to trust what he says on JavaScript matters :)</p>\n\n<p><a href=\"http://caniuse.com/json\">Newer browsers</a> support the <a href=\"http://ecma262-5.com/ELS5_Section_15.htm#Section_15.12\">JSON object</a> natively. The current version of Crockford's JSON library will only define <code>JSON.stringify</code> and <code>JSON.parse</code> if they're not already defined, leaving any browser native implementation intact.</p>\n    "},{"t":"How does Trello access the user's clipboard?","l":"http://stackoverflow.com/questions/17527870/how-does-trello-access-the-users-clipboard","q":"\n\n<p>When you hover over a card in <a href=\"http://en.wikipedia.org/wiki/Trello\">Trello</a> and press <kbd>Ctrl</kbd>+<kbd>C</kbd>, the URL of this card is copied to the clipboard. How do they do this?</p>\n\n<p>As far as I can tell, there is no Flash movie involved. I've got <a href=\"http://en.wikipedia.org/wiki/Flashblock\">Flashblock</a> installed, and the Firefox network tab shows no Flash movie loaded. (That's the usual method, for example, by ZeroClipboard.)</p>\n\n<p>How do they achieve this magic?</p>\n\n<p>(Right at this moment I think I had an epiphany: You cannot select text on the page, so I assume they have an invisible element, where they create a text selection via JavaScript code, and <kbd>Ctrl</kbd>+<kbd>C</kbd> triggers the browser's default behaviour, copying that invisible node's text value.)</p>\n    ","a":"\n<p><strong>Disclosure:</strong> <a href=\"https://trello.com/daniel\">I wrote the code that Trello uses</a>; the code below is the actual source code Trello uses to accomplish the clipboard trick.</p>\n\n<hr>\n\n<p>We don't actually \"access the user's clipboard\", instead we help the user out a bit by selecting something useful when they press <kbd>Ctrl</kbd>+<kbd>C</kbd>.</p>\n\n<p>Sounds like you've figured it out; we take advantage of the fact that when you want to hit <kbd>Ctrl</kbd>+<kbd>C</kbd>, you have to hit the <kbd>Ctrl</kbd> key first.  When the <kbd>Ctrl</kbd> key is pressed, we pop in a textarea that contains the text we want to end up on the clipboard, and select all the text in it, so the selection is all set when the <kbd>C</kbd> key is hit.  (Then we hide the textarea when the <kbd>Ctrl</kbd> key comes up)</p>\n\n<p>Specifically, Trello does this:</p>\n\n<pre><code>TrelloClipboard = new class\n  constructor: -&gt;\n    @value = \"\"\n\n    $(document).keydown (e) =&gt;\n      # Only do this if there's something to be put on the clipboard, and it\n      # looks like they're starting a copy shortcut\n      if !@value || !(e.ctrlKey || e.metaKey)\n        return\n\n      if $(e.target).is(\"input:visible,textarea:visible\")\n        return\n\n      # Abort if it looks like they've selected some text (maybe they're trying\n      # to copy out a bit of the description or something)\n      if window.getSelection?()?.toString()\n        return\n\n      if document.selection?.createRange().text\n        return\n\n      _.defer =&gt;\n        $clipboardContainer = $(\"#clipboard-container\")\n        $clipboardContainer.empty().show()\n        $(\"&lt;textarea id='clipboard'&gt;&lt;/textarea&gt;\")\n        .val(@value)\n        .appendTo($clipboardContainer)\n        .focus()\n        .select()\n\n    $(document).keyup (e) -&gt;\n      if $(e.target).is(\"#clipboard\")\n        $(\"#clipboard-container\").empty().hide()\n\n  set: (@value) -&gt;\n</code></pre>\n\n<p>In the DOM we've got</p>\n\n<pre><code>&lt;div id=\"clipboard-container\"&gt;&lt;textarea id=\"clipboard\"&gt;&lt;/textarea&gt;&lt;/div&gt;\n</code></pre>\n\n<p>CSS for the clipboard stuff:</p>\n\n<pre><code>#clipboard-container {\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  width: 0px;\n  height: 0px;\n  z-index: 100;\n  display: none;\n  opacity: 0;\n}\n#clipboard {\n  width: 1px;\n  height: 1px;       \n  padding: 0px;\n}\n</code></pre>\n\n<p>... and the CSS makes it so you can't actually see the textarea when it pops in ... but it's \"visible\" enough to copy from.</p>\n\n<p>When you hover over a card, it calls</p>\n\n<pre><code>TrelloClipboard.set(cardUrl)\n</code></pre>\n\n<p>... so then the clipboard helper knows what to select when the <kbd>Ctrl</kbd> key is pressed.</p>\n    "},{"t":"jQuery get specific option tag text","l":"http://stackoverflow.com/questions/196684/jquery-get-specific-option-tag-text","q":"\n\n<p>All right, say I have this:</p>\n\n<pre><code>&lt;select id='list'&gt;\n    &lt;option value='1'&gt;Option A&lt;/option&gt;\n    &lt;option value='2'&gt;Option B&lt;/option&gt;\n    &lt;option value='3'&gt;Option C&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>What would the selector look like if I wanted to get \"Option B\" when I have the value '2'?</p>\n\n<p>Please note that this is not asking how to get the <em>selected</em> text value, but just any one of them, whether selected or not, depending on the value attribute. I tried:</p>\n\n<pre><code>$(\"#list[value='2']\").text();\n</code></pre>\n\n<p>But it is not working.</p>\n    ","a":"\n<p>It's looking for an element with id <code>list</code> which has a property <code>value</code> equal to 2. What you want is the <code>option</code> child of the <code>list</code>.</p>\n\n<pre><code>$(\"#list option[value='2']\").text()\n</code></pre>\n    "},{"t":"How can I convert a string to boolean in JavaScript?","l":"http://stackoverflow.com/questions/263965/how-can-i-convert-a-string-to-boolean-in-javascript","q":"\n\n<p>Can I convert a string representing a boolean value (e.g., 'true', 'false') into a intrinsic type in JavaScript?</p>\n\n<p>I have a hidden form in HTML that is updated based upon a user's selection within a list. This form contains some fields which represent boolean values and are dynamically populated with an intrinsic boolean value. However, once this value is placed into the hidden input field it becomes a string.</p>\n\n<p>The only way I could find to determine the field's boolean value, once it was converted into a string, was to depend upon the literal value of its string representation.</p>\n\n<pre><code>var myValue = document.myForm.IS_TRUE.value;\nvar isTrueSet = myValue == 'true';\n</code></pre>\n\n<p>Is there a better way to accomplish this?</p>\n    ","a":"\n<p>You should probably <strong>be cautious about using these two methods</strong> for your specific needs:</p>\n\n<pre><code>var myBool = Boolean(\"false\");  // == true\n\nvar myBool = !!\"false\";  // == true\n</code></pre>\n\n<p>Any string which isn't the empty string will evaluate to <code>true</code> by using them. Although they're the cleanest methods I can think of concerning to boolean conversion, I think they're not what you're looking for.</p>\n\n<p>About the way you suggested, you could make it stricter by using the identity operator (<code>===</code>), which doesn't make any implicit type conversions when the compared variables have different types, instead of the equality operator (<code>==</code>), which does:</p>\n\n<pre><code>var isTrueSet = (myValue === 'true');\n</code></pre>\n    "},{"t":"Difference between == and === in JavaScript [duplicate]","l":"http://stackoverflow.com/questions/523643/difference-between-and-in-javascript","q":"\n\n<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/359494/javascript-vs-does-it-matter-which-equal-operator-i-use\">Javascript === vs == : Does it matter which “equal” operator I use?</a>   </p>\n</blockquote>\n\n\n\n<p>What is the difference between <code>==</code> and <code>===</code> in JavaScript?  I have also seen <code>!=</code> and <code>!==</code> operators.  Are there more such operators?</p>\n    ","a":"\n<p><code>===</code> and <code>!==</code> are strict comparison operators:</p>\n\n<blockquote>\n  <p>JavaScript has both strict and\n  type-converting equality comparison.\n  For strict equality the objects being\n  compared must have the same type and:</p>\n  \n  <ul>\n  <li>Two strings are strictly equal when they have the same sequence of\n  characters, same length, and same\n  characters in corresponding positions.</li>\n  <li>Two numbers are strictly equal when they are numerically equal (have\n  the same number value). NaN is not\n  equal to anything, including NaN.\n  Positive and negative zeros are equal\n  to one another.</li>\n  <li>Two Boolean operands are strictly equal if both are true or\n  both are false.</li>\n  <li>Two objects are strictly equal if they refer to the same Object.</li>\n  <li>Null and Undefined types are == (but not ===). [I.e. Null==Undefined (but not Null===Undefined)]</li>\n  </ul>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Comparison_Operators\">Comparison Operators - MDC</a></p>\n    "},{"t":"Loop through JavaScript object","l":"http://stackoverflow.com/questions/684672/loop-through-javascript-object","q":"\n\n<p>I have a JavaScript object like the following:</p>\n\n<pre><code> var p =\n    {\n        \"p1\": \"value1\",\n        \"p2\": \"value2\",\n        \"p3\": \"value3\"\n    };\n</code></pre>\n\n<p>Now I want to loop through all <code>p</code> elements (<code>p1</code>,<code>p2</code>,<code>p3</code>...) and get their keys and values. How can I do that? I can modify the JavaScript object if necessary. My ultimate goal is to loop through some key value pairs and if possible I want to avoid using <code>eval</code>.</p>\n    ","a":"\n<p>You can use the for-in loop as shown by others. However, you also want to make sure that the key you get is an actual property of an object, and doesn't come from the prototype:</p>\n\n<pre><code>for (var key in p) {\n  if (p.hasOwnProperty(key)) {\n    alert(key + \" -&gt; \" + p[key]);\n  }\n}\n</code></pre>\n    "},{"t":"Why does parseInt(1/0, 19) return 18?","l":"http://stackoverflow.com/questions/11340673/why-does-parseint1-0-19-return-18","q":"\n\n<p>I've an annoying problem in JavaScript.</p>\n\n<pre><code>parseInt(1 / 0, 19)\n18\n</code></pre>\n\n<p>Why does <code>parseInt</code> return <code>18</code>?</p>\n    ","a":"\n<p>The result of <code>1/0</code> is <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Infinity\"><code>Infinity</code></a>.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\"><code>parseInt</code></a> treats its first argument as a string which means first of all <code>Infinity.toString()</code> is called, producing the string <code>\"Infinity\"</code>. So it works the same as if you asked it to convert <code>\"Infinity\"</code> in base 19 to decimal.</p>\n\n<p>Here are the digits in base 19 along with their decimal values:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Base 19   Base 10 (decimal)\n---------------------------\n   0            0\n   1            1\n   2            2\n   3            3\n   4            4\n   5            5\n   6            6\n   7            7\n   8            8\n   9            9\n   a            10\n   b            11\n   c            12\n   d            13\n   e            14\n   f            15\n   g            16\n   h            17\n   i            18\n</code></pre>\n\n<p>What happens next is that <code>parseInt</code> scans the input <code>\"Infinity\"</code> to find which part of it can be parsed and stops after accepting the first <code>I</code> (because <code>n</code> is not a valid digit in base 19).</p>\n\n<p>Therefore it behaves as if you called <code>parseInt(\"I\", 19)</code>, which converts to decimal 18 by the table above.</p>\n    "},{"t":"Insert Item into Array at a Specific Index","l":"http://stackoverflow.com/questions/586182/insert-item-into-array-at-a-specific-index","q":"\n\n<p>I am looking for a JavaScript array insert method, in the style of:</p>\n\n<pre><code>arr.insert(index, item)\n</code></pre>\n\n<p>Preferably in jQuery, but any JavaScript implementation will do at this point because I can't believe the trouble I'm having finding such a basic function! Thanks for your help.</p>\n    ","a":"\n<p>What you want is the <strong><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice\"><code>splice</code></a></strong> function on the native array object.</p>\n\n<p><code>arr.splice(index, 0, item);</code> will insert <code>item</code> into <code>arr</code> at the specified index.</p>\n\n<p>In this example we will create an array and add an element to it into index 2:</p>\n\n<pre><code>var arr = [];\narr[0] = \"Jani\";\narr[1] = \"Hege\";\narr[2] = \"Stale\";\narr[3] = \"Kai Jim\";\narr[4] = \"Borge\";\n\nconsole.log(arr.join());\narr.splice(2, 0, \"Lene\");\nconsole.log(arr.join());\n</code></pre>\n\n<p>The output of the code above will be:</p>\n\n<pre><code>Jani,Hege,Stale,Kai Jim,Borge\nJani,Hege,Lene,Stale,Kai Jim,Borge\n</code></pre>\n    "},{"t":"JavaScript unit test tools for TDD","l":"http://stackoverflow.com/questions/300855/javascript-unit-test-tools-for-tdd","q":"\n\n<p>I've looked into and considered many JavaScript unit tests and testing tools, but have been unable to find a suitable option to remain fully TDD compliant. So, is there a JavaScript unit test tool that is fully TDD compliant?</p>\n    ","a":"\n<h2><a href=\"http://karma-runner.github.io\">Karma</a> or <a href=\"http://angular.github.io/protractor/#/\">Protractor</a></h2>\n\n<p>Karma is a JavaScript test-runner built with Node.js, and meant for unit testing.</p>\n\n<p>Protractor is for end-to-end testing, and uses Selenium Web Driver to drive tests.</p>\n\n<p>Both have been made by the Angular team. You can use any assertion-library you want with either.</p>\n\n<p>Screencast: <a href=\"http://www.youtube.com/watch?v=MVw8N3hTfCI\">Karma Getting started</a></p>\n\n<p><strong>related</strong>:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/21732379/should-i-be-using-protractor-or-karma-for-my-end-to-end-testing/21733114#21733114\">Should I be using Protractor or Karma for my end-to-end testing?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/17070522/can-protractor-and-karma-be-used-together\">Can Protractor and Karma be used together?</a></li>\n</ul>\n\n<p><strong>pros</strong>:</p>\n\n<ul>\n<li>Uses node.js, so compatible with Win/OS X/Linux</li>\n<li>Run tests from browser or headless with PhantomJS</li>\n<li>Run on multiple clients at once</li>\n<li>Option to launch, capture, and automatically shutdown browsers</li>\n<li>Option to run server/clients on development computer or separately</li>\n<li>Run tests from command line (can be integrated in ant/maven)</li>\n<li>Write tests xUnit or BDD style</li>\n<li>Supports multiple JavaScript test frameworks</li>\n<li>Auto-run tests on save</li>\n<li>Proxies requests cross-domain</li>\n<li>Possible to customize:\n<ul>\n<li>Extend it to wrap other test-frameworks (Jasmine, Mocha, QUnit built-in)</li>\n<li>Your own assertions/refutes</li>\n<li>Reporters</li>\n<li>Browser Launchers</li>\n</ul></li>\n<li>Plugin for WebStorm</li>\n<li>Supported by Netbeans IDE</li>\n</ul>\n\n<p><strong>cons</strong>:</p>\n\n<ul>\n<li>Does not supports NodeJS testing</li>\n<li>No plugin for Eclipse (yet)</li>\n<li>No history of previous test results </li>\n</ul>\n\n<h2><a href=\"http://busterjs.org/\">Buster.js</a></h2>\n\n<p>A JavaScript test-runner built with Node.js. Very modular and flexible. It comes with it's own assertion library, but you can add your own if you like. The <a href=\"http://docs.busterjs.org/en/latest/modules/referee/\">assertions library</a> is decoupled, so you can also use it with other test-runners. Instead of using <code>assert(!...)</code> or <code>expect(...).not...</code>, it uses <code>refute(...)</code> which is a nice twist imho.</p>\n\n<blockquote>\n  <p>A browser JavaScript testing toolkit. It does browser testing with browser automation (think JsTestDriver), qunit style static html page testing, testing in headless browsers (phantomjs, jsdom, ...), and more. Take a look at <a href=\"http://docs.busterjs.org/en/latest/overview/\">the overview</a>!</p>\n  \n  <p>A Node.js testing toolkit. You get the same test case library, assertion library, etc. This is also great for hybrid browser and Node.js code. Write your test case with Buster.JS and run it both in Node.js and in a real browser.</p>\n</blockquote>\n\n<p>Screencast: <a href=\"http://www.youtube.com/watch?v=VSFGAl1BekY\">Buster.js Getting started</a> (2:45)</p>\n\n<p><strong>pros</strong>:</p>\n\n<ul>\n<li>Uses node.js, so compatible with Win/OS X/Linux</li>\n<li>Run tests from browser or headless with PhantomJS (soon)</li>\n<li>Run on multiple clients at once</li>\n<li>Supports NodeJS testing</li>\n<li>Don't need to run server/clients on development computer (no need for IE)</li>\n<li>Run tests from command line (can be integrated in ant/maven)</li>\n<li>Write tests xUnit or BDD style</li>\n<li>Supports multiple JavaScript test frameworks</li>\n<li>Defer tests instead of commenting them out</li>\n<li>SinonJS built in</li>\n<li><a href=\"http://www.youtube.com/watch?v=gKVej9SAzH4\">Auto-run tests on save</a></li>\n<li>Proxies requests cross-domain</li>\n<li>Possible to customize:\n<ul>\n<li>Extend it to wrap other test-frameworks (JsTestDriver built in)</li>\n<li>Your own assertions/refutes</li>\n<li>Reporters (xunit XML, traditional dots, specification, tap, teamcity and more built in)</li>\n<li>Customize/replace the HTML that is used to run the browser-tests</li>\n</ul></li>\n<li>TextMate and Emacs integration</li>\n</ul>\n\n<p><strong>cons</strong>:</p>\n\n<ul>\n<li>Stil in beta, so can be buggy</li>\n<li>No plugin for Eclipse/IntelliJ (yet)</li>\n<li>Doesn't group results by os/browser/version like TestSwarm *. It does however print out the browser name and version in the test results.</li>\n<li>No history of previous test results like TestSwarm *</li>\n<li>Doesn't fully work on windows <a href=\"http://docs.busterjs.org/en/latest/developers/windows/\">as of May 2014</a></li>\n</ul>\n\n<p>* TestSwarm is also a Continuous Integration server, while you need a separate CI server for Buster.js. It does however output xUnit XML reports, so it should be easy to integrate with <a href=\"http://hudson-ci.org/\">Hudson</a>, <a href=\"http://www.atlassian.com/software/bamboo/overview\">Bamboo</a> or other CI servers.</p>\n\n<h2><a href=\"https://github.com/jquery/testswarm/\">TestSwarm</a></h2>\n\n<p>John Resig (jQuery) has created a tool for distributed JavaScript testing, TestSwarm. Mainly for open source JavaScript projects, but TestSwarm is open source, so you can set up a server yourself for corporate testing. Although this might require that you to do some modifications.</p>\n\n<p><strong>pros</strong>:</p>\n\n<ul>\n<li>Continuous integration server for JavaScript</li>\n<li>Supports all major browsers/operating systems</li>\n<li>Run on multiple clients at once</li>\n<li>Don't need to run server/clients on development computer (no need for IE)</li>\n<li>Automatic run tests on all clients when you commit something (or whenever you modify the script to run the tests)</li>\n<li>Show history of test results pr commit</li>\n<li>Supports multiple JavaScript test frameworks</li>\n<li>Have test results for OS and browser versions</li>\n<li>Crowdsource to test in a multitude of browsers</li>\n</ul>\n\n<p><strong>cons</strong>:</p>\n\n<ul>\n<li>Can not break your build through ant/maven</li>\n<li>Don't notice the test fail before commit</li>\n<li>No IDEplug-in</li>\n</ul>\n\n<p><a href=\"http://ejohn.org/blog/javascript-testing-does-not-scale/\">http://ejohn.org/blog/javascript-testing-does-not-scale/</a></p>\n\n<p>TestSwarm architecture:</p>\n\n<p><img src=\"http://ejohn.org/files/ts-swarm.png\" alt=\"alt text\"></p>\n\n<h2><a href=\"http://www.browserswarm.com/\">BrowserSwarm</a></h2>\n\n<p>BrowserSwarm is a project from appendTo, Sauce Labs and the Internet Explorer team. It is essentially a hosted forked version of TestSwarm. </p>\n\n<p>In addition to all the advantages to TestSwarm, BrowserSwarm already has all the browsers connected to the swarm and ready to test your code, therefore not requiring you to add clients yourself or maintaining installations of browsers. Time is also saved from the hassle of setting up and configuring TestSwarm. </p>\n\n<h2><a href=\"https://github.com/pivotal/jasmine/\">Jasmine</a></h2>\n\n<p><img src=\"http://i.stack.imgur.com/q4Bct.png\" alt=\"Jasmine\"></p>\n\n<p>This is a client-side test-runner that might interest developers familiar with Ruby or Ruby on Rails. The syntax is based on <a href=\"http://rspec.info/\">RSpec</a> that's used for testing in Rails projects.</p>\n\n<blockquote>\n  <p>Jasmine is a behavior-driven development framework for testing your JavaScript code. It does not depend on any other JavaScript frameworks. It does not require a DOM.</p>\n</blockquote>\n\n<p>If you have experience with this test-runner, please contribute with more info :)</p>\n\n<p>Project home: <a href=\"https://github.com/pivotal/jasmine/\">http://jasmine.github.io/</a></p>\n\n<h2><a href=\"http://qunitjs.com/\">QUnit</a></h2>\n\n<p>QUnit focuses on testing JavaScript in the browser, while providing as much convenience to the developer as possible. Blurb from the site:</p>\n\n<blockquote>\n  <p>QUnit is a powerful, easy-to-use JavaScript unit test suite. It's used by the jQuery, jQuery UI and jQuery Mobile projects and is capable of testing any generic JavaScript code</p>\n</blockquote>\n\n<p>QUnit shares some history with TestSwarm (above):</p>\n\n<blockquote>\n  <p>QUnit was originally developed by John Resig as part of jQuery. In 2008 it got its own home, name and API documentation, allowing others to use it for their unit testing as well. At the time it still dependended on jQuery. A rewrite in 2009 fixed that, now QUnit runs completelty standalone.\n  QUnit's assertion methods follow the CommonJS Unit Testing specification, which was to some degree influenced by QUnit.</p>\n</blockquote>\n\n<p>Project home: <a href=\"http://qunitjs.com/\">http://qunitjs.com/</a></p>\n\n<h2><a href=\"http://sinonjs.org\">Sinon</a></h2>\n\n<p>Another great tool is <a href=\"http://sinonjs.org\">sinon.js</a> by Christian Johansen, the author of <a href=\"http://tddjs.com/\">Test-Driven JavaScript Development</a>. Best described by himself:</p>\n\n<blockquote>\n  <p>Standalone test spies, stubs and mocks\n  for JavaScript. No dependencies, works\n  with any unit testing framework.</p>\n</blockquote>\n\n<h2><a href=\"http://theintern.io\">Intern</a></h2>\n\n<p>The <a href=\"http://theintern.io/#compare\">Intern Web site</a> provides a direct feature comparison to the other testing frameworks on this list. It offers more features out of the box than any other JavaScript-based testing system.</p>\n\n<h2><a href=\"http://mochajs.org\">mocha.js</a></h2>\n\n<p>I'm totally unqualified to comment on mocha.js's features, strengths, and weaknesses,\nbut it was just recommended to me by someone I trust in the JS community.</p>\n\n<p>List of features, as reported by its web site:</p>\n\n<ul>\n<li>browser support</li>\n<li>simple async support, including promises</li>\n<li>test coverage reporting</li>\n<li>string diff support</li>\n<li>javascript API for running tests</li>\n<li>proper exit status for CI support etc</li>\n<li>auto-detects and disables coloring for non-ttys</li>\n<li>maps uncaught exceptions to the correct test case</li>\n<li>async test timeout support</li>\n<li>test-specific timeouts</li>\n<li>growl notification support</li>\n<li>reports test durations</li>\n<li>highlights slow tests</li>\n<li>file watcher support</li>\n<li>global variable leak detection</li>\n<li>optionally run tests that match a regexp</li>\n<li>auto-exit to prevent \"hanging\" with an active loop</li>\n<li>easily meta-generate suites &amp; test-cases</li>\n<li>mocha.opts file support</li>\n<li>clickable suite titles to filter test execution</li>\n<li>node debugger support</li>\n<li>detects multiple calls to done()</li>\n<li>use any assertion library you want</li>\n<li>extensible reporting, bundled with 9+ reporters</li>\n<li>extensible test DSLs or \"interfaces\"</li>\n<li>before, after, before each, after each hooks</li>\n<li>arbitrary transpiler support (coffee-script etc)</li>\n<li>TextMate bundle</li>\n</ul>\n\n<h2><a href=\"http://www.yolpo.com\">yolpo</a></h2>\n\n<p><img src=\"http://i.imgur.com/5HKEWSW.png\" alt=\"yolpo\"></p>\n\n<p>Yolpo is a tool to visualize the execution of javascript. Javascript API developers are encouraged to write their use cases to show and tell their api. Such use cases forms the basis of regression tests.</p>\n    "},{"t":"JavaScript post request like a form submit","l":"http://stackoverflow.com/questions/133925/javascript-post-request-like-a-form-submit","q":"\n\n<p>I'm trying to direct a browser to a different page. If I wanted a GET request, I could say</p>\n\n<pre><code>document.location.href = 'http://example.com/?q=a';\n</code></pre>\n\n<p>But the resource I'm trying to access won't respond properly unless I use a POST request. If this were not dynamically generated, I might use the HTML</p>\n\n<pre><code>&lt;form action=\"http://example.com/\" method=\"POST\"&gt;\n  &lt;input type=\"hidden\" name=\"q\" value=\"a\"&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Then I would just submit the form from the DOM.</p>\n\n<p>But really I would like JavaScript code that allows me to say</p>\n\n<pre><code>post_to_url('http://example.com/', {'q':'a'});\n</code></pre>\n\n<p>What's the best cross browser implementation?</p>\n\n<p><strong>Edit</strong> </p>\n\n<p>I'm sorry I was not clear. I need a solution that changes the location of the browser, just like submitting a form. If this is possible with <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XMLHttpRequest</a>, it is not obvious. And this should not be asynchronous, nor use XML, so Ajax is not the answer.</p>\n    ","a":"\n<pre><code>function post(path, params, method) {\n    method = method || \"post\"; // Set method to post by default if not specified.\n\n    // The rest of this code assumes you are not using a library.\n    // It can be made less wordy if you use one.\n    var form = document.createElement(\"form\");\n    form.setAttribute(\"method\", method);\n    form.setAttribute(\"action\", path);\n\n    for(var key in params) {\n        if(params.hasOwnProperty(key)) {\n            var hiddenField = document.createElement(\"input\");\n            hiddenField.setAttribute(\"type\", \"hidden\");\n            hiddenField.setAttribute(\"name\", key);\n            hiddenField.setAttribute(\"value\", params[key]);\n\n            form.appendChild(hiddenField);\n         }\n    }\n\n    document.body.appendChild(form);\n    form.submit();\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>post('/contact/', {name: 'Johnny Bravo'});\n</code></pre>\n\n<p><strong>EDIT</strong>: Since this has gotten upvoted so much, I'm guessing people will be copy-pasting this a lot. So I added the <code>hasOwnProperty</code> check to fix any inadvertent bugs.</p>\n    "},{"t":"How to debug Node.js applications","l":"http://stackoverflow.com/questions/1911015/how-to-debug-node-js-applications","q":"\n\n<p>How do I debug a Node.js server application? Right now I'm mostly using <em>alert debugging</em> with print statements like this:</p>\n\n<pre><code>sys.puts(sys.inspect(someVariable));\n</code></pre>\n\n<p>There must be a better way to debug. I know that <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Google Chrome</a> has a command-line debugger. Is this debugger available for Node.js as well?</p>\n    ","a":"\n<p>The <a href=\"http://en.wikipedia.org/wiki/V8_%28JavaScript_engine%29\">V8</a> debugger released as part of the Google <a href=\"http://code.google.com/p/chromedevtools/\">Chrome Developer Tools</a> can be used to debug Node.js scripts. A detailed explanation of how this works can be found in the <a href=\"https://github.com/joyent/node/wiki/Using-Eclipse-as-Node-Applications-Debugger\">Node.js GitHub wiki</a>.</p>\n\n<p><strike>There is also <a href=\"http://github.com/smtlaissezfaire/ndb\">ndb</a>, a command line debugger written in Node.js itself.</strike></p>\n    "},{"t":"endsWith in javascript","l":"http://stackoverflow.com/questions/280634/endswith-in-javascript","q":"\n\n<p>How can I check if a string ends with a particular character in javascript?\nExample I have a string say </p>\n\n<pre><code>var str = \"mystring#\";\n</code></pre>\n\n<p>I want to know if that string str is ending with <code>#</code>. How can I check it?</p>\n\n<ol>\n<li><p>Is there a <code>endsWith()</code> method in javascript?</p></li>\n<li><p>One solution I have is take the length of the string and get the last character and check it.</p></li>\n</ol>\n\n<p>Is this the best way or there is any other way?</p>\n    ","a":"\n<p>I know this is a year old question... but I need this too and I need it to work cross-browser so... <strong>combining everyone's answer and comments</strong> and simplifying it a bit:</p>\n\n<pre><code>String.prototype.endsWith = function(suffix) {\n    return this.indexOf(suffix, this.length - suffix.length) !== -1;\n};\n</code></pre>\n\n<ul>\n<li>Doesn't create a substring</li>\n<li>Uses native <code>indexOf</code> function for fastest results</li>\n<li>Skip unnecessary comparisons using the second parameter of <code>indexOf</code> to skip ahead</li>\n<li>Works in Internet Explorer</li>\n<li>NO Regex complications</li>\n</ul>\n\n<hr>\n\n<p>Also, if you don't like stuffing things in native data structure's prototypes, here's a standalone version:</p>\n\n<pre><code>function endsWith(str, suffix) {\n    return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> As noted by @hamish in the comments, if you want to err on the safe side and check if an implementation has already been provided, you can just adds a <code>typeof</code> check like so:</p>\n\n<pre><code>if (typeof String.prototype.endsWith !== 'function') {\n    String.prototype.endsWith = function(suffix) {\n        return this.indexOf(suffix, this.length - suffix.length) !== -1;\n    };\n}\n</code></pre>\n    "},{"t":"How can I merge properties of two JavaScript objects dynamically?","l":"http://stackoverflow.com/questions/171251/how-can-i-merge-properties-of-two-javascript-objects-dynamically","q":"\n\n<p>I need to be able to merge two (very simple) JavaScript objects at runtime.  For example I'd like to:</p>\n\n<pre><code>var obj1 = { food: 'pizza', car: 'ford' }\nvar obj2 = { animal: 'dog' }\n\nobj1.merge(obj2);\n\n//obj1 now has three properties: food, car, and animal\n</code></pre>\n\n<p>Does anyone have a script for this or know of a built in way to do this?  I do not need recursion, and I do not need to merge functions, just methods on flat objects.</p>\n    ","a":"\n<pre><code>for (var attrname in obj2) { obj1[attrname] = obj2[attrname]; }\n</code></pre>\n\n<p>Note that this will simply add all attributes of <code>obj2</code> to <code>obj1</code> which might not be what you want if you still want to use the unmodified <code>obj1</code>.</p>\n\n<p>If you're using a framework that craps all over your prototypes then you have to get fancier with checks like <code>hasOwnProperty</code>, but that code will work for 99% of cases.</p>\n\n<p>Example function:</p>\n\n<pre><code>/**\n * Overwrites obj1's values with obj2's and adds obj2's if non existent in obj1\n * @param obj1\n * @param obj2\n * @returns obj3 a new object based on obj1 and obj2\n */\nfunction merge_options(obj1,obj2){\n    var obj3 = {};\n    for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }\n    for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }\n    return obj3;\n}\n</code></pre>\n    "},{"t":"What is the best way to add options to a select from an array with jQuery?","l":"http://stackoverflow.com/questions/170986/what-is-the-best-way-to-add-options-to-a-select-from-an-array-with-jquery","q":"\n\n<p>What is the best method for adding options to a select from a JSON object using jQuery?</p>\n\n<p>I'm looking for something that I don't need a plugin to do, but would also be interested in the plugins that are out there.</p>\n\n<p>This is what I did:</p>\n\n<pre><code>selectValues = { \"1\": \"test 1\", \"2\": \"test 2\" };\n\nfor (key in selectValues) {\n  if (typeof (selectValues[key] == 'string') {\n    $('#mySelect').append('&lt;option value=\"' + key + '\"&gt;' + selectValues[key] + '&lt;/option&gt;');\n  }\n}\n</code></pre>\n\n<p><strong>A clean/simple solution:</strong></p>\n\n<p>This is a cleaned up and simplified <a href=\"http://stackoverflow.com/questions/170986/what-is-the-best-way-to-add-options-to-a-select-from-an-array-with-jquery/171007#171007\">version of matdumsa's</a>:</p>\n\n<pre><code>$.each(selectValues, function(key, value) {   \n     $('#mySelect')\n          .append($('&lt;option&gt;', { value : key })\n          .text(value)); \n});\n</code></pre>\n\n<p>Changes from matdumsa's: (1) removed the close tag for the option inside append() and (2) moved the properties/attributes into an map as the second parameter of append().</p>\n    ","a":"\n<p>Same as other answers, in jQuery fashion:</p>\n\n<pre><code>$.each(selectValues, function(key, value) {   \n     $('#mySelect')\n         .append($(\"&lt;option&gt;&lt;/option&gt;\")\n         .attr(\"value\",key)\n         .text(value)); \n});\n</code></pre>\n    "},{"t":"$(document).ready equivalent without jQuery","l":"http://stackoverflow.com/questions/799981/document-ready-equivalent-without-jquery","q":"\n\n<p>I have a script that uses <code>$(document).ready</code>, but doesn't use anything else from jQuery. I'd like to lighten it up by removing the jQuery dependency.</p>\n\n<p>How can I implement my own <code>$(document).ready</code> functionality without using jQuery? I know that  using <code>window.onload</code> will not be the same, as <code>window.onload</code> fires after all images, frames etc have been loaded.</p>\n    ","a":"\n<p>There is a standards based replacement,<code>DOMContentLoaded</code> that is supported by over <a href=\"http://caniuse.com/#search=DOMContentLoaded\">90%+ of browsers</a>, though not IE8:</p>\n\n<pre><code>document.addEventListener(\"DOMContentLoaded\", function(event) { \n  //do work\n});\n</code></pre>\n\n<p>jQuery's native function is much more complicated than just window.onload, as depicted below.  </p>\n\n<pre><code>function bindReady(){\n    if ( readyBound ) return;\n    readyBound = true;\n\n    // Mozilla, Opera and webkit nightlies currently support this event\n    if ( document.addEventListener ) {\n        // Use the handy event callback\n        document.addEventListener( \"DOMContentLoaded\", function(){\n            document.removeEventListener( \"DOMContentLoaded\", arguments.callee, false );\n            jQuery.ready();\n        }, false );\n\n    // If IE event model is used\n    } else if ( document.attachEvent ) {\n        // ensure firing before onload,\n        // maybe late but safe also for iframes\n        document.attachEvent(\"onreadystatechange\", function(){\n            if ( document.readyState === \"complete\" ) {\n                document.detachEvent( \"onreadystatechange\", arguments.callee );\n                jQuery.ready();\n            }\n        });\n\n        // If IE and not an iframe\n        // continually check to see if the document is ready\n        if ( document.documentElement.doScroll &amp;&amp; window == window.top ) (function(){\n            if ( jQuery.isReady ) return;\n\n            try {\n                // If IE is used, use the trick by Diego Perini\n                // http://javascript.nwbox.com/IEContentLoaded/\n                document.documentElement.doScroll(\"left\");\n            } catch( error ) {\n                setTimeout( arguments.callee, 0 );\n                return;\n            }\n\n            // and execute any waiting functions\n            jQuery.ready();\n        })();\n    }\n\n    // A fallback to window.onload, that will always work\n    jQuery.event.add( window, \"load\", jQuery.ready );\n}\n</code></pre>\n    "},{"t":"JavaScript Array Delete Elements","l":"http://stackoverflow.com/questions/500606/javascript-array-delete-elements","q":"\n\n<p>What is the difference between using <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Operators/delete\">the <code>delete</code> operator</a> on the array element as opposed to using <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\">the <code>Array.splice</code> method</a>? For example: </p>\n\n<pre><code>myArray = ['a', 'b', 'c', 'd'];\n\ndelete myArray[1];\n//  or\nmyArray.splice (1, 1);\n</code></pre>\n\n<p>Why even have the splice method if I can delete array elements like I can with objects?</p>\n    ","a":"\n<p>Delete in this case will only set the element as undefined:</p>\n\n<pre><code>&gt; myArray = ['a', 'b', 'c', 'd']\n  [\"a\", \"b\", \"c\", \"d\"]\n&gt; delete myArray[0]\n  true\n&gt; myArray\n  [undefined, \"b\", \"c\", \"d\"]\n</code></pre>\n\n<p>Splice actually removes the element from the array:</p>\n\n<pre><code>&gt; myArray = ['a', 'b', 'c', 'd']\n  [\"a\", \"b\", \"c\", \"d\"]\n&gt; myArray.splice(0, 2)\n  [\"a\", \"b\"]\n&gt; myArray\n  [\"c\", \"d\"]\n</code></pre>\n    "},{"t":"How to get current date in JavaScript?","l":"http://stackoverflow.com/questions/1531093/how-to-get-current-date-in-javascript","q":"\n\n<p>How do I get current date in JavaScript?</p>\n    ","a":"\n<p>Hendrik's answer in the comments above will work but probably isn't what you are looking for. The format is not very usable. </p>\n\n<p>I have been having the same issue and have come up with this through a lot of searching. </p>\n\n<pre><code>var today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\n\nif(dd&lt;10) {\n    dd='0'+dd\n} \n\nif(mm&lt;10) {\n    mm='0'+mm\n} \n\ntoday = mm+'/'+dd+'/'+yyyy;\ndocument.write(today);\n</code></pre>\n\n<p>It's quite complex but it will give you today's date in the format of mm/dd/yyyy.</p>\n\n<p>Simply change <code>today = mm+'/'+dd+'/'+yyyy;</code> to what ever format you wish.</p>\n    "},{"t":"Open a URL in a new tab using JavaScript","l":"http://stackoverflow.com/questions/4907843/open-a-url-in-a-new-tab-using-javascript","q":"\n\n<p>I'm trying to open a <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\">URL</a> in a new tab, as opposed to a popup window. I've seen related questions where the responses would look something like:</p>\n\n<pre><code>window.open(url,'_blank');\nwindow.open(url);\n</code></pre>\n\n<p>But none of them worked for me, the browser still tried to open a popup window.</p>\n    ","a":"\n<p>Nothing an author can do can choose to open in a new tab instead of a new window.</p>\n\n<p>CSS3 proposed <a href=\"http://www.w3.org/TR/2004/WD-css3-hyperlinks-20040224/#target-new\">target-new</a>, but <a href=\"http://www.w3.org/TR/2014/NOTE-css3-hyperlinks-20141014/\">the specification was abandoned</a>.</p>\n    "},{"t":"Why don't self-closing script tags work?","l":"http://stackoverflow.com/questions/69913/why-dont-self-closing-script-tags-work","q":"\n\n<p>What is the reason browsers do not correctly recognize:</p>\n\n<pre><code>&lt;script src=\"foobar.js\" /&gt; &lt;!-- self-closing script tag --&gt;\n</code></pre>\n\n<p>Only this is recognized:</p>\n\n<pre><code>&lt;script src=\"foobar.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Does this break the concept of XHTML support?</p>\n\n<p>Note: This statement is correct at least for all IE (6-8 beta 2).</p>\n    ","a":"\n<p>XHTML 1 specification says:</p>\n\n<p><a href=\"http://www.w3.org/TR/xhtml1/#C_3\">С.3. Element Minimization and Empty Element Content</a></p>\n\n<blockquote>\n  <p>Given an empty instance of an element whose content model is not <code>EMPTY</code> (for example, an empty title or paragraph) do not use the minimized form (e.g. use <code>&lt;p&gt; &lt;/p&gt;</code> and not <code>&lt;p /&gt;</code>).</p>\n</blockquote>\n\n<p><a href=\"http://www.w3.org/TR/xhtml1/dtds.html#a_dtd_XHTML-1.0-Strict\">XHTML DTD</a> specifies script tags as:</p>\n\n<pre><code>&lt;!-- script statements, which may include CDATA sections --&gt;\n&lt;!ELEMENT script (#PCDATA)&gt;\n</code></pre>\n    "},{"t":"How do you check if a variable is an array in JavaScript? [duplicate]","l":"http://stackoverflow.com/questions/767486/how-do-you-check-if-a-variable-is-an-array-in-javascript","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/4775722/check-if-object-is-array\" dir=\"ltr\">Check if object is array?</a>\n                <span class=\"question-originals-answer-count\">\n                    25 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I would like to check whether a variable is either an array or a single value in JavaScript.</p>\n\n<p>I have found a possible solution...</p>\n\n<pre><code>if (variable.constructor == Array)...\n</code></pre>\n\n<p>Is this the best way this can be done?</p>\n    ","a":"\n<p>There are several ways of checking if an variable is an array or not. The best solution is the one you have chosen.</p>\n\n<pre><code>variable.constructor === Array\n</code></pre>\n\n<p>This is the fastest method on Chrome, and most likely all other browsers. All arrays are objects, so checking the constructor property is a fast process for javascript engines.</p>\n\n<p>If you are having issues with finding out if an objects property is an array, you must first check if the property is there.</p>\n\n<pre><code>variable.prop &amp;&amp; variable.prop.constructor === Array\n</code></pre>\n\n<p>Some other ways are:</p>\n\n<pre><code>variable instanceof Array\n</code></pre>\n\n<p>This method runs about a 1/3rd the speed as the first example. Still pretty solid, looks cleaner, if you're all about pretty code and not so much on performance.</p>\n\n<pre><code>Array.isArray(variable)\n</code></pre>\n\n<p>This last one is, in my opinion the ugliest, and it is the slowest. Running about 1/5th the speed as the first example. Array.prototype, is actually an array. you can read more about it here <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray</a></p>\n\n<p>Also, I ran some test upon jsperf.com <a href=\"http://jsperf.com/instanceof-array-vs-array-isarray\">http://jsperf.com/instanceof-array-vs-array-isarray</a> so have some fun and check it out.</p>\n    "},{"t":"How to pass command line arguments to Node.js?","l":"http://stackoverflow.com/questions/4351521/how-to-pass-command-line-arguments-to-node-js","q":"\n\n<p>I have a web server written in <a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a> that I would like to launch with a specific folder. I'm not sure how to access arguments in JavaScript. I'm running node like this</p>\n\n<pre><code>$ node server.js folder\n</code></pre>\n\n<p>Where <code>server.js</code> is my code. Node.js help says this is possible:</p>\n\n<pre><code>$ node -h\nUsage: node [options] script.js [arguments]\n</code></pre>\n\n<p>How would I access those arguments in JavaScript? Somehow I was not able to find this information on the web.</p>\n    ","a":"\n<h1>Standard Method (no library)</h1>\n\n<p>The arguments are stored in <code>process.argv</code></p>\n\n<p>Here is the specification form <a href=\"http://nodejs.org/docs/latest/api/process.html#process_process_argv\">http://nodejs.org/docs/latest/api/process.html#process_process_argv</a></p>\n\n<p><code>process.argv</code> is an array containing the command line arguments. The first element will be 'node', the second element will be the name of the JavaScript file. The next elements will be any additional command line arguments.</p>\n\n<pre><code>// print process.argv\nprocess.argv.forEach(function (val, index, array) {\n  console.log(index + ': ' + val);\n});\n</code></pre>\n\n<p>This will generate:</p>\n\n<pre><code>$ node process-2.js one two=three four\n0: node\n1: /Users/mjr/work/node/process-2.js\n2: one\n3: two=three\n4: four\n</code></pre>\n    "},{"t":"Differences between lodash and underscore","l":"http://stackoverflow.com/questions/13789618/differences-between-lodash-and-underscore","q":"\n\n<p>Why would someone prefer either the <a href=\"http://lodash.com/\">lodash.js</a> or <a href=\"http://underscorejs.org/\">underscore.js</a> utility libary over the other?</p>\n\n<p>Lodash seems to be a drop-in replacement for underscore, the latter having been around longer.</p>\n\n<p>I think both are brilliant, but I do not know enough about how they work to make an educated comparison, and I would like to know more about the differences.</p>\n    ","a":"\n<p>I created Lo-Dash to provide more consistent cross-environment iteration support for arrays, strings, objects, and <code>arguments</code> objects<sup>1</sup>. It has since become a superset of Underscore, providing more consistent API behavior, more <a href=\"http://lodash.com/#features\">features</a> (like AMD support, deep clone, and deep merge), more thorough <a href=\"http://lodash.com/docs\">documentation</a> and <a href=\"http://lodash.com/tests\">unit tests</a> (tests which run in Node, Ringo, Rhino, Narwhal, PhantomJS, and browsers), better overall <a href=\"http://lodash.com/benchmarks\">performance</a> and optimizations for large arrays/object iteration, and more flexibility with <a href=\"http://lodash.com/#custom-builds\">custom builds</a> and template pre-compilation utilities.</p>\n\n<p>Because Lo-Dash is updated more frequently than Underscore, a <code>lodash underscore</code> build <a href=\"http://lodash.com/#download\">is provided</a> to ensure compatibility with the latest stable version of Underscore.</p>\n\n<p>At one point I was even given <a href=\"http://cl.ly/image/332u0r3d412Y\">push access</a> to Underscore, in part because Lo-Dash is responsible for raising more than 30 issues; landing bug fixes, new features, &amp; perf gains in Underscore v1.4.x+.</p>\n\n<p>In addition there are at least 3 Backbone boilerplates that include Lo-Dash by default and Lo-Dash is now mentioned in Backbone’s official <a href=\"http://backbonejs.org/#downloads\">documentation</a>.</p>\n\n<p>Check out Kit Cambridge's post, <a href=\"http://kitcambridge.be/blog/say-hello-to-lo-dash/\">Say \"Hello\" to Lo-Dash</a>, for a deeper breakdown on the differences between Lo-Dash and Underscore.</p>\n\n<p>Footnotes:</p>\n\n<ol>\n<li>Underscore has inconsistent support for arrays, strings, objects, and <code>arguments</code> objects. In newer browsers, Underscore methods ignore <a href=\"http://www.2ality.com/2012/06/dense-arrays.html\">holes in arrays</a>, \"Objects\" methods iterate <code>arguments</code> objects, strings are treated as array-like, and methods correctly iterate functions (ignoring their \"prototype\" property) and objects (iterating shadowed properties like \"toString\" and \"valueOf\"), while in older browsers they will not. Also, Underscore methods like <code>_.clone</code> preserve holes in arrays, while others like <code>_.flatten</code> don't.</li>\n</ol>\n    "},{"t":"What is the best way to detect a mobile device in jQuery?","l":"http://stackoverflow.com/questions/3514784/what-is-the-best-way-to-detect-a-mobile-device-in-jquery","q":"\n\n<p>Is there a solid way to detect whether or not a user is using a mobile device in jQuery? Something similar to the CSS @media attribute? I would like to run a different script if the browser is on a handheld device.</p>\n\n<p>The jQuery <code>$.browser</code> function is not what I am looking for.</p>\n    ","a":"\n<p>Instead of using jquery you can use simple javascript to detect it:</p>\n\n<pre><code>if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n // some code..\n}\n</code></pre>\n\n<p>or you can combine them both to make it more accessible through jQuery...</p>\n\n<pre><code>$.browser.device = (/android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(navigator.userAgent.toLowerCase()));\n</code></pre>\n\n<p>now <code>$.browser</code> will return <code>\"device\"</code> for all above devices</p>\n\n<p>Note: <code>$.browser</code> removed on <a href=\"http://jquery.com/upgrade-guide/1.9/#jquery-browser-removed\"><strong>jQuery v1.9.1</strong></a></p>\n\n<hr>\n\n<p>A more thorough version:</p>\n\n<pre><code>var isMobile = false; //initiate as false\n// device detection\nif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) \n    || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))) isMobile = true;\n</code></pre>\n    "},{"t":"Are there constants in Javascript?","l":"http://stackoverflow.com/questions/130396/are-there-constants-in-javascript","q":"\n\n<p>If not, what's the common practice for specifying variables that are used as constants?</p>\n    ","a":"\n<pre><code>var MY_CONSTANT = \"some-value\";\n</code></pre>\n\n<p>Nothing's ever constant, but you can use conventions like ALL_CAPS to show that certain values should not be modified.</p>\n    "},{"t":"How do I get the name of an object's type in JavaScript?","l":"http://stackoverflow.com/questions/332422/how-do-i-get-the-name-of-an-objects-type-in-javascript","q":"\n\n<p>Is there a JavaScript equivalent of Java's <code>class.getName()</code>?</p>\n    ","a":"\n<blockquote>\n  <p>Is there a JavaScript equivalent of Java's <code>class.getName()</code>?</p>\n</blockquote>\n\n<p><strong><em>No</em></strong>.</p>\n\n<hr>\n\n<p>But here are various hacks that all fall down in one way or another:</p>\n\n<p>Here is a hack that will do what you need - be aware that it modifies the Object's prototype, something people frown upon (usually for good reason)</p>\n\n<pre><code>Object.prototype.getName = function() { \n   var funcNameRegex = /function (.{1,})\\(/;\n   var results = (funcNameRegex).exec((this).constructor.toString());\n   return (results &amp;&amp; results.length &gt; 1) ? results[1] : \"\";\n};\n</code></pre>\n\n<p>Now, all of your objects will have the function, <code>getName()</code>, that will return the name of the constructor as a string. I have tested this in FF3 and IE7, I can't speak for other implementations.</p>\n\n<p>If you don't want to do that, here is a discussion on the various ways of determining types in JavaScript...</p>\n\n<hr>\n\n<p>I recently updated this to be a bit more exhaustive, though it is hardly that. Corrections welcome...</p>\n\n<h2>Using the <code>constructor</code> property...</h2>\n\n<p>Every object has a value for its <code>constructor</code> property, but depending on how that object was constructed as well as what you want to do with that value, it may or may not be useful. </p>\n\n<p>Generally speaking, you can use the <code>constructor</code> property to test the type of the object like so:</p>\n\n<pre><code>var myArray = [1,2,3];\n(myArray.constructor == Array); // true\n</code></pre>\n\n<p>So, that works well enough for most needs. That said...</p>\n\n<h3>Caveats</h3>\n\n<p><strong>Will not work <em>AT ALL</em> in many cases</strong></p>\n\n<p>This pattern, though broken, is quite common:</p>\n\n<pre><code>function Thingy() {\n}\nThingy.prototype = {\n    method1: function() {\n    },\n    method2: function() {\n    }\n};\n</code></pre>\n\n<p>Objects constructed via <code>new Thingy</code> will have a <code>constructor</code> property that points to <code>Object</code>, not <code>Thingy</code>. So we fall right at the outset; you simply cannot trust <code>constructor</code> in a codebase that you don't control.</p>\n\n<p><strong>Multiple Inheritance</strong></p>\n\n<p>An example where it isn't as obvious is using multiple inheritance:</p>\n\n<pre><code>function a() { this.foo = 1;}\nfunction b() { this.bar = 2; }\nb.prototype = new a(); // b inherits from a\n</code></pre>\n\n<p>Things now don't work as you might expect them to:</p>\n\n<pre><code>var f = new b(); // instantiate a new object with the b constructor\n(f.constructor == b); // false\n(f.constructor == a); // true\n</code></pre>\n\n<p>So, you might get unexpected results if the object your testing has a different object set as its prototype. There are ways around this outside the scope of this discussion.</p>\n\n<p>There are other uses for the <code>constructor</code> property, some of them interesting, others not so much; for now we will not delve into those uses since it isn't relevant to this discussion.</p>\n\n<p><strong>Will not work cross-frame and cross-window</strong></p>\n\n<p>Using <code>.constructor</code> for type checking will break when you want to check the type of objects coming from different <code>window</code> objects, say that of an iframe or a popup window. This is because there's a different version of each core type constructor in each `window', i.e.</p>\n\n<pre><code>iframe.contentWindow.Array === Array // false\n</code></pre>\n\n<hr>\n\n<h2>Using the <code>instanceof</code> operator...</h2>\n\n<p>The <code>instanceof</code> operator is a clean way of testing object type as well, but has its own potential issues, just like the <code>constructor</code> property.</p>\n\n<pre><code>var myArray = [1,2,3];\n(myArray instanceof Array); // true\n(myArray instanceof Object); // true\n</code></pre>\n\n<p>But <code>instanceof</code> fails to work for primitive values</p>\n\n<pre><code>3 instanceof Number // false\n'abc' instanceof String // false\ntrue instanceof Boolean // false\n</code></pre>\n\n<p>A wrapper is needed around primitives in order for <code>instanceof</code> to work, for example</p>\n\n<pre><code>new Number(3) instanceof Number // true\n</code></pre>\n\n<p>This is ironic because the <code>.constructor</code> check works fine for primitives</p>\n\n<pre><code>3..constructor === Number // true\n'abc'.constructor === String // true\ntrue.constructor === Boolean // true\n</code></pre>\n\n<p>Why two dots for the 3? Because Javascript interprets the first dot as a decimal point ;)</p>\n\n<h3>Will not work cross-frame and cross-window</h3>\n\n<p><code>instanceof</code> also will not work across different windows, for the same reason as the constructor property check.</p>\n\n<hr>\n\n<h2>Using the <code>name</code> property of the <code>constructor</code> property...</h2>\n\n<h3>Does not work <em>AT ALL</em> in many cases</h3>\n\n<p>Again, see above; it's quite common for <code>constructor</code> to be utterly and completely wrong and useless.</p>\n\n<h3>Does NOT work in &lt;IE9</h3>\n\n<p>Using <code>myObjectInstance.constructor.name</code> will give you a string containing the name of the constructor function used, but is subject to the caveats about the constructor property that were mentioned earlier.</p>\n\n<p>For IE9 and above, you can <a href=\"http://matt.scharley.me/2012/03/09/monkey-patch-name-ie.html\">monkey-patch in support</a>:</p>\n\n<pre><code>if (Function.prototype.name === undefined &amp;&amp; Object.defineProperty !== undefined) {\n    Object.defineProperty(Function.prototype, 'name', {\n        get: function() {\n            var funcNameRegex = /function\\s+([^\\s(]+)\\s*\\(/;\n            var results = (funcNameRegex).exec((this).toString());\n            return (results &amp;&amp; results.length &gt; 1) ? results[1] : \"\";\n        },\n        set: function(value) {}\n    });\n}\n</code></pre>\n\n<p><strong>Updated version</strong> from the article in question. This was added 3 months after the article was published, this is the recommended version to use by the article's author Matthew Scharley. This change was inspired by <a href=\"http://matt.scharley.me/2012/03/09/monkey-patch-name-ie.html#comment-551654096\">comments pointing out potential pitfalls</a> in the previous code.</p>\n\n<pre><code>if (Function.prototype.name === undefined &amp;&amp; Object.defineProperty !== undefined) {\n    Object.defineProperty(Function.prototype, 'name', {\n        get: function() {\n            var funcNameRegex = /function\\s([^(]{1,})\\(/;\n            var results = (funcNameRegex).exec((this).toString());\n            return (results &amp;&amp; results.length &gt; 1) ? results[1].trim() : \"\";\n        },\n        set: function(value) {}\n    });\n}\n</code></pre>\n\n<hr>\n\n<h2>Using Object.prototype.toString</h2>\n\n<p>It turns out, as <a href=\"http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\">this post details</a>, you can use Object.prototype.toString - the low level and generic implementation of toString - to get the type for all built-in types</p>\n\n<pre><code>Object.prototype.toString.call('abc') // [object String]\nObject.prototype.toString.call(/abc/) // [object RegExp]\nObject.prototype.toString.call([1,2,3]) // [object Array]\n</code></pre>\n\n<p>One could write a short helper function such as</p>\n\n<pre><code>function type(obj){\n    return Object.prototype.toString.call(obj).slice(8, -1);\n}\n</code></pre>\n\n<p>to remove the cruft and get at just the type name</p>\n\n<pre><code>type('abc') // String\n</code></pre>\n\n<p>However, it will return 'Object' for all user-defined types.</p>\n\n<hr>\n\n<h2>Caveats for all...</h2>\n\n<p>All of these are subject to one potential problem, and that is the question of how the object in question was constructed. Here are various ways of building objects and the values that the different methods of type checking will return:</p>\n\n<pre><code>// using a named function:\nfunction Foo() { this.a = 1; }\nvar obj = new Foo();\n(obj instanceof Object);          // true\n(obj instanceof Foo);             // true\n(obj.constructor == Foo);         // true\n(obj.constructor.name == \"Foo\");  // true\n\n// let's add some prototypical inheritance\nfunction Bar() { this.b = 2; }\nFoo.prototype = new Bar();\nobj = new Foo();\n(obj instanceof Object);          // true\n(obj instanceof Foo);             // true\n(obj.constructor == Foo);         // false\n(obj.constructor.name == \"Foo\");  // false\n\n\n// using an anonymous function:\nobj = new (function() { this.a = 1; })();\n(obj instanceof Object);              // true\n(obj.constructor == obj.constructor); // true\n(obj.constructor.name == \"\");         // true\n\n\n// using an anonymous function assigned to a variable\nvar Foo = function() { this.a = 1; };\nobj = new Foo();\n(obj instanceof Object);      // true\n(obj instanceof Foo);         // true\n(obj.constructor == Foo);     // true\n(obj.constructor.name == \"\"); // true\n\n\n// using object literal syntax\nobj = { foo : 1 };\n(obj instanceof Object);            // true\n(obj.constructor == Object);        // true\n(obj.constructor.name == \"Object\"); // true\n</code></pre>\n\n<p>While not all permutations are present in this set of examples, hopefully there are enough to provide you with an idea about how messy things might get depending on your needs. Don't assume anything, if you don't understand exactly what you are after, you may end up with code breaking where you don't expect it to because of a lack of grokking the subtleties.</p>\n\n<h3>NOTE:</h3>\n\n<p>Discussion of the <code>typeof</code> operator may appear to be a glaring omission, but it really isn't useful in helping to identify whether an object is a given type, since it is very simplistic. Understanding where <code>typeof</code> is useful is important, but I don't currently feel that it is terribly relevant to this discussion. My mind is open to change though. :)</p>\n    "},{"t":"How to convert decimal to hex in JavaScript?","l":"http://stackoverflow.com/questions/57803/how-to-convert-decimal-to-hex-in-javascript","q":"\n\n<p>How do you convert decimal values to their hex equivalent in JavaScript?</p>\n    ","a":"\n<p>Convert a number to a hexadecimal string with:</p>\n\n<pre><code>hexString = yourNumber.toString(16);\n</code></pre>\n\n<p>and reverse the process with:</p>\n\n<pre><code>yourNumber = parseInt(hexString, 16);\n</code></pre>\n    "},{"t":"Is the recommendation to include CSS before JavaScript invalid?","l":"http://stackoverflow.com/questions/9271276/is-the-recommendation-to-include-css-before-javascript-invalid","q":"\n\n<p>In countless places online I have seen the recommendation to include CSS prior to JavaScript. The reasoning is generally, <a href=\"http://stackoverflow.com/questions/6005827/what-can-i-do-to-decrease-load-times-of-html-pages/6005832#6005832\">of this form</a>:</p>\n\n<blockquote>\n  <p>When it comes to ordering your CSS and JavaScript, you want your CSS\n  to come first. The reason is that the rendering thread has all the\n  style information it needs to render the page. If the JavaScript\n  includes come first, the JavaScript engine has to parse it all before\n  continuing on to the next set of resources. This means the rendering\n  thread can't completely show the page, since it doesn't have all the\n  styles it needs.</p>\n</blockquote>\n\n<p>My actual testing reveals something quite different: </p>\n\n<h3>My test harness</h3>\n\n<p>I use the following Ruby script to generate specific delays for various resources: </p>\n\n<pre><code>require 'rubygems'\nrequire 'eventmachine'\nrequire 'evma_httpserver'\nrequire 'date'\n\nclass Handler  &lt; EventMachine::Connection\n  include EventMachine::HttpServer\n\n  def process_http_request\n    resp = EventMachine::DelegatedHttpResponse.new( self )\n\n    return unless @http_query_string\n\n    path = @http_path_info\n    array = @http_query_string.split(\"&amp;\").map{|s| s.split(\"=\")}.flatten\n    parsed = Hash[*array]\n\n    delay = parsed[\"delay\"].to_i / 1000.0\n    jsdelay = parsed[\"jsdelay\"].to_i\n\n    delay = 5 if (delay &gt; 5)\n    jsdelay = 5000 if (jsdelay &gt; 5000)\n\n    delay = 0 if (delay &lt; 0) \n    jsdelay = 0 if (jsdelay &lt; 0)\n\n    # Block which fulfills the request\n    operation = proc do\n      sleep delay \n\n      if path.match(/.js$/)\n        resp.status = 200\n        resp.headers[\"Content-Type\"] = \"text/javascript\"\n        resp.content = \"(function(){\n            var start = new Date();\n            while(new Date() - start &lt; #{jsdelay}){}\n          })();\"\n      end\n      if path.match(/.css$/)\n        resp.status = 200\n        resp.headers[\"Content-Type\"] = \"text/css\"\n        resp.content = \"body {font-size: 50px;}\"\n      end\n    end\n\n    # Callback block to execute once the request is fulfilled\n    callback = proc do |res|\n        resp.send_response\n    end\n\n    # Let the thread pool (20 Ruby threads) handle request\n    EM.defer(operation, callback)\n  end\nend\n\nEventMachine::run {\n  EventMachine::start_server(\"0.0.0.0\", 8081, Handler)\n  puts \"Listening...\"\n}\n</code></pre>\n\n<p>The above mini server allows me to set arbitrary delays for JavaScript files (both server and client) and arbitrary CSS delays. For example, <code>http://10.0.0.50:8081/test.css?delay=500</code> gives me a 500&nbsp;ms delay transferring the CSS. </p>\n\n<p>I use the following page to test.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n      &lt;title&gt;test&lt;/title&gt;\n      &lt;script type='text/javascript'&gt;\n          var startTime = new Date();\n      &lt;/script&gt;\n      &lt;link href=\"http://10.0.0.50:8081/test.css?delay=500\" type=\"text/css\" rel=\"stylesheet\"&gt;\n      &lt;script type=\"text/javascript\" src=\"http://10.0.0.50:8081/test2.js?delay=400&amp;amp;jsdelay=1000\"&gt;&lt;/script&gt; \n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p&gt;\n      Elapsed time is: \n      &lt;script type='text/javascript'&gt;\n        document.write(new Date() - startTime);\n      &lt;/script&gt;\n    &lt;/p&gt;    \n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>When I include the CSS first, the page takes 1.5&nbsp;seconds to render: </p>\n\n<p><img src=\"http://i.stack.imgur.com/ZDgrs.png\" alt=\"CSS first\"></p>\n\n<p>When I include the JavaScript first, the page takes 1.4&nbsp;seconds to render: </p>\n\n<p><img src=\"http://i.stack.imgur.com/5o5SG.png\" alt=\"JavaScript first\"></p>\n\n<p>I get similar results in Chrome, Firefox and Internet&nbsp;Explorer. In Opera however, the ordering simply does not matter.</p>\n\n<p>What appears to be happening is that the JavaScript interpreter refuses to start until all the CSS is downloaded. So, it seems that having JavaScript includes first is more efficient as the JavaScript thread gets more run time. </p>\n\n<p>Am I missing something, is the recommendation to place CSS includes prior to JavaScript includes not correct? </p>\n\n<p><sub>It is clear that we could add async or use setTimeout to free up the render thread or put the JavaScript code in the footer, or use a JavaScript loader. The point here is about ordering of essential JavaScript bits and CSS bits in the head.</sub></p>\n    ","a":"\n<p>This is a very interesting question.  I've always put my CSS <code>&lt;link href=\"...\"&gt;</code>s before my JS <code>&lt;script src=\"...\"&gt;</code>s because \"I read one time that it's better.\"  So, you're right; it's high time we do some actual research!</p>\n\n<p>I set up my own test harness in Node (code below).  Basically, I:</p>\n\n<ul>\n<li>Made sure there was no HTTP caching so the browser would have to do a full download each time a page is loaded.</li>\n<li>To simulate reality, I included jQuery and the <a href=\"http://html5boilerplate.com/\">H5BP</a> CSS (so there's a decent amount of script/CSS to parse)</li>\n<li>Set up two pages - one with CSS before script, one with CSS after script.</li>\n<li>Recorded how long it took for the external script in the <strong><code>&lt;head&gt;</code></strong> to execute</li>\n<li>Recorded how long it took for the inline script in the <strong><code>&lt;body&gt;</code></strong> to execute, which is analogous to <code>DOMReady</code>.</li>\n<li>Delayed sending CSS and/or script to the browser by 500ms.</li>\n<li>Ran the test 20 times in the 3 major browsers.</li>\n</ul>\n\n<h1>Results</h1>\n\n<p>First, with the CSS file delayed by 500ms:</p>\n\n<pre><code>     Browser: Chrome 18    | IE 9         | Firefox 9\n         CSS: first  last  | first  last  | first last\n=======================================================\nHeader Exec |              |              |\nAverage     | 583ms  36ms  | 559ms  42ms  | 565ms 49ms\nSt Dev      | 15ms   12ms  | 9ms    7ms   | 13ms  6ms\n------------|--------------|--------------|------------\nBody Exec   |              |              |\nAverage     | 584ms  521ms | 559ms  513ms | 565ms 519ms\nSt Dev      | 15ms   9ms   | 9ms    5ms   | 13ms  7ms\n</code></pre>\n\n<p>Next, I set jQuery to delay by 500ms instead of the CSS:</p>\n\n<pre><code>     Browser: Chrome 18    | IE 9         | Firefox 9\n         CSS: first  last  | first  last  | first last\n=======================================================\nHeader Exec |              |              |\nAverage     | 597ms  556ms | 562ms  559ms | 564ms 564ms\nSt Dev      | 14ms   12ms  | 11ms   7ms   | 8ms   8ms\n------------|--------------|--------------|------------\nBody Exec   |              |              |\nAverage     | 598ms  557ms | 563ms  560ms | 564ms 565ms\nSt Dev      | 14ms   12ms  | 10ms   7ms   | 8ms   8ms\n</code></pre>\n\n<p>Finally, I set <strong>both</strong> jQuery and the CSS to delay by 500ms:</p>\n\n<pre><code>     Browser: Chrome 18    | IE 9         | Firefox 9\n         CSS: first  last  | first  last  | first last\n=======================================================\nHeader Exec |              |              |\nAverage     | 620ms  560ms | 577ms  577ms | 571ms 567ms\nSt Dev      | 16ms   11ms  | 19ms   9ms   | 9ms   10ms\n------------|--------------|--------------|------------\nBody Exec   |              |              |\nAverage     | 623ms  561ms | 578ms  580ms | 571ms 568ms\nSt Dev      | 18ms   11ms  | 19ms   9ms   | 9ms   10ms\n</code></pre>\n\n<h1>Conclusions</h1>\n\n<p>First, it's important to note that I'm operating under the assumption that you have scripts located in the <code>&lt;head&gt;</code> of your document (as opposed to the end of the <code>&lt;body&gt;</code>).  There are various arguments regarding why you might link to your scripts in the <code>&lt;head&gt;</code> versus the end of the document, but that's outside the scope of this answer.  This is strictly about whether <code>&lt;script&gt;</code>s should go before <code>&lt;link&gt;</code>s in the <code>&lt;head&gt;</code>.</p>\n\n<p><strong>In modern DESKTOP browsers,</strong> it looks like linking to CSS first <strong>never</strong> provides a performance gain.  Putting CSS after script gets you a trivial amount of gain when both CSS and script are delayed, but gives you large gains when CSS is delayed.  (Shown by the <code>last</code> columns in the first set of results.)</p>\n\n<p>Given that linking to CSS last does not seem to hurt performance but <em>can</em> provide gains under certain circumstances, <strong>you should link to external stylesheets <em>after</em> you link to external scripts <em>only on desktop browsers</em></strong> if the performance of old browsers is not a concern.  <strong>Read on for the mobile situation.</strong></p>\n\n<h1>Why?</h1>\n\n<p>Historically, when a browser encountered a <code>&lt;script&gt;</code> tag pointing to an external resource, the browser would <strong>stop</strong> parsing the HTML, retrieve the script, execute it, then continue parsing the HTML.  In contrast, if the browser encountered a <code>&lt;link&gt;</code> for an external stylesheet, it would <em>continue</em> parsing the HTML while it fetched the CSS file (in parallel).</p>\n\n<p>Hence, the widely-repeated advice to put stylesheets first – they would download first, and the first script to download could be loaded in parallel.</p>\n\n<p>However, modern browsers (including all of the browsers I tested with above) have implemented <a href=\"https://www.google.com/search?q=speculative+parsing\"><em>speculative parsing</em></a>, where the browser \"looks ahead\" in the HTML and begins downloading resources <em>before</em> scripts download and execute.</p>\n\n<p>In old browsers without speculative parsing, putting scripts first will affect performance since they will not download in parallel.</p>\n\n<h2>Browser Support</h2>\n\n<p>Speculative parsing was first implemented in: (along with the percentage of worldwide desktop browser users using this version or greater as of Jan 2012)</p>\n\n<ul>\n<li>Chrome 1 (WebKit 525) (100%)</li>\n<li>IE 8 (75%)</li>\n<li>Firefox 3.5 (96%)</li>\n<li>Safari 4 (99%)</li>\n<li>Opera 11.60 (85%)</li>\n</ul>\n\n<p>In total, roughly 85% of desktop browsers in use today support speculative loading.  Putting scripts before CSS will have a performance penalty on 15% of users <em>globally</em>; YMMV based on your site's specific audience.  (And remember that number is shrinking.)</p>\n\n<p>On mobile browsers, it's a little harder to get definitive numbers simply due to how heterogeneous the mobile browser and OS landscape is.  Since speculative rendering was implemented in WebKit 525 (released Mar 2008), and just about every worthwhile mobile browser is based on WebKit, we can conclude that \"most\" mobile browsers <em>should</em> support it.  According to <a href=\"http://www.quirksmode.org/webkit.html\">quirksmode</a>, iOS 2.2/Android 1.0 use WebKit 525.  I have no idea what Windows Phone looks like.</p>\n\n<p><strong>However,</strong> I ran the test on my Android 4 device, and while I saw numbers similar to the desktop results, I hooked it up to the fantastic new <a href=\"http://code.google.com/chrome/mobile/docs/debugging.html\">remote debugger</a> in Chrome for Android, and Network tab showed that the browser was actually waiting to download the CSS until the JavaScripts completely loaded – in other words, <strong>even the newest version of WebKit for Android does not appear to support speculative parsing.</strong>  I suspect it might be turned off due to the CPU, memory, and/or network constraints inherent to mobile devices.</p>\n\n<h1>Code</h1>\n\n<p>Forgive the sloppiness – this was Q&amp;D.</p>\n\n<p>app.js</p>\n\n<pre><code>var express = require('express')\n, app = express.createServer()\n, fs = require('fs');\n\napp.listen(90);\n\nvar file={};\nfs.readdirSync('.').forEach(function(f) {\n    console.log(f)\n    file[f] = fs.readFileSync(f);\n    if (f != 'jquery.js' &amp;&amp; f != 'style.css') app.get('/' + f, function(req,res) {\n        res.contentType(f);\n        res.send(file[f]);\n    });\n});\n\n\napp.get('/jquery.js', function(req,res) {\n    setTimeout(function() {\n        res.contentType('text/javascript');\n        res.send(file['jquery.js']);\n    }, 500);\n});\n\napp.get('/style.css', function(req,res) {\n    setTimeout(function() {\n        res.contentType('text/css');\n        res.send(file['style.css']);\n    }, 500);\n});\n\n\nvar headresults={\n    css: [],\n    js: []\n}, bodyresults={\n    css: [],\n    js: []\n}\napp.post('/result/:type/:time/:exec', function(req,res) {\n    headresults[req.params.type].push(parseInt(req.params.time, 10));\n    bodyresults[req.params.type].push(parseInt(req.params.exec, 10));\n    res.end();\n});\n\napp.get('/result/:type', function(req,res) {\n    var o = '';\n    headresults[req.params.type].forEach(function(i) {\n        o+='\\n' + i;\n    });\n    o+='\\n';\n    bodyresults[req.params.type].forEach(function(i) {\n        o+='\\n' + i;\n    });\n    res.send(o);\n});\n</code></pre>\n\n<p>css.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;CSS first&lt;/title&gt;\n        &lt;script&gt;var start = Date.now();&lt;/script&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n        &lt;script src=\"jquery.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"test.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script&gt;document.write(jsload - start);bodyexec=Date.now()&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>js.html</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;CSS first&lt;/title&gt;\n        &lt;script&gt;var start = Date.now();&lt;/script&gt;\n        &lt;script src=\"jquery.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"test.js\"&gt;&lt;/script&gt;\n        &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;script&gt;document.write(jsload - start);bodyexec=Date.now()&lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>test.js</p>\n\n<pre><code>var jsload = Date.now();\n\n\n$(function() {\n    $.post('/result' + location.pathname.replace('.html','') + '/' + (jsload - start) + '/' + (bodyexec - start));\n});\n</code></pre>\n\n<p>jquery.js was <a href=\"http://code.jquery.com/jquery-1.7.1.min.js\">jquery-1.7.1.min.js</a></p>\n    "},{"t":"What is the purpose of Node.js module.exports and how do you use it?","l":"http://stackoverflow.com/questions/5311334/what-is-the-purpose-of-node-js-module-exports-and-how-do-you-use-it","q":"\n\n<p>What is the purpose of Node.js module.exports and how do you use it?</p>\n\n<p>I can't seem to find any information on this, but it appears to be a rather important part of Node.js as I often see it in source code.  </p>\n\n<p>According to the <a href=\"http://nodejs.org/docs/v0.4.2/api/globals.html#module\">Node.js documentation</a>:</p>\n\n<blockquote>\n  <p><strong>module</strong> </p>\n  \n  <p>A reference to the current\n  <code>module</code>. In particular <code>module.exports</code>\n  is the same as the exports object. See\n  <code>src/node.js</code> for more information.</p>\n</blockquote>\n\n<p>But this doesn't really help.</p>\n\n<p>What exactly does <code>module.exports</code> do, and what would a simple example be?</p>\n    ","a":"\n<p><a href=\"http://nodejs.org/api/modules.html#modules_module_exports\"><code>module.exports</code></a> is the object that's actually returned as the result of a <code>require</code> call.</p>\n\n<p>The <code>exports</code> variable is initially set to that same object (i.e. it's a shorthand \"alias\"), so in the module code you would usually write something like this:</p>\n\n<pre><code>var myFunc1 = function() { ... };\nvar myFunc2 = function() { ... };\nexports.myFunc1 = myFunc1;\nexports.myFunc2 = myFunc2;\n</code></pre>\n\n<p>to export (or \"expose\") the internally scoped functions <code>myFunc1</code> and <code>myFunc2</code>.</p>\n\n<p>And in the calling code you would use:</p>\n\n<pre><code>var m = require('mymodule');\nm.myFunc1();\n</code></pre>\n\n<p>where the last line shows how the result of <code>require</code> is (usually) just a plain object whose properties may be accessed.</p>\n\n<p>NB: if you overwrite <code>exports</code> then it will no longer refer to <code>module.exports</code>.  So if you wish to assign a new object (or a function reference) to <code>exports</code> then you should also assign that new object to <code>module.exports</code></p>\n\n<hr>\n\n<p>It's worth noting that the name added to the <code>exports</code> object does not have to be the same as the module's internally scoped name for the value that you're adding, so you could have:</p>\n\n<pre><code>var myVeryLongInternalName = function() { ... };\nexports.shortName = myVeryLongInternalName;\n// add other objects, functions, as required\n</code></pre>\n\n<p>followed by:</p>\n\n<pre><code>var m = require('mymodule');\nm.shortName(); // invokes module.myVeryLongInternalName\n</code></pre>\n    "},{"t":"How do I declare a namespace in JavaScript?","l":"http://stackoverflow.com/questions/881515/how-do-i-declare-a-namespace-in-javascript","q":"\n\n<p>How do I create a namespace in JavaScript so that my objects and functions aren't overwritten by other same-named objects and functions? I've used the following:</p>\n\n<pre><code>if (Foo == null || typeof(Foo) != \"object\") { var Foo = new Object();}\n</code></pre>\n\n<p>Is there a more elegant or succinct way of doing this?</p>\n    ","a":"\n<p>I like this:</p>\n\n<pre><code>var yourNamespace = {\n\n    foo: function() {\n    },\n\n    bar: function() {\n    }\n};\n\n...\n\nyourNamespace.foo();\n</code></pre>\n    "},{"t":"Why aren't ◎ܫ◎ and ☺ valid JavaScript variable names?","l":"http://stackoverflow.com/questions/7451524/why-arent-%e2%97%8e%dc%ab%e2%97%8e-and-%e2%98%ba-valid-javascript-variable-names","q":"\n\n<p>I noticed that in Internet Explorer (but, unfortunately, not in the other browsers I tested), you can use some Unicode variable names. This made my day, and I was absolutely delighted that I could write fun Unicode-laden code like this:</p>\n\n<pre><code>var ктоείναι草泥马 = \"You dirty horse.\",\n    happy☺n☺mat☺p☺eia = \":)Yay!\",\n    ಠ_ಠ = \"emoticon\";\n\nalert(ктоείναι草泥马 + happy☺n☺mat☺p☺eia + ಠ_ಠ);\n</code></pre>\n\n<p>For some reason, though, <code>◎ܫ◎</code>, <code>♨_♨</code> and <code>☺</code> are not valid variable names.</p>\n\n<p>Why do <code>ಠ_ಠ</code> and <code>草泥马</code> work, but <code>◎ܫ◎</code>, <code>♨_♨</code> and <code>☺</code> don't?</p>\n\n<p>EDIT: Test it out in your browser on <a href=\"http://jsfiddle.net/h5Gsf/1/\">JSFiddle</a>. I've tested it in Internet&nbsp;Explorer&nbsp;9, Chrome, Firefox, and Opera. So far, it seems to only work in Internet&nbsp;Explorer&nbsp;9. (I don't know about Internet&nbsp;Explorer&nbsp;8 and below.) Let me know if it works in another browser.</p>\n    ","a":"\n<p>ಠ_ಠ\nand 草泥马 only contain \"letters\" used in actual alphabets; that is, ಠ\nis a symbol from the <a href=\"http://en.wikipedia.org/wiki/Kannada_alphabet\">Kannada alphabet</a>, and 草泥马 consists of Chinese characters.</p>\n\n<p>◎ and ☺, however, are purely symbols; they are not associated with any alphabet.</p>\n\n<p>The <a href=\"http://es5.github.com/#x7.6\">ECMAScript standard, chapter 7.6</a> (which all the browsers except Internet Explorer are following), states that an identifier must start with one of the following.</p>\n\n<ul>\n<li>a Unicode letter</li>\n<li><code>$</code> or <code>_</code></li>\n<li><code>\\</code> followed by a unicode escape sequence.</li>\n</ul>\n\n<p>The following characters of an identifier must be one of the following.</p>\n\n<ul>\n<li>any of the characters permitted at the start</li>\n<li>a Unicode combining mark</li>\n<li>a Unicode digit</li>\n<li>a Unicode connector punctuation</li>\n<li>a zero-width-non-joiner</li>\n<li>a zero-width joiner</li>\n</ul>\n\n<p>IE goes beyond the standard and is permissive enough to allow some symbols, such as ☺.</p>\n\n<p>There’s <a href=\"http://mothereff.in/js-variables\">a tool</a> that will tell you if any string that you enter is a valid JavaScript variable name according to ECMAScript 5.1 and Unicode 6.1.</p>\n    "},{"t":"How can I format numbers as money in JavaScript?","l":"http://stackoverflow.com/questions/149055/how-can-i-format-numbers-as-money-in-javascript","q":"\n\n<p>I would like to format a price in JavaScript.<br>\nI'd like a function which takes a <code>float</code> as an argument and returns a <code>string</code> formatted like this:</p>\n\n<pre><code>\"$ 2,500.00\"\n</code></pre>\n\n<p>What's the best way to do this?</p>\n    ","a":"\n<p>Ok, based on what you said, i'm using this:</p>\n\n<pre><code>var DecimalSeparator = Number(\"1.2\").toLocaleString().substr(1,1);\n\nvar AmountWithCommas = Amount.toLocaleString();\nvar arParts = String(AmountWithCommas).split(DecimalSeparator);\nvar intPart = arParts[0];\nvar decPart = (arParts.length &gt; 1 ? arParts[1] : '');\ndecPart = (decPart + '00').substr(0,2);\n\nreturn '£ ' + intPart + DecimalSeparator + decPart;\n</code></pre>\n\n<p>I'm open to improvement suggestions (i'd prefer not to include YUI just to do this :-) )\nI already know I should be detecting the \".\" instead of just using it as the decimal separator...</p>\n    "},{"t":"Get selected value in dropdown list using JavaScript?","l":"http://stackoverflow.com/questions/1085801/get-selected-value-in-dropdown-list-using-javascript","q":"\n\n<p>How do I get the selected value from a dropdown list using JavaScript?</p>\n\n<p>I tried the methods below but they all return the selected index instead of the value:</p>\n\n<pre><code>var as = document.form1.ddlViewBy.value;\nvar e = document.getElementById(\"ddlViewBy\");\nvar strUser = e.options[e.selectedIndex].value;\n\n//This is one of the simplest form by (Narendra Kottamidde) :\n\nvar value = document.getElementById(\"ddlViewBy\").value;\n</code></pre>\n    ","a":"\n<p>If you have a select element that looks like this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;select id=\"ddlViewBy\"&gt;\n  &lt;option value=\"1\"&gt;test1&lt;/option&gt;\n  &lt;option value=\"2\" selected=\"selected\"&gt;test2&lt;/option&gt;\n  &lt;option value=\"3\"&gt;test3&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p>Running this code:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var e = document.getElementById(\"ddlViewBy\");\nvar strUser = e.options[e.selectedIndex].value;\n</code></pre>\n\n<p>Would make <code>strUser</code> be <code>2</code>. If what you actually want is <code>test2</code>, then do this:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var e = document.getElementById(\"ddlViewBy\");\nvar strUser = e.options[e.selectedIndex].text;\n</code></pre>\n\n<p>Which would make <code>strUser</code> be <code>test2</code></p>\n    "},{"t":"Why is null an object and what's the difference between null and undefined?","l":"http://stackoverflow.com/questions/801032/why-is-null-an-object-and-whats-the-difference-between-null-and-undefined","q":"\n\n<p>Why is null considered an object in JavaScript?</p>\n\n<p>Is checking </p>\n\n<pre><code>if ( object == null )\n      Do something\n</code></pre>\n\n<p>the same as </p>\n\n<pre><code>if ( !object )\n      Do something\n</code></pre>\n\n<p>?</p>\n\n<p>And also:</p>\n\n<p>What is the difference between null and undefined?</p>\n    ","a":"\n<pre><code>(name is undefined)\n</code></pre>\n\n<p><strong>You:</strong> What is <code>name</code>?<sup> (*)</sup><br>\n<strong>JavaScript:</strong> <code>name</code>? What's a <code>name</code>? I don't know what you're talking about. You haven't ever mentioned any <code>name</code> before. Are you seeing some other scripting language on the (client-)side?</p>\n\n<pre><code>name = null;\n</code></pre>\n\n<p><strong>You:</strong> What is <code>name</code>?<br>\n<strong>JavaScript:</strong> I don't know.</p>\n\n<p>In short; <code>undefined</code> is where no notion of the thing exists; it has no type, and it's never been referenced before in that scope; <code>null</code> is where the thing is known to exist, but it's not known what the value is.</p>\n\n<p>One thing to remember is that <code>null</code> is not, conceptually, the same as <code>false</code> or <code>\"\"</code> or such, even if they equate after type casting, i.e.</p>\n\n<pre><code>name = false;\n</code></pre>\n\n<p><strong>You:</strong> What is <code>name</code>?<br>\n<strong>JavaScript:</strong> Boolean false.</p>\n\n<pre><code>name = '';\n</code></pre>\n\n<p><strong>You:</strong> What is <code>name</code>?<br>\n<strong>JavaScript:</strong> Empty string</p>\n\n<hr>\n\n<p><sup>*: <code>name</code> in this context is meant as a variable which has never been defined. It could be be any undefined variable. However, name is a property of just about any HTML form element. It goes way, way back and was instituted well before id. It is useful because ids must be unique but names to not have to be. \n</sup></p>\n    "},{"t":"What do I do if I want a JavaScript version of sleep()?","l":"http://stackoverflow.com/questions/951021/what-do-i-do-if-i-want-a-javascript-version-of-sleep","q":"\n\n<p>Is there a better way to engineer a <code>sleep</code> in JavaScript than the following <code>pausecomp</code>  function (<a href=\"http://www.sean.co.uk/a/webdesign/javascriptdelay.shtm\">taken from here</a>)?</p>\n\n<pre><code>function pausecomp(millis)\n {\n  var date = new Date();\n  var curDate = null;\n  do { curDate = new Date(); }\n  while(curDate-date &lt; millis);\n}\n</code></pre>\n\n<p>This is not a duplicate of <a href=\"http://stackoverflow.com/questions/758688/sleep-in-javascript\">Sleep in Javascript</a>; I want a real sleep in the middle of a function, and not a delay before a piece of code executes.</p>\n    ","a":"\n<p>In JavaScript, I rewrite every function so that it can end as soon as possible. You want the browser back in control so it can make your DOM changes.</p>\n\n<p>Every time I've wanted a sleep in the middle of my function, I refactored to use a setTimeout().</p>\n    "},{"t":"Get the size of the screen, current web page and browser window","l":"http://stackoverflow.com/questions/3437786/get-the-size-of-the-screen-current-web-page-and-browser-window","q":"\n\n<p>How can I get <code>windowWidth</code>, <code>windowHeight</code>, <code>pageWidth</code>, <code>pageHeight</code>, <code>screenWidth</code>, <code>screenHeight</code>, <code>pageX</code>, <code>pageY</code>, <code>screenX</code>, <code>screenY</code> which will work in all major browsers?</p>\n\n<p><img src=\"http://i.stack.imgur.com/6xPdH.png\" alt=\"screenshot describing which values are wanted\"></p>\n    ","a":"\n<p>If you are using jQuery, you can get the size of the window or the document using jQuery methods:</p>\n\n<pre><code>$(window).height();   // returns height of browser viewport\n$(document).height(); // returns height of HTML document\n$(window).width();   // returns width of browser viewport\n$(document).width(); // returns width of HTML document\n</code></pre>\n\n<p>For screen size you can use the <code>screen</code> object in the following way:</p>\n\n<pre><code>screen.height;\nscreen.width;\n</code></pre>\n    "},{"t":"Round to at most 2 decimal places in JavaScript","l":"http://stackoverflow.com/questions/11832914/round-to-at-most-2-decimal-places-in-javascript","q":"\n\n<p>I'd like to round up to 2 decimal places, but <em>only if necessary</em>.</p>\n\n<p>Input:</p>\n\n<pre><code>10\n1.7777777\n9.1\n</code></pre>\n\n<p>Output:</p>\n\n<pre><code>10\n1.78\n9.1\n</code></pre>\n\n<p>How can I do this in JavaScript? </p>\n    ","a":"\n<p>Use <code>Math.round(num * 100) / 100</code></p>\n    "},{"t":"Generating random numbers in Javascript in a specific range?","l":"http://stackoverflow.com/questions/1527803/generating-random-numbers-in-javascript-in-a-specific-range","q":"\n\n<p>How can I generate a random whole number between two specified variables in Javascript, e.g. <code>x = 4</code> and <code>y = 8</code> would output any of 4, 5, 6, 7, 8?</p>\n    ","a":"\n<p>There are some examples on the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Math/random\">Mozilla Developer Center</a> page:</p>\n\n<pre><code>/**\n * Returns a random number between min (inclusive) and max (exclusive)\n */\nfunction getRandomArbitrary(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random integer between min (inclusive) and max (inclusive)\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n</code></pre>\n\n<hr>\n\n<p>Here's the logic behind it. It's a simple rule of three:</p>\n\n<p><code>Math.random()</code> returns a <code>Number</code> between 0 (inclusive) and 1 (exclusive). So we have an interval like this:</p>\n\n<pre><code>[0 .................................... 1)\n</code></pre>\n\n<p>Now, we'd like a number between <code>min</code> (inclusive) and <code>max</code> (exclusive):</p>\n\n<pre><code>[0 .................................... 1)\n[min .................................. max)\n</code></pre>\n\n<p>We can use the <code>Math.random</code> to get the correspondent in the [min, max) interval. But, first we should factor a little bit the problem by subtracting <code>min</code> from the second interval:</p>\n\n<pre><code>[0 .................................... 1)\n[min - min ............................ max - min)\n</code></pre>\n\n<p>This gives:</p>\n\n<pre><code>[0 .................................... 1)\n[0 .................................... max - min)\n</code></pre>\n\n<p>We may now apply <code>Math.random</code> and then calculate the correspondent. Let's choose a random number:</p>\n\n<pre><code>                Math.random()\n                    |\n[0 .................................... 1)\n[0 .................................... max - min)\n                    |\n                    x (what we need)\n</code></pre>\n\n<p>So, in order to find <code>x</code>, we would do:</p>\n\n<pre><code>x = Math.random() * (max - min);\n</code></pre>\n\n<p>Don't forget to add <code>min</code> back, so that we get a number in the [min, max) interval:</p>\n\n<pre><code>x = Math.random() * (max - min) + min;\n</code></pre>\n\n<p>That was the first function from MDC. The second one, returns an integer between <code>min</code> and <code>max</code>, both inclusive.</p>\n\n<p>Now for getting integers, you could use <code>round</code>, <code>ceil</code> or <code>floor</code>.</p>\n\n<p>You could use <code>Math.round(Math.random() * (max - min)) + min</code>, this however gives a non-even distribution. Both, <code>min</code> and <code>max</code> only have approximately half the chance to roll:</p>\n\n<pre><code>min...min+0.5...min+1...min+1.5   ...    max-0.5....max\n└───┬───┘└────────┬───────┘└───── ... ─────┘└───┬──┘   ← round()\n   min          min+1                          max\n</code></pre>\n\n<p>With <code>max</code> excluded from the interval, it has an even less chance to roll than <code>min</code>.</p>\n\n<p>With <code>Math.floor(Math.random() * (max - min +1)) + min</code> you have a perfectly even distribution.</p>\n\n<pre><code>min.... min+1... min+2 ... max-1... max.... max+1 (is excluded from interval)\n|        |        |         |        |        |\n└───┬───┘└───┬───┘└─── ... ┘└───┬───┘└───┬───┘   ← floor()\n   min     min+1               max-1    max\n</code></pre>\n\n<p>You can't use <code>ceil()</code> and <code>-1</code> in that equation because <code>max</code> now had a slightly less chance to roll, but you can roll the (unwanted) <code>min-1</code> result too.</p>\n    "},{"t":"How to efficiently count the number of keys/properties of an object in JavaScript?","l":"http://stackoverflow.com/questions/126100/how-to-efficiently-count-the-number-of-keys-properties-of-an-object-in-javascrip","q":"\n\n<p>What's the fastest way to count the number of keys/properties of an object?  It it possible to do this without iterating over the object?  i.e. without doing</p>\n\n<pre><code>var count = 0;\nfor (k in myobj) if (myobj.hasOwnProperty(k)) count++;\n</code></pre>\n\n<p>(Firefox did provide a magic <code>__count__</code> property, but this was removed somewhere around version 4.)</p>\n    ","a":"\n<p>To do this in any ES5-compatible environment, such as <a href=\"http://nodejs.org\">Node</a>, Chrome, IE 9+, FF 4+, or Safari 5+:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Object.keys(obj).length\n</code></pre>\n\n<ul>\n<li><a href=\"http://kangax.github.com/es5-compat-table/\">Browser compatibility</a></li>\n<li><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">Object.keys documentation</a> \n<ul>\n<li>(includes a method you can add to non-ECMA5 browsers)</li>\n</ul></li>\n</ul>\n    "},{"t":"When is a CDATA section necessary within a script tag?","l":"http://stackoverflow.com/questions/66837/when-is-a-cdata-section-necessary-within-a-script-tag","q":"\n\n<p>Are CDATA tags ever necessary in script tags and if so when?</p>\n\n<p>In other words, when and where is this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n//&lt;![CDATA[\n...code...\n//]]&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>preferable to this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n...code...\n&lt;/script&gt;\n</code></pre>\n    ","a":"\n<p>A CDATA section is required if you need your document to parse as XML (e.g. when an XHTML page is interpreted as XML) <em>and you want to be able to write literal <code>i&lt;10</code> and <code>a &amp;&amp; b</code> instead of <code>i&amp;lt;10</code> and <code>a &amp;amp;&amp;amp; b</code></em>, as XHTML will parse the JavaScript code as parsed character data as opposed to character data by default.  This is not an issue with scripts that are stored in external source files, but for any inline JavaScript in XHTML you will <em>probably</em> want to use a CDATA section.</p>\n\n<p>Note that many XHTML pages were never intended to be parsed as XML in which case this will not be an issue.</p>\n\n<p>For a good writeup on the subject, see <a href=\"http://javascript.about.com/library/blxhtml.htm\">http://javascript.about.com/library/blxhtml.htm</a></p>\n    "},{"t":"How can I display a JavaScript object?","l":"http://stackoverflow.com/questions/957537/how-can-i-display-a-javascript-object","q":"\n\n<p>How do I display the content of a JavaScript object in a string format like when we <code>alert</code> a variable?</p>\n\n<p>The same formatted way I want to display an object.</p>\n    ","a":"\n<p>If you want to print the object for debugging purposes, I suggest instead installing <a href=\"http://getfirebug.com\">Firebug for Firefox</a> and using the code:</p>\n\n<pre><code>console.log(obj)\n</code></pre>\n    "},{"t":"window.onload vs $(document).ready()","l":"http://stackoverflow.com/questions/3698200/window-onload-vs-document-ready","q":"\n\n<p>What are the differences between JavaScript's <a href=\"https://developer.mozilla.org/en/docs/Web/API/GlobalEventHandlers/onload\" rel=\"nofollow\"><code>window.onload</code></a> and JQuery's <a href=\"https://api.jquery.com/ready/\" rel=\"nofollow\"><code>$(document).ready()</code></a> method?</p>\n    ","a":"\n<p>The <code>ready</code> event occurs after the HTML document has been loaded, while the <code>onload</code> event occurs later, when all content (e.g. images) also has been loaded.</p>\n\n<p>The <code>onload</code> event is a standard event in the DOM, while the <code>ready</code> event is specific to jQuery. The purpose of the <code>ready</code> event is that it should occur as early as possible after the document has loaded, so that code that adds functionality to the elements in the page doesn't have to wait for all content to load.</p>\n    "},{"t":"How do I check if an object has a property in JavaScript?","l":"http://stackoverflow.com/questions/135448/how-do-i-check-if-an-object-has-a-property-in-javascript","q":"\n\n<p>How do I check if an object has a property in JavaScript?</p>\n\n<p>Consider:</p>\n\n<pre><code>x = {'key': 1};\nif ( x.hasOwnProperty('key') ) {\n    //Do this\n}\n</code></pre>\n\n<p>Is that the best way to do that?</p>\n    ","a":"\n<p>I'm really confused by the answers that have been given - most of them are just outright incorrect. Of course you can have object properties that have undefined, null, or false values. So simply reducing the property check to <code>typeof this[property]</code> or, even worse, <code>x.key</code> will give you completely misleading results.</p>\n\n<p>It depends on what you're looking for. If you want to know if an object physically contains a property (and it is not coming from somewhere up on the prototype chain) then <code>object.hasOwnProperty</code> is the way to go. All modern browsers support it. (It was missing in older versions of Safari - 2.0.1 and older - but those versions of the browser are rarely used any more.)</p>\n\n<p>If what you're looking for is if an object has a property on it that is iterable (when you iterate over the properties of the object, it will appear) then doing: <code>prop in object</code> will give you your desired effect.</p>\n\n<p>Since using <code>hasOwnProperty</code> is probably what you want, and considering that you may want a fallback method, I present to you the following solution:</p>\n\n<pre><code>var obj = {\n    a: undefined,\n    b: null,\n    c: false\n};\n\n// a, b, c all found\nfor ( var prop in obj ) {\n    document.writeln( \"Object1: \" + prop );\n}\n\nfunction Class(){\n    this.a = undefined;\n    this.b = null;\n    this.c = false;\n}\n\nClass.prototype = {\n    a: undefined,\n    b: true,\n    c: true,\n    d: true,\n    e: true\n};\n\nvar obj2 = new Class();\n\n// a, b, c, d, e found\nfor ( var prop in obj2 ) {\n    document.writeln( \"Object2: \" + prop );\n}\n\nfunction hasOwnProperty(obj, prop) {\n    var proto = obj.__proto__ || obj.constructor.prototype;\n    return (prop in obj) &amp;&amp;\n        (!(prop in proto) || proto[prop] !== obj[prop]);\n}\n\nif ( Object.prototype.hasOwnProperty ) {\n    var hasOwnProperty = function(obj, prop) {\n        return obj.hasOwnProperty(prop);\n    }\n}\n\n// a, b, c found in modern browsers\n// b, c found in Safari 2.0.1 and older\nfor ( var prop in obj2 ) {\n    if ( hasOwnProperty(obj2, prop) ) {\n        document.writeln( \"Object2 w/ hasOwn: \" + prop );\n    }\n}\n</code></pre>\n\n<p>The above is a working, cross-browser, solution to <code>hasOwnProperty</code>, with one caveat: It is unable to distinguish between cases where an identical property is on the prototype and on the instance - it just assumes that it's coming from the prototype. You could shift it to be more lenient or strict, based upon your situation, but at the very least this should be more helpful.</p>\n    "},{"t":"Trigger a button click with JavaScript on the Enter key in a text box","l":"http://stackoverflow.com/questions/155188/trigger-a-button-click-with-javascript-on-the-enter-key-in-a-text-box","q":"\n\n<p>I have one text input and one button (see below). How can I use JavaScript to <strong>trigger the button's click event</strong> when the <kbd>Enter</kbd> key is pressed inside the text box?</p>\n\n<p>There is already a different submit button on my current page, so I can't simply make the button a submit button. And, I <em>only</em> want the <kbd>Enter</kbd> key to click this specific button if it is pressed from within this one text box, nothing else.</p>\n\n<pre><code>&lt;input type=\"text\" id=\"txtSearch\" /&gt;\n&lt;input type=\"button\" id=\"btnSearch\" value=\"Search\" onclick=\"doSomething();\" /&gt;\n</code></pre>\n    ","a":"\n<p>In jQuery, this would work:</p>\n\n<pre><code>$(\"#id_of_textbox\").keyup(function(event){\n    if(event.keyCode == 13){\n        $(\"#id_of_button\").click();\n    }\n});\n</code></pre>\n\n<p>Sorry, I don't know how to do it in plain JavaScript, but maybe someone else could extrapolate this out?</p>\n\n<p>P.S.: use jQuery ;)</p>\n    "},{"t":"How to Loop through JavaScript object literal with objects as members?","l":"http://stackoverflow.com/questions/921789/how-to-loop-through-javascript-object-literal-with-objects-as-members","q":"\n\n<p>How can I loop through all members in a JavaScript object including values that are objects.</p>\n\n<p>For example, how could I loop through this (accessing the \"your_name\" and \"your_message\" for each)?</p>\n\n<pre><code>var validation_messages = {\n    \"key_1\": {\n    \t\"your_name\": \"jimmy\",\n    \t\"your_msg\": \"hello world\"\n    },\n    \"key_2\": {\n    \t\"your_name\": \"billy\",\n    \t\"your_msg\": \"foo equals bar\"\n    }\n}\n</code></pre>\n    ","a":"\n<pre><code>for (var key in validation_messages) {\n   if (validation_messages.hasOwnProperty(key)) {\n       var obj = validation_messages[key];\n        for (var prop in obj) {\n          // important check that this is objects own property \n          // not from prototype prop inherited\n          if(obj.hasOwnProperty(prop)){\n            alert(prop + \" = \" + obj[prop]);\n          }\n       }\n    }\n}\n</code></pre>\n    "},{"t":"Sort array of objects by string property value in JavaScript","l":"http://stackoverflow.com/questions/1129216/sort-array-of-objects-by-string-property-value-in-javascript","q":"\n\n<p>I have an array of JavaScript objects:</p>\n\n<pre><code>var objs = [ \n    { first_nom: 'Lazslo', last_nom: 'Jamf'     },\n    { first_nom: 'Pig',    last_nom: 'Bodine'   },\n    { first_nom: 'Pirate', last_nom: 'Prentice' }\n];\n</code></pre>\n\n<p>How can I sort them by the value of <code>last_nom</code> in JavaScript?</p>\n\n<p>I know about <code>sort(a,b)</code>, but that only seems to work on strings and numbers. Do I need to add a toString method to my objects?</p>\n    ","a":"\n<p>It's easy enough to write your own comparison function:</p>\n\n<pre><code>function compare(a,b) {\n  if (a.last_nom &lt; b.last_nom)\n    return -1;\n  if (a.last_nom &gt; b.last_nom)\n    return 1;\n  return 0;\n}\n\nobjs.sort(compare);\n</code></pre>\n    "},{"t":"What is the explanation for these bizarre JavaScript behaviours mentioned in the 'Wat' talk for CodeMash 2012?","l":"http://stackoverflow.com/questions/9032856/what-is-the-explanation-for-these-bizarre-javascript-behaviours-mentioned-in-the","q":"\n\n<p>The <em><a href=\"https://www.destroyallsoftware.com/talks/wat\">'Wat' talk for CodeMash 2012</a></em> basically points out a few bizarre quirks with Ruby and JavaScript.</p>\n\n<p>I have made a JSFiddle of the results at <a href=\"http://jsfiddle.net/fe479/9/\">http://jsfiddle.net/fe479/9/</a>.</p>\n\n<p>The behaviours specific to JavaScript (as I don't know Ruby) are listed below.</p>\n\n<p>I found in the JSFiddle that some of my results didn't correspond with those in the video, and I am not sure why. I am, however, curious to know how JavaScript is handling working behind the scenes in each case.</p>\n\n<pre><code>Empty Array + Empty Array\n[] + []\nresult:\n&lt;Empty String&gt;\n</code></pre>\n\n<p>I am quite curious about the <code>+</code> operator when used with arrays in JavaScript.\nThis matches the video's result.</p>\n\n<pre><code>Empty Array + Object\n[] + {}\nresult:\n[Object]\n</code></pre>\n\n<p>This matches the video's result. What's going on here? Why is this an object. What does the <code>+</code> operator do?</p>\n\n<pre><code>Object + Empty Array\n{} + []\nresult\n[Object]\n</code></pre>\n\n<p>This doesn't match the video. The video suggests that the result is 0, whereas I get [Object].</p>\n\n<pre><code>Object + Object\n{} + {}\nresult:\n[Object][Object]\n</code></pre>\n\n<p>This doesn't match the video either, and how does outputting a variable result in two objects? Maybe my JSFiddle is wrong.</p>\n\n<pre><code>Array(16).join(\"wat\" - 1)\nresult:\nNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaNNaN\n</code></pre>\n\n<p>Doing wat + 1 results in <code>wat1wat1wat1wat1</code>...</p>\n\n<p>I suspect this is just straightforward behaviour that trying to subtract a number from a string results in NaN.</p>\n    ","a":"\n<p>Here's a list of explanations for the results you're seeing (and supposed to be seeing). The references I'm using are from the <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMA-262 standard</a>.</p>\n\n<ol>\n<li><h3><code>[] + []</code></h3>\n\n<p>When using the addition operator, both the left and right operands are converted to primitives first (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.6.1\">§11.6.1</a>). As per <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.1\">§9.1</a>, converting an object (in this case an array) to a primitive returns its default value, which for objects with a valid <code>toString()</code> method is the result of calling <code>object.toString()</code> (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-8.12.8\">§8.12.8</a>). For arrays this is the same as calling <code>array.join()</code> (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.2\">§15.4.4.2</a>). Joining an empty array results in an empty string, so step #7 of the addition operator returns the concatenation of two empty strings, which is the empty string.</p></li>\n<li><h3><code>[] + {}</code></h3>\n\n<p>Similar to <code>[] + []</code>, both operands are converted to primitives first. For \"Object objects\" (§15.2), this is again the result of calling <code>object.toString()</code>, which for non-null, non-undefined objects is <code>\"[object Object]\"</code> (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.2.4.2\">§15.2.4.2</a>).</p></li>\n<li><h3><code>{} + []</code></h3>\n\n<p>The <code>{}</code> here is not parsed as an object, but instead as an empty block (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-12.1\">§12.1</a>, at least as long as you're not forcing that statement to be an expression, but more about that later). The return value of empty blocks is empty, so the result of that statement is the same as <code>+[]</code>. The unary <code>+</code> operator (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.4.6\">§11.4.6</a>) returns <code>ToNumber(ToPrimitive(operand))</code>. As we already know, <code>ToPrimitive([])</code> is the empty string, and according to <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.3.1\">§9.3.1</a>, <code>ToNumber(\"\")</code> is 0.</p></li>\n<li><h3><code>{} + {}</code></h3>\n\n<p>Similar to the previous case, the first <code>{}</code> is parsed as a block with empty return value. Again, <code>+{}</code> is the same as <code>ToNumber(ToPrimitive({}))</code>, and <code>ToPrimitive({})</code> is <code>\"[object Object]\"</code> (see <code>[] + {}</code>). So to get the result of <code>+{}</code>, we have to apply <code>ToNumber</code> on the string <code>\"[object Object]\"</code>. When following the steps from <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.3.1\">§9.3.1</a>, we get <code>NaN</code> as a result:</p>\n\n<blockquote>\n  <p>If the grammar cannot interpret the String as an expansion of <em>StringNumericLiteral</em>, then the result of <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.3\">ToNumber</a> is <strong>NaN</strong>.</p>\n</blockquote></li>\n<li><h3><code>Array(16).join(\"wat\" - 1)</code></h3>\n\n<p>As per <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.1.1\">§15.4.1.1</a> and <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.2.2\">§15.4.2.2</a>, <code>Array(16)</code> creates a new array with length 16. To get the value of the argument to join, <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.6.2\">§11.6.2</a> steps #5 and #6 show that we have to convert both operands to a number using <code>ToNumber</code>. <code>ToNumber(1)</code> is simply 1 (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.3\">§9.3</a>), whereas <code>ToNumber(\"wat\")</code> again is <code>NaN</code> as per <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.3.1\">§9.3.1</a>. Following step 7 of <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.6.2\">§11.6.2</a>, <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-11.6.3\">§11.6.3</a> dictates that </p>\n\n<blockquote>\n  <p>If either operand is <strong>NaN</strong>, the result is <strong>NaN</strong>.</p>\n</blockquote>\n\n<p>So the argument to <code>Array(16).join</code> is <code>NaN</code>. Following §15.4.4.5 (<code>Array.prototype.join</code>), we have to call <code>ToString</code> on the argument, which is <code>\"NaN\"</code> (<a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-9.8.1\">§9.8.1</a>):</p>\n\n<blockquote>\n  <p>If <em>m</em> is <strong>NaN</strong>, return the String <strong><code>\"NaN\"</code></strong>.</p>\n</blockquote>\n\n<p>Following step 10 of <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.4.4.5\">§15.4.4.5</a>, we get 15 repetitions of the concatenation of <code>\"NaN\"</code> and the empty string, which equals the result you're seeing.\nWhen using <code>\"wat\" + 1</code> instead of <code>\"wat\" - 1</code> as argument, the addition operator converts <code>1</code> to a string instead of converting <code>\"wat\"</code> to a number, so it effectively calls <code>Array(16).join(\"wat1\")</code>.</p></li>\n</ol>\n\n<p>As to why you're seeing different results for the <code>{} + []</code> case: When using it as a function argument, you're forcing the statement to be an <em>ExpressionStatement</em>, which makes it impossible to parse <code>{}</code> as empty block, so it's instead parsed as an empty object literal.</p>\n    "},{"t":"How do I scroll to the top of the page with jQuery?","l":"http://stackoverflow.com/questions/1144805/how-do-i-scroll-to-the-top-of-the-page-with-jquery","q":"\n\n<p>I have a button a user presses and it shows a hidden div using jQuery.</p>\n\n<p>My question is, how do I scroll to the top of the page using a jQuery command in that function? It is desirable even if the scroll bar instantly jumps to the top.  I'm not looking for a smooth scrolling.</p>\n    ","a":"\n<p>If you don't need the change to animate then you don't need to use any special plugins - I'd just use the native JavaScript window.scrollTo method -- passing in 0,0 will scroll the page to the top left instantly.</p>\n\n<pre><code>window.scrollTo(x-coord, y-coord);\n</code></pre>\n\n<p>Parameters    </p>\n\n<ul>\n<li>x-coord is the pixel along the horizontal axis.  </li>\n<li>y-coord is the pixel along the vertical axis. </li>\n</ul>\n    "},{"t":"How do I Convert a String into an Integer in JavaScript?","l":"http://stackoverflow.com/questions/1133770/how-do-i-convert-a-string-into-an-integer-in-javascript","q":"\n\n<p>How do I convert a string into an integer in JavaScript?  </p>\n\n<p>Is it possible to do this automatically, or do I have to write a subroutine to do it manually?</p>\n    ","a":"\n<p><strong>parseInt</strong> or <strong>unary plus</strong> or even <strong>parseFloat with floor</strong> or <strong>Math.round</strong></p>\n\n<p>parseInt:</p>\n\n<pre><code>var x = parseInt(\"1000\", 10); // you want to use radix 10\n    // so you get a decimal number even with a leading 0 and an old browser\n</code></pre>\n\n<p>unary plus\nif your string is already in the form of an integer:</p>\n\n<pre><code>var x = +\"1000\";\n</code></pre>\n\n<p>if your string is or might be a float and you want an integer:</p>\n\n<pre><code>var x = Math.floor(\"1000.01\"); //floor automatically converts string to number\n</code></pre>\n\n<p>or, if you're going to be using Math.floor several times:</p>\n\n<pre><code>var floor = Math.floor;\nvar x = floor(\"1000.01\");\n</code></pre>\n\n<p>If you're the type who forgets to put the radix in when you call parseInt, you can use parseFloat and round it however you like. Here I use floor.</p>\n\n<pre><code>var floor = Math.floor;\nvar x = floor(parseFloat(\"1000.01\"));\n</code></pre>\n\n<p>Interestingly, Math.round (like Math.floor) will do a string to number conversion, so if you want the number rounded (or if you have an integer in the string), this is a great way, maybe my favorite:</p>\n\n<pre><code>var round = Math.round;\nvar x = round(\"1000\"); //equivalent to round(\"1000\",0)\n</code></pre>\n\n<p>You don't see this much. valueOf is used mostly internally, according to w3c</p>\n\n<pre><code>var x = \"1000\".valueOf();\n</code></pre>\n    "},{"t":"What does the exclamation mark do before the function?","l":"http://stackoverflow.com/questions/3755606/what-does-the-exclamation-mark-do-before-the-function","q":"\n\n<pre><code>!function () {}();\n</code></pre>\n    ","a":"\n<p>JavaScript syntax 101. Here is a function declaration:</p>\n\n<pre><code>function foo() {}\n</code></pre>\n\n<p>Note that there's no semicolon: this is a function declaration; you need a separate invocation of <code>foo()</code> to actually run the function.</p>\n\n<p>On the other hand, <code>!function foo() {}</code> is an expression, but that still doesn't invoke the function, but we can now use <code>!function foo() {}()</code> to do that, as <code>()</code> has higher precedence than <code>!</code>. Presumably the original example function doesn't need a self-reference so that the name then can be dropped.</p>\n\n<p>So what the author is doing is saving a byte per function expression; a more readable way of writing it would be this:</p>\n\n<pre><code>(function(){})();\n</code></pre>\n    "},{"t":"How can I pretty-print JSON using JavaScript?","l":"http://stackoverflow.com/questions/4810841/how-can-i-pretty-print-json-using-javascript","q":"\n\n<p>How can I display JSON in an easy-to-read (for human readers) format? I'm looking primarily for indentation and whitespace, with perhaps even colors / font-styles / etc.</p>\n    ","a":"\n<p><strong><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">pretty-printing is implemented natively in JSON.stringify()</a></strong>. The third argument enabled pretty printing and sets the spacing to use :</p>\n\n<pre><code>var str = JSON.stringify(obj, null, 2); // spacing level = 2\n</code></pre>\n\n<p>If you need syntax highlighting, you might use some regex magic like so:</p>\n\n<pre><code>function syntaxHighlight(json) {\n    if (typeof json != 'string') {\n         json = JSON.stringify(json, undefined, 2);\n    }\n    json = json.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');\n    return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n        var cls = 'number';\n        if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n                cls = 'key';\n            } else {\n                cls = 'string';\n            }\n        } else if (/true|false/.test(match)) {\n            cls = 'boolean';\n        } else if (/null/.test(match)) {\n            cls = 'null';\n        }\n        return '&lt;span class=\"' + cls + '\"&gt;' + match + '&lt;/span&gt;';\n    });\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/KJQ9K/554/\">See in in action here (jsfiddle)</a></p>\n\n<p><strong>or full snipped provided here :</strong></p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\n<div class=\"snippet-code snippet-currently-hidden\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function output(inp) {\n    document.body.appendChild(document.createElement('pre')).innerHTML = inp;\n}\n\nfunction syntaxHighlight(json) {\n    json = json.replace(/&amp;/g, '&amp;amp;').replace(/&lt;/g, '&amp;lt;').replace(/&gt;/g, '&amp;gt;');\n    return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n        var cls = 'number';\n        if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n                cls = 'key';\n            } else {\n                cls = 'string';\n            }\n        } else if (/true|false/.test(match)) {\n            cls = 'boolean';\n        } else if (/null/.test(match)) {\n            cls = 'null';\n        }\n        return '&lt;span class=\"' + cls + '\"&gt;' + match + '&lt;/span&gt;';\n    });\n}\n\nvar obj = {a:1, 'b':'foo', c:[false,'false',null, 'null', {d:{e:1.3e5,f:'1.3e5'}}]};\nvar str = JSON.stringify(obj, undefined, 4);\n\noutput(str);\noutput(syntaxHighlight(str));</code></pre>\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>pre {outline: 1px solid #ccc; padding: 5px; margin: 5px; }\n.string { color: green; }\n.number { color: darkorange; }\n.boolean { color: blue; }\n.null { color: magenta; }\n.key { color: red; }</code></pre>\n</div>\n</div>\n<p></p>\n    "},{"t":"What is an elegant way to force browsers to reload cached CSS/JS files?","l":"http://stackoverflow.com/questions/118884/what-is-an-elegant-way-to-force-browsers-to-reload-cached-css-js-files","q":"\n\n<p>I have noticed that some browsers (in particular, Firefox and Opera) are very zealous in using cached copies of .css and .js files, even between browser sessions.  This leads to a problem when you update one of these files but the user's browser keeps on using the cached copy.</p>\n\n<p>The question is: what is the most elegant way of forcing the user's browser to reload the file when it has changed?</p>\n\n<p>Ideally the solution would not force the browser to reload the file on every visit to the page.  I will post my own solution as an answer, but I am curious if anyone has a better solution and I'll let your votes decide.</p>\n\n<p><strong>Update:</strong>  After allowing discussion here for a while, I have found <strong>John Millikin</strong> and <strong>da5id</strong>'s suggestion to be useful.  It turns out there is a term for this: auto-versioning.  I have posted a new answer below which is a combination of my original solution and John's suggestion.</p>\n\n<p>Another idea which was suggested by <strong>SCdF</strong> would be to append a bogus query string to the file.  (Some Python code to automatically use the timestamp as a bogus query string was submitted by <strong>pi</strong>.)  However, there is some discussion as to whether or not the browser would cache a file with a query string.  (Remember, we want the browser to cache the file and use it on future visits.  We only want it to fetch the file again when it has changed.)  Since it is not clear what happens with a bogus query string, I am not accepting that answer.</p>\n    ","a":"\n<p><strong>Update:</strong>  Rewritten to incorporate suggestions from <strong>John Millikin</strong> and <strong>da5id</strong>.  This solution is written in PHP, but should be easily adapted to other languages.</p>\n\n<p><strong>Update 2:</strong> Incorporating comments from <strong>Nick Johnson</strong> that the original <code>.htaccess</code> regex can cause problems with files like <code>json-1.3.js</code>. Solution is to only rewrite if there are exactly 10 digits at the end. (Because 10 digits covers all timestamps from 9/9/2001 to 11/20/2286.)</p>\n\n<p>First, we use the following rewrite rule in .htaccess:</p>\n\n<pre><code>RewriteEngine on\nRewriteRule ^(.*)\\.[\\d]{10}\\.(css|js)$ $1.$2 [L]\n</code></pre>\n\n<p>Now, we write the following PHP function:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>/**\n *  Given a file, i.e. /css/base.css, replaces it with a string containing the\n *  file's mtime, i.e. /css/base.1221534296.css.\n *  \n *  @param $file  The file to be loaded.  Must be an absolute path (i.e.\n *                starting with slash).\n */\nfunction auto_version($file)\n{\n  if(strpos($file, '/') !== 0 || !file_exists($_SERVER['DOCUMENT_ROOT'] . $file))\n    return $file;\n\n  $mtime = filemtime($_SERVER['DOCUMENT_ROOT'] . $file);\n  return preg_replace('{\\\\.([^./]+)$}', \".$mtime.\\$1\", $file);\n}\n</code></pre>\n\n<p>Now, wherever you include your CSS, change it from this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;link rel=\"stylesheet\" href=\"/css/base.css\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>To this:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" href=\"&lt;?php echo auto_version('/css/base.css'); ?&gt;\" type=\"text/css\" /&gt;\n</code></pre>\n\n<p>This way, you never have to modify the link tag again, and the user will always see the latest CSS.  The browser will be able to cache the CSS file, but when you make any changes to your CSS the browser will see this as a new URL, so it won't use the cached copy.</p>\n\n<p>This can also work with images, favicons, and JavaScript. Basically anything that is not dynamically generated.</p>\n    "},{"t":"Is JavaScript a pass-by-reference or pass-by-value language?","l":"http://stackoverflow.com/questions/518000/is-javascript-a-pass-by-reference-or-pass-by-value-language","q":"\n\n<p>The primitive types (Number, String, etc.) are passed by value, but Objects are unknown, because they can be both passed-by-value (in case we consider that a variable holding an object is in fact a reference to the object) and passed-by-reference (when we consider that the variable to the object holds the object itself).</p>\n\n<p>Although it doesn't really matter at the end, I want to know what is the correct way to present the arguments passing conventions. Is there an excerpt from JavaScript specification, which defines what should be the semantics regarding this?</p>\n    ","a":"\n<p>It's interesting in Javascript. Consider this example:</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>function changeStuff(a, b, c)\n{\n  a = a * 10;\n  b.item = \"changed\";\n  c = {item: \"changed\"};\n}\n\nvar num = 10;\nvar obj1 = {item: \"unchanged\"};\nvar obj2 = {item: \"unchanged\"};\n\nchangeStuff(num, obj1, obj2);\n\nconsole.log(num);\nconsole.log(obj1.item);    \nconsole.log(obj2.item);</code></pre>\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;!-- results pane console output; see http://meta.stackexchange.com/a/242491 --&gt;\n&lt;script src=\"http://gh-canon.github.io/stack-snippet-console/console.min.js\"&gt;&lt;/script&gt;</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>This produces the output:</p>\n\n<pre><code>10\nchanged\nunchanged\n</code></pre>\n\n<p>If it was pure pass by value, then changing <code>obj1.item</code> would have no effect on the <code>obj1</code> outside of the function.\nIf it was pure pass by reference, then everything would have changed. <code>num</code> would be <code>100</code>, and <code>obj2.item</code> would read <code>\"changed\"</code>.</p>\n\n<p>Instead, the situation is that the item passed in is passed by value. But the item that is passed by value is <em>itself</em> a reference.\nTechnically, this is called <a href=\"http://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing\">call-by-sharing</a>.</p>\n\n<p>In practical terms, this means that if you change the parameter itself (as with <code>num</code> and <code>obj2</code>), that won't affect the item that was fed into the parameter.\nBut if you change the INTERNALS of the parameter, that will propagate back up (as with <code>obj1</code>).</p>\n    "},{"t":"Why would a JavaScript variable start with a dollar sign?","l":"http://stackoverflow.com/questions/205853/why-would-a-javascript-variable-start-with-a-dollar-sign","q":"\n\n<p>I quite often see JavaScript with variables that start with a dollar sign. When/why would you choose to prefix a variable in this way?</p>\n\n<p>(I'm not asking about <code>$('p.foo')</code> syntax that you see in jQuery and others, but normal variables like <code>$name</code> and <code>$order</code>)</p>\n    ","a":"\n<p>A very common use in jQuery is to distinguish jQuery objects stored in variables from other variables.  For example, I would define</p>\n\n<pre><code>var $email = $(\"#email\"); // refers to the jQuery object representation of the dom object\nvar email_field = $(\"#email\").get(0); // refers to the dom object itself\n</code></pre>\n\n<p>I find this to be very helpful in writing jQuery code and makes it easy to see jQuery objects which have a different set of properties.</p>\n    "},{"t":"Preloading images with jQuery","l":"http://stackoverflow.com/questions/476679/preloading-images-with-jquery","q":"\n\n<p>I'm looking for a quick and easy way to preload images with JavaScript. I'm using jQuery if that's important.</p>\n\n<p>I saw this here (<a href=\"http://nettuts.com/tutorials/javascript-ajax/the-definitive-guide-to-creating-a-practical-jquery-plugin/\">http://nettuts.com...</a>):</p>\n\n<pre><code>function complexLoad(config, fileNames) {\n  for (var x = 0; x &lt; fileNames.length; x++) {\n    $(\"&lt;img&gt;\").attr({\n      id: fileNames[x],\n      src: config.imgDir + fileNames[x] + config.imgFormat,\n      title: \"The \" + fileNames[x] + \" nebula\"\n    }).appendTo(\"#\" + config.imgContainer).css({ display: \"none\" });\n  }\n};\n</code></pre>\n\n<p>But, it looks a bit over-the-top for what I want!</p>\n\n<p>I know there are jQuery plugins out there that do this but they all seem a bit big (in size); I just need a quick, easy and short way of preloading images!</p>\n    ","a":"\n<p>Quick <em>and</em> easy:</p>\n\n<pre><code>function preload(arrayOfImages) {\n    $(arrayOfImages).each(function(){\n        $('&lt;img/&gt;')[0].src = this;\n        // Alternatively you could use:\n        // (new Image()).src = this;\n    });\n}\n\n// Usage:\n\npreload([\n    'img/imageName.jpg',\n    'img/anotherOne.jpg',\n    'img/blahblahblah.jpg'\n]);\n</code></pre>\n\n<p>Or, if you want a jQuery plugin:</p>\n\n<pre><code>$.fn.preload = function() {\n    this.each(function(){\n        $('&lt;img/&gt;')[0].src = this;\n    });\n}\n\n// Usage:\n\n$(['img1.jpg','img2.jpg','img3.jpg']).preload();\n</code></pre>\n    "},{"t":"Graph visualization library in JavaScript","l":"http://stackoverflow.com/questions/7034/graph-visualization-library-in-javascript","q":"\n\n<p>I have a data structure that represents a directed graph, and I want to render that dynamically on an HTML page.  These graphs will usually be just a few nodes, maybe ten at the very upper end, so my guess is that performance isn't going to be a big deal. Ideally, I'd like to be able to hook it in with jQuery so that users can tweak the layout manually by dragging the nodes around.</p>\n\n<p>Note: I'm not looking for a charting library.</p>\n    ","a":"\n<p>I've just put together what you may be looking for: <a href=\"http://www.graphdracula.net\" rel=\"nofollow\">http://www.graphdracula.net</a></p>\n\n<p>It's JavaScript with directed graph layouting, SVG and you can even drag the nodes around. Still needs some tweaking, but is totally usable. You create nodes and edges easily with JavaScript code like this:</p>\n\n<pre><code>var g = new Graph();\ng.addEdge(\"strawberry\", \"cherry\");\ng.addEdge(\"cherry\", \"apple\");\ng.addEdge(\"id34\", \"cherry\");\n</code></pre>\n\n<p>I used the previously mentioned Raphael JS library (the graffle example) plus some code for a force based graph layout algorithm I found on the net (everything open source, MIT license). If you have any remarks or need a certain feature, I may implement it, just ask!</p>\n\n<hr>\n\n<p>You may want to have a look at other projects, too! Below are two meta-comparisons:</p>\n\n<ul>\n<li><p><a href=\"http://socialcompare.com/en/comparison/javascript-graphs-and-charts-libraries\" rel=\"nofollow\">SocialCompare</a> has an extensive list of libraries, and the \"Node / edge graph\" line will filter for graph visualization ones.</p></li>\n<li><p>DataVisualization.ch has evaluated many libraries, including node/graph ones. Unfortunately there's no direct link so you'll have to filter for \"graph\":<a href=\"http://selection.datavisualization.ch/\" rel=\"nofollow\"><img src=\"http://i.stack.imgur.com/o4lwD.jpg\" alt=\"Selection DataVisualization.ch\"></a></p></li>\n</ul>\n\n<p>Here's a list of similar projects (some have been already mentioned here):</p>\n\n<h3>Pure JavaScript Libraries</h3>\n\n<ul>\n<li><p><a href=\"http://visjs.org/#gallery\" rel=\"nofollow\">vis.js</a> supports many types of network/edge graphs, plus timelines and 2D/3D charts. Auto-layout, auto-clustering, springy physics engine, mobile-friendly, keyboard navigation, hierarchical layout, animation etc. <a href=\"https://github.com/almende/vis\" rel=\"nofollow\">MIT licensed</a> and developed by a Dutch firm specializing in research on self-organizing networks.</p></li>\n<li><p><a href=\"http://js.cytoscape.org\" rel=\"nofollow\">Cytoscape.js</a> - interactive graph analysis and visualization with mobile support, following jQuery conventions. Funded via NIH grants and developed by by <a href=\"http://stackoverflow.com/users/947225/maxkfranz\">@maxkfranz</a> (see <a href=\"http://stackoverflow.com/a/10319429/1269037\">his answer below</a>) with help from several universities and other organizations.</p></li>\n<li><p><a href=\"http://thejit.org/demos.html\" rel=\"nofollow\">The JavaScript InfoVis Toolkit</a> - Jit, an interactive, multi-purpose graph drawing and layout framework. See for example the <a href=\"http://philogb.github.io/jit/static/v20/Docs/files/Visualizations/Hypertree-js.html\" rel=\"nofollow\">Hyperbolic Tree</a>. Built by Twitter dataviz architect <a href=\"http://www.sencha.com/conference/session/sencha-charting-visualization\" rel=\"nofollow\">Nicolas Garcia Belmonte</a> and <a href=\"http://philogb.github.io/infovis/\" rel=\"nofollow\">bought by Sencha</a> in 2010.</p></li>\n<li><p><a href=\"http://d3js.org/\" rel=\"nofollow\">D3.js</a> Powerful multi-purpose JS visualization library, the successor of Protovis. See the <a href=\"http://bl.ocks.org/mbostock/4062045\" rel=\"nofollow\">force-directed graph</a> example, and other graph examples in the <a href=\"https://github.com/mbostock/d3/wiki/Gallery\" rel=\"nofollow\">gallery</a>.</p></li>\n<li><p><a href=\"https://plot.ly./\" rel=\"nofollow\">Plotly's</a> JS visualization library uses D3.js with JS, Python, R, and MATLAB bindings. See a nexworkx example in IPython <a href=\"https://plot.ly/ipython-notebooks/network-graphs/\" rel=\"nofollow\">here</a>, human interaction example <a href=\"https://plot.ly/ipython-notebooks/bioinformatics/#In-[54]\" rel=\"nofollow\">here</a>, and <a href=\"https://github.com/plotly/Embed-API\" rel=\"nofollow\">JS Embed API</a>.</p></li>\n<li><p><a href=\"http://sigmajs.org/\" rel=\"nofollow\">sigma.js</a> Lightweight but powerful library for drawing graphs</p></li>\n<li><p><a href=\"http://jsplumbtoolkit.com/\" rel=\"nofollow\">jsPlumb</a> jQuery plug-in for creating interactive connected graphs</p></li>\n<li><p><a href=\"http://getspringy.com/\" rel=\"nofollow\">Springy</a> - a force-directed graph layout algorithm</p></li>\n<li><p><a href=\"http://processingjs.org/\" rel=\"nofollow\">Processing.js</a> Javascript port of the Processing library by John Resig</p></li>\n<li><p><a href=\"http://js-graph-it.sourceforge.net/\" rel=\"nofollow\">JS Graph It</a> - drag'n'drop boxes connected by straight lines. Minimal auto-layout of the lines.</p></li>\n<li><p><a href=\"http://raphaeljs.com/graffle.html\" rel=\"nofollow\">RaphaelJS's Graffle</a> - interactive graph example of a generic multi-purpose vector drawing library. RaphaelJS can't layout nodes automatically; you'll need another library for that.</p></li>\n<li><p><a href=\"http://www.jointjs.com/demos\" rel=\"nofollow\">JointJS Core</a> - David Durman's MPL-licensed open source diagramming library. It can be used to create either static diagrams or fully interactive diagramming tools and application builders. Works in browsers supporting SVG. Layout algorithms not-included in the core package</p></li>\n<li><p><a href=\"http://http://www.highcharts.com/demo\" rel=\"nofollow\">HighCharts</a> - Highcharts is a charting library written in pure JavaScript. it is based on SVG, but unlike many others, it also supports older browsers who use VML to render vector graphic. It is licenced under <a href=\"http://creativecommons.org/licenses/by-nc/3.0/\" rel=\"nofollow\">CC BY-NC 3.0</a></p></li>\n</ul>\n\n<h3>Commercial libraries</h3>\n\n<ul>\n<li><p><a href=\"http://gojs.net/latest/index.html\" rel=\"nofollow\">GoJS</a> Interactive graph drawing and layout library</p></li>\n<li><p><a href=\"http://www.yworks.com/yfileshtml\" rel=\"nofollow\">yFiles for HTML</a> Commercial graph drawing and layout library</p></li>\n<li><p><a href=\"https://www.jgraph.com/mxgraph.html\" rel=\"nofollow\">mxGraph</a> Commercial HTML 5 diagramming library with support for older browsers</p></li>\n<li><p><a href=\"http://keylines.com/\" rel=\"nofollow\">KeyLines</a> Commercial JS network visualization toolkit</p></li>\n<li><p><a href=\"http://datavisualizationsoftwarelab.com/\" rel=\"nofollow\">data visualization software lab</a> Commercial multi-purpose visualization library</p></li>\n</ul>\n\n<h3>Abandoned libraries</h3>\n\n<ul>\n<li><p><a href=\"http://cytoscapeweb.cytoscape.org/\" rel=\"nofollow\">Cytoscape Web</a> Embeddable JS Network viewer (no new features planned; succeeded by Cytoscape.js)</p></li>\n<li><p><a href=\"http://code.google.com/p/canviz/\" rel=\"nofollow\">Canviz</a> JS <strong>renderer</strong> for Graphviz graphs. <a href=\"https://code.google.com/p/canviz/source/list\" rel=\"nofollow\">Abandoned</a> in Sep 2013.</p></li>\n<li><p><a href=\"http://arborjs.org/\" rel=\"nofollow\">arbor.js</a> Sophisticated graphing with nice physics and eye-candy. Abandoned in May 2012. Several <a href=\"https://github.com/samizdatco/arbor/issues/56#issuecomment-62842532\" rel=\"nofollow\">semi-maintained</a> forks exist.</p></li>\n<li><p><a href=\"http://github.com/jackrusher/jssvggraph\" rel=\"nofollow\">jssvggraph</a> \"The simplest possible force directed graph layout algorithm implemented as a Javascript library that uses SVG objects\". Abandoned in 2012.</p></li>\n<li><p><a href=\"https://code.google.com/p/jsdot/\" rel=\"nofollow\">jsdot</a> Client side graph drawing application. <a href=\"https://code.google.com/p/jsdot/source/list\" rel=\"nofollow\">Abandoned in 2011</a>.</p></li>\n<li><p><a href=\"http://vis.stanford.edu/protovis/ex/force.html\" rel=\"nofollow\">Protovis</a> Graphical Toolkit for Visualization (JavaScript). Replaced by d3.</p></li>\n<li><p><a href=\"http://labs.unwieldy.net/moowheel/\" rel=\"nofollow\">Moo Wheel</a> Interactive JS representation for connections and relations (2008)</p></li>\n<li><p><a href=\"http://www.jsviz.org/\" rel=\"nofollow\">JSViz</a> 2007-era graph visualization script</p></li>\n<li><p><a href=\"https://github.com/cpettitt/dagre\" rel=\"nofollow\">dagre</a> Graph layout for JavaScript</p></li>\n</ul>\n\n<h3>Non-Javascript Libraries</h3>\n\n<ul>\n<li><p><a href=\"http://www.graphviz.org/\" rel=\"nofollow\">Graphviz</a> Sophisticated graph visualization language</p></li>\n<li><p><a href=\"http://flare.prefuse.org/\" rel=\"nofollow\">Flare</a> Beautiful and powerful Flash based graph drawing</p></li>\n<li><p><a href=\"http://nodebox.net/code/index.php/Graph\" rel=\"nofollow\">NodeBox</a> Python Graph Visualization</p></li>\n</ul>\n    "},{"t":"Check if element is visible after scrolling","l":"http://stackoverflow.com/questions/487073/check-if-element-is-visible-after-scrolling","q":"\n\n<p>I'm loading elements via AJAX. Some of them are only visible if you scroll down the page.<br>\nIs there any way I can know if an element is now in the visible part of the page?</p>\n    ","a":"\n<p>This should do the trick:</p>\n\n<pre><code>function isScrolledIntoView(elem)\n{\n    var $elem = $(elem);\n    var $window = $(window);\n\n    var docViewTop = $window.scrollTop();\n    var docViewBottom = docViewTop + $window.height();\n\n    var elemTop = $elem.offset().top;\n    var elemBottom = elemTop + $elem.height();\n\n    return ((elemBottom &lt;= docViewBottom) &amp;&amp; (elemTop &gt;= docViewTop));\n}\n</code></pre>\n    "},{"t":"Stop setInterval call in JavaScript","l":"http://stackoverflow.com/questions/109086/stop-setinterval-call-in-javascript","q":"\n\n<p>I am using <code>setInterval(fname, 10000);</code> to call a function every 10 seconds in JavaScript. Is it possible to stop calling it on some event? </p>\n\n<p>I want the user to be able to stop the repeated refresh of data.</p>\n    ","a":"\n<p><code>setInterval()</code> returns an interval ID, which you can pass to <code>clearInterval()</code>:</p>\n\n<pre><code>var refreshIntervalId = setInterval(fname, 10000);\n\n/* later */\nclearInterval(refreshIntervalId);\n</code></pre>\n\n<p>See the docs for <a href=\"https://developer.mozilla.org/en/DOM/window.setInterval\"><code>setInterval()</code></a> and <a href=\"https://developer.mozilla.org/en/DOM/window.clearInterval\"><code>clearInterval()</code></a>.</p>\n    "},{"t":"How can I get jQuery to perform a synchronous, rather than asynchronous, AJAX request?","l":"http://stackoverflow.com/questions/133310/how-can-i-get-jquery-to-perform-a-synchronous-rather-than-asynchronous-ajax-re","q":"\n\n<p>I have a JavaScript widget which provides standard extension points. One of them is the <code>beforecreate</code> function. It should return <code>false</code> to prevent an item from being created. </p>\n\n<p>I've added an AJAX call into this function using jQuery:</p>\n\n<pre><code>beforecreate: function (node, targetNode, type, to) {\n  jQuery.get('http://example.com/catalog/create/' + targetNode.id + '?name=' + encode(to.inp[0].value),\n\n  function (result) {\n    if (result.isOk == false) alert(result.message);\n  });\n}\n</code></pre>\n\n<p>But I want to prevent my widget from creating the item, so I should return <code>false</code> in the mother-function, not in the callback. Is there any way to perform a synchronized AJAX request using jQuery or any other API? Thanks.</p>\n    ","a":"\n<p>From the <a href=\"http://docs.jquery.com/Ajax/jQuery.ajax\">Jquery docs</a>: you specify the <strong>async</strong> option to be <strong>false</strong> to get a synchronous Ajax request.  Then your callback can set some data before your mother function proceeds.</p>\n\n<p>Here's what your code would look like if changed as suggested:</p>\n\n<pre><code>beforecreate: function(node,targetNode,type,to) {\n    jQuery.ajax({\n         url:    'http://example.com/catalog/create/' \n                  + targetNode.id \n                  + '?name=' \n                  + encode(to.inp[0].value),\n         success: function(result) {\n                      if(result.isOk == false)\n                          alert(result.message);\n                  },\n         async:   false\n    });          \n}\n</code></pre>\n    "},{"t":"How do I find out which DOM element has the focus?","l":"http://stackoverflow.com/questions/497094/how-do-i-find-out-which-dom-element-has-the-focus","q":"\n\n<p>I would like to find out, in Javascript, which element currently has focus. I've been looking through the DOM and haven't found what I need, yet. Is there a way to do this, and how?</p>\n\n<p>The reason I was looking for this:</p>\n\n<p>What I'm trying to do is make keys like the arrows and enter navigate through a table of input elements. Tab works now, but enter and arrows do not by default it seems. I've got the key handling part set up but now I need to figure out how to move the focus over in the event handling functions.</p>\n    ","a":"\n<p>Use <code>document.activeElement</code>, it is supported in all major browsers.</p>\n\n<p>Previously, if you were trying to find out what form field has focus, you could not. To emulate detection within older browsers, add a \"focus\" event handler to all fields and record the last-focused field in a variable. Add a \"blur\" handler to clear the variable upon a blur event for the last-focused field.</p>\n\n<p>Related links:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/DOM/document.activeElement#Browser_compatibility\">activeElement Browser Compatibility</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3328320/jquery-alternative-for-document-activeelement\">jQuery alternative for document.activeElement</a></li>\n</ul>\n    "},{"t":"How to determine if variable is 'undefined' or 'null'","l":"http://stackoverflow.com/questions/2647867/how-to-determine-if-variable-is-undefined-or-null","q":"\n\n<p>How do I determine if variable is 'undefined' or 'null'.  My code is as follows:</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var EmpName = $(\"div#esd-names div#name\").attr('class');\nif(EmpName == 'undefined'){\n  //DO SOMETHING\n};</code></pre>\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;div Id=\"esd-names\"&gt;\n  &lt;div Id=\"name\"&gt;&lt;/div&gt;\n&lt;/div&gt;</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>But if I do this, the JavaScript interpreter halts execution.</p>\n    ","a":"\n<p>You can do like this:</p>\n\n<pre><code> if(typeof variable_here === 'undefined'){\n   // your code here.\n };\n</code></pre>\n\n<p>Using strict equality operator <code>===</code> above is good idea there because in JS, you can name a variable as <code>undefined</code> too:</p>\n\n<pre><code>var undefined = \"something\";\n</code></pre>\n\n<p>So using <code>===</code> makes sure that you are really checking against <code>undefined</code> value for a variable.</p>\n\n<p>You can also do:</p>\n\n<pre><code> if(! variable_here){\n   // your code here.\n };\n</code></pre>\n\n<p><strong><a href=\"http://hubpages.com/hub/javascript-typeof-operator\">See more info about typeof operator.</a></strong></p>\n\n<hr>\n\n<p><strong>Update:</strong></p>\n\n<p>Beware that <code>typeof null</code> returns <code>object</code>:</p>\n\n<pre><code>typeof null == 'object' // true\n</code></pre>\n\n<p>Also, <code>typeof NaN</code> returns 'number'.</p>\n\n<p>These are the 2 common drawbacks with using the typeof operator.</p>\n\n<p>You may also want to check out:</p>\n\n<ul>\n<li><a href=\"http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\">Fixing the JavaScript typeof operator</a></li>\n</ul>\n    "},{"t":"What is the difference between Bower and npm?","l":"http://stackoverflow.com/questions/18641899/what-is-the-difference-between-bower-and-npm","q":"\n\n<p>What is the fundamental difference between Bower and npm? Just want something plain and simple. I've seen some of my colleagues use Bower and npm interchangeably in their projects.</p>\n    ","a":"\n<p><a href=\"https://www.npmjs.org\">npm</a> is most commonly used for managing Node.js modules, but it works for the front-end too when combined with <a href=\"http://browserify.org/\">Browserify</a> and/or <code>$ npm dedupe</code>.</p>\n\n<p><a href=\"http://bower.io\">Bower</a> is created solely for the front-end and is optimized with that in mind. The biggest difference is that npm does nested dependency tree <em>(size heavy)</em> while Bower requires a flat dependency tree <em>(puts the burden of dependency resolution on the user)</em>.</p>\n\n<p>A nested dependency tree means that your dependencies can have its own dependencies which can have their own, and so on. This is really great on the server where you don't have to care much about space and latency. It lets you not have to care about dependency conflicts as all your dependencies use e.g. their own version of Underscore. This obviously doesn't work that well on the front-end. Imagine a site having to download three copies of jQuery.</p>\n\n<p>The reason many projects use both is that they use Bower for front-end packages and npm for developer tools like Yeoman, Grunt, Gulp, JSHint, CoffeeScript, etc.</p>\n\n<p>All package managers have many downsides. You just have to pick which you can live with.</p>\n\n<hr>\n\n<h2>Resources</h2>\n\n<ul>\n<li><a href=\"http://maxogden.com/nested-dependencies.html\">Nested Dependencies</a> - Insight into why node_modules works the way it does</li>\n</ul>\n    "},{"t":"Detecting an “invalid date” Date instance in JavaScript","l":"http://stackoverflow.com/questions/1353684/detecting-an-invalid-date-date-instance-in-javascript","q":"\n\n<p>I'd like to tell the difference between valid and invalid date objects in JS, but couldn't figure out how:</p>\n\n<pre><code>var d = new Date(\"foo\");\nconsole.log(d.toString()); // shows 'Invalid Date'\nconsole.log(typeof d); // shows 'object'\nconsole.log(d instanceof Date); // shows 'true'\n</code></pre>\n\n<p>Any ideas for writing an <code>isValidDate</code> function?</p>\n\n<p>EDIT - thanks for the responses!</p>\n\n<ul>\n<li>Ash recommended <code>Date.parse</code> for parsing date strings, which gives an authoritative way to check if the date string is valid.</li>\n<li>What I would prefer, if possible, is have my API accept a Date instance and to be able to check/assert whether it's valid or not. Borgar's solution does that, but I need to test it across browsers. I also wonder whether there's a more elegant way.</li>\n</ul>\n\n<p>EDIT 2</p>\n\n<ul>\n<li>Ash made me consider not having my API accept <code>Date</code> instances at all, this would be easiest to validate.</li>\n<li>Borgar suggested testing for a <code>Date</code> instance, and then testing for the <code>Date</code>'s time value. If the date is invalid, the time value is <code>NaN</code>. I checked with <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMA-262</a> (section 15.9.5.9) and this behavior is in the standard, which is exactly what I'm looking for.</li>\n</ul>\n\n<p>My final function, based on Borgar's solution:</p>\n\n<pre><code>function isValidDate(d) {\n  if ( Object.prototype.toString.call(d) !== \"[object Date]\" )\n    return false;\n  return !isNaN(d.getTime());\n}\n</code></pre>\n    ","a":"\n<p>Here's how I would do it:</p>\n\n<pre><code>if ( Object.prototype.toString.call(d) === \"[object Date]\" ) {\n  // it is a date\n  if ( isNaN( d.getTime() ) ) {  // d.valueOf() could also work\n    // date is not valid\n  }\n  else {\n    // date is valid\n  }\n}\nelse {\n  // not a date\n}\n</code></pre>\n    "},{"t":"JSLint is suddenly reporting: Use the function form of “use strict”","l":"http://stackoverflow.com/questions/4462478/jslint-is-suddenly-reporting-use-the-function-form-of-use-strict","q":"\n\n<p>I include the statement:</p>\n\n<pre><code>\"use strict\";\n</code></pre>\n\n<p>at the beginning of most of my Javascript files.</p>\n\n<p>JSLint has never before warned about this. But now it is, saying:</p>\n\n<blockquote>\n  <p>Use the function form of \"use strict\".</p>\n</blockquote>\n\n<p>Does anyone know what the \"function form\" would be?</p>\n    ","a":"\n<p>Include <code>'use strict';</code> as the first statement in a wrapping function, so it only affects that function.  This prevents problems when concatenating scripts that aren't strict.</p>\n\n<p>See Douglas Crockford's latest blog post <a href=\"http://www.yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/\">Strict Mode Is Coming To Town</a>.</p>\n\n<p>Example from that post:</p>\n\n<pre><code>(function () {\n   'use strict';\n   // this function is strict...\n}());\n\n(function () {\n   // but this function is sloppy...\n}());\n</code></pre>\n\n<p><strong>Update:</strong>\nIn case you don't want to wrap in immediate function (e.g. it is a node module), then you can disable the warning.</p>\n\n<p>For <strong>JSLint</strong> (per <a href=\"http://stackoverflow.com/a/11375064/2688\">Zhami</a>):</p>\n\n<pre><code>/*jslint node: true */\n</code></pre>\n\n<p>For <strong>JSHint</strong>:</p>\n\n<pre><code>/*jshint strict:false */\n</code></pre>\n\n<p>or (per <a href=\"http://stackoverflow.com/posts/4462560/revisions\">Laith Shadeed</a>)</p>\n\n<pre><code>/* jshint -W097 */\n</code></pre>\n\n<p>To disable any arbitrary warning from JSHint, check the map in <a href=\"https://github.com/jshint/jshint/blob/2.x/src/messages.js\">JSHint source code</a> (details in <a href=\"http://www.jshint.com/docs/\">docs</a>).</p>\n    "},{"t":"Is there a better way to do optional function parameters in Javascript?","l":"http://stackoverflow.com/questions/148901/is-there-a-better-way-to-do-optional-function-parameters-in-javascript","q":"\n\n<p>I've always handled optional parameters in Javascript like this:</p>\n\n<pre><code>function myFunc(requiredArg, optionalArg){\n  optionalArg = optionalArg || 'defaultValue';\n\n  //do stuff\n\n}\n</code></pre>\n\n<p>Is there a better way to do it?</p>\n\n<p>Are there any cases where using <code>||</code> like that is going to fail?</p>\n    ","a":"\n<p>Your logic fails if optionalArg is passed, but evaluates as false - try this as an alternative</p>\n\n<pre><code>if (typeof optionalArg === 'undefined') { optionalArg = 'default'; }\n</code></pre>\n\n<p>Or an alternative idiom:</p>\n\n<pre><code>optionalArg = (typeof optionalArg === 'undefined') ? 'default' : optionalArg;\n</code></pre>\n\n<p>Use whichever idiom communicates the intent best to you!</p>\n    "},{"t":"JavaScript plus sign in front of function name","l":"http://stackoverflow.com/questions/13341698/javascript-plus-sign-in-front-of-function-name","q":"\n\n<p>I've been looking on info about self-invoking functions, and somewhere I stumbled on this notation:</p>\n\n<pre><code>+function(){}\n</code></pre>\n\n<p>Can someone explain to me what the <code>+</code> sign in front of the function means/does?</p>\n    ","a":"\n<p>It forces the parser to treat the part following the <code>+</code> as an expression. This is usually used for functions that are invoked immediately, e.g.:</p>\n\n<pre><code>+function() { console.log(\"Foo!\"); }();\n</code></pre>\n\n<p>Without the <code>+</code> there, if the parser is in a state where it's expecting a statement (which can be an expression or several non-expression statements), the word <code>function</code> looks like the beginning of a function <em>declaration</em> rather than a function <em>expression</em> and so the <code>()</code> following it (the ones at the end of the line above) would be a syntax error (as would the absense of a name, in that example). <em>With</em> the <code>+</code>, it makes it a function expression, which means the name is optional and which results in a reference to the function, which can be invoked, so the parentheses are valid.</p>\n\n<p><code>+</code> is just one of the options. It can also be <code>-</code>, <code>!</code>, <code>~</code>, or just about any other unary operator. Alternately, you can use parentheses (this is more common, but neither more nor less correct syntactically):</p>\n\n<pre><code>(function() { console.log(\"Foo!\"); })();\n// or\n(function() { console.log(\"Foo!\"); }());\n</code></pre>\n    "},{"t":"How to debug JavaScript/jQuery event bindings with Firebug (or similar tool)","l":"http://stackoverflow.com/questions/570960/how-to-debug-javascript-jquery-event-bindings-with-firebug-or-similar-tool","q":"\n\n<p>I need to debug a web application that uses jQuery to do some fairly complex and messy <a href=\"http://en.wikipedia.org/wiki/Document_Object_Model\">DOM</a> manipulation. At one point, some of the events that were bound to particular elements, are not fired and simply stop working.</p>\n\n<p>If I had a capability to edit the application source, I would drill down and add a bunch of <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\">Firebug</a> <code>console.log()</code> statements and comment/uncomment pieces of code to try to pinpoint the problem. But let's assume I cannot edit the application code and need to work entirely in Firefox using Firebug or similar tools.</p>\n\n<p>Firebug is very good at letting me navigate and manipulate the DOM. So far, though, I have not been able to figure out how to do event debugging with Firebug. Specifically, I just want to see a list of event handlers bound to a particular element at a given time (using Firebug JavaScript breakpoints to trace the changes). But either Firebug does not have the capability to see bound events, or I'm too dumb to find it. :-)</p>\n\n<p>Any recommendations or ideas? Ideally, I would just like to see and edit events bound to elements, similarly to how I can edit DOM today.</p>\n    ","a":"\n<p>See <a href=\"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node/447106#447106\">How to find event listeners on a DOM node</a>.</p>\n\n<p>In a nutshell, assuming at some point an event handler is attached to your element (eg): <code>$('#foo').click(function() { console.log('clicked!') });</code></p>\n\n<p>You inspect it like so:</p>\n\n<ul>\n<li><p>jQuery 1.3.x</p>\n\n<pre><code>var clickEvents = $('#foo').data(\"events\").click;\njQuery.each(clickEvents, function(key, value) {\n  console.log(value) // prints \"function() { console.log('clicked!') }\"\n})\n</code></pre></li>\n<li><p>jQuery 1.4.x</p>\n\n<pre><code>var clickEvents = $('#foo').data(\"events\").click;\njQuery.each(clickEvents, function(key, handlerObj) {\n  console.log(handlerObj.handler) // prints \"function() { console.log('clicked!') }\"\n})\n</code></pre></li>\n</ul>\n\n<p>See <a href=\"http://docs.jquery.com/Core/data#name\"><code>jQuery.fn.data</code></a> (where jQuery stores your handler internally).</p>\n\n<ul>\n<li><p>jQuery 1.8.x</p>\n\n<pre><code>var clickEvents = $._data($('#foo')[0], \"events\").click;\njQuery.each(clickEvents, function(key, handlerObj) {\n  console.log(handlerObj.handler) // prints \"function() { console.log('clicked!') }\"\n})\n</code></pre></li>\n</ul>\n    "},{"t":"Check if element exists in jQuery [duplicate]","l":"http://stackoverflow.com/questions/4592493/check-if-element-exists-in-jquery","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/31044/is-there-an-exists-function-for-jquery\" dir=\"ltr\">Is there an “exists” function for jQuery?</a>\n                <span class=\"question-originals-answer-count\">\n                    21 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>How do I check if an element exists if the element is created by <code>.append()</code> method?\n<code>$('elemId').length</code> doesn't work for me.</p>\n    ","a":"\n<blockquote>\n  <p><code>$('elemId').length</code> doesn't work for\n  me.</p>\n</blockquote>\n\n<p>You need to put <code>#</code> before element id:</p>\n\n<pre><code>$('#elemId').length\n---^\n</code></pre>\n\n<hr>\n\n<p>With vanilla JavaScript, you don't need the hash (<code>#</code>) eg <code>document.getElementById('id_here')</code> , however when using jQuery, you need to put hash to target elements based on <code>id</code> just like CSS.</p>\n    "},{"t":"How do I test for an empty Javascript object?","l":"http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object","q":"\n\n<p>After an AJAX request, sometimes my application may return an empty object, like:</p>\n\n<pre><code>var a = ({});\n</code></pre>\n\n<p>How can I check whether that's the case?</p>\n    ","a":"\n<p>For those of you who have the same problem but uses jQuery, you can use <a href=\"http://api.jquery.com/jQuery.isEmptyObject/\">jQuery.isEmptyObject</a>.</p>\n    "},{"t":"Event binding on dynamically created elements?","l":"http://stackoverflow.com/questions/203198/event-binding-on-dynamically-created-elements","q":"\n\n<p>I have a bit of code where I am looping though all the select boxes on a page and binding a <code>.hover</code> event to them to do a bit of twiddling with their width on <code>mouseon/off</code>.</p>\n\n<p>This happens on page ready and works just fine.</p>\n\n<p>The problem I have is that any select boxes I add via Ajax or DOM after the initial loop won't have the event bound.</p>\n\n<p>I have found this plugin (<a href=\"http://brandonaaron.net/docs/livequery/#getting-started\">jQuery Live Query Plugin</a>), but before I add another 5k to my pages with a plugin, I want to see if anyone knows a way to do this, either with jQuery directly or by another option.</p>\n    ","a":"\n<p><strong>As of jQuery 1.7</strong> you should use <a href=\"https://api.jquery.com/on/#on-events-selector-data-handler\"><code>jQuery.fn.on</code></a>:</p>\n\n<pre><code>$(staticAncestors).on(eventName, dynamicChild, function() {});\n</code></pre>\n\n<hr>\n\n<p><strong>Prior to this</strong>, the recommended approach was to use <a href=\"http://api.jquery.com/live\"><code>live()</code></a>: </p>\n\n<pre><code>$(selector).live( eventName, function(){} );\n</code></pre>\n\n<p>However, <code>live()</code> was deprecated in 1.7 in favour of <code>on()</code>, and completely removed in 1.9. The <code>live()</code> signature:</p>\n\n<pre><code>$(selector).live( eventName, function(){} );\n</code></pre>\n\n<p>... can be replaced with the following <a href=\"http://api.jquery.com/on/\"><code>on()</code></a> signature:</p>\n\n<pre><code>$(document).on( eventName, selector, function(){} );\n</code></pre>\n    "},{"t":"Commonly accepted best practices around code organization in JavaScript [closed]","l":"http://stackoverflow.com/questions/247209/commonly-accepted-best-practices-around-code-organization-in-javascript","q":"\n\n<p>As JavaScript frameworks like jQuery make client side web applications richer and more functional, I've started to notice one problem...</p>\n\n<p><strong>How in the world do you keep this organized?</strong></p>\n\n<ul>\n<li>Put all your handlers in one spot and write functions for all the events?</li>\n<li>Create function/classes to wrap all your functionality?</li>\n<li>Write like crazy and just hope it works out for the best?</li>\n<li>Give up and get a new career?</li>\n</ul>\n\n<p>I mention jQuery, but it's really any JavaScript code in general. I'm finding that as lines upon lines begin to pile up, it gets harder to manage the script files or find what you are looking for. Quite possibly the biggest propblems I've found is there are so many ways to do the same thing, it's hard to know which one is the current commonly accepted best practice.</p>\n\n<p>Are there any general recommendations on the best way to keep your <strong>.js</strong> files as nice and neat as the rest of your application? Or is this just a matter of IDE? Is there a better option out there?</p>\n\n<hr>\n\n<p><strong>EDIT</strong></p>\n\n<p>This question was intended to be more about code organization and not file organization. There has been some really good examples of merging files or splitting content around.</p>\n\n<p>My question is: what is the current commonly accepted best practice way to organize your actual code? What is your way, or even a recommended way to interact with page elements and create reuseable code that doesn't conflict with each other?</p>\n\n<p>Some people have listed <strong>namespaces</strong> which is a good idea. What are some other ways, more specifically dealing with elements on the page and keeping the code organized and neat?</p>\n    ","a":"\n<p>It would be a lot nicer if javascript had namespaces built in, but I find that organizing things like Dustin Diaz describes <a href=\"http://www.dustindiaz.com/namespace-your-javascript/\">here</a> helps me a lot. </p>\n\n<pre><code>var DED = (function() {\n\n    var private_var;\n\n    function private_method()\n    {\n        // do stuff here\n    }\n\n    return {\n        method_1 : function()\n            {\n                // do stuff here\n            },\n        method_2 : function()\n            {\n                // do stuff here\n            }\n    };\n})();\n</code></pre>\n\n<p>I put different \"namespaces\" and sometimes individual classes in separate files. Usually I start with one file and as a class or namespace gets big enough to warrant it, I separate it out into its own file. Using a tool to combine all you files for production is an excellent idea as well.</p>\n    "},{"t":"How do you remove all the options of a select box and then add one option and select it with jQuery?","l":"http://stackoverflow.com/questions/47824/how-do-you-remove-all-the-options-of-a-select-box-and-then-add-one-option-and-se","q":"\n\n<p>Using core jQuery, how do you remove all the options of a select box, then add one option and select it?</p>\n\n<p>My select box is the following.</p>\n\n<pre><code>&lt;Select id=\"mySelect\" size=\"9\" &lt;/Select&gt;\n</code></pre>\n\n<p>EDIT: The following code was helpful with chaining. However, (in Internet&nbsp;Explorer) <code>.val('whatever')</code> did not select the option that was added. (I did use the same 'value' in both <code>.append</code> and <code>.val</code>.)</p>\n\n<pre><code>$('#mySelect').find('option').remove().end().append('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;').val('whatever');\n</code></pre>\n\n<p>EDIT: Trying to get it to mimic this code, I use the following code whenever the page/form is reset. This select box is populated by a set of radio buttons. <code>.focus()</code> was closer, but the option did not appear selected like it does with <code>.selected= \"true\"</code>. Nothing is wrong with my existing code - I am just trying to learn jQuery.</p>\n\n<pre><code>var mySelect = document.getElementById('mySelect');\nmySelect.options.length = 0;\nmySelect.options[0] = new Option (\"Foo (only choice)\", \"Foo\");\nmySelect.options[0].selected=\"true\";\n</code></pre>\n\n<p>EDIT: selected answer was close to what I needed. This worked for me:</p>\n\n<pre><code>$('#mySelect').children().remove().end().append('&lt;option selected value=\"whatever\"&gt;text&lt;/option&gt;') ;\n</code></pre>\n\n<p>But both answers led me to my final solution..</p>\n    ","a":"\n<pre><code>$('#mySelect')\n    .find('option')\n    .remove()\n    .end()\n    .append('&lt;option value=\"whatever\"&gt;text&lt;/option&gt;')\n    .val('whatever')\n;\n</code></pre>\n    "},{"t":"What is JavaScript's highest integer value that a Number can go to without losing precision?","l":"http://stackoverflow.com/questions/307179/what-is-javascripts-highest-integer-value-that-a-number-can-go-to-without-losin","q":"\n\n<p>Is this defined by the language? Is there a defined maximum? Is it different in different browsers?</p>\n    ","a":"\n<p><strong>+/- 9007199254740991</strong></p>\n\n<p><a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_8.5\" rel=\"nofollow\">ECMA Section 8.5 - Numbers</a></p>\n\n<blockquote>\n  <p>Note that all the positive and negative integers whose magnitude is no greater than 2<sup>53</sup> are representable in the Number type (indeed, the integer 0 has two representations, +0 and −0). </p>\n</blockquote>\n\n<p>They are 64-bit floating point values, the largest exact integral value is 2<sup>53</sup>-1, or <code>9007199254740991</code>. In ES6, this is defined as <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\" rel=\"nofollow\">Number.MAX_SAFE_INTEGER</a>.</p>\n\n<p>Note that the bitwise operators and shift operators operate on 32-bit ints, so in that case, the max safe integer is 2<sup>31</sup>-1, or 2147483647.  </p>\n\n<p></p><hr>\nTest it out!<p></p>\n\n<pre><code>var x = 9007199254740992;\nvar y = -x;\nx == x + 1; // true !\ny == y - 1; // also true !\n// Arithmetic operators work, but bitwise/shifts only operate on int32:\nx / 2;      // 4503599627370496\nx &gt;&gt; 1;     // 0\nx | 1;      // 1\n</code></pre>\n    "},{"t":"jQuery/JavaScript: accessing contents of an iframe","l":"http://stackoverflow.com/questions/364952/jquery-javascript-accessing-contents-of-an-iframe","q":"\n\n<p>I would like to manipulate the html inside an iframe using jquery.</p>\n\n<p>I thought I'd be able to do this by setting the context of the jQuery function to be the document of the iframe, something like:</p>\n\n<pre><code>$(function(){//document ready\n    $('some selector', frames['nameOfMyIframe'].document).doStuff()\n});\n</code></pre>\n\n<p>However this doesn't seem to work. A bit of inspection shows me that the variables in <code>frames['nameOfMyIframe']</code> are undefined unless I wait a while for the iframe to load. However, when the iframe loads the variables are not accessible (I get <code>permission denied</code> type errors).</p>\n\n<p>Does anyone know of way to work around this?</p>\n    ","a":"\n<p>I think what you are doing is subject to the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a>. This should be the reason why you are getting <em>permission denied type</em> errors.</p>\n    "},{"t":"HTML-encoding in JavaScript/jQuery","l":"http://stackoverflow.com/questions/1219860/html-encoding-in-javascript-jquery","q":"\n\n<p>I’m using JavaScript to pull a value out from a hidden field and display it in a textbox. The value in the hidden field is encoded.</p>\n\n<p>For example,</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input id='hiddenId' type='hidden' value='chalk &amp;amp; cheese' /&gt;\n</code></pre>\n\n<p>gets pulled into</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input type='text' value='chalk &amp;amp; cheese' /&gt;\n</code></pre>\n\n<p>via some jQuery to get the value from the hidden field (it’s at this point that I lose the encoding):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('#hiddenId').attr('value')\n</code></pre>\n\n<p>The problem is that when I read <code>chalk &amp;amp; cheese</code> from the hidden field, JavaScript seems to lose the encoding. To escape <code>\"</code> and <code>'</code>, I want the encoding to remain.</p>\n\n<p>Is there a JavaScript library or a jQuery method that will HTML-encode a string?</p>\n    ","a":"\n<p>I use these functions:</p>\n\n<pre><code>function htmlEncode(value){\n  //create a in-memory div, set it's inner text(which jQuery automatically encodes)\n  //then grab the encoded contents back out.  The div never exists on the page.\n  return $('&lt;div/&gt;').text(value).html();\n}\n\nfunction htmlDecode(value){\n  return $('&lt;div/&gt;').html(value).text();\n}\n</code></pre>\n\n<p>Basically a div element is created in memory, but it is never appended to the document.</p>\n\n<p>On the htmlEncode function I set the innerText of the element, and retrieve the encoded innerHTML, on the htmlDecode function I set the innerHTML value of the element and the innerText is retrieved.</p>\n\n<p>Check a running example <a href=\"http://jsbin.com/ejuru\">here</a>.</p>\n    "},{"t":"How can I create a two dimensional array in JavaScript?","l":"http://stackoverflow.com/questions/966225/how-can-i-create-a-two-dimensional-array-in-javascript","q":"\n\n<p>I have been reading online and some places say it isn't possible, some say it is and then give an example and others refute the example, etc. </p>\n\n<ol>\n<li><p>How do I declare a 2 dimensional array in JavaScript? (assuming it's possible) </p></li>\n<li><p>How would I access its members? (<code>myArray[0][1]</code> or <code>myArray[0,1]</code>?)</p></li>\n</ol>\n    ","a":"\n<pre><code>var items = [[1,2],[3,4],[5,6]];\nalert(items[0][0]); // 1\n</code></pre>\n    "},{"t":"How to merge two arrays in Javascript and de-duplicate items","l":"http://stackoverflow.com/questions/1584370/how-to-merge-two-arrays-in-javascript-and-de-duplicate-items","q":"\n\n<p>I have two JavaScript arrays:</p>\n\n<pre><code>var array1 = [\"Vijendra\",\"Singh\"];\nvar array2 = [\"Singh\", \"Shakya\"];\n</code></pre>\n\n<p>I want the output to be:</p>\n\n<pre><code>var array3 = [\"Vijendra\",\"Singh\",\"Shakya\"];\n</code></pre>\n\n<p>The output array should have repeated words removed.</p>\n\n<p>How do I merge two arrays in JavaScript so that I get only the unique items from each array in the same order they were inserted into the original arrays?</p>\n    ","a":"\n<p>To just merge the arrays (without removing duplicates) use <code>Array.concat</code>:</p>\n\n<pre><code>var array1 = [\"Vijendra\",\"Singh\"];\nvar array2 = [\"Singh\", \"Shakya\"];\n\nvar array3 = array1.concat(array2); // Merges both arrays\n// [ 'Vijendra', 'Singh', 'Singh', 'Shakya' ]\n</code></pre>\n\n<p>Since there is no 'built in' way to remove duplicate (<a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf\">ECMA-262</a> actually has <code>Array.forEach</code> which would be great for this..), so we do it manually:</p>\n\n<pre><code>Array.prototype.unique = function() {\n    var a = this.concat();\n    for(var i=0; i&lt;a.length; ++i) {\n        for(var j=i+1; j&lt;a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n</code></pre>\n\n<p>Then, to use it:</p>\n\n<pre><code>var array1 = [\"Vijendra\",\"Singh\"];\nvar array2 = [\"Singh\", \"Shakya\"];\n// Merges both arrays and gets unique items\nvar array3 = array1.concat(array2).unique(); \n</code></pre>\n\n<p>This will also preserve the order of the arrays (i.e, no sorting needed).</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Since many people are annoyed about prototype augmentation of <code>Array.prototype</code> and <code>for in</code> loops, here is a less invasive way to use it:</p>\n\n<pre><code>function arrayUnique(array) {\n    var a = array.concat();\n    for(var i=0; i&lt;a.length; ++i) {\n        for(var j=i+1; j&lt;a.length; ++j) {\n            if(a[i] === a[j])\n                a.splice(j--, 1);\n        }\n    }\n\n    return a;\n};\n\nvar array1 = [\"Vijendra\",\"Singh\"];\nvar array2 = [\"Singh\", \"Shakya\"];\n    // Merges both arrays and gets unique items\nvar array3 = arrayUnique(array1.concat(array2));\n</code></pre>\n\n<p>For those who are fortunate enough to work with progressive browsers where ES5 is available, you can use <code>Object.defineProperty</code>:</p>\n\n<pre><code>Object.defineProperty(Array.prototype, 'unique' {\n    enumerable: false,\n    configurable: false,\n    writable: false,\n    value: function() {\n        var a = this.concat();\n        for(var i=0; i&lt;a.length; ++i) {\n            for(var j=i+1; j&lt;a.length; ++j) {\n                if(a[i] === a[j])\n                    a.splice(j--, 1);\n            }\n        }\n\n        return a;\n    }\n});\n</code></pre>\n    "},{"t":"Using HTML5/Canvas/JavaScript to take screenshots","l":"http://stackoverflow.com/questions/4912092/using-html5-canvas-javascript-to-take-screenshots","q":"\n\n<p>Google's \"Report a Bug\" or \"Feedback Tool\" lets you select an area of your browser window to create a screenshot that is submitted with your feedback about a bug.</p>\n\n<p><img src=\"http://i.stack.imgur.com/CDhEi.png\" alt=\"Google Feedback Tool Screenshot\">\n<sub><em>Screenshot by Jason Small, posted in a <a href=\"http://stackoverflow.com/questions/6608327/google-style-send-feedback\">duplicate question</a>.</em> </sub></p>\n\n<p>How are they doing this?  Google's JavaScript feedback API is loaded from <a href=\"https://ssl.gstatic.com/feedback/api.js\">here</a> and <a href=\"http://www.google.com/tools/feedback/intl/en/learnmore.html\">their overview of the feedback module</a> will demonstrate the screenshot capability.</p>\n    ","a":"\n<p>JavaScript can read the DOM and render a fairly accurate representation of that using <code>canvas</code>. I have been working on a script which converts html into an canvas image. Decided today to make an implementation of it into sending feedbacks like you described.</p>\n\n<p>The script allows you to create feedback forms which include a screenshot, created on the clients browser, along with the form. The screenshot is based on the DOM and as such may not be 100% accurate to the real representation as it does not make an actual screenshot, but builds the screenshot based on the information available on the page.</p>\n\n<p>It <strong>does not require any rendering from the server</strong>, as the whole image is created on the clients browser. The HTML2Canvas script itself is still in a very experimental state, as it does not parse nearly as much of the CSS3 attributes I would want it to, nor does it have any support to load CORS images even if a proxy was available.</p>\n\n<p>Still quite limited browser compatibility (not because more couldn't be supported, just haven't had time to make it more cross browser supported).</p>\n\n<p>For more information, have a look at the examples here:</p>\n\n<p><a href=\"http://hertzen.com/experiments/jsfeedback/\">http://hertzen.com/experiments/jsfeedback/</a></p>\n\n<p><strong>edit</strong>\nThe html2canvas script is now available seperately <a href=\"https://github.com/niklasvh/html2canvas\">here</a> and some <a href=\"http://html2canvas.hertzen.com/\">examples here</a>.</p>\n\n<p><strong>edit 2</strong>\nAnother confirmation that Google uses a very similar method, (in fact based on the documentation the only major difference is their async method of traversing/drawing) can be found in this presentation by Elliott Sprehn from the Google Feedback team:\n<a href=\"http://www.elliottsprehn.com/preso/fluentconf/\">http://www.elliottsprehn.com/preso/fluentconf/</a></p>\n    "},{"t":"Is there a “null coalescing” operator in JavaScript?","l":"http://stackoverflow.com/questions/476436/is-there-a-null-coalescing-operator-in-javascript","q":"\n\n<p>Is there a null coalescing operator in Javascript?</p>\n\n<p>For example, in C#, I can do this:</p>\n\n<pre><code>String someString = null;\nvar whatIWant = someString ?? \"Cookies!\";\n</code></pre>\n\n<p>The best approximation I can figure out for Javascript is using the conditional operator:</p>\n\n<pre><code>var someString = null;\nvar whatIWant = someString ? someString : 'Cookies!';\n</code></pre>\n\n<p>Which is sorta icky IMHO. Can I do better?</p>\n    ","a":"\n<p>The JavaScript equivalent of the C# null coalescing operator (<code>??</code>) is using a logical OR (<code>||</code>):</p>\n\n<pre><code>var whatIWant = someString || \"Cookies!\";\n</code></pre>\n\n<p>There are cases (clarified below) that the behaviour won't match that of C#, but this is the general, terse way of assigning default/alternative values in JavaScript.</p>\n\n<p></p><hr><p></p>\n\n<h2>Clarification</h2>\n\n<p>Regardless of the type of the first operand, if casting it to a Boolean results in <code>false</code>, the assignment will use the second operand. Beware of all the cases below:</p>\n\n<pre><code>alert(Boolean(null)); // false\nalert(Boolean(undefined)); // false\nalert(Boolean(0)); // false\nalert(Boolean(\"\")); // false\nalert(Boolean(\"false\")); // true -- gotcha! :)\n</code></pre>\n\n<p>This means:</p>\n\n<pre><code>var whatIWant = null || new ShinyObject(); // is a new shiny object\nvar whatIWant = undefined || \"well defined\"; // is \"well defined\"\nvar whatIWant = 0 || 42; // is 42\nvar whatIWant = \"\" || \"a million bucks\"; // is \"a million bucks\"\nvar whatIWant = \"false\" || \"no way\"; // is \"false\"\n</code></pre>\n    "},{"t":"JavaScript check if variable exists (is defined/initialized) - Which method is better?","l":"http://stackoverflow.com/questions/519145/how-can-i-check-whether-a-variable-is-defined-in-javascript","q":"\n\n<p>Which method of checking if a variable has been initialized is better/correct?\n(Assuming the variable could hold anything (string, int, object, function, etc.))</p>\n\n<pre><code>if (elem) { // or !elem\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (typeof(elem) !== 'undefined') {\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (elem != null) {\n</code></pre>\n    ","a":"\n<p>The <code>typeof</code> operator will check if the variable is really undefined.</p>\n\n<pre><code>if (typeof variable === 'undefined') {\n    // variable is undefined\n}\n</code></pre>\n\n<p>The <code>typeof</code> operator, unlike the other operators, doesn't throw a <em>ReferenceError</em> exception when used with an undeclared variable.</p>\n\n<p>For more info on using strict comparison, see: <a href=\"http://stackoverflow.com/q/359494/584192\">JavaScript === vs == : Does it matter which \"equal\" operator I use?</a> .</p>\n    "},{"t":"Getting the ID of the element that fired an event","l":"http://stackoverflow.com/questions/48239/getting-the-id-of-the-element-that-fired-an-event","q":"\n\n<p>Is there any way to get the ID of the element that fires an event?</p>\n\n<p>I'm thinking something like:</p>\n\n<pre><code>&lt;html&gt;\n\n  &lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"starterkit/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n      $(document).ready(function () {\n        $(\"a\").click(\n\n        function () {\n          var test = caller.id;\n          alert(test.val());\n        });\n      });\n    &lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;form class=\"item\" id=\"aaa\"&gt;\n      &lt;input class=\"title\"&gt;&lt;/input&gt;\n    &lt;/form&gt;\n    &lt;form class=\"item\" id=\"bbb\"&gt;\n      &lt;input class=\"title\"&gt;&lt;/input&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n\n&lt;/html&gt;\n</code></pre>\n\n<p>Except of course that the var <code>test</code> should contain the id <code>\"aaa\"</code>, if the event is fired from the first form, and <code>\"bbb\"</code>, if the event is fired from the second form.</p>\n    ","a":"\n<p>In jQuery <code>event.target</code> always refers to the element that triggered the event, where <code>'event'</code> is the parameter passed to the function. <a href=\"http://api.jquery.com/category/events/event-object/\">http://api.jquery.com/category/events/event-object/</a></p>\n\n<pre><code>$(document).ready(function() {\n    $(\"a\").click(function(event) {\n        alert(event.target.id);\n    });\n});\n</code></pre>\n\n<p>Note also that <code>'this'</code> will also work, but that it is not a jQuery object, so if you wish to use a jQuery function on it then you must refer to it as <code>'$(this)'</code>, e.g.:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"a\").click(function(event) {\n        // this.append wouldn't work\n        $(this).append(\" Clicked\");\n    });\n});\n</code></pre>\n    "},{"t":"How do I convert a float Number to a whole Number in Javascript?","l":"http://stackoverflow.com/questions/596467/how-do-i-convert-a-float-number-to-a-whole-number-in-javascript","q":"\n\n<p>I'd like to convert a float to a whole number in Javascript. Actually, I'd like to know how to do BOTH of the standard conversions: by truncating and by rounding. And efficiently, not via converting to a string and parsing.</p>\n    ","a":"\n<pre><code>var intvalue = Math.floor( floatvalue );\nvar intvalue = Math.ceil( floatvalue ); \nvar intvalue = Math.round( floatvalue );\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Math\">Math object reference</a></p>\n    "},{"t":"How to find event listeners on a DOM node?","l":"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node","q":"\n\n<p>I have a page where some event listeners are attached to input boxes and select boxes.\nIs there a way to find out which event listeners are observing a particular DOM node and for what event?</p>\n\n<p>Events are attached using:</p>\n\n<ol>\n<li>Prototype's <code>Event.observe</code>;</li>\n<li>DOM's <code>addEventListener</code>;</li>\n<li>As element attribute <code>element.onclick</code>.</li>\n</ol>\n    ","a":"\n<p>If you just need to inspect what's happening on a page, you might try the <a href=\"http://www.sprymedia.co.uk/article/Visual+Event\">Visual Event</a> bookmarklet.</p>\n\n<p><strong>Update</strong>: <a href=\"http://www.sprymedia.co.uk/article/Visual+Event+2\">Visual Event 2</a> available;</p>\n    "},{"t":"What techniques can be used to define a class in JavaScript, and what are their trade-offs?","l":"http://stackoverflow.com/questions/387707/what-techniques-can-be-used-to-define-a-class-in-javascript-and-what-are-their","q":"\n\n<p>I prefer to use OOP in large scale projects like the one I'm working on right now. I need to create several classes in JavaScript but, if I'm not mistaken, there are at least a couple of ways to go about doing that. What would be the syntax and why would it be done in that way?</p>\n\n<p>I would like to avoid using third-party libraries - at least at first.<br>\nLooking for other answers, I found the article <em><a href=\"http://www.webreference.com/js/column79/\">Object-Oriented Programming with JavaScript, Part I: Inheritance - Doc JavaScript</a></em> that discusses object-oriented programming in JavaScript. Is there a better way to do inheritance? </p>\n    ","a":"\n<p>Here's the way to do it without using any external libraries:</p>\n\n<pre><code>// Define a class like this\nfunction Person(name, gender){\n\n   // Add object properties like this\n   this.name = name;\n   this.gender = gender;\n}\n\n// Add methods like this.  All Person objects will be able to invoke this\nPerson.prototype.speak = function(){\n    alert(\"Howdy, my name is\" + this.name);\n};\n\n// Instantiate new objects with 'new'\nvar person = new Person(\"Bob\", \"M\");\n\n// Invoke methods like this\nperson.speak(); // alerts \"Howdy, my name is Bob\"\n</code></pre>\n\n<p>Now the real answer is a whole lot more complex than that. For instance, there is no such thing as classes in JavaScript. JavaScript uses a <code>prototype</code>-based inheritance scheme.  </p>\n\n<p>In addition, there are numerous popular JavaScript libraries that have their own style of approximating class-like functionality in JavaScript. You'll want to check out at least <a href=\"http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\">Prototype</a> and <a href=\"http://en.wikipedia.org/wiki/JQuery\">jQuery</a>.  </p>\n\n<p>Deciding which of these is the \"best\" is a great way to start a holy war on Stack&nbsp;Overflow. If you're embarking on a larger JavaScript-heavy project, it's definitely worth learning a popular library and doing it their way. I'm a Prototype guy, but Stack&nbsp;Overflow seems to <a href=\"http://stackoverflow.com/questions/176324/why-does-everyone-like-jquery-more-than-prototypescriptaclous-or-mootools-or-wh\">lean towards jQuery</a>.</p>\n\n<p>As far as there being only \"one way to do it\", without any dependencies on external libraries, the way I wrote is pretty much it.   </p>\n    "},{"t":"How do you access the matched groups in a JavaScript regular expression?","l":"http://stackoverflow.com/questions/432493/how-do-you-access-the-matched-groups-in-a-javascript-regular-expression","q":"\n\n<p>I want to match a portion of a string using a <a href=\"http://en.wikipedia.org/wiki/Regular_expression\">regular expression</a> and then access that parenthesized substring:</p>\n\n<pre><code>var myString = \"something format_abc\"; // I want \"abc\"\n\nvar arr = /(?:^|\\s)format_(.*?)(?:\\s|$)/.exec(myString);\n\nconsole.log(arr);     // Prints: [\" format_abc\", \"abc\"] .. so far so good.\nconsole.log(arr[1]);  // Prints: undefined  (???)\nconsole.log(arr[0]);  // Prints: format_undefined (!!!)\n</code></pre>\n\n<p>What am I doing wrong?</p>\n\n<hr>\n\n<p>I've discovered that there was nothing wrong with the regular expression code above: the actual string which I was testing against was this:</p>\n\n<pre><code>\"date format_%A\"\n</code></pre>\n\n<p>Reporting that \"%A\" is undefined seems a very strange behaviour, but it is not directly related to this question, so I've opened a new one, <em><a href=\"http://stackoverflow.com/questions/432826/why-is-a-matched-substring-returning-undefined-in-javascript\">Why is a matched substring returning \"undefined\" in JavaScript?</a></em>.</p>\n\n<hr>\n\n<p>The issue was that <code>console.log</code> takes its parameters like a <code>printf</code> statement, and since the string I was logging (<code>\"%A\"</code>) had a special value, it was trying to find the value of the next parameter.</p>\n    ","a":"\n<p>You can access capturing groups like this:</p>\n\n<pre><code>var myString = \"something format_abc\";\nvar myRegexp = /(?:^|\\s)format_(.*?)(?:\\s|$)/g;\nvar match = myRegexp.exec(myString);\nalert(match[1]);  // abc\n</code></pre>\n\n<p>And if there are multiple matches you can iterate over them:</p>\n\n<pre><code>match = myRegexp.exec(myString);\nwhile (match != null) {\n    // matched text: match[0]\n    // match start: match.index\n    // capturing group n: match[n]\n    match = myRegexp.exec(myString);\n}\n</code></pre>\n    "},{"t":"How to print a number with commas as thousands separators in JavaScript","l":"http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript","q":"\n\n<p>I am trying to print an integer in <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> with commas as thousands separators. For example, I want to show the number 1234567 as \"1,234,567\". How would I go about doing this? </p>\n\n<p>Here is how I am doing it:</p>\n\n<pre><code>function numberWithCommas(x) {\n    x = x.toString();\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x))\n        x = x.replace(pattern, \"$1,$2\");\n    return x;\n}\n</code></pre>\n\n<p>Is there a simpler or more elegant way to do it? It would be nice if it works with floats also, but that is not necessary. It does not need to be locale-specific to decide between periods and commas. </p>\n    ","a":"\n<p>I used the idea from Kerry's answer, but simplified it since I was just looking for something simple for my specific purpose. Here is what I did:</p>\n\n<pre><code>function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n</code></pre>\n\n<p>This is all you really need to know.</p>\n\n<p>@Neils Bom asked how the regex works. My explanation is sort of long. It won't fit in the comments and I don't know where else to put it so I am doing it here. If anyone has any other suggestions for where to put it, please let me know.</p>\n\n<p>The regex uses 2 lookahead assertions: a positive one to look for any point in the string that has a multiple of 3 digits in a row after it, and a negative assertion to make sure that point only has exactly a multiple of 3 digits. The replacement expression puts a comma there.</p>\n\n<p>For example, if you pass it \"123456789.01\", the positive assertion will match every spot to the left of the 7 (since \"789\" is a multiple of 3 digits, \"678\" is a multiple of 3 digits, \"567\", etc.). The negative assertion checks that the multiple of 3 digits does not have any digits after it. \"789\" has a period after it so it is exactly a multiple of 3 digits, so a comma goes there. \"678\" is a multiple of 3 digits but it has a \"9\" after it, so those 3 digits are part of a group of 4, and a comma does not go there. Similarly for \"567\". \"456789\" is 6 digits, which is a multiple of 3, so a comma goes before that. \"345678\" is a multiple of 3, but it has a \"9\" after it, so no comma goes there. And so on. The \"\\B\" keeps the regex from putting a comma at the beginning of the string.</p>\n\n<p>@neu-rah mentioned that this function adds commas in undesirable places if there are more than 3 digits after the decimal point. If this is a problem, you can use this function:</p>\n\n<pre><code>function numberWithCommas(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n}\n</code></pre>\n    "},{"t":"Compare two dates with JavaScript","l":"http://stackoverflow.com/questions/492994/compare-two-dates-with-javascript","q":"\n\n<p>Can someone suggest a way to compare the values of two dates greater than, less than, and not in the past using JavaScript? The values will be coming from text boxes.</p>\n    ","a":"\n<p>The <a href=\"http://www.comptechdoc.org/independent/web/cgi/javamanual/javadate.html\">Date object</a> will do what you want - construct one for each date, then just compare them using the usual operators.</p>\n\n<p>I suggest you use drop-downs or some similar constrained form of date entry rather than text boxes, though, lest you find yourself in input validation hell.</p>\n    "},{"t":"How to execute a JavaScript function when I have its name as a string","l":"http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string","q":"\n\n<p>I have the name of a function in JavaScript as a string. How do I convert that into a function pointer so I can call it later?</p>\n\n<p>Depending on the circumstances, I may need to pass various arguments into the method too.</p>\n\n<p>Some of the functions may take the form of <code>namespace.namespace.function(args[...])</code>.</p>\n    ","a":"\n<p>Don't use eval unless you <em>absolutely, positively</em> have no other choice.</p>\n\n<p>As has been mentioned, using something like this would be the best way to do it:</p>\n\n<pre><code>window[\"functionName\"](arguments);\n</code></pre>\n\n<p>That, however, will not work with a namespace'd function:</p>\n\n<pre><code>window[\"My.Namespace.functionName\"](arguments); // fail\n</code></pre>\n\n<p>This is how you would do that:</p>\n\n<pre><code>window[\"My\"][\"Namespace\"][\"functionName\"](arguments); // succeeds\n</code></pre>\n\n<p>In order to make that easier and provide some flexibility, here is a convenience function:</p>\n\n<pre><code>function executeFunctionByName(functionName, context /*, args */) {\n  var args = [].slice.call(arguments).splice(2);\n  var namespaces = functionName.split(\".\");\n  var func = namespaces.pop();\n  for(var i = 0; i &lt; namespaces.length; i++) {\n    context = context[namespaces[i]];\n  }\n  return context[func].apply(this, args);\n}\n</code></pre>\n\n<p>You would call it like so:</p>\n\n<pre><code>executeFunctionByName(\"My.Namespace.functionName\", window, arguments);\n</code></pre>\n\n<p>Note, you can pass in whatever context you want, so this would do the same as above:</p>\n\n<pre><code>executeFunctionByName(\"Namespace.functionName\", My, arguments);\n</code></pre>\n    "},{"t":"How do you pass a variable to a Regular Expression JavaScript?","l":"http://stackoverflow.com/questions/494035/how-do-you-pass-a-variable-to-a-regular-expression-javascript","q":"\n\n<p>I would like to create a String.replaceAll() method in JavaScript and I'm thinking that using a RegEx would be most terse way to do it.  However, I can't figure out how to pass a variable in to a RegEx.  I can do this already which will replace all the instances of \"B\" with \"A\".</p>\n\n<pre><code>\"ABABAB\".replace(/B/g, \"A\");\n</code></pre>\n\n<p>But I want to do something like this:</p>\n\n<pre><code>String.prototype.replaceAll = function(replaceThis, withThis) {\n    this.replace(/replaceThis/g, withThis);\n};\n</code></pre>\n\n<p>But obviously this will only replace the text \"replaceThis\"...so how do I pass this variable in to my RegEx string?</p>\n    ","a":"\n<p>Instead of using the <code>/regex/g</code> syntax, you can construct a new <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Regular_Expressions\">RegExp</a> object:</p>\n\n<pre><code>var re = new RegExp(\"regex\",\"g\");\n</code></pre>\n\n<p>You can dynamically create regex objects this way. Then you will do:</p>\n\n<pre><code>\"mystring\".replace(re, \"newstring\");\n</code></pre>\n    "},{"t":"Best way to find an item in a JavaScript array? [duplicate]","l":"http://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array","q":"\n\n<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/237104/array-containsobj-in-javascript\">array.contains(obj) in JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>What is the best way to find if an object is in an array?</p>\n\n<p>This is the best way I know:</p>\n\n<pre><code>function include(arr, obj) {\n    for(var i=0; i&lt;arr.length; i++) {\n        if (arr[i] == obj) return true;\n    }\n}\n\ninclude([1,2,3,4], 3); // true\ninclude([1,2,3,4], 6); // undefined\n</code></pre>\n    ","a":"\n<pre><code>function include(arr,obj) {\n    return (arr.indexOf(obj) != -1);\n}\n</code></pre>\n\n<p>EDIT: \nThis will not work on IE6, 7 or 8 though. The best workaround is to define it yourself if it's not present:</p>\n\n<ol>\n<li><p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf\">Mozilla's</a> (ECMA-262) version:</p>\n\n<pre><code>  if (!Array.prototype.indexOf)\n  {\n\n       Array.prototype.indexOf = function(searchElement /*, fromIndex */)\n\n    {\n\n\n    \"use strict\";\n\n    if (this === void 0 || this === null)\n      throw new TypeError();\n\n    var t = Object(this);\n    var len = t.length &gt;&gt;&gt; 0;\n    if (len === 0)\n      return -1;\n\n    var n = 0;\n    if (arguments.length &gt; 0)\n    {\n      n = Number(arguments[1]);\n      if (n !== n)\n        n = 0;\n      else if (n !== 0 &amp;&amp; n !== (1 / 0) &amp;&amp; n !== -(1 / 0))\n        n = (n &gt; 0 || -1) * Math.floor(Math.abs(n));\n    }\n\n    if (n &gt;= len)\n      return -1;\n\n    var k = n &gt;= 0\n          ? n\n          : Math.max(len - Math.abs(n), 0);\n\n    for (; k &lt; len; k++)\n    {\n      if (k in t &amp;&amp; t[k] === searchElement)\n        return k;\n    }\n    return -1;\n  };\n\n}\n</code></pre></li>\n<li><p><a href=\"http://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array#144172\">Daniel James</a>'s version:</p>\n\n<pre><code>if (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (obj, fromIndex) {\n    if (fromIndex == null) {\n        fromIndex = 0;\n    } else if (fromIndex &lt; 0) {\n        fromIndex = Math.max(0, this.length + fromIndex);\n    }\n    for (var i = fromIndex, j = this.length; i &lt; j; i++) {\n        if (this[i] === obj)\n            return i;\n    }\n    return -1;\n  };\n}\n</code></pre></li>\n<li><p><a href=\"http://stackoverflow.com/questions/143847/best-way-to-find-an-item-in-a-javascript-array#144664\">roosteronacid</a>'s version:</p>\n\n<pre><code>Array.prototype.hasObject = (\n  !Array.indexOf ? function (o)\n  {\n    var l = this.length + 1;\n    while (l -= 1)\n    {\n        if (this[l - 1] === o)\n        {\n            return true;\n        }\n    }\n    return false;\n  } : function (o)\n  {\n    return (this.indexOf(o) !== -1);\n  }\n);\n</code></pre></li>\n</ol>\n    "},{"t":"Change the selected value of a drop-down list with jQuery","l":"http://stackoverflow.com/questions/499405/change-the-selected-value-of-a-drop-down-list-with-jquery","q":"\n\n<p>I have a drop-down list with known values.  What I'm trying to do is set the drop down list to a particular value that I know exists using jQuery.  Using regular JavaScript, I would do something like:</p>\n\n<pre><code>ddl = document.getElementById(\"ID of element goes here\");\nddl.value = 2; // 2 being the value I want to set it to.\n</code></pre>\n\n<p>However, I need to do this with jQuery, because I'm using a CSS class for my selector (stupid <a href=\"http://en.wikipedia.org/wiki/ASP.NET\">ASP.NET</a> client ids...).</p>\n\n<p>Here are a few things I've tried:</p>\n\n<pre><code>$(\"._statusDDL\").val(2); // Doesn't find 2 as a value.\n$(\"._statusDDL\").children(\"option\").val(2) // Also failed.\n</code></pre>\n\n<p>How can I do it with jQuery?</p>\n\n<p><strong>Update</strong></p>\n\n<p>So as it turns out, I had it right the first time with:</p>\n\n<pre><code>$(\"._statusDDL\").val(2);\n</code></pre>\n\n<p>When I put an alert just above it it works fine, but when I remove the alert and let it run at full speed, I get the error</p>\n\n<blockquote>\n  <p>Could not set the selected property. Invalid Index</p>\n</blockquote>\n\n<p>I'm not sure if it's a bug with jQuery or Internet Explorer 6 (I'm guessing Internet Explorer 6), but it's terribly annoying.</p>\n    ","a":"\n<p><a href=\"http://docs.jquery.com/Attributes/val#val\">jQuery's documentation</a> states:</p>\n\n<blockquote>\n  <p>[jQuery.val] checks, or selects, all the radio buttons, checkboxes, and select options that match the set of values.</p>\n</blockquote>\n\n<p>This behavior is in jQuery versions 1.2 and above.</p>\n\n<p>You most likely want this:</p>\n\n<pre><code>$(\"._statusDDL\").val('2');\n</code></pre>\n    "},{"t":"How to list the properties of a JavaScript object","l":"http://stackoverflow.com/questions/208016/how-to-list-the-properties-of-a-javascript-object","q":"\n\n<p>Say I create an object thus:</p>\n\n<pre><code>var myJSONObject =\n        {\"ircEvent\": \"PRIVMSG\", \"method\": \"newURI\", \"regex\": \"^http://.*\"};\n</code></pre>\n\n<p>What is the best way to retrieve a list of the property names? i.e. I would like to end up with some variable 'keys' such that:</p>\n\n<pre><code>keys == [\"ircEvent\", \"method\", \"regex\"]\n</code></pre>\n\n<p>Thanks.</p>\n    ","a":"\n<p>In modern browsers (IE9+, FF4+, Chrome5+, Opera12+, Safari5+) you can use the built in <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/keys\">Object.keys</a> method:</p>\n\n<pre><code>var keys = Object.keys(myJSONObject);\n</code></pre>\n\n<p>The above has a full polyfill but a simplified version is:</p>\n\n<pre><code>var getKeys = function(obj){\n   var keys = [];\n   for(var key in obj){\n      keys.push(key);\n   }\n   return keys;\n}\n</code></pre>\n\n<p>Alternatively replace <code>var getKeys</code> with <code>Object.prototype.keys</code> to allow you to call <code>.keys()</code> on any object.  Extending the prototype has some side effects and I wouldn't recommend doing it.</p>\n    "},{"t":"Determine whether an array contains a value","l":"http://stackoverflow.com/questions/1181575/determine-whether-an-array-contains-a-value","q":"\n\n<p>I need to determine if a value exists in an array.</p>\n\n<p>I am using the following function:</p>\n\n<pre><code>Array.prototype.contains = function(obj) {\n    var i = this.length;\n    while (i--) {\n        if (this[i] == obj) {\n            return true;\n        }\n    }\n    return false;\n}\n</code></pre>\n\n<p>The above function always returns false.</p>\n\n<p>The array values and the function call is as below:</p>\n\n<pre><code>arrValues = [\"Sam\",\"Great\", \"Sample\", \"High\"]\nalert(arrValues.contains(\"Sam\"));\n</code></pre>\n    ","a":"\n<pre><code>arrValues.indexOf('Sam') &gt; -1\n</code></pre>\n\n<p>IE 8 and below do not have the <code>Array.prototype.indexOf</code> method. For these versions of IE use:</p>\n\n<pre><code>if(!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function(needle) {\n        for(var i = 0; i &lt; this.length; i++) {\n            if(this[i] === needle) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n</code></pre>\n\n<p><strong>Edit after a long time:</strong> It's best not to patch the <code>prototype</code> of native primitives in JavaScript. A better way:</p>\n\n<pre><code>var indexOf = function(needle) {\n    if(typeof Array.prototype.indexOf === 'function') {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function(needle) {\n            var i = -1, index = -1;\n\n            for(i = 0; i &lt; this.length; i++) {\n                if(this[i] === needle) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n    }\n\n    return indexOf.call(this, needle);\n};\n</code></pre>\n\n<p>You can use it like this:</p>\n\n<pre><code>var myArray = [0,1,2],\n    needle = 1,\n    index = indexOf.call(myArray, needle); // 1\n</code></pre>\n\n<p>The function will detect the presence of a native <code>indexOf</code> method, once, then overwrite itself with either the native function or the shim.</p>\n    "},{"t":"How can I obfuscate(protect) JavaScript? [closed]","l":"http://stackoverflow.com/questions/194397/how-can-i-obfuscateprotect-javascript","q":"\n\n<p>I want to make a JavaScript application that's not open source, and thus have two questions:</p>\n\n<ol>\n<li>What's the best way to obfuscate the code?</li>\n<li>What's the best way to obfuscate the strings themselves within the application (assuming that the answer to #1 does not handle this)?</li>\n</ol>\n    ","a":"\n<p><strong>Obfuscation:</strong></p>\n\n<p>Try <a href=\"http://developer.yahoo.com/yui/compressor/\"><strong>YUI Compressor</strong></a>.  It's a very popular tool, built, enhanced and maintained by the Yahoo UI team.</p>\n\n<p>You may also use:</p>\n\n<ul>\n<li><a href=\"http://closure-compiler.appspot.com/home\">Google Closure Compiler</a></li>\n<li><a href=\"http://marijnhaverbeke.nl/uglifyjs\">UglifyJS</a></li>\n</ul>\n\n<p><strong>Private String Data:</strong></p>\n\n<p>Keeping string values private is a different concern, and obfuscation won't really be of much benefit.  Of course, by packaging up your source into a garbled, minified mess, you have a light version of <strong>security</strong> through <strong>obscurity</strong>.  Most of the time, it's your user who is viewing the source, and the string values on the client are intended for their use, so that sort of private string value isn't often necessary.</p>\n\n<p>If you really had a value that you never wanted a user to see, you would have a couple of options.  First, you could do some kind of encryption, which is decrypted at page load.  That would probably be one of the most secure options, but also a lot of work which may be unnecessary.  You could probably base64 encode some string values, and that would be easier.. but someone who really wanted those string values could <strong>easily decode them</strong>.  Encryption is the only way to truly prevent anyone from accessing your data, and most people find that to be more security than they need.</p>\n\n<p><strong>Sidenote:</strong></p>\n\n<p>Obfuscation in Javascript has been known to cause some bugs. The obfuscators are getting a little better about it, but many outfits decide that they see enough benefit from <strong>minifying</strong> and <strong>gzipping</strong>, and the added savings of obfuscation <strong>isn't always worth the trouble</strong>.  If you're trying to protect your source, maybe you'll decide that it's worth your while, just to make your code harder to read. <a href=\"http://www.crockford.com/javascript/jsmin.html\"><strong>JSMin</strong></a> is a good alternative.</p>\n    "},{"t":"How to check a not-defined variable in JavaScript [duplicate]","l":"http://stackoverflow.com/questions/858181/how-to-check-a-not-defined-variable-in-javascript","q":"\n\n<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/27509/detecting-an-undefined-object-property-in-javascript\">Detecting an undefined object property in JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>I wanted to check whether the variable is defined or not. For example, the following throws a not-defined error  </p>\n\n<pre><code>alert( x );\n</code></pre>\n\n<p>How can I catch this error?</p>\n    ","a":"\n<p>In JavaScript, <code>null</code> is an object. There's another value for things that don't exist, <code>undefined</code>. The DOM returns <code>null</code> for almost all cases where it fails to find some structure in the document, but in JavaScript itself <code>undefined</code> is the value used.</p>\n\n<p>Second, no, there is not a direct equivalent. If you really want to check for <code>null</code>, do:</p>\n\n<pre><code>if (null == yourvar) // With casting\nif (null === yourvar) // Without casting\n</code></pre>\n\n<p>If you want to check if a variable exists</p>\n\n<pre><code>if (typeof yourvar != 'undefined') // Any scope\nif (window['varname'] != undefined) // Global scope\nif (window['varname'] != void 0) // Old browsers\n</code></pre>\n\n<p>If you know the variable exists, but don't know if there's any value\nstored in it:</p>\n\n<pre><code>if (undefined != yourvar)\nif (void 0 != yourvar) // For older browsers\n</code></pre>\n\n<p>If you want to know if a member exists independent of whether it has been assigned a value or not:</p>\n\n<pre><code>if ('membername' in object) // With inheritance\nif (object.hasOwnProperty('membername')) // Without inheritance\n</code></pre>\n\n<p>If you want to to know whether a variable autocasts to true:</p>\n\n<pre><code>if(variablename)\n</code></pre>\n\n<p>I probably forgot some method as well...</p>\n\n<p><a href=\"http://lists.evolt.org/archive/Week-of-Mon-20050214/099714.html\">Source</a></p>\n    "},{"t":"Javascript chop/slice/trim off last character in string","l":"http://stackoverflow.com/questions/952924/javascript-chop-slice-trim-off-last-character-in-string","q":"\n\n<p>I have a string <code>12345.00</code> would like it to return <code>12345.0</code></p>\n\n<p>I have looked at trim but looks only to trim whitespace and slice which I don't see how this would work. Any suggestions ?</p>\n    ","a":"\n<p>You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\">substring</a> function:</p>\n\n<pre><code>var str = \"12345.00\";\nstr = str.substring(0, str.length - 1);\n</code></pre>\n    "},{"t":"How can I select an element by name with jQuery?","l":"http://stackoverflow.com/questions/1107220/how-can-i-select-an-element-by-name-with-jquery","q":"\n\n<p>Have a table column I'm trying to expand and hide: </p>\n\n<p>jQuery seems to hide the td elements when I select it by <a href=\"http://docs.jquery.com/Selectors/class#class\">class</a> but not by element <a href=\"http://docs.jquery.com/Selectors/element#element\">name</a>.  </p>\n\n<p>For example, why does: </p>\n\n<pre><code>$(\".bold\").hide();  // selecting by class works\n$(\"tcol1\").hide();  // select by element name does not work\n</code></pre>\n\n<p>Note the HTML below, the second column has the same name for all rows.  How could I create this collection using the name attribute?</p>\n\n<pre><code>&lt;tr&gt;    \n    &lt;td&gt;data1&lt;/td&gt;\n    &lt;td name=\"tcol1\" class=\"bold\"&gt; data2&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;    \n    &lt;td&gt;data1&lt;/td&gt;\n    &lt;td name=\"tcol1\" class=\"bold\"&gt; data2&lt;/td&gt;\n&lt;/tr&gt;  \n&lt;tr&gt;    \n    &lt;td&gt;data1&lt;/td&gt;\n    &lt;td name=\"tcol1\" class=\"bold\"&gt; data2&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre>\n    ","a":"\n<p>you can use the attribute selector</p>\n\n<pre><code>$('td[name=tcol1]') // matches exactly 'tcol1'\n\n$('td[name^=tcol]') // matches those that begin with 'tcol'\n</code></pre>\n    "},{"t":"Iterate through object properties","l":"http://stackoverflow.com/questions/8312459/iterate-through-object-properties","q":"\n\n<pre><code>var obj = {\n    name: \"Simon\",\n    age: \"20\",\n    clothing: {\n        style: \"simple\",\n        isDouche: false\n    }\n}\n\nfor(var propt in obj){\n    alert(propt + ': ' + obj[propt]);\n}\n</code></pre>\n\n<p>How does the variable <code>propt</code> represent the properties of the object? It's not a built-in method, or property. Then why does it come up with every property in the object?</p>\n\n<p>I hope I'm not asking stupid questions, I couldn't find any answers.</p>\n    ","a":"\n<p>Iterating over properties requires this additional <code>hasOwnProperty</code> check: </p>\n\n<pre><code>for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n        // do stuff\n    }\n}\n</code></pre>\n\n<p>It's necessary because an object's prototype contains additional properties for the object which are technically part of the object. These additional properties are inherited from the base object class, but are still properties of <code>object</code>.</p>\n\n<p><code>hasOwnProperty</code> simply checks to see if this is a property specific to this class, and not one inherited from the base class.</p>\n    "},{"t":"Safely turning a JSON string into an object","l":"http://stackoverflow.com/questions/45015/safely-turning-a-json-string-into-an-object","q":"\n\n<p>Given a string of JSON data, how can you safely turn that string into a JavaScript object?</p>\n\n<p>Obviously you can do this unsafely with something like...</p>\n\n<pre><code>var obj = eval(\"(\" + json + ')');\n</code></pre>\n\n<p>...but that leaves us vulnerable to the json string containing other code, which it seems very dangerous to simply eval.</p>\n    ","a":"\n<pre><code>JSON.parse(jsonString);\n</code></pre>\n\n<p>Is a pure JavaScript approach so long as you can require a reasonably modern browser.</p>\n\n<p>See also <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\">https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse</a></p>\n    "},{"t":"Convert character to ASCII code in JavaScript","l":"http://stackoverflow.com/questions/94037/convert-character-to-ascii-code-in-javascript","q":"\n\n<p>How can I convert a character to its ASCII code using JavaScript? </p>\n\n<p>For example:</p>\n\n<blockquote>\n  <p>get 10 from \"\\n\".</p>\n</blockquote>\n    ","a":"\n<pre><code>\"\\n\".charCodeAt(0);\n</code></pre>\n    "},{"t":"Find object by id in array of javascript objects","l":"http://stackoverflow.com/questions/7364150/find-object-by-id-in-array-of-javascript-objects","q":"\n\n<p>I've got an array:</p>\n\n<pre><code>myArray = [{'id':'73','foo':'bar'},{'id':'45','foo':'bar'}, etc.]\n</code></pre>\n\n<p>I'm unable to change the structure of the array. I'm being passed an id of <code>45</code>, and I want to get <code>'bar'</code> for that object in the array. </p>\n\n<p>How do I do this in JavaScript or using jQuery?</p>\n    ","a":"\n<p>As you are already using jQuery, you can use the <a href=\"http://api.jquery.com/jQuery.grep/\">grep</a> function which is intended for searching an array:</p>\n\n<pre><code>var result = $.grep(myArray, function(e){ return e.id == id; });\n</code></pre>\n\n<p>The result is an array with the items found. If you know that the object is always there and that it only occurs once, you can just use <code>result[0].foo</code> to get the value. Otherwise you should check the length of the resulting array. Example:</p>\n\n<pre><code>if (result.length == 0) {\n  // not found\n} else if (result.length == 1) {\n  // access the foo property using result[0].foo\n} else {\n  // multiple items found\n}\n</code></pre>\n    "},{"t":"How to replace innerHTML of a div using jQuery?","l":"http://stackoverflow.com/questions/1309452/how-to-replace-innerhtml-of-a-div-using-jquery","q":"\n\n<p>How could I achieve the following:</p>\n\n<pre><code>document.all.regTitle.innerHTML = 'Hello World';\n</code></pre>\n\n<p>using jQuery where <code>regTitle</code> is my div ID?</p>\n    ","a":"\n<pre><code>$(\"#regTitle\").html(\"Hello World\");\n</code></pre>\n    "},{"t":"Preview an image before it is uploaded","l":"http://stackoverflow.com/questions/4459379/preview-an-image-before-it-is-uploaded","q":"\n\n<p>I want to be able to preview a file (image) before it is uploaded.  The preview action should be executed all in the browser without using Ajax to upload the image.</p>\n\n<p>How can I do this?</p>\n    ","a":"\n<p>Please take a look at the sample JS code below:</p>\n\n<pre><code>function readURL(input) {\n\n    if (input.files &amp;&amp; input.files[0]) {\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n            $('#blah').attr('src', e.target.result);\n        }\n\n        reader.readAsDataURL(input.files[0]);\n    }\n}\n\n$(\"#imgInp\").change(function(){\n    readURL(this);\n});\n</code></pre>\n\n<p>and the associated HTML:</p>\n\n<pre><code>&lt;form id=\"form1\" runat=\"server\"&gt;\n    &lt;input type='file' id=\"imgInp\" /&gt;\n    &lt;img id=\"blah\" src=\"#\" alt=\"your image\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Also, you can <a href=\"http://jsfiddle.net/LvsYc/\">try this sample here</a>.</p>\n    "},{"t":"Copying array by value in javascript","l":"http://stackoverflow.com/questions/7486085/copying-array-by-value-in-javascript","q":"\n\n<p>When copying an array in javascript to another array:</p>\n\n<pre><code>var arr1 = ['a','b','c'];\nvar arr2 = arr1;\narr2.push('d');  //now, arr1 = ['a','b','c','d']\n</code></pre>\n\n<p>I realized that <code>arr2</code> refers to the same array as <code>arr1</code>, rather than a new, independent array. How can I copy the array to get two independent arrays? Using jQuery would be great.</p>\n    ","a":"\n<p>Use this:</p>\n\n<p><code>var newArray = oldArray.slice();</code></p>\n\n<p>Basically, the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\">slice()</a> operation clones the array and returns the reference to the new array.  Also note that:</p>\n\n<ul>\n<li>For object references (and not the actual object), slice copies object references into the new array. Both the original and new array refer to the same object. If a referenced object changes, the changes are visible to both the new and original arrays.</li>\n<li>For strings and numbers, slice copies strings and numbers into the new array. Changes to the string or number in one array does not affect the other array. </li>\n</ul>\n    "},{"t":"Is there a standard function to check for null, undefined, or blank variables in JavaScript?","l":"http://stackoverflow.com/questions/5515310/is-there-a-standard-function-to-check-for-null-undefined-or-blank-variables-in","q":"\n\n<p>Is there a universal JavaScript function that checks that a variable has a value and ensures that it's not <code>undefined</code> or <code>null</code>? I've got this code, but I'm not sure if it covers all cases:</p>\n\n<pre><code>function isEmpty(val){\n    return (val === undefined || val == null || val.length &lt;= 0) ? true : false;\n}\n</code></pre>\n    ","a":"\n<p>You can just check if the <em>variable</em> has a <code>truthy</code> value or not. That means</p>\n\n<pre><code>if( value ) {\n}\n</code></pre>\n\n<p>will evaluate to <code>true</code> if <code>value</code> is not:</p>\n\n<ul>\n<li>null</li>\n<li>undefined</li>\n<li>NaN</li>\n<li>empty string (\"\")</li>\n<li>0</li>\n<li>false</li>\n</ul>\n\n<p>The above list represents all possible <code>falsy</code> values in ECMA-/Javascript. Find it in the <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">specification</a> at the <code>ToBoolean</code> section.</p>\n\n<p>Furthermore, if you don't <strong>know</strong> whether a variable exists (that means, if it was <em>declared</em>) you should check with the <code>typeof</code> operator. For instance</p>\n\n<pre><code>if( typeof foo !== 'undefined' ) {\n    // foo could get resolved and it's defined\n}\n</code></pre>\n\n<p>If you can be sure that a <em>variable</em> is declared at least, you should directly check if it has a <code>truthy</code> value like shown above.</p>\n\n<p>Further read: <a href=\"http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html\">http://typeofnan.blogspot.com/2011/01/typeof-is-fast.html</a></p>\n    "},{"t":"Working with $scope.$emit and .$on","l":"http://stackoverflow.com/questions/14502006/working-with-scope-emit-and-on","q":"\n\n<p>How can I send my <code>$scope</code> object from one controller to another using <code>.$emit</code> and <code>.$on</code> methods?</p>\n\n<pre><code>function firstCtrl($scope)\n{\n    $scope.$emit('someEvent', [1,2,3]);\n}\n\nfunction secondCtrl($scope)\n{\n    $scope.$on('someEvent', function(mass) { console.log(mass); });\n}\n</code></pre>\n\n<p>It doesn't work the way I think it should. How do <code>$emit</code> and <code>$on</code> work?</p>\n    ","a":"\n<p>First of all, parent-child scope relation does matter. You have two possibilities to emit some event:</p>\n\n<ul>\n<li><code>$broadcast</code> -- dispatches the event downwards to all child scopes,</li>\n<li><code>$emit</code> -- dispatches the event upwards through the scope hierarchy.</li>\n</ul>\n\n<p>I don't know anything about your controllers (scopes) relation, but there are several options:</p>\n\n<ol>\n<li><p>If scope of <code>firstCtrl</code> is parent of the <code>secondCtrl</code> scope, your code should\nwork by replacing <code>$emit</code> by <code>$broadcast</code> in <code>firstCtrl</code>:</p>\n\n<pre><code>function firstCtrl($scope)\n{\n    $scope.$broadcast('someEvent', [1,2,3]);\n}\n\nfunction secondCtrl($scope)\n{\n    $scope.$on('someEvent', function(event, mass) { console.log(mass); });\n}\n</code></pre></li>\n<li><p>In case there is no parent-child relation between your scopes you\ncan inject <code>$rootScope</code> into the controller and broadcast the event\nto all child scopes (i.e. also <code>secondCtrl</code>).</p>\n\n<pre><code>function firstCtrl($rootScope)\n{\n    $rootScope.$broadcast('someEvent', [1,2,3]);\n}\n</code></pre></li>\n<li><p>Finally, when you need to dispatch the event from child controller\nto scopes upwards you can use <code>$scope.$emit</code>. If scope of <code>firstCtrl</code> is parent of the <code>secondCtrl</code> scope:</p>\n\n<pre><code>function firstCtrl($scope)\n{\n    $scope.$on('someEvent', function(event, data) { console.log(data); });\n}\n\nfunction secondCtrl($scope)\n{\n    $scope.$emit('someEvent', [1,2,3]);\n}\n</code></pre></li>\n</ol>\n    "},{"t":"Is JavaScript's “new” keyword considered harmful? [closed]","l":"http://stackoverflow.com/questions/383402/is-javascripts-new-keyword-considered-harmful","q":"\n\n<p>In another <a href=\"http://stackoverflow.com/questions/377716/javascript-automatic-gettersetters-john-resig-book\">question</a>, a user pointed out that the <code>new</code> keyword was dangerous to use and proposed a solution to object creation that did not use <code>new</code>. I didn't believe that was true, mostly because I've used Prototype, Scriptaculous and other excellent JavaScript libraries, and everyone of them used the <code>new</code> keyword.</p>\n\n<p>In spite of that, yesterday I was watching Douglas Crockford's talk at YUI theater and he said the exactly same thing, that he didn't use the <code>new</code> keyword anymore in his code (<a href=\"http://www.youtube.com/watch?v=ya4UHuXNygM&amp;t=50m23s\">Crockford on JavaScript - Act III: Function the Ultimate - 50:23 minutes</a>).</p>\n\n<p>Is it 'bad' to use the <code>new</code> keyword? What are the advantages and disadvantages of using it?</p>\n    ","a":"\n<p>Crockford has done a lot to popularize good JavaScript techniques. His opinionated stance on key elements of the language have sparked many useful discussions. That said, there are far too many people that take each proclamation of \"bad\" or \"harmful\" as gospel, refusing to look beyond one man's opinion. It can be a bit frustrating at times.</p>\n\n<p>Use of the functionality provided by the <code>new</code> keyword has several advantages over building each object from scratch:</p>\n\n<ol>\n<li><a href=\"http://stackoverflow.com/questions/186244/what-does-it-mean-that-javascript-is-a-prototype-based-language\">Prototype inheritance</a>. While often looked at with a mix of suspicion and derision by those accustom to class-based OO languages, JavaScript's native inheritance technique is a simple and surprisingly effective means of code re-use. And the new keyword is the canonical (and only available cross-platform) means of using it.</li>\n<li>Performance. This is a side-effect of #1: if I want to add 10 methods to every object I create, I <em>could</em> just write a creation function that manually assigns each method to each new object... Or, I could assign them to the creation function's <code>prototype</code> and use <code>new</code> to stamp out new objects. Not only is this faster (no code needed for each and every method on the prototype), it avoids ballooning each object with separate properties for each method. On slower machines (or especially, slower JS interpreters) when many objects being created this can mean a significant savings in time and memory.</li>\n</ol>\n\n<p>And yes, <code>new</code> has one crucial disadvantage, ably described by other answers: if you forget to use it, your code will break without warning. Fortunately, that disadvantage is easily mitigated - simply add a bit of code to the function itself:</p>\n\n<pre><code>function foo()\n{\n   // if user accidentally omits the new keyword, this will \n   // silently correct the problem...\n   if ( !(this instanceof foo) )\n      return new foo();\n\n   // constructor logic follows...\n}\n</code></pre>\n\n<p>Now you can have the advantages of <code>new</code> without having to worry about problems caused by accidentally misuse. You could even add an assertion to the check if the thought of broken code silently working bothers you. Or, as <a href=\"http://stackoverflow.com/users/36866/some\">some</a> commented, use the check to introduce a runtime exception:</p>\n\n<pre><code>if ( !(this instanceof arguments.callee) ) \n   throw new Error(\"Constructor called as a function\");\n</code></pre>\n\n<p>(Note that this snippet is able to avoid hard-coding the constructor function name, as unlike the previous example it has no need to actually instantiate the object - therefore, it can be copied into each target function without modification.)</p>\n\n<p>John Resig goes into detail on this technique in his <a href=\"http://ejohn.org/blog/simple-class-instantiation/\">Simple \"Class\" Instantiation</a> post, as well as including a means of building this behavior into your \"classes\" by default. Definitely worth a read... as is his upcoming book, <a href=\"http://www.manning.com/resig/\">Secrets of the JavaScript Ninja</a>, which finds hidden gold in this and many other \"harmful\" features of the JavaScript language (the <strong>chapter</strong> on <code>with</code> is especially enlightening for those of us who initially dismissed this much-maligned feature as a gimmick).</p>\n    "},{"t":"How to detect if JavaScript is disabled?","l":"http://stackoverflow.com/questions/121203/how-to-detect-if-javascript-is-disabled","q":"\n\n<p>There was a post this morning asking about how many people disable javascript. Then I began to wonder what techniques might be used to determine if the user has it disabled. Anyone know of some short/simple ways to detect if Javascript is disabled? my intention is to give warning that the site is not able to function properly without the browser having JS enabled, eventually I would want to redirect them to content that is able to work in the abscence of JS, but I need this detection as a place holder to start.</p>\n    ","a":"\n<p>I assume that you're trying to decide whether or not to deliver JavaScript-enhanced content.  The best implementations degrade cleanly, so that the site still operates without JavaScript. I guess that you mean server-side detection, rather than using the <code>&lt;noscript&gt;</code> element.</p>\n\n<p>There isn't a good way to perform server-side JavaScript detection. Instead, use JavaScript to set a cookie, and then test for that cookie using server-side scripting upon subsequent page views; deliver content appropriately.</p>\n    "},{"t":"Where is the best place to put <script> tags in HTML markup?","l":"http://stackoverflow.com/questions/436411/where-is-the-best-place-to-put-script-tags-in-html-markup","q":"\n\n<p>When embedding JavaScript in an HTML document, where is the best place to put the <code>&lt;script&gt;</code> tags and included JavaScript? I seem to recall that you are not supposed to place these in the <code>&lt;head&gt;</code> section, but placing at the beginning of the <code>&lt;body&gt;</code> section is bad, too, since the JavaScript will have to be parsed before the page is rendered completely (or something like that). This seems to leave the <em>end</em> of the <code>&lt;body&gt;</code> section as a logical place for <code>&lt;script&gt;</code> tags.</p>\n\n<p>So, where <em>is</em> the best place to put the <code>&lt;script&gt;</code> tags?</p>\n\n<p>(This question references <a href=\"http://stackoverflow.com/questions/436154/why-does-the-call-to-this-jquery-function-fail-in-firefox\">this question</a>, in which it was suggested that JavaScript function calls should be moved from <code>&lt;a&gt;</code> tags to <code>&lt;script&gt;</code> tags. I'm specifically using JQuery, but more general answers are also appropriate.)</p>\n    ","a":"\n<p>Since a lot of duplicate questions link here, I'd like to post an answer that isn't 5 years old.</p>\n\n<p>Here's what happens when a browser loads a website:</p>\n\n<ol>\n<li>Fetch the HTML page (e.g. index.html)</li>\n<li>Begin parsing the HTML</li>\n<li>The parser encounters a <code>&lt;script&gt;</code> tag referencing an external script file.</li>\n<li>The browser requests the script file. Meanwhile, the parser blocks and stops parsing the other HTML on your page.</li>\n<li>After some time the script is downloaded and subsequently executed.</li>\n<li>The parser continues parsing the rest of the HTML document.</li>\n</ol>\n\n<p>Step 4 causes a bad user experience. Your website basically stops loading until you've downloaded all scripts. If there's one thing that users hate it's waiting for a website to load.</p>\n\n<h2>Why does this even happen?</h2>\n\n<p>Any script can insert its own HTML via <code>document.write()</code> or other DOM manipulations. This implies that the parser has to wait until the script has been downloaded &amp; executed before it can safely parse the rest of the document. After all, the script <em>could</em> have inserted its own HTML in the document.</p>\n\n<p>However, most javascript developers no longer manipulate the DOM <em>while</em> the document is loading. Instead, they wait until the document has been loaded before modifying it. For example:</p>\n\n<pre><code>&lt;!-- index.html --&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;My Page&lt;/title&gt;\n        &lt;script type=\"text/javascript\" src=\"my-script.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div id=\"user-greeting\"&gt;Welcome back, user&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Javascript:</p>\n\n<pre><code>// my-script.js\ndocument.addEventListener(\"DOMContentLoaded\", function() { \n    // this function runs when the DOM is ready, i.e. when the document has been parsed\n    document.getElementById(\"user-greeting\").textContent = \"Welcome back, Bart\";\n});\n</code></pre>\n\n<p>Because your browser does not know my-script.js isn't going to modify the document until it has been downloaded &amp; executed, the parser stops parsing.</p>\n\n<h2>Antiquated recommendation</h2>\n\n<p>The old approach to solve this problem was to put <code>&lt;script&gt;</code> tags at the bottom of your <code>&lt;body&gt;</code>, because this ensures the parser isn't blocked until the very end. </p>\n\n<p>This approach has its own problem: the browser cannot start downloading the scripts until the entire document is parsed. For larger websites with large scripts &amp; stylesheets, being able to download the script as soon as possible is very important for performance. If your website doesn't load within 2 seconds, people will go to another website.</p>\n\n<p>In an optimal solution, the browser would start downloading your scripts as soon as possible, while at the same time parsing the rest of your document.</p>\n\n<h2>The modern approach</h2>\n\n<p>Today, browsers support the <code>async</code> and <code>defer</code> attributes on scripts. These attributes tell the browser it's safe to continue parsing while the scripts are being downloaded.</p>\n\n<h3>async</h3>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"path/to/script1.js\" async&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"path/to/script2.js\" async&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Scripts with the async attribute are executed asynchronously. This means the script is executed as soon as it's downloaded, without blocking the browser in the meantime.<br>\nThis implies that it's possible script 2 is downloaded &amp; executed before script 1.  </p>\n\n<p>According to <a href=\"http://caniuse.com/#search=async\">http://caniuse.com/#search=async</a>, 80% of all browsers support this.</p>\n\n<h3>defer</h3>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"path/to/script1.js\" defer&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"path/to/script2.js\" defer&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Scripts with the defer attribute are executed in order (i.e. first script 1, then script 2). This also does not block the browser.</p>\n\n<p>Unlike async scripts, defer scripts are only executed after the entire document has been loaded.</p>\n\n<p>According to <a href=\"http://caniuse.com/#search=defer\">http://caniuse.com/#search=defer</a>, 80% of all browsers support this. 88% support it at least partially.</p>\n\n<p>An important note on browser compatibility: in some circumstances IE &lt;= 9 may execute deferred scripts out of order. If you need to support those browsers, please read <a href=\"https://github.com/h5bp/lazyweb-requests/issues/42\">this</a> first!</p>\n\n<h1>Conclusion</h1>\n\n<p>The current state-of-the-art is to put scripts in the <code>&lt;head&gt;</code> tag and use the <code>async</code> or <code>defer</code> attributes. This allows your scripts to be downloaded asap without blocking your browser.</p>\n\n<p>The good thing is that your website should still load correctly on the 20% of browsers that do not support these attributes, while speeding up the other 80%.</p>\n    "},{"t":"Generate random value between two numbers in Javascript","l":"http://stackoverflow.com/questions/4959975/generate-random-value-between-two-numbers-in-javascript","q":"\n\n<p>Is there a way to generate a random number in a specified range i.e. (from 1 to 6: 1,2,3,4,5, or 6) in JavaScript?</p>\n    ","a":"\n<p>If you wanted to get between 1 and 6, you would put:</p>\n\n<pre><code>Math.floor(Math.random() * 6) + 1  \n</code></pre>\n\n<p>Where:  </p>\n\n<ul>\n<li>1 is an our start number    </li>\n<li>6 is a number of possible results   </li>\n</ul>\n\n<p>Try that and see if it works for you.</p>\n    "},{"t":"Javascript - “let” keyword vs “var” keyword","l":"http://stackoverflow.com/questions/762011/javascript-let-keyword-vs-var-keyword","q":"\n\n<p>In javascript 1.7, the <code>let</code> keyword was added.   I've heard it described as a \"local\" variable, but I'm still not quite sure how it behaves differently than the <code>var</code> keyword.</p>\n\n<p>What are the differences between the two?   When should <code>let</code> be used over <code>var</code>? </p>\n    ","a":"\n<p>The difference is scoping. <code>var</code> is scoped to the nearest function block (or global if outside a function block), and <code>let</code> is scoped to the nearest <em>enclosing</em> block (or global if outside any block), which can be smaller than a function block. </p>\n\n<p>Also, just like <code>var</code>, variables declared with <code>let</code> are visible <em>before they are declared</em> in their enclosing block, as shown in the demo.</p>\n\n<p><strong>Demo:</strong> <sub><sub><sub><a href=\"http://jsfiddle.net/ThinkingStiff/tcCp5/\"><img src=\"http://i.stack.imgur.com/NI3c4.png\" alt=\"jsFiddle\"></a></sub></sub></sub> (Firefox Only)</p>\n\n<h3>Global:</h3>\n\n<p>They are identical when used like this outside a function block.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>let me = 'go'; //globally scoped\nvar i = 'able'; //globally scoped\n</code></pre>\n\n<h3>Function:</h3>\n\n<p>They are identical when used like this in a function block.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function ingWithinEstablishedParameters() {\n    let terOfRecommendation = 'awesome worker!'; //function block scoped\n    var sityCheerleading = 'go!'; //function block scoped\n};\n</code></pre>\n\n<h3>Block:</h3>\n\n<p>Here is the difference. <code>let</code> is only visible in the <code>for()</code> loop and <code>var</code> is visible to the whole function.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function allyIlliterate() {\n    //tuce is *not* visible out here\n\n    for( let tuce = 0; tuce &lt; 5; tuce++ ) {\n        //tuce is only visible in here (and in the for() parentheses)\n    };\n\n    //tuce is *not* visible out here\n};\n\nfunction byE40() {\n    //nish *is* visible out here\n\n    for( var nish = 0; nish &lt; 5; nish++ ) {\n        //nish is visible to the whole function\n    };\n\n    //nish *is* visible out here\n};\n</code></pre>\n\n<h3>Additionally (Deprecated):</h3>\n\n<p><code>let</code> can also be used to create its own enclosing block.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function conjunctionJunctionWhatsYour() {\n    //sNotGetCrazy is *not* visible out here\n\n    let( sNotGetCrazy = 'now' ) {\n        //sNotGetCrazy is only visible in here\n    };\n\n    //sNotGetCrazy is *not* visible out here\n};\n</code></pre>\n    "},{"t":"Resizing an iframe based on content","l":"http://stackoverflow.com/questions/153152/resizing-an-iframe-based-on-content","q":"\n\n<p>I am working on an iGoogle-like application. Content from other applications (on other domains) is shown using iframes. </p>\n\n<p>How do I resize the iframes to fit the height of the iframes' content?</p>\n\n<p>I've tried to decipher the javascript Google uses but it's obfuscated, and searching the web has been fruitless so far.</p>\n\n<p><strong>Update:</strong> Please note that content is loaded from other domains, so the same-origin policy applies.</p>\n    ","a":"\n<p>We had this type of problem, but slightly in reverse to your situation - we were providing the iframed content to sites on other domains, so the <a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a> was also an issue. After many hours spent trawling google, we eventually found a (somewhat..) workable solution, which you may be able to adapt to your needs.</p>\n\n<p>There is a way around the same origin policy, but it requires changes on both the iframed content and the framing page, so if you haven't the ability to request changes on both sides, this method won't be very useful to you, i'm afraid.</p>\n\n<p>There's a browser quirk which allows us to skirt the same origin policy - javascript can communicate either with pages on its own domain, or with pages it has iframed, but never pages in which it is framed, e.g. if you have:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code> www.foo.com/home.html, which iframes\n |-&gt; www.bar.net/framed.html, which iframes\n     |-&gt; www.foo.com/helper.html\n</code></pre>\n\n<p>then <code>home.html</code> can communicate with <code>framed.html</code> (iframed) and <code>helper.html</code> (same domain). </p>\n\n<pre class=\"lang-none prettyprint-override\"><code> Communication options for each page:\n +-------------------------+-----------+-------------+-------------+\n |                         | home.html | framed.html | helper.html |\n +-------------------------+-----------+-------------+-------------+\n | www.foo.com/home.html   |    N/A    |     YES     |     YES     |\n | www.bar.net/framed.html |    NO     |     N/A     |     YES     |\n | www.foo.com/helper.html |    YES    |     YES     |     N/A     |\n +-------------------------+-----------+-------------+-------------+\n</code></pre>\n\n<p><code>framed.html</code> can send messages to <code>helper.html</code> (iframed) but <em>not</em> <code>home.html</code> (child can't communicate cross-domain with parent).</p>\n\n<p>The key here is that <code>helper.html</code> can receive messages from <code>framed.html</code>, and <strong>can also communicate</strong> with <code>home.html</code>. </p>\n\n<p>So essentially, when <code>framed.html</code> loads, it works out its own height, tells <code>helper.html</code>, which passes the message on to <code>home.html</code>, which can then resize the iframe in which <code>framed.html</code> sits. </p>\n\n<p>The simplest way we found to pass messages from <code>framed.html</code> to <code>helper.html</code> was through a URL argument. To do this, <code>framed.html</code> has an iframe with <code>src=''</code> specified. When its <code>onload</code> fires, it evaluates its own height, and sets the src of the iframe at this point to <code>helper.html?height=N</code></p>\n\n<p><a href=\"http://www.quora.com/How-does-Facebook-Connect-do-cross-domain-communication\">There's an explanation here</a> of how facebook handle it, which may be slightly clearer than mine above!</p>\n\n<p></p><hr>\n<strong>Code</strong><p></p>\n\n<p>In <code>www.foo.com/home.html</code>, the following javascript code is required (this can be loaded from a .js file on any domain, incidentally..):</p>\n\n<pre><code>&lt;script&gt;\n  // Resize iframe to full height\n  function resizeIframe(height)\n  {\n    // \"+60\" is a general rule of thumb to allow for differences in\n    // IE &amp; and FF height reporting, can be adjusted as required..\n    document.getElementById('frame_name_here').height = parseInt(height)+60;\n  }\n&lt;/script&gt;\n&lt;iframe id='frame_name_here' src='http://www.bar.net/framed.html'&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>In <code>www.bar.net/framed.html</code>:</p>\n\n<pre><code>&lt;body onload=\"iframeResizePipe()\"&gt;\n&lt;iframe id=\"helpframe\" src='' height='0' width='0' frameborder='0'&gt;&lt;/iframe&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n  function iframeResizePipe()\n  {\n     // What's the page height?\n     var height = document.body.scrollHeight;\n\n     // Going to 'pipe' the data to the parent through the helpframe..\n     var pipe = document.getElementById('helpframe');\n\n     // Cachebuster a precaution here to stop browser caching interfering\n     pipe.src = 'http://www.foo.com/helper.html?height='+height+'&amp;cacheb='+Math.random();\n\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Contents of <code>www.foo.com/helper.html</code>:</p>\n\n<pre><code>&lt;html&gt; \n&lt;!-- \nThis page is on the same domain as the parent, so can\ncommunicate with it to order the iframe window resizing\nto fit the content \n--&gt; \n  &lt;body onload=\"parentIframeResize()\"&gt; \n    &lt;script&gt; \n      // Tell the parent iframe what height the iframe needs to be\n      function parentIframeResize()\n      {\n         var height = getParam('height');\n         // This works as our parent's parent is on our domain..\n         parent.parent.resizeIframe(height);\n      }\n\n      // Helper function, parse param from request string\n      function getParam( name )\n      {\n        name = name.replace(/[\\[]/,\"\\\\\\[\").replace(/[\\]]/,\"\\\\\\]\");\n        var regexS = \"[\\\\?&amp;]\"+name+\"=([^&amp;#]*)\";\n        var regex = new RegExp( regexS );\n        var results = regex.exec( window.location.href );\n        if( results == null )\n          return \"\";\n        else\n          return results[1];\n      }\n    &lt;/script&gt; \n  &lt;/body&gt; \n&lt;/html&gt;\n</code></pre>\n    "},{"t":"How can you check for a #hash in a URL using JavaScript?","l":"http://stackoverflow.com/questions/298503/how-can-you-check-for-a-hash-in-a-url-using-javascript","q":"\n\n<p>I have some jQuery JavaScript code that I want to run only when there is a hash (#) anchor link in a URL. How can you check for this character using JavaScript? I need a simple catch-all test that would detect URLs like these:</p>\n\n<ul>\n<li>example.com/page.html#anchor</li>\n<li>example.com/page.html#anotheranchor</li>\n</ul>\n\n<p>Basically something along the lines of:</p>\n\n<pre><code>if (thereIsAHashInTheUrl) {        \n    do this;\n} else {\n    do this;\n}\n</code></pre>\n\n<p>If anyone could point me in the right direction, that would be much appreciated.</p>\n    ","a":"\n<p>Simple:</p>\n\n<pre><code>if(window.location.hash) {\n  // Fragment exists\n} else {\n  // Fragment doesn't exist\n}\n</code></pre>\n    "},{"t":"setTimeout or setInterval?","l":"http://stackoverflow.com/questions/729921/settimeout-or-setinterval","q":"\n\n<p>As far as I can tell, these two pieces of javascript behave the same way:</p>\n\n<p><strong>Option A:</strong></p>\n\n<pre><code>function myTimeoutFunction()\n{\n    doStuff();\n    setTimeout(myTimeoutFunction, 1000);\n}\n\nmyTimeoutFunction();\n</code></pre>\n\n<p><strong>Option B:</strong></p>\n\n<pre><code>function myTimeoutFunction()\n{\n    doStuff();\n}\n\nmyTimeoutFunction();\nsetInterval(myTimeoutFunction, 1000);\n</code></pre>\n\n<p>Is there any difference between using <a href=\"https://developer.mozilla.org/en/window.setTimeout\">setTimeout</a> and <a href=\"https://developer.mozilla.org/En/window.setInterval\">setInterval</a>? Which do you use and why?</p>\n    ","a":"\n<p>The difference is subtle, I believe the setInterval code executes every 1000ms exactly, while the setTimeout waits 1000ms, runs the function, which takes some ms, then sets another timeout. So the wait period is actually greater than 1000ms.</p>\n    "},{"t":"Remove element by id","l":"http://stackoverflow.com/questions/3387427/remove-element-by-id","q":"\n\n<p>When removing an element with standard JavaScript, you must go to it's parent first:</p>\n\n<pre><code>var element = document.getElementById(\"element-id\");\nelement.parentNode.removeChild(element);\n</code></pre>\n\n<p>Having to go to the parent node first seems a bit odd to me, is there a reason JavaScript works like this?</p>\n    ","a":"\n<p>The DOM is organized in a tree of nodes, where each node has a value, along with a list of references to its child nodes. So <code>element.parentNode.removeChild(element)</code> mimics exactly what is happening internally: First you go the the parent node, then remove the reference to the child node.</p>\n\n<p>As of DOM4, a helper function is provided to do the same thing: <a href=\"https://developer.mozilla.org/en/docs/Web/API/ChildNode.remove\"><code>element.remove()</code></a>. This works in WebKit and Firefox, but not IE. If you need to support older browsers, you can:</p>\n\n<ul>\n<li>Remove elements via the parent node, as in <a href=\"https://www.google.com/search?q=What%20is%20the%20answer%20to%20the%20ultimate%20question%20of%20life,%20the%20universe,%20and%20everything%3F\">the question</a>,</li>\n<li>modify the native DOM functions, as in <a href=\"https://stackoverflow.com/a/18120786/405550\">Johan Dettmar's answer</a>, or</li>\n<li>use a <a href=\"https://github.com/WebReflection/dom4#dom4\">DOM4 polyfill</a>.</li>\n</ul>\n    "},{"t":"XmlHttpRequest error: Origin null is not allowed by Access-Control-Allow-Origin","l":"http://stackoverflow.com/questions/3595515/xmlhttprequest-error-origin-null-is-not-allowed-by-access-control-allow-origin","q":"\n\n<p>I'm developing a page that pulls images from Flickr and Panoramio via jQuery's AJAX support.</p>\n\n<p>The Flickr side is working fine, but when I try to <code>$.get(url, callback)</code> from Panoramio, I see an error in Chrome's console:</p>\n\n<blockquote>\n  <p>XMLHttpRequest cannot load <a href=\"http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150\">http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150</a>. Origin null is not allowed by Access-Control-Allow-Origin.</p>\n</blockquote>\n\n<p>If I query that URL from a browser directly it works fine.  What is going on, and can I get around this?  Am I composing my query incorrectly, or is this something that Panoramio does to hinder what I'm trying to do?</p>\n\n<p>Google didn't turn up any useful matches on the <a href=\"http://www.google.co.uk/search?q=%22Origin+null+is+not+allowed+by+Access-Control-Allow-Origin%22\">error message</a>.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>Here's some sample code that shows the problem:</p>\n\n<pre><code>$().ready(function () {\n  var url = 'http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;callback=processImages&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150';\n\n  $.get(url, function (jsonp) {\n    var processImages = function (data) {\n      alert('ok');\n    };\n\n    eval(jsonp);\n  });\n});\n</code></pre>\n\n<p>You can <a href=\"http://jsfiddle.net/ZfvKm/\">run the example online</a>.</p>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>Thanks to Darin for his help with this.  <strong>THE ABOVE CODE IS WRONG.</strong>  Use this instead:</p>\n\n<pre><code>$().ready(function () {\n  var url = 'http://www.panoramio.com/wapi/data/get_photos?v=1&amp;key=dummykey&amp;tag=test&amp;offset=0&amp;length=20&amp;minx=-30&amp;miny=0&amp;maxx=0&amp;maxy=150&amp;callback=?';\n\n  $.get(url, function (data) {\n    // can use 'data' in here...\n  });\n});\n</code></pre>\n    ","a":"\n<p>For the record, as far as I can tell, you had two problems:</p>\n\n<ol>\n<li><p>You weren't passing a \"jsonp\" type specifier to your <code>$.get</code>, so it was using an ordinary XMLHttpRequest. However, your browser supported CORS (Cross-Origin Resource Sharing) to allow cross-domain XMLHttpRequest if the server OKed it. That's where the <code>Access-Control-Allow-Origin</code> header came in.</p></li>\n<li><p>I believe you mentioned you were running it from a file:// URL. There are two ways for CORS headers to signal that a cross-domain XHR is OK. One is to send <code>Access-Control-Allow-Origin: *</code> (which, if you were reaching Flickr via <code>$.get</code>, they must have been doing) while the other was to echo back the contents of the <code>Origin</code> header. However, <code>file://</code> URLs produce a null <code>Origin</code> which can't be authorized via echo-back.</p></li>\n</ol>\n\n<p>The first was solved in a roundabout way by Darin's suggestion to use <code>$.getJSON</code>. It does a little magic to change the request type from its default of \"json\" to \"jsonp\" if it sees the substring <code>callback=?</code> in the URL.</p>\n\n<p>That solved the second by no longer trying to perform a CORS request from a <code>file://</code> URL.</p>\n\n<p>To clarify for other people, here are the simple troubleshooting instructions:</p>\n\n<ol>\n<li>If you're trying to use JSONP, make sure one of the following is the case:\n<ul>\n<li>You're using <code>$.get</code> and set <a href=\"http://api.jquery.com/jQuery.get/\"><code>dataType</code></a> to <code>jsonp</code>.</li>\n<li>You're using <code>$.getJSON</code> and included <code>callback=?</code> in the URL.</li>\n</ul></li>\n<li>If you're trying to do a cross-domain XMLHttpRequest via CORS...\n<ol>\n<li>Make sure you're testing via <code>http://</code>. Scripts running via <code>file://</code> have limited support for CORS.</li>\n<li>Make sure the browser <a href=\"http://caniuse.com/cors\">actually supports CORS</a>. (Opera and Internet Explorer are late to the party)</li>\n</ol></li>\n</ol>\n    "},{"t":"Sorting an array of JavaScript objects","l":"http://stackoverflow.com/questions/979256/sorting-an-array-of-javascript-objects","q":"\n\n<p>I read the following objects using Ajax and stored them in an array:</p>\n\n<pre><code>var homes = [\n    {\n        \"h_id\": \"3\",\n        \"city\": \"Dallas\",\n        \"state\": \"TX\",\n        \"zip\": \"75201\",\n        \"price\": \"162500\"\n    }, {\n        \"h_id\": \"4\",\n        \"city\": \"Bevery Hills\",\n        \"state\": \"CA\",\n        \"zip\": \"90210\",\n        \"price\": \"319250\"\n    }, {\n        \"h_id\": \"5\",\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"zip\": \"00010\",\n        \"price\": \"962500\"\n    }\n];\n</code></pre>\n\n<p>How do I create a function to sort the objects by the <code>price</code> property in <em>ascending</em> and <em>descending</em> order using only JavaScript?</p>\n    ","a":"\n<p>Sort homes by price in ascending order:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>homes.sort(function(a, b) {\n    return parseFloat(a.price) - parseFloat(b.price);\n});\n</code></pre>\n    "},{"t":"“No 'Access-Control-Allow-Origin' header is present on the requested resource”","l":"http://stackoverflow.com/questions/20035101/no-access-control-allow-origin-header-is-present-on-the-requested-resource","q":"\n\n<p>I am trying to do authorization using <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> by connecting to the <a href=\"http://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_services\">RESTful</a> <a href=\"http://en.wikipedia.org/wiki/Application_programming_interface\">API</a> built in <a href=\"https://en.wikipedia.org/wiki/Flask_%28web_framework%29\">Flask</a>.</p>\n\n<p>As result I get:</p>\n\n<pre><code>XMLHttpRequest cannot load http://myApiUrl/login. No\n'Access-Control-Allow-Origin' header is present on the requested\nresource. Origin 'null' is therefore not allowed access.\n</code></pre>\n\n<p>I know that the API or remote resource must set the header, but why did it work when I tested authorization in the Chrome extension POSTMAN?</p>\n\n<p>This is the request code:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    dataType: 'text',\n    url: api,\n    username: 'user',\n    password: 'pass',\n    crossDomain : true,\n    xhrFields: {\n        withCredentials: true\n    }\n})\n    .done(function( data ) {\n        console.log(\"done\");\n    })\n    .fail( function(xhr, textStatus, errorThrown) {\n        alert(xhr.responseText);\n        alert(textStatus);\n    });\n</code></pre>\n    ","a":"\n<p>If I understood it right you are doing an <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XMLHttpRequest</a> to a different domain than your page is on. So the browser is blocking it as it usually allows a request in the same origin for security reasons. You need to do something different when you want to do a cross-domain request. A tutorial about how to achieve that is <em><a href=\"http://www.html5rocks.com/en/tutorials/cors/\">Using CORS</a></em>.</p>\n\n<p>When you are using postman they are not restricted by this policy. Quoted from <em><a href=\"http://developer.chrome.com/extensions/xhr.html\">Cross-Origin XMLHttpRequest</a></em>:</p>\n\n<blockquote>\n  <p>Regular web pages can use the XMLHttpRequest object to send and receive data from remote servers, but they're limited by the same origin policy. Extensions aren't so limited. An extension can talk to remote servers outside of its origin, as long as it first requests cross-origin permissions.</p>\n</blockquote>\n    "},{"t":"Why Javascript only works after opening developer tools in IE once?","l":"http://stackoverflow.com/questions/7742781/why-javascript-only-works-after-opening-developer-tools-in-ie-once","q":"\n\n<p>IE9 Bug - Javascript only works after opening developer tools once.</p>\n\n<p>Our site offers free pdf downloads to users, and it has a simple \"enter password to download\" function. However, it doesn't work at all in Internet Explorer. </p>\n\n<p>You can see for yourself at this example: <a href=\"http://www.makeuseof.com/pages/how-to-use-virtual-box\">http://www.makeuseof.com/pages/how-to-use-virtual-box</a></p>\n\n<p>The download pass is \"makeuseof\". In any other browser, it works fine. In IE, the buttons both just do nothing. </p>\n\n<p>The most curious thing I've found is that if you open and close the developers toolbar with F12, it all suddenly starts to work. </p>\n\n<p>We've tried compatibility mode and such, nothing makes a difference. Please, help me figure this out! </p>\n\n<p>How do I make this work in Internet Explorer?</p>\n    ","a":"\n<p>It sounds like you might have some debugging code in your javascript.</p>\n\n<p>The experience you're describing is typical of code which contain <code>console.log()</code> or any of the other <code>console</code> functionality.</p>\n\n<p>The <code>console</code> object is only activated when the Dev Toolbar is opened. Prior to that, calling the console object will result in it being reported as <code>undefined</code>. After the toolbar has been opened, the console will exist (even if the toolbar is subsequently closed), so your console calls will then work.</p>\n\n<p>There are a few solutions to this:</p>\n\n<p>The most obvious one is to go through your code removing references to <code>console</code>. You shouldn't be leaving stuff like that in production code anyway.</p>\n\n<p>If you want to keep the console references, you could wrap them in an <code>if()</code> statement, or some other conditional which checks whether the console object exists before trying to call it.</p>\n    "},{"t":"Use of 'prototype' vs. 'this' in JavaScript?","l":"http://stackoverflow.com/questions/310870/use-of-prototype-vs-this-in-javascript","q":"\n\n<p>What's the difference between</p>\n\n<pre><code>var A = function () {\n    this.x = function () {\n        //do something\n    };\n};\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var A = function () { };\nA.prototype.x = function () {\n    //do something\n};\n</code></pre>\n    ","a":"\n<p>The examples have very different outcomes.</p>\n\n<p>Before looking at the differences, the following should be noted:</p>\n\n<ul>\n<li>A constructor's <em>prototype</em> provides a way to share methods and values among instances via the instance's private <code>[[Prototype]]</code> property.</li>\n<li>A function's <em>this</em> is set by how the function is called or by the use of <em>bind</em> (not discussed here). Where a function is called on an object (e.g. <code>myObj.method()</code>) then <em>this</em> within the method references the object. Where <em>this</em> is not set by the call or by the use of <em>bind</em>, it defaults to the global object (window in a browser) or in strict mode, remains undefined.</li>\n<li>JavaScript is a object oriented language, i.e. everything is an Object, including functions.</li>\n</ul>\n\n<p>So here are the snippets in question:</p>\n\n<pre><code>var A = function () {\n    this.x = function () {\n        //do something\n    };\n};\n</code></pre>\n\n<p>In this case, variable <code>A</code> is assigned a value that is a reference to a function.  When that function is called using <code>A()</code>, the function's <em>this</em> isn't set by the call so it defaults to the global object and the expression <code>this.x</code> is effectively <code>window.x</code>. The result is that a reference to the function expression on the right hand side is assigned to <code>window.x</code>.</p>\n\n<p>In the case of:</p>\n\n<pre><code>var A = function () { };\nA.prototype.x = function () {\n    //do something\n};\n</code></pre>\n\n<p>something very different occurs.  In the first line, variable <code>A</code> is assigned a reference to a function.  In JavaScript, all functions objects have a <em>prototype</em> property by default so there is no separate code to create an <em>A.prototype</em> object.</p>\n\n<p>In the second line, <em>A.prototype.x</em> is assigned a reference to a function. This will create an <em>x</em> property if it doesn't exist, or assign a new value if it does. So the difference with the first example is which object's <em>x</em> property is involved in the expression.</p>\n\n<p>Another example is below.  It's similar to the first one (and may be what you meant to ask about):</p>\n\n<pre><code>var A = new function () {\n    this.x = function () {\n        //do something\n    };\n};\n</code></pre>\n\n<p>In this example, the <code>new</code> operator has been added before the function expression so that the function is called as a constructor. When called with <code>new</code>, the function's <em>this</em> is set to reference a new Object whose private <code>[[Prototype]]</code> property is set to reference the constructor's public <em>prototype</em>. So in the assignment statement, the <code>x</code> property will be created on this new object. When called as a constructor, a function returns its <em>this</em> object by default, so there is no need for a separate <code>return this;</code> statement.</p>\n\n<p>To check that <em>A</em> has an <em>x</em> property:</p>\n\n<pre><code>console.log(A.x) // function () {\n                 //   //do something\n                 // };\n</code></pre>\n\n<p>This is an uncommon use of <em>new</em>, since the only way to reference the constructor is via <em>A.constructor</em>. It would be much more common to do:</p>\n\n<pre><code>var A = function () {\n    this.x = function () {\n        //do something\n    };\n};\nvar a = new A();\n</code></pre>\n\n<p>Another way of achieving a similar result is to use an immediately invoked function expression:</p>\n\n<pre><code>var A = (function () {\n    this.x = function () {\n        //do something\n    };\n}());\n</code></pre>\n\n<p>In this case, <code>A</code> assigned the return value of calling the function on the right hand side. Here again, since <em>this</em> is not set in the call, it will reference the global object and <code>this.x</code> is effectively <code>window.x</code>. Since the function doesn't return anything, <code>A</code> will have a value of <code>undefined</code>.</p>\n\n<p>These differences between the two approaches also manifest if you're serializing and de-serializing your Javascript objects to/from JSON. Methods defined on an object's prototype are not serialized when you serialize the object, which can be convenient when for example you want to serialize just the data portions of an object, but not it's methods:</p>\n\n<pre><code>var A = function () { \n    this.objectsOwnProperties = \"are serialized\";\n};\nA.prototype.prototypeProperties = \"are NOT serialized\";\nvar instance = new A();\nconsole.log(instance.prototypeProperties); // \"are NOT serialized\"\nconsole.log(JSON.stringify(instance)); \n// {\"objectsOwnProperties\":\"are serialized\"} \n</code></pre>\n\n<p><strong>Related questions</strong>:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/186244/what-does-it-mean-that-javascript-is-a-prototype-based-language\"><strong>What does it mean that JavaScript is a prototypal language?</strong></a></li>\n<li><a href=\"http://stackoverflow.com/questions/235360/what-is-the-scope-of-a-function-in-javascriptecmascript\"><strong>What is the scope of a function in JavaScript?</strong></a></li>\n<li><strong><a href=\"http://stackoverflow.com/questions/3127429/javascript-this-keyword\">How does the \"this\" keyword work?</a></strong></li>\n</ul>\n\n<p><strong>Sidenote:</strong> There may not be any significant memory savings between the two approaches, however using the prototype to share methods and properties will likely use less memory than each instance having its own copy.</p>\n\n<p>JavaScript isn't a low-level language.  It may not be very valuable to think of prototyping or other inheritance patterns as a way to explicitly change the way memory is allocated.</p>\n    "},{"t":".trim() in JavaScript not working in IE","l":"http://stackoverflow.com/questions/2308134/trim-in-javascript-not-working-in-ie","q":"\n\n<p>I tried to apply <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/trim\"><code>.trim()</code></a> to a string in one of my JavaScript programs. It's working fine under Mozilla, but an error displays when I try it in IE8.  Does anyone know what is going on here? Is there anyway I can make it work in IE?</p>\n\n<h3>code:</h3>\n\n<pre><code>var ID = document.getElementByID('rep_id').value.trim();\n</code></pre>\n\n<h3>error display:</h3>\n\n<pre>Message: Object doesn't support this property or method\nLine: 604\nChar: 2\nCode: 0\nURI: http://test.localhost/test.js</pre>\n    ","a":"\n<p>Add the following code to add trim functionality to the string.</p>\n\n<pre><code>if(typeof String.prototype.trim !== 'function') {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, ''); \n  }\n}\n</code></pre>\n    "},{"t":"Disable same origin policy in Chrome","l":"http://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome","q":"\n\n<p>Is there a way to disable the <a href=\"https://en.wikipedia.org/wiki/Same_origin_policy\">same origin policy</a> on Google's <a href=\"http://en.wikipedia.org/wiki/Google_Chrome\">Chrome</a> browser?</p>\n\n<p>This is strictly for development, not production, use.</p>\n    ","a":"\n<p>Close chrome (or chromium) and restart with the <code>--disable-web-security</code> argument. I just tested this and verified that I can access the contents of an iframe with src=\"http://google.com\" embedded in a page served from \"localhost\" (tested under chromium 5 / ubuntu). For me the exact command was:</p>\n\n<pre><code>chromium-browser --disable-web-security\n</code></pre>\n\n<p>From the chromium source:</p>\n\n<pre><code>// Don't enforce the same-origin policy. (Used by people testing their sites.)\nconst wchar_t kDisableWebSecurity[] = L\"disable-web-security\";\n</code></pre>\n    "},{"t":"How to distinguish between left and right mouse click with jQuery","l":"http://stackoverflow.com/questions/1206203/how-to-distinguish-between-left-and-right-mouse-click-with-jquery","q":"\n\n<p>How do you obtain the clicked mouse button using jQuery?</p>\n\n<pre><code>$('div').bind('click', function(){\n    alert('clicked');\n});\n</code></pre>\n\n<p>this is triggered by both right and left click, what is the way of being able to catch right mouse click? I'd be happy if something like below exists:</p>\n\n<pre><code>$('div').bind('rightclick', function(){ \n    alert('right mouse button is pressed');\n});\n</code></pre>\n    ","a":"\n<p>As of jQuery version 1.1.3, <code>event.which</code> normalizes <code>event.keyCode</code> and <code>event.charCode</code> so you don't have to worry about browser compatibility issues. <a href=\"http://api.jquery.com/event.which/\">Documentation on <code>event.which</code></a></p>\n\n<p><code>event.which</code> will give 1, 2 or 3 for left, middle and right mouse buttons respectively so:</p>\n\n<pre><code>$('#element').mousedown(function(event) {\n    switch (event.which) {\n        case 1:\n            alert('Left Mouse button pressed.');\n            break;\n        case 2:\n            alert('Middle Mouse button pressed.');\n            break;\n        case 3:\n            alert('Right Mouse button pressed.');\n            break;\n        default:\n            alert('You have a strange Mouse!');\n    }\n});\n</code></pre>\n    "},{"t":"What characters are valid for JavaScript variable names?","l":"http://stackoverflow.com/questions/1661197/what-characters-are-valid-for-javascript-variable-names","q":"\n\n<p>Can anyone point me to a Web page detailing the characters that can be used for naming a JavaScript variable?</p>\n\n<p>I want to create a small \"extension library\" for my non-JavaScript users here at work (who all seem to be squeamish when it comes to the language).  I love how jQuery and Prototype have both use the <code>$</code> dollar sign, and since I use jQuery, I'm looking for another nice single-character symbol to use.  </p>\n\n<p>I realize that I could just test out a number of characters, but I'm posing this question to the many JavaScript sensei of the world for advice about what characters (even if valid) would be a bad idea to use (in consideration of  future integration with another popular library, perhaps).</p>\n    ","a":"\n<p>To quote <a href=\"http://mathiasbynens.be/notes/javascript-identifiers\"><em><strong>Valid JavaScript variable names</strong></em></a>, my write-up summarizing the relevant spec sections:</p>\n\n<blockquote>\n  <p>An identifier must start with <code>$</code>, <code>_</code>, or any character in the Unicode categories <a href=\"http://graphemica.com/categories/uppercase-letter\">“Uppercase letter (Lu)”</a>, <a href=\"http://graphemica.com/categories/lowercase-letter\">“Lowercase letter (Ll)”</a>, <a href=\"http://graphemica.com/categories/titlecase-letter\">“Titlecase letter (Lt)”</a>, <a href=\"http://graphemica.com/categories/modifier-letter\">“Modifier letter (Lm)”</a>, <a href=\"http://graphemica.com/categories/other-letter\">“Other letter (Lo)”</a>, or <a href=\"http://graphemica.com/categories/letter-number\">“Letter number (Nl)”</a>.</p>\n  \n  <p>The rest of the string can contain the same characters, plus any <em>U+200C zero width non-joiner</em> characters, <em>U+200D zero width joiner</em> characters, and characters in the Unicode categories <a href=\"http://graphemica.com/unicode/categories/nonspacing-mark\">“Non-spacing mark (Mn)”</a>, <a href=\"http://graphemica.com/categories/spacing-combining-mark\">“Spacing combining mark (Mc)”</a>, <a href=\"http://graphemica.com/categories/decimal-digit-number\">“Decimal digit number (Nd)”</a>, or <a href=\"http://graphemica.com/categories/connector-punctuation\">“Connector punctuation (Pc)”</a>.</p>\n</blockquote>\n\n<p>I’ve also created <a href=\"http://mothereff.in/js-variables\">a tool</a> that will tell you if any string that you enter is a valid JavaScript variable name according to ECMAScript 5.1 and Unicode 6.1:</p>\n\n<p><a href=\"http://mothereff.in/js-variables\"><img src=\"http://i.imgur.com/GNv5t.png\" alt=\"JavaScript variable name validator\"></a></p>\n\n<hr>\n\n<p>P.S. To give you an idea of how wrong Anthony Mills' answer is: if you were to summarize all these rules in a single ASCII-only regular expression for JavaScript, <strong>it would be 11,236 characters long</strong>. Here it is:</p>\n\n<pre><code>// ES5.1 / Unicode 6.1\n/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/\n</code></pre>\n    "},{"t":"How does the “this” keyword work?","l":"http://stackoverflow.com/questions/3127429/how-does-the-this-keyword-work","q":"\n\n<p>I have noticed that there doesn't appear to be a clear explanation of what the <code>this</code> keyword is and how it is correctly (and incorrectly) used in JavaScript on the Stack Overflow site.</p>\n\n<p>I have witnessed some very strange behaviour with it and have failed to understand why it has occurred.</p>\n\n<p>How does <code>this</code> work and when should it be used?</p>\n    ","a":"\n<p>I recommend reading <a href=\"https://mikewest.org\">Mike West</a>'s article <a href=\"http://www.digital-web.com/articles/scope_in_javascript/\">Scope in JavaScript</a> (<a href=\"http://web.archive.org/web/20110725013125/http://www.digital-web.com/articles/scope_in_javascript/\">mirror</a>) first. It is an excellent, friendly introduction to the concepts of <code>this</code> and scope chains in JavaScript.</p>\n\n<p>Once you start getting used to <code>this</code>, the rules are actually pretty simple. The <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript Standard</a> defines <code>this</code> as a keyword that \"evaluates to the value of the ThisBinding of the current execution context\" (§11.1.1). ThisBinding is something that the JavaScript interpreter maintains as it evaluates JavaScript code, like a special CPU register which holds a reference to an object. The interpreter updates the ThisBinding whenever establishing an execution context in one of only three different cases:</p>\n\n<ol>\n<li><p>Initial global execution context</p>\n\n<p>This is the case for JavaScript code that is evaluated when a <code>&lt;script&gt;</code> element is encountered:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;//&lt;![CDATA[\nalert(\"I'm evaluated in the initial global execution context!\");\n\nsetTimeout(function () {\n    alert(\"I'm NOT evaluated in the initial global execution context.\");\n}, 1);\n//]]&gt;&lt;/script&gt;\n</code></pre>\n\n<p>When evaluating code in the initial global execution context, ThisBinding is set to the global object, <code>window</code> (§10.4.1.1).</p></li>\n<li><p>Entering eval code</p>\n\n<ul>\n<li><p>... by a direct call to eval()</p>\n\n<p>ThisBinding is left unchanged; it is the same value as the ThisBinding of the calling execution context (§10.4.2(2)(a)).</p></li>\n<li><p>... if not by a direct call to eval()</p>\n\n<p>ThisBinding is set to the global object <em>as if</em> executing in the initial global execution context (§10.4.2(1)).</p></li>\n</ul>\n\n<p>§15.1.2.1.1 defines what a direct call to eval() is. Basically, <code>eval(...)</code> is a direct call whereas something like <code>(0, eval)(...)</code> or <code>var indirectEval = eval; indirectEval(...);</code> is an indirect call to eval(). See <a href=\"http://stackoverflow.com/a/9107491/196844\">chuckj's answer</a> to <a href=\"http://stackoverflow.com/q/9107240/196844\">(1,eval)('this') vs eval('this') in JavaScript?</a> and <a href=\"http://dmitrysoshnikov.com/ecmascript/es5-chapter-2-strict-mode/#indirect-eval-call\">this blog post by Dmitry Soshnikov</a> for when you might use an indirect eval() call.</p></li>\n<li><p>Entering function code</p>\n\n<p>This occurs when calling a function. If a function is called on an object, such as in <code>obj.myMethod()</code> or the equivalent <code>obj[\"myMethod\"]()</code>, then ThisBinding is set to the object (<code>obj</code> in the example; §13.2.1). In most other cases, ThisBinding is set to the global object (§10.4.3).</p>\n\n<p>The reason for writing \"in most other cases\" is because there are eight ECMAScript 5 built-in functions that allow ThisBinding to be specified in the arguments list. These special functions take a so-called <em>thisArg</em> which becomes the ThisBinding when calling the function (§10.4.3).</p>\n\n<p>These special built-in functions are:</p>\n\n<ul>\n<li>Function.prototype.apply( thisArg, argArray )</li>\n<li>Function.prototype.call( thisArg [ , arg1 [ , arg2, ... ] ] )</li>\n<li>Function.prototype.bind( thisArg [ , arg1 [ , arg2, ... ] ] )</li>\n<li>Array.prototype.every( callbackfn [ , thisArg ] )</li>\n<li>Array.prototype.some( callbackfn [ , thisArg ] )</li>\n<li>Array.prototype.forEach( callbackfn [ , thisArg ] )</li>\n<li>Array.prototype.map( callbackfn [ , thisArg ] )</li>\n<li>Array.prototype.filter( callbackfn [ , thisArg ] )</li>\n</ul>\n\n<p><br>In the case of the Function.prototype functions, they are called on a function object, but rather than setting ThisBinding to the function object, ThisBinding is set to the <em>thisArg</em>.</p>\n\n<p>In the case of the Array.prototype functions, the given <em>callbackfn</em> is called in an execution context where ThisBinding is set to <em>thisArg</em> if supplied; otherwise, to the global object.</p></li>\n</ol>\n\n<p>Those are the rules for plain JavaScript. When you begin using JavaScript libraries (e.g. jQuery), you may find that certain library functions manipulate the value of <code>this</code>. The developers of those JavaScript libraries do this because it tends to support the most common use cases, and users of the library typically find this behavior to be more convenient. When passing callback functions referencing <code>this</code> to library functions, you should refer to the documentation for any guarantees about what the value of <code>this</code> is when the function is called.</p>\n\n<p>If you are wondering how a JavaScript library manipulates the value of <code>this</code>, the library is simply using one of the built-in JavaScript functions accepting a <em>thisArg</em>. You, too, can write your own function taking a callback function and <em>thisArg</em>:</p>\n\n<pre><code>function doWork(callbackfn, thisArg) {\n    //...\n    if (callbackfn != null) callbackfn.call(thisArg);\n}\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>I forgot a special case. When constructing a new object via the <code>new</code> operator, the JavaScript interpreter creates a new, empty object, sets some internal properties, and then calls the constructor function on the new object. Thus, when a function is called in a constructor context, the value of <code>this</code> is the new object that the interpreter created:</p>\n\n<pre><code>function MyType() {\n    this.someData = \"a string\";\n}\n\nvar instance = new MyType();\n// Kind of like the following, but there are more steps involved:\n// var instance = {};\n// MyType.call(instance);\n</code></pre>\n\n<p><strong>QUIZ:</strong> Just for fun, test your understanding with the following examples.</p>\n\n<p><em>To reveal the answers, mouse over the light yellow boxes.</em></p>\n\n<ol>\n<li><p>What is the value of <code>this</code> at line A? Why?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nif (true) {\n    // Line A\n}\n&lt;/script&gt;\n</code></pre>\n\n<blockquote class=\"spoiler\">\n  <p> <code>window</code>\n\n </p><p>Line A is evaluated in the initial global execution context.</p>\n</blockquote></li>\n<li><p>What is the value of <code>this</code> at line B when obj.staticFunction() is executed? Why?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar obj = {\n    someData: \"a string\"\n};\n\nfunction myFun() {\n    // Line B\n}\n\nobj.staticFunction = myFun;\n\nobj.staticFunction();\n&lt;/script&gt;\n</code></pre>\n\n<blockquote class=\"spoiler\">\n  <p> <code>obj</code>\n\n </p><p>When calling a function on an object, ThisBinding is set to the object.</p>\n</blockquote></li>\n<li><p>What is the value of <code>this</code> at line C? Why?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar obj = {\n    myMethod : function () {\n        // Line C\n    }\n};\nvar myFun = obj.myMethod;\nmyFun();\n&lt;/script&gt;\n</code></pre>\n\n<blockquote class=\"spoiler\">\n  <p> <code>window</code>\n\n </p><p>In this example, the JavaScript interpreter enters function code, but because <code>myFun</code>/<code>obj.myMethod</code> is not called on an object, ThisBinding is set to <code>window</code>.\n\n </p><p>This is different from Python, in which accessing a method (<code>obj.myMethod</code>) creates a <a href=\"http://docs.python.org/3/library/stdtypes.html#methods\">bound method object</a>.</p>\n</blockquote></li>\n<li><p>What is the value of <code>this</code> at line D? Why?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction myFun() {\n    // Line D\n}\nvar obj = {\n    myMethod : function () {\n        eval(\"myFun()\");\n    }\n};\nobj.myMethod();\n&lt;/script&gt;\n</code></pre>\n\n<blockquote class=\"spoiler\">\n  <p> <code>window</code>\n\n </p><p>This one was tricky. When evaluating the eval code, <code>this</code> is <code>obj</code>. However, in the eval code, <code>myFun</code> is not called on an object, so ThisBinding is set to <code>window</code> for the call.</p>\n</blockquote></li>\n<li><p>What is the value of <code>this</code> at line E?</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nfunction myFun() {\n    // Line E\n}\nvar obj = {\n    someData: \"a string\"\n};\nmyFun.call(obj);\n&lt;/script&gt;\n</code></pre>\n\n<blockquote class=\"spoiler\">\n  <p> <code>obj</code>\n\n </p><p>The line <code>myFun.call(obj);</code> is invoking the special built-in function Function.prototype.call(), which accepts <em>thisArg</em> as the first argument.</p>\n</blockquote></li>\n</ol>\n    "},{"t":"Invoking JavaScript code in an iframe from the parent page","l":"http://stackoverflow.com/questions/251420/invoking-javascript-code-in-an-iframe-from-the-parent-page","q":"\n\n<p>Basically, I have an iframe embedded in a page and the iframe has some <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> routines I need to invoke from the parent page.</p>\n\n<p>Now the opposite is quite simple as you only need to call <code>parent.functionName()</code>, but unfortunately I need exactly the opposite of that.</p>\n\n<p>Please note that my problem is not changing the source <a href=\"http://en.wikipedia.org/wiki/Uniform_Resource_Locator\">URL</a> of the iframe, but invoking a function defined in the iframe.</p>\n    ","a":"\n<p>Assume your iFrame's id is \"targetFrame\" and the function you want to call is <code>targetFunction()</code>:</p>\n\n<pre><code>document.getElementById('targetFrame').contentWindow.targetFunction();\n</code></pre>\n\n<p>You can also access the frame using <code>window.frames</code> instead of <code>document.getElementById</code>.</p>\n\n<pre><code>window.frames[0].frameElement.contentWindow.targetFunction();\n</code></pre>\n    "},{"t":"jQuery - setting the selected value of a select control via its text description","l":"http://stackoverflow.com/questions/496052/jquery-setting-the-selected-value-of-a-select-control-via-its-text-description","q":"\n\n<p>I have a select control, and in a javascript variable I have a text string.</p>\n\n<p>Using jQuery I want to set the selected element of the select control to be the item with the text description I have (as opposed to the value, which I don't have).</p>\n\n<p>I know setting it by value is pretty trivial. e.g.</p>\n\n<pre><code>$(\"#my-select\").val(myVal);\n</code></pre>\n\n<p>But I'm a bit stumped on doing it via the text description. I guess there must be a way of getting the value out from the text description, but my brain is too Friday afternoon-ed to be able to work it out.</p>\n    ","a":"\n<p>Given this HTML:</p>\n\n<pre><code>&lt;select&gt;\n    &lt;option value=\"0\"&gt;One&lt;/option&gt;\n    &lt;option value=\"1\"&gt;Two&lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n\n<p><strong>Select by description for jQuery v1.6+:</strong></p>\n\n<pre><code>var text1 = 'Two';\n$(\"select option\").filter(function() {\n    //may want to use $.trim in here\n    return $(this).text() == text1; \n}).prop('selected', true);\n</code></pre>\n\n<p><strong>Select by description for jQuery versions below 1.6 and greater than or equal to 1.4</strong>:\n<a href=\"http://stackoverflow.com/a/3644500/31532\">http://stackoverflow.com/a/3644500/31532</a></p>\n\n<pre><code>var text1 = 'Two';\n$(\"select option\").filter(function() {\n    //may want to use $.trim in here\n    return $(this).text() == text1; \n}).attr('selected', true);\n</code></pre>\n\n<p>Note that while this approach will work in versions that are above 1.6 but less than 1.9, it has been deprecated since 1.6. It <em><a href=\"http://stackoverflow.com/questions/14366220/optionselected-not-working-jquery-1-9\">will not work</a></em> in jQuery 1.9+.</p>\n\n<p><strong>Select by description for previous versions:</strong></p>\n\n<p><code>val()</code> should handle both cases. Are you not seeing it?</p>\n\n<p>Eg:</p>\n\n<pre><code>$('select').val('1'); // selects \"Two\"\n$('select').val('Two'); // also selects \"Two\"\n</code></pre>\n    "},{"t":"JavaScript for…in vs for","l":"http://stackoverflow.com/questions/242841/javascript-for-in-vs-for","q":"\n\n<p>Do you think there is a big difference in for...in and for loops? What kind of \"for\" do you prefer to use and why?</p>\n\n<p>Let's say we have an array of associative arrays:</p>\n\n<pre><code>var myArray = [{'key': 'value'}, {'key': 'value1'}];\n</code></pre>\n\n<p>So we can iterate:</p>\n\n<pre><code>for (var i = 0; i &lt; myArray.length; i++)\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>for (var i in myArray)\n</code></pre>\n\n<p>I don't see a big difference. Are there any performance issues?</p>\n    ","a":"\n<p>The choice should be based on the which idiom is best understood.</p>\n\n<p>An array is iterated using:</p>\n\n<pre><code>for (var i = 0; i &lt; a.length; i++)\n   //do stuff with a[i]\n</code></pre>\n\n<p>An object being used as an associative array is iterated using:</p>\n\n<pre><code>for (var key in o)\n  //do stuff with o[key]\n</code></pre>\n\n<p>Unless you have earth shattering reasons, stick to the established pattern of usage.</p>\n    "},{"t":"Is there a better way of writing v = (v == 0 ? 1 : 0);","l":"http://stackoverflow.com/questions/6911235/is-there-a-better-way-of-writing-v-v-0-1-0","q":"\n\n<p>I want to toggle a variable between 0 and 1. If it's 0 I want to set it to 1, else if it's 1 I want to set it to 0.</p>\n\n<p>This is such a fundamental operation that I write so often I'd like to investigate the shortest, clearest possible way of doing it. Here's my best so far:</p>\n\n<pre><code>v = (v == 0 ? 1 : 0);\n</code></pre>\n\n<p>Can you improve on this?</p>\n\n<p>Edit: the question is asking how to write the above statement in the fewest characters while retaining clarity - how is this 'not a real question'? This wasn't intended to be a code-golf exercise, though some interesting answers have come out of people approaching it as golf - it's nice to see golf being used in a constructive and thought-provoking manner.</p>\n    ","a":"\n<p>You can simply use:</p>\n\n<pre><code>v = 1 - v;\n</code></pre>\n\n<p>This of course assumes that the variable is initialised properly, i.e. that it only has the value 0 or 1.</p>\n\n<p>Another method that is shorter but uses a less common operator:</p>\n\n<pre><code>v ^= 1;\n</code></pre>\n\n<h3>Edit:</h3>\n\n<p>To be clear; I never approached this question as code golf, just to find a short way of doing the task without using any obscuring tricks like side effects of operators.</p>\n    "},{"t":"Convert a Unix timestamp to time in Javascript","l":"http://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript","q":"\n\n<p>I am storing time in a MySQL database as a Unix timestamp and that gets sent to some Javascript, how would I get just the time out of it? Ex. HH/MM/SS</p>\n    ","a":"\n<pre><code>// create a new javascript Date object based on the timestamp\n// multiplied by 1000 so that the argument is in milliseconds, not seconds\nvar date = new Date(unix_timestamp*1000);\n// hours part from the timestamp\nvar hours = date.getHours();\n// minutes part from the timestamp\nvar minutes = \"0\" + date.getMinutes();\n// seconds part from the timestamp\nvar seconds = \"0\" + date.getSeconds();\n\n// will display time in 10:30:23 format\nvar formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n</code></pre>\n\n<p>For more information regarding the Date object, please refer to <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\">MDN</a> or the <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-15.9\">ES5 specification</a>.</p>\n    "},{"t":"How to clear the canvas for redrawing","l":"http://stackoverflow.com/questions/2142535/how-to-clear-the-canvas-for-redrawing","q":"\n\n<p>After experimenting with composite operations and drawing images on the canvas I'm now trying to remove images and compositing. How do I do this?</p>\n\n<p>I need to clear the canvas for redrawing other images; this can go on for a while so I don't think drawing a new rectangle every time will be the most efficient option.</p>\n    ","a":"\n<pre><code>context.clearRect(0, 0, canvas.width, canvas.height);\n</code></pre>\n    "},{"t":"Generate a string of 5 random characters in JavaScript","l":"http://stackoverflow.com/questions/1349404/generate-a-string-of-5-random-characters-in-javascript","q":"\n\n<p>I want a 5 character string composed of characters picked randomly from the set <code>[a-zA-Z0-9]</code>.</p>\n\n<p>What's the best way to do this with JavaScript?</p>\n    ","a":"\n<p>I think this will work for you:</p>\n\n<pre><code>function makeid()\n{\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for( var i=0; i &lt; 5; i++ )\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n}\n</code></pre>\n    "},{"t":"How do you find out the caller function in JavaScript?","l":"http://stackoverflow.com/questions/280389/how-do-you-find-out-the-caller-function-in-javascript","q":"\n\n<pre><code>function main()\n{\n   Hello();\n}\n\nfunction Hello()\n{\n  // How do you find out the caller function is 'main'?\n}\n</code></pre>\n\n<p>Is there a way to find out the call stack at all?</p>\n    ","a":"\n<pre><code>function Hello()\n{\n    alert(\"caller is \" + arguments.callee.caller.toString());\n}\n</code></pre>\n    "},{"t":"Capture HTML Canvas as gif/jpg/png/pdf?","l":"http://stackoverflow.com/questions/923885/capture-html-canvas-as-gif-jpg-png-pdf","q":"\n\n<p>Is it possible to capture or print what's displayed in an html canvas as an image or pdf? </p>\n\n<p>I'd like to generate an image via canvas, and be able to generate a png from that image.</p>\n    ","a":"\n<p>Oops. Original answer was specific to a similar question. This has been revised: </p>\n\n<pre><code>var canvas = document.getElementById(\"mycanvas\");\nvar img    = canvas.toDataURL(\"image/png\");\n</code></pre>\n\n<p>with the value in IMG you can write it out as a new Image like so:</p>\n\n<pre><code>document.write('&lt;img src=\"'+img+'\"/&gt;');\n</code></pre>\n    "},{"t":"How to remove all CSS classes using jQuery?","l":"http://stackoverflow.com/questions/1424981/how-to-remove-all-css-classes-using-jquery","q":"\n\n<p>Instead of individually calling <code>$(\"#item\").removeClass()</code> for every single class an element might have, is there a single function which can be called which removes all CSS classes from the given element? </p>\n\n<p>Both jQuery and raw JavaScript will work.</p>\n    ","a":"\n<pre><code>$(\"#item\").removeClass();\n</code></pre>\n\n<p>Calling <code>removeClass</code> with no parameters will remove all of the item's classes.</p>\n\n<p></p><hr><p></p>\n\n<p>You can also use (but is not necessarily recommended, the <em>correct</em> way is the one above):</p>\n\n<pre><code>$(\"#item\").removeAttr('class');\n$(\"#item\").attr('class', '');\n$('#item')[0].className = '';\n</code></pre>\n\n<p>If you didn't have jQuery, then this would be pretty much your only option:</p>\n\n<pre><code>document.getElementById('item').className = '';\n</code></pre>\n    "},{"t":"How to see if string contains substring","l":"http://stackoverflow.com/questions/3480771/how-to-see-if-string-contains-substring","q":"\n\n<p>I have a shoppingcart that displays product options in a dropdown menu, and I want to make some other fields on the page only visible if they select \"Yes\" in the previous option.  The problem is that the shopping cart also includes the price modifier in the text, and that can be different for each product.  So if I do this it works:</p>\n\n<pre><code> $(document).ready(function() {\n  $('select[id=\"Engraving\"]').change(function() {\n   var str = $('select[id=\"Engraving\"] option:selected').text(); \n   if (str == \"Yes (+ $6.95)\") {\n    $('.engraving').show();\n   } else {\n    $('.engraving').hide();\n   }\n  });\n });\n</code></pre>\n\n<p>However I would rather use something like this:</p>\n\n<pre><code> $(document).ready(function() {\n  $('select[id=\"Engraving\"]').change(function() {\n   var str = $('select[id=\"Engraving\"] option:selected').text(); \n   if (str *= \"Yes\") {\n    $('.engraving').show();\n   } else {\n    $('.engraving').hide();\n   }\n  });\n });\n</code></pre>\n\n<p>Which doesn't work.  </p>\n\n<p>I only want to perform the action if the selected option contains the word \"Yes\", and would ignore the price modifier.</p>\n\n<p>I appreciate any help.</p>\n    ","a":"\n<p>Like this:</p>\n\n<pre><code>if (str.indexOf(\"Yes\") &gt;= 0)\n</code></pre>\n\n<p>Note that this is case-sensitive.<br>\nIf you want a case-insensitive search, you can write </p>\n\n<pre><code>if (str.toLowerCase().indexOf(\"yes\") &gt;= 0)\n</code></pre>\n\n<p>Or,</p>\n\n<pre><code>if (/yes/i.test(str))\n</code></pre>\n    "},{"t":"Complex nesting of partials and templates","l":"http://stackoverflow.com/questions/12863663/complex-nesting-of-partials-and-templates","q":"\n\n<p>My question involves how to go about dealing with complex nesting of <strong>templates</strong> (also called <strong>partials</strong>) in an AngularJS application.</p>\n\n<p>The best way to describe my situation is with an image I created:</p>\n\n<p><img src=\"http://i.stack.imgur.com/V17C3.png\" alt=\"AngularJS Page Diagram\"></p>\n\n<p>As you can see this has the potential to be a fairly complex application with lots of nested models.</p>\n\n<p>The application is single-page, so it loads an <strong>index.html</strong> that contains a div element in the DOM with the <code>ng-view</code> attribute.</p>\n\n<p><strong>For circle 1</strong>, You see that there is a Primary navigation that loads the appropriate templates into the <code>ng-view</code>.  I'm doing this by passing <code>$routeParams</code> to the main app module.  Here is an example of what's in my app:</p>\n\n<pre><code>angular.module('myApp', []).\n    config(['$routeProvider', function($routeProvider) {\n        $routeProvider.                     \n            when(\"/job/:jobId/zones/:zoneId\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/zone_edit.html' }).\n            when(\"/job/:jobId/initial_inspection\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/initial_inspection.html' }).\n            when(\"/job/:jobId/zones/:zoneId/rooms/:roomId\", { controller: JobDetailController, templateUrl: 'assets/job_list_app/templates/room_edit.html' })       \n\n    }]);\n</code></pre>\n\n<p><strong>In circle 2</strong>, the template that is loaded into the <code>ng-view</code> has an additional <strong>sub-navigation</strong>.  This sub-nav then needs to load templates into the area below it - but since ng-view is already being used, I'm not sure how to go about doing this.</p>\n\n<p>I know that I can include additional templates within the 1st template, but these templates are all going to be pretty complex.  I would like to keep all the templates separate in order to make the application easier to update and not have a dependency on the parent template having to be loaded in order to access its children.</p>\n\n<p><strong>In circle 3</strong>, you can see things get even more complex.  There is the potential that the sub-navigation templates will have a <strong>2nd sub-navigation</strong> that will need to load its own templates as well into the area in <strong>circle 4</strong></p>\n\n<p><strong>How does one go about structuring an AngularJS app to deal with such complex nesting of templates while keeping them all separate from one another?</strong></p>\n    ","a":"\n<p>Well, since you can currently only have one ngView directive... I use nested directive controls. This allows you to set up templating and inherit (or isolate) scopes among them. Outside of that I use ng-switch or even just ng-show to choose which controls I'm displaying based on what's coming in from $routeParams.</p>\n\n<p><strong>EDIT</strong> Here's some example pseudo-code to give you an idea of what I'm talking about. With a nested sub navigation.</p>\n\n<p>Here's the main app page</p>\n\n<pre><code>&lt;!-- primary nav --&gt;\n&lt;a href=\"#/page/1\"&gt;Page 1&lt;/a&gt;\n&lt;a href=\"#/page/2\"&gt;Page 2&lt;/a&gt;\n&lt;a href=\"#/page/3\"&gt;Page 3&lt;/a&gt;\n\n&lt;!-- display the view --&gt;\n&lt;div ng-view&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Directive for the sub navigation</p>\n\n<pre><code>app.directive('mySubNav', function(){\n    return {\n        restrict: 'E',\n        scope: {\n           current: '=current'\n        },\n        templateUrl: 'mySubNav.html',\n        controller: function($scope) {\n        }\n    };\n});\n</code></pre>\n\n<p>template for the sub navigation</p>\n\n<pre><code>&lt;a href=\"#/page/1/sub/1\"&gt;Sub Item 1&lt;/a&gt;\n&lt;a href=\"#/page/1/sub/2\"&gt;Sub Item 2&lt;/a&gt;\n&lt;a href=\"#/page/1/sub/3\"&gt;Sub Item 3&lt;/a&gt;\n</code></pre>\n\n<p>template for a main page (from primary nav)</p>\n\n<pre><code>&lt;my-sub-nav current=\"sub\"&gt;&lt;/my-sub-nav&gt;\n\n&lt;ng-switch on=\"sub\"&gt;\n  &lt;div ng-switch-when=\"1\"&gt;\n      &lt;my-sub-area1&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n  &lt;div ng-switch-when=\"2\"&gt;\n      &lt;my-sub-area2&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n  &lt;div ng-switch-when=\"3\"&gt;\n      &lt;my-sub-area3&gt;&lt;/my-sub-area&gt;\n  &lt;/div&gt;\n&lt;/ng-switch&gt;\n</code></pre>\n\n<p>Controller for a main page. (from the primary nav)</p>\n\n<pre><code>app.controller('page1Ctrl', function($scope, $routeParams) {\n     $scope.sub = $routeParams.sub;\n});\n</code></pre>\n\n<p>Directive for a Sub Area</p>\n\n<pre><code>app.directive('mySubArea1', function(){\n    return {\n        restrict: 'E',\n        templateUrl: 'mySubArea1.html',\n        controller: function($scope) {\n            //controller for your sub area.\n        }\n    };\n});\n</code></pre>\n    "},{"t":"Difference between tilde(~) and caret(^) in package.json","l":"http://stackoverflow.com/questions/22343224/difference-between-tilde-and-caret-in-package-json","q":"\n\n<p>After I upgraded to latest stable <code>node</code> and <code>npm</code>, I tried <code>npm install moment --save</code>. It saves the entry in the package.json with the <code>caret(^)</code> prefix. Previously, it was a <code>tilde(~)</code> prefix. </p>\n\n<ol>\n<li>Why are these changes made in npm? </li>\n<li>What is the difference between tilde(~) and caret(^)?</li>\n<li>What is the advantages over others?</li>\n</ol>\n    ","a":"\n<blockquote>\n  <p>In the simplest terms, the tilde matches the most recent minor version\n  (the middle number). ~1.2.3 will match all 1.2.x versions but will\n  miss 1.3.0.</p>\n  \n  <p>The caret, on the other hand, is more relaxed. It will update you to\n  the most recent major version (the first number). ^1.2.3 will match\n  any 1.x.x release including 1.3.0, but will hold off on 2.0.0.</p>\n</blockquote>\n\n<p><a href=\"http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/\">http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/</a></p>\n    "},{"t":"What is the difference between Polymer elements and AngularJS directives?","l":"http://stackoverflow.com/questions/18089075/what-is-the-difference-between-polymer-elements-and-angularjs-directives","q":"\n\n<p>On the Polymer <a href=\"http://www.polymer-project.org/docs/start/usingelements.html\">Getting Started</a> page, we see an example of Polymer in action:</p>\n\n<pre><code>&lt;html&gt;\n  &lt;head&gt;\n    &lt;!-- 1. Shim missing platform features --&gt;\n    &lt;script src=\"polymer-all/platform/platform.js\"&gt;&lt;/script&gt;\n    &lt;!-- 2. Load a component --&gt;\n    &lt;link rel=\"import\" href=\"x-foo.html\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;!-- 3. Declare the component by its tag. --&gt;\n    &lt;x-foo&gt;&lt;/x-foo&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>What you will notice is <code>&lt;x-foo&gt;&lt;/x-foo&gt;</code> being defined by <code>platform.js</code> and <code>x-foo.html</code>.</p>\n\n<p>It seems like this is the equivalent to a directive module in AngularJS:</p>\n\n<pre><code>angular.module('xfoo', [])\n.controller('X-Foo', ['$scope',function($scope) {\n    $scope.text = 'hey hey!';\n})\n.directive('x-foo', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        controller: 'X-Foo',\n        templateUrl: '/views/x-foo.html',\n        link: function(scope, controller) {\n        }\n    };\n});\n</code></pre>\n\n<ul>\n<li><p>What is the difference between the two?</p></li>\n<li><p>What problems does Polymer solve that AngularJS has not or will not?</p></li>\n<li><p>Are there plans to tie Polymer in with AngularJS in the future?</p></li>\n</ul>\n    ","a":"\n<p>You're not the first to ask this question :) Let me clarify a couple of things before getting to your questions.</p>\n\n<ol>\n<li><p>Polymer's <code>webcomponents.js</code> is a library that contains several polyfills for various W3C APIs that fall under the Web Components umbrella. These are:</p>\n\n<ul>\n<li>Custom Elements</li>\n<li>HTML Imports</li>\n<li><code>&lt;template&gt;</code></li>\n<li>Shadow DOM</li>\n<li>Pointer Events</li>\n<li>others</li>\n</ul>\n\n<p>The left-nav in the documentation (<a href=\"http://www.polymer-project.org/\">polymer-project.org</a>) has a page for all of these \"Platform technologies\". Each of those pages also has a pointer to the individual polyfill.</p></li>\n<li><p><code>&lt;link rel=\"import\" href=\"x-foo.html\"&gt;</code> is an HTML Import. Imports are a useful tool for including HTML in other HTML. You can include <code>&lt;script&gt;</code>, <code>&lt;link&gt;</code>, markup, or whatever else in an import.</p></li>\n<li><p>Nothing \"links\" <code>&lt;x-foo&gt;</code> to x-foo.html. In your example, it's assumed the Custom Element definition of <code>&lt;x-foo&gt;</code> (e.g. <code>&lt;element name=\"x-foo\"&gt;</code>) is defined in x-foo.html. When the browser sees that definition, it's registered as a new element.</p></li>\n</ol>\n\n<p>On to questions!</p>\n\n<p><strong>What is the difference between Angular and Polymer?</strong></p>\n\n<p>We covered some of this in our <a href=\"http://www.youtube.com/watch?v=irGDN5Ysi_A&amp;t=21m45s\">Q&amp;A video</a>. In general, Polymer is a framework that aims to use (and show how to use) Web Components. It's foundation is Custom Elements (e.g. everything you build is a web component) and it evolves as the web evolves. To that end, we only support the latest version of the modern browsers.</p>\n\n<p>I'll use this image to describe Polymer's entire architecture stack:</p>\n\n<p><img src=\"http://i.stack.imgur.com/Ksn6s.png\" alt=\"enter image description here\"></p>\n\n<p>RED layer: We get tomorrow's web through a set of polyfills. Keep in mind, those libraries go away over time as browsers adopt the new APIs.</p>\n\n<p>YELLOW layer: Sprinkle in some sugar with polymer.js. This layer is our opinion on how to use the spec'd APIs, together. It also adds things like data-binding, syntatic sugar, change watchers, published properties...We think these things are helpful for building web component-based apps.</p>\n\n<p>GREEN: The comprehensive set of UI components (green layer) is still in progress. These will be web components that use all of the red + yellow layers.</p>\n\n<p><strong>Angular directives vs. Custom Elements?</strong></p>\n\n<p>See Alex Russell's <a href=\"https://groups.google.com/forum/?fromgroups=#!searchin/polymer-dev/angular/polymer-dev/s761szb9WJc/Lb29XuoJdqAJ\">answer</a>. Basically, Shadow DOM allows composing bits of HTML but also is a tool for encapsulating that HTML. This is fundamentally a new concept on the web and something other frameworks will leverage.</p>\n\n<p><strong>What problems does Polymer solve that AngularJS has not or will not?</strong></p>\n\n<p>Similarities: declarative templates, data binding. </p>\n\n<p>Differences: Angular has high level APIs for services, filters, animations, etc., supports IE8, and at this point, is a much more robust framework for building production apps. Polymer is just starting out in alpha.</p>\n\n<p><strong>Are there plans to tie Polymer in with AngularJS in the future?</strong></p>\n\n<p>They're <a href=\"http://www.polymer-project.org/resources/faq.html#frameworks\">separate projects</a>. That said, both the Angular and Ember teams <a href=\"https://groups.google.com/forum/#!msg/polymer-dev/4RSYaKmbtEk/uYnY3900wpIJ\">announced</a> they'll eventually move to using the underlying platform APIs in their own frameworks.</p>\n\n<p>^ This is a huge win IMO. In a world where web developers have powerful tools (Shadow DOM, Custom Elements), framework authors also can utilize these primitives to create better frameworks. Most of them currently go through great hoops to \"get the job done\".</p>\n\n<p>UPDATE:</p>\n\n<p>There's a really great article on this topic: \"<a href=\"http://www.binpress.com/blog/2014/06/26/polymer-vs-angular/\">Here’s the difference between Polymer and Angular</a>\"</p>\n    "},{"t":"On - window.location.hash - change?","l":"http://stackoverflow.com/questions/680785/on-window-location-hash-change","q":"\n\n<p>I am using Ajax and hash for navigation. Is there a way to check if the <code>window.location.hash</code> changed like this?</p>\n\n<p><a href=\"http://example.com/blah\">http://example.com/blah</a><strong>#123</strong> to <a href=\"http://example.com/blah\">http://example.com/blah</a><strong>#456</strong></p>\n\n<p>It works if I check it when the document loads.\nBut if I have #hash based navigation it doesn't work when I press the back button on the browser (so I jump from blah#456 to blah#123). It shows inside the address box, but I can't catch it with JavaScript.</p>\n    ","a":"\n<p>The only way to really do this (and is how the 'reallysimplehistory' does this), is by setting an interval that keeps checking the current hash, and comparing it against what it was before, we do this and let subscribers subscribe to a changed event that we fire if the hash changes.. its not perfect but browsers really don't support this event natively.</p>\n\n<hr>\n\n<p>Update to keep this answer fresh:</p>\n\n<p>If you are using jQuery (which today should be somewhat foundational for most) then a nice solution is to use the abstraction that jQuery gives you by using its events system to listen to hashchange events on the window object.</p>\n\n<pre><code>$(window).on('hashchange', function() {\n  //.. work ..\n});\n</code></pre>\n\n<p>The nice thing here is you can write code that doesn't need to even worry about hashchange support, however you DO need to do some magic, in form of a somewhat lesser known jQuery feature <a href=\"http://benalman.com/news/2010/03/jquery-special-events/\">jQuery special events</a>.</p>\n\n<p>With this feature you essentially get to run some setup code for any event, the first time somebody attempts to use the event in any way (such as binding to the event).</p>\n\n<p>In this setup code you can check for native browser support and if the browser doesn't natively implement this, you can setup a single timer to poll for changes, and trigger the jQuery event.</p>\n\n<p>This completely unbinds your code from needing to understand this support problem, the implementation of a special event of this kind is trivial (to get a simple 98% working version), but why do that <a href=\"http://benalman.com/projects/jquery-hashchange-plugin/\">when somebody else has already</a>.</p>\n    "},{"t":"How to print debug messages in the Google Chrome Javascript Console","l":"http://stackoverflow.com/questions/217957/how-to-print-debug-messages-in-the-google-chrome-javascript-console","q":"\n\n<p>Does anyone know how to print debug messages in the Google Chrome Javascript Console?</p>\n\n<p>Please note that the Javascript Console is not the same as the Javascript Debugger, they have different syntaxes AFAIK, so the <strong>print</strong> command in Javascript Debugger will not work here. In the Javascript Console, <code>print()</code> will send the parameter to the printer.</p>\n    ","a":"\n<p>Executing following code from the browser address bar:</p>\n\n<pre>javascript: console.log(2);\n</pre>\n\n<p>successfully prints message to the \"JavaScript Console\" in Google Chrome.</p>\n    "},{"t":"Tool to Unminify / Decompress JavaScript [closed]","l":"http://stackoverflow.com/questions/822119/tool-to-unminify-decompress-javascript","q":"\n\n<p>Are there any command line scripts and/or online tools that can reverse the effects of minification similar to how Tidy can clean up horrific HTML?</p>\n\n<p>(I'm specifically looking to unminify a minified JavaScript file, so variable renaming might still be an issue.)</p>\n    ","a":"\n<p>You can use this : <a href=\"http://jsbeautifier.org/\">http://jsbeautifier.org/</a>\nBut it depends on the minify method you are using, this one only formats the code, it doesn't change variable names, nor uncompress base62 encoding.</p>\n\n<p>edit: in fact it can unpack \"packed\" scripts (packed with Dean Edward's packer : <a href=\"http://dean.edwards.name/packer/\">http://dean.edwards.name/packer/</a>)</p>\n    "},{"t":"Function overloading in Javascript - Best practices","l":"http://stackoverflow.com/questions/456177/function-overloading-in-javascript-best-practices","q":"\n\n<p>What is the best way(s) to fake function overloading in Javascript? </p>\n\n<p>I know it is not possible to overload functions in Javascript as in other languages. \nIf I needed a function with two uses <code>foo(x)</code> and <code>foo(x,y,z)</code> which is the best / preferred way:</p>\n\n<ol>\n<li>Using different names in the first place</li>\n<li>Using optional arguments like <code>y = y || 'default'</code></li>\n<li>Using number of arguments</li>\n<li>Checking types of arguments</li>\n<li>Or how?</li>\n</ol>\n    ","a":"\n<p>The best way to do function overloading with parameters is not to check the argument length or  the types; checking the types will just make your code slow and you have the fun of Arrays, nulls, Objects, etc.</p>\n\n<p>What most developers do is tack on an object as the last argument to their methods.  This object can hold anything. </p>\n\n<pre><code>function foo(a, b, opts) {\n\n}\n\n\nfoo(1, 2, {\"method\":\"add\"});\nfoo(3, 4, {\"test\":\"equals\", \"bar\":\"tree\"});\n</code></pre>\n\n<p>Then you can handle it anyway you want in your method. [Switch, if-else, etc.]</p>\n    "},{"t":"jQuery - remove style added with .css() function","l":"http://stackoverflow.com/questions/4036857/jquery-remove-style-added-with-css-function","q":"\n\n<p>I'm changing CSS with jQuery and I wish to remove the styling I'm adding based on the input value:</p>\n\n<pre><code>if(color != '000000') $(\"body\").css(\"background-color\", color); else // remove style ?\n</code></pre>\n\n<p>How can I do this? Note that the line above runs whenever a color is selected using a color picker (ie. when mouse moves over a color wheel).</p>\n\n<p>2nd note: I can't do this with <code>css(\"background-color\", \"none\")</code> because it will remove the default styling from the css files. I just want to remove the <code>background-color</code> inline style added by jQuery.</p>\n    ","a":"\n<p>Changing the property to an empty string appears to do the job.</p>\n\n<p><code>$.css(\"background-color\", \"\");</code></p>\n    "},{"t":"offsetting an html anchor to adjust for fixed header [duplicate]","l":"http://stackoverflow.com/questions/10732690/offsetting-an-html-anchor-to-adjust-for-fixed-header","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/4086107/html-positionfixed-page-header-and-in-page-anchors\" dir=\"ltr\">HTML position:fixed page header and in-page anchors</a>\n                <span class=\"question-originals-answer-count\">\n                    8 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I am trying to clean up the way my anchors work. I have a header that is fixed to the top of the page, so when you link to an anchor elsewhere in the page, the page jumps so the anchor is at the top of the page, leaving the content behind the fixed header (I hope that makes sense).  I need a way to offset the anchor by the 25px from the height of the header. I would prefer HTML or CSS, but Javascript would be acceptable as well.</p>\n    ","a":"\n<p>You could just use CSS without any javascript.</p>\n\n<p>Give your anchor a class:</p>\n\n<pre><code>&lt;a class=\"anchor\" id=\"top\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>You can then position the anchor an offset higher or lower than where it actually appears on the page, by making it a block element and relatively positioning it. -250px will position the anchor up 250px</p>\n\n<pre><code>a.anchor{display: block; position: relative; top: -250px; visibility: hidden;}\n</code></pre>\n    "},{"t":"Retrieve the position (X,Y) of an HTML element","l":"http://stackoverflow.com/questions/442404/retrieve-the-position-x-y-of-an-html-element","q":"\n\n<p>I want to know how to get the X and Y position of HTML elements such as <code>img</code> and <code>div</code> in JavaScript.</p>\n    ","a":"\n<p>The correct approach is to use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.getBoundingClientRect\"><code>element.getBoundingClientRect()</code></a>:</p>\n\n<pre><code>var rect = element.<a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.getBoundingClientRect\">getBoundingClientRect</a>();\nconsole.log(rect.top, rect.right, rect.bottom, rect.left);</code></pre>\n\n<p>Internet Explorer has supported this since as long as you are likely to care about and it was finally standardized in <a href=\"http://www.w3.org/TR/cssom-view/#the-getclientrects-and-getboundingclientrect-methods\">CSSOM Views</a>. All other browsers adopted it <a href=\"http://www.quirksmode.org/dom/w3c_cssom.html#t21\">a long time ago</a>.</p>\n\n<p>Some browsers also return height and width properties, though this is non-standard.  If you're worried about older browser compatibility, check this answer's revisions for an optimised degrading implementation.</p>\n\n<p>The values returned by <code>element.getBoundingClientRect()</code> are relative to the viewport.  If you need it relative to another element, simply subtract one rectangle from the other:</p>\n\n<pre><code>var bodyRect = document.body.getBoundingClientRect(),\n    elemRect = element.getBoundingClientRect(),\n    offset   = elemRect.top - bodyRect.top;\n\nalert('Element is ' + offset + ' vertical pixels from &lt;body&gt;');\n</code></pre>\n    "},{"t":"Is javascript guaranteed to be single-threaded?","l":"http://stackoverflow.com/questions/2734025/is-javascript-guaranteed-to-be-single-threaded","q":"\n\n<p>Javascript is known to be single-threaded in all modern browser implementations, but is that specified in any standard or is it just by tradition? Is it totally safe to assume that javascript is always single-threaded?</p>\n    ","a":"\n<p>That's a good question. I'd love to say “yes”. I can't.</p>\n\n<p>JavaScript is usually considered to have a single thread of execution visible to scripts(*), so that when your inline script, event listener or timeout is entered, you remain completely in control until you return from the end of your block or function.</p>\n\n<p>(*: ignoring the question of whether browsers really implement their JS engines using one OS-thread, or whether other limited threads-of-execution are introduced by WebWorkers.)</p>\n\n<p>However, in reality this <em>isn't quite true</em>, in sneaky nasty ways.</p>\n\n<p>The most common case is immediate events. Browsers will fire these right away when your code does something to cause them:</p>\n\n<pre><code>&lt;textarea id=\"log\" rows=\"20\" cols=\"40\"&gt;&lt;/textarea&gt;\n&lt;input id=\"inp\"&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var l= document.getElementById('log');\n    var i= document.getElementById('inp');\n    i.onblur= function() {\n        l.value+= 'blur\\n';\n    };\n    setTimeout(function() {\n        l.value+= 'log in\\n';\n        l.focus();\n        l.value+= 'log out\\n';\n    }, 100);\n    i.focus();\n&lt;/script&gt;\n</code></pre>\n\n<p>Results in <code>log in, blur, log out</code> on all except IE. These events don't just fire because you called <code>focus()</code> directly, they could happen because you called <code>alert()</code>, or opened a pop-up window, or anything else that moves the focus.</p>\n\n<p>This can also result in other events. For example add an <code>i.onchange</code> listener and type something in the input before the <code>focus()</code> call unfocuses it, and the log order is <code>log in, change, blur, log out</code>, except in Opera where it's <code>log in, blur, log out, change</code> and IE where it's (even less explicably) <code>log in, change, log out, blur</code>.</p>\n\n<p>Similarly calling <code>click()</code> on an element that provides it calls the <code>onclick</code> handler immediately in all browsers (at least this is consistent!).</p>\n\n<p>(I'm using the direct <code>on...</code> event handler properties here, but the same happens with <code>addEventListener</code> and <code>attachEvent</code>.)</p>\n\n<p>There's also a bunch of circumstances in which events can fire whilst your code is threaded in, despite you having done <em>nothing</em> to provoke it. An example:</p>\n\n<pre><code>&lt;textarea id=\"log\" rows=\"20\" cols=\"40\"&gt;&lt;/textarea&gt;\n&lt;button id=\"act\"&gt;alert&lt;/button&gt;\n&lt;script type=\"text/javascript\"&gt;\n    var l= document.getElementById('log');\n    document.getElementById('act').onclick= function() {\n        l.value+= 'alert in\\n';\n        alert('alert!');\n        l.value+= 'alert out\\n';\n    };\n    window.onresize= function() {\n        l.value+= 'resize\\n';\n    };\n&lt;/script&gt;\n</code></pre>\n\n<p>Hit <code>alert</code> and you'll get a modal dialogue box. No more script executes until you dismiss that dialogue, yes? Nope. Resize the main window and you will get <code>alert in, resize, alert out</code> in the textarea.</p>\n\n<p>You might think it's impossible to resize a window whilst a modal dialogue box is up, but not so: in Linux, you can resize the window as much as you like; on Windows it's not so easy, but you can do it by changing the screen resolution from a larger to a smaller one where the window doesn't fit, causing it to get resized.</p>\n\n<p>You might think, well, it's only <code>resize</code> (and probably a few more like <code>scroll</code>) that can fire when the user doesn't have active interaction with the browser because script is threaded. And for single windows you might be right. But that all goes to pot as soon as you're doing cross-window scripting. For all browsers other than Safari, which blocks all windows/tabs/frames when any one of them is busy, you can interact with a document from the code of another document, running in a separate thread of execution and causing any related event handlers to fire.</p>\n\n<p>Places where events that you can cause to be generated can be raised whilst script is still threaded:</p>\n\n<ul>\n<li><p>when the modal popups (<code>alert</code>, <code>confirm</code>, <code>prompt</code>) are open, in all browsers but Opera;</p></li>\n<li><p>during <code>showModalDialog</code> on browsers that support it;</p></li>\n<li><p>the “A script on this page may be busy...” dialogue box, even if you choose to let the script continue to run, allows events like resize and blur to fire and be handled even whilst the script is in the middle of a busy-loop, except in Opera.</p></li>\n<li><p>a while ago for me, in IE with the Sun Java Plugin, calling any method on an applet could allow events to fire and script to be re-entered. This was always a timing-sensitive bug, and it's possible Sun have fixed it since (I certainly hope so).</p></li>\n<li><p>probably more. It's been a while since I tested this and browsers have gained complexity since.</p></li>\n</ul>\n\n<p>In summary, JavaScript appears to most users, most of the time, to have a strict event-driven single thread of execution. In reality, it has no such thing. It is not clear how much of this is simply a bug and how much deliberate design, but if you're writing complex applications, especially cross-window/frame-scripting ones, there is every chance it could bite you — and in intermittent, hard-to-debug ways.</p>\n\n<p>If the worst comes to the worst, you can solve concurrency problems by indirecting all event responses. When an event comes in, drop it in a queue and deal with the queue in order later, in a <code>setInterval</code> function. If you are writing a framework that you intend to be used by complex applications, doing this could be a good move. <code>postMessage</code> will also hopefully soothe the pain of cross-document scripting in the future.</p>\n    "},{"t":"How do I enumerate the properties of a JavaScript object?","l":"http://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object","q":"\n\n<p>How do I enumerate the properties of a JavaScript object?</p>\n\n<p>I actually want to list all the defined variables and their values, but I've learned that defining a variable actually creates a property of the window object.</p>\n    ","a":"\n<p>Simple enough:</p>\n\n<pre><code>for(var propertyName in myObject) {\n   // propertyName is what you want\n   // you can get the value like this: myObject[propertyName]\n}\n</code></pre>\n\n<p>Now, you will not get private variables this way because they are not available.</p>\n\n<hr>\n\n<p>EDIT: <a href=\"http://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object#86306\">@bitwiseplatypus</a> is correct that unless you use the <code>hasOwnProperty()</code> method, you will get properties that are inherited - however, I don't know why anyone familiar with object-oriented programming would expect anything less! Typically, someone that brings this up has been subjected to Douglas Crockford's warnings about this, which still confuse me a bit. Again, inheritance is a normal part of OO languages and is therefore part of JavaScript, notwithstanding it being prototypical.</p>\n\n<p>Now, that said, <code>hasOwnProperty()</code> <em>is</em> useful for filtering, but we don't need to sound a warning as if there is something dangerous in getting inherited properties.</p>\n\n<p>EDIT 2: <a href=\"http://stackoverflow.com/questions/85992/how-do-i-enumerate-the-properties-of-a-javascript-object#86306\">@bitwiseplatypus</a> brings up the situation that would occur should someone add properties/methods to your objects at a point in time later than when you originally wrote your objects (via its prototype) - while it is true that this might cause unexpected behavior, I personally don't see that as my problem entirely. Just a matter of opinion. Besides, what if I design things in such a way that I use prototypes during the construction of my objects and yet have code that iterates over the properties of the object and I want all inherited properties? I wouldn't use <code>hasOwnProperty()</code>. Then, let's say, someone adds new properties later. Is that my fault if things behave badly at that point? I don't think so. I think this is why jQuery, as an example, has specified ways of extending how it works (via <code>jQuery.extend</code> and <code>jQuery.fn.extend</code>).</p>\n    "},{"t":"List view getListItemXmlAttributes method fails with child publication items","l":"http://stackoverflow.com/questions/11165200/list-view-getlistitemxmlattributes-method-fails-with-child-publication-items","q":"\n\n<p>I have created a JS class to populate SG/Folder list view data, when items are modified. (<a href=\"http://jaimesantosalcon.blogspot.com/2012/04/sdl-tridion-2011-data-extenders-real.html\">As per Jaime's approach)</a>\nEverything works great when I operate on items in the publication they're created in.</p>\n\n<p><strong>Ex:</strong> I open a component or page and the custom <code>locked by</code> column immediately updates and shows my user name.</p>\n\n<p>However, when I go to a child publication and repeat that process, I get the window asking if I want to localize or edit the parent item. If I select to edit the parent window, the code doesn't work. I haven't quite figured it out yet with initial debugging. Chrome seems to swallow the error, Firefox gives me a cryptic:</p>\n\n<blockquote>\n  <p>Timestamp: 6/22/2012 3:42:54 PM</p>\n  \n  <p>Error: uncaught exception: [Exception... \"Component returned failure code: 0x80004002\n   (NS_NOINTERFACE) [nsIWebProgress.DOMWindow]\"  nsresult: \"0x80004002 (NS_NOINTERFACE)\" \n   location: \"JS frame :: chrome://browser/content/tabbrowser.xml ::  :: line 545\" \n   data: no]</p>\n</blockquote>\n\n<p>Does anyone have any initial ideas? I'll try to post some code later on...</p>\n\n<p>Code from PageEx.js:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Type.registerNamespace(\"MyCompany.Tridion.RTFExtensions\");\n\n/*\n* Constructor\n*/\n\nMyCompany.Tridion.RTFExtensions.PageEx = function (id) {\n    Type.enableInterface(this, \"MyCompany.Tridion.RTFExtensions.PageEx\");\n    this.addInterface(\"Tridion.ContentManager.Page\", [id]);\n    var p = this.properties;\n    p.versionNumberString = undefined;\n    p.modifiedBy = undefined;\n    p.lockedBy = undefined;\n    p.approvalStatus = undefined;\n    p.publishDate = undefined;\n    p.previousVersion = undefined;\n    p.previousApprovalStatus = undefined;\n    p.customModifiedDate = undefined;\n    p.initialModifierUserName = undefined;\n};\n\n/*\n* sends the list xml string for the item \n*/\nMyCompany.Tridion.RTFExtensions.PageEx.prototype.getListItemXmlAttributes = function (customAttributes) {\n    var attribs = {};\n    $extUtils.getListItemXmlAttributes(customAttributes,this, attribs);\n    return this.callBase(\"Tridion.ContentManager.Page\", \"getListItemXmlAttributes\", [attribs]);\n};\n\n\n/*\n* This method gets called when an item is opened from list view. node parameter has the information\n* displayed in the list view as attributes. We are getting cutom data extender column information \n* from this xml node and storing it in this class member for returning it from getListItemXmlAttributes method\n*/\nMyCompany.Tridion.RTFExtensions.PageEx.prototype.setDataFromList = function (node, parentId, timeStamp) {\n    $extUtils.setDataFromList(node,parentId,timeStamp,this);\n    this.callBase(\"Tridion.ContentManager.Page\", \"setDataFromList\", [node, parentId, timeStamp]);\n};\n\n/* \n* Gets item icon \n*/\nMyCompany.Tridion.RTFExtensions.PageEx.prototype.getItemIcon = function () {\n    var icon = this.callBase(this.defaultBase, \"getItemIcon\");\n    return icon;\n};\n</code></pre>\n\n<p>Code from utils.js:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// reloads the list view for the given id (used in list view data refresh when JS cant get the required data without reloading)\nMyCompany.Tridion.RTFExtensions.Utilities.reloadListView = function (listTcmId) {\n    var registry = $models.getListsRegistry();\n    for(var key in registry)\n    {\n        var entry = $models.getItem(registry[key]);\n        if (entry &amp;&amp; entry.getParentId() == listTcmId)\n        {\n           entry.unload();\n           return true;\n        }\n    }\n    return false;\n}\n\n/*\n* This method gets called when an item is opened from list view. node parameter has the information\n* displayed in the list view as attributes. We are getting cutom data extender column information \n* from this xml node and storing it in this class member for returning it from getListItemXmlAttributes method\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.setDataFromList = function (node, parentId, timeStamp, itemClicked) {\n    var p = itemClicked.properties;\n\n    if (!timeStamp || timeStamp &gt; itemClicked.getTimeStamp()) {\n        var tmp;\n        if (tmp = node.getAttribute('Version')) {\n            p.versionNumberString = tmp;\n            p.previousVersion = tmp;\n        }\n        if (tmp = node.getAttribute('ModifiedBy')) {\n            p.modifiedBy = tmp;\n            p.initialModifierUserName = tmp;\n        }\n        if (tmp = node.getAttribute('LockedBy')) {\n            p.lockedBy = tmp;\n        }\n        if (tmp = node.getAttribute('ApprovalStatus')) {\n            p.approvalStatus = tmp;\n            p.previousApprovalStatus = tmp;\n        }\n        if (tmp = node.getAttribute('PublishDate')) {\n            p.publishDate = tmp;\n        }\n        if (p.customModifiedDate === undefined) {\n            if (tmp = node.getAttribute('Modified')) {\n                p.customModifiedDate = tmp;\n            }\n        }\n    }\n}\n\n/*\n* sends the list xml string for the item in the list view.\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListItemXmlAttributes = function (customAttributes, listViewObject,attribs) {\n    var p = listViewObject.properties;\n    $extUtils.getListViewItemLockedByName(p,listViewObject);\n\n    if (customAttributes) {\n        for (var attr in customAttributes) {\n            attribs[attr] = customAttributes[attr];\n        }\n    }\n\n    attribs[\"Version\"] = $extUtils.getListViewItemUpdatedVersion(p,listViewObject);\n    //modified name has to come after the version update...\n    $extUtils.getListViewItemModifiedByName(p,listViewObject);\n    attribs[\"ApprovalStatus\"] = $extUtils.getListViewItemApprovalStatus(p,listViewObject);  \n    attribs[\"PublishDate\"] = $extUtils.getListViewItemPublishDate(p,listViewObject);\n\n    //set default values\n    if (p.versionNumberString != undefined) {\n        var iResult = p.versionNumberString.localeCompare(p.previousVersion);\n        if (p.previousVersion === undefined || iResult &gt; 0) {\n            //it's been updated!\n            p.previousVersion = p.versionNumberString;\n            p.previousApprovalStatus = p.approvalStatus;\n\n            //also need to update modified date\n            p.customModifiedDate = $extUtils.getListViewItemUpdatedModifiedDate(p,listViewObject);\n            p.initialModifierUserName = p.modifiedBy;\n        }\n\n    }\n    attribs[\"Modified\"] = p.customModifiedDate;\n    attribs[\"LockedBy\"] = p.lockedBy;\n    attribs[\"ModifiedBy\"] = p.modifiedBy;\n\n};\n\n/*\n* This method sets the property of the Revisor owner on the item in the list view. however, if it's not the current user\n* we have no way to look that up in JS so we have to reload the list view.\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemModifiedByName = function (p,listViewObject) {\n    var p = listViewObject.properties;\n    var xmlDoc = listViewObject.getXmlDocument();\n    if (xmlDoc) {\n        //modifier should always exist...\n        var modifierId = $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:VersionInfo/tcm:Revisor/@xlink:title\");\n        if (modifierId != undefined) {\n            var u = Tridion.UI.UserSettings.getJsonUserSettings(true);\n            if (modifierId == u.User.Data.Name) {\n                var strDescription = u.User.Data.Description.split('(');\n                p.modifiedBy = strDescription[0];\n                return;\n            } else {\n                //we're in trouble...\n                //let's hope it's the initial modifier we had...\n                if (p.previousVersion == p.versionNumberString) {\n                    //whew...\n                    p.modifiedBy = p.initialModifierUserName;\n                    return;\n                }\n\n                if (!$extUtils.reloadListView(listViewObject.getOrganizationalItemId())) {\n                    //hrm. something failed on the reload? not sure what else to do:\n                    p.modifiedBy = modifierId;\n                }\n            }\n        } else {\n            //shouldn't ever happen.\n            p.modifiedBy = \"\";\n            return;\n        }\n    }\n\n};\n\n/*\n* This method sets the property of the lock owner on the item in the list view. however, if it's not the current user\n* we have no way to look that up in JS so we have to reload the list view.\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemLockedByName = function (p,listViewObject) {\n    var xmlDoc = listViewObject.getXmlDocument();\n    if (xmlDoc) {\n        //this will be user id. no sense getting tcmid... can't look it up without async call\n        var lockedUserId = $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:VersionInfo/tcm:ItemLock/tcm:User/@xlink:title\");\n        if (lockedUserId != undefined) {\n            //see if it's the current user. most likely...\n            var u = Tridion.UI.UserSettings.getJsonUserSettings(true);\n            if (lockedUserId == u.User.Data.Name) {\n                var strDescription = u.User.Data.Description.split('(');\n                p.lockedBy = strDescription[0];\n                return;\n            }\n            //it's not the current user. no synch way to do what we want, plus the JS call doesn't get the workflow version anyway. refresh the parent view\n            if (!$extUtils.reloadListView(listViewObject.getOrganizationalItemId())) {\n                //hrm. something failed on the reload? not sure what else to do:\n                p.lockedBy = lockedUserId;\n            }\n        } else {\n            //clear it out since there's no lock owner\n            p.lockedBy = \"\";\n        }\n    }\n};\n\n/*\n* Gets the ApprovalStatus from the item\n* This makes absolutely no sense... but for some reason the approval status gets wiped out when this method\n* enters. so I had to use a \"previous approval status\" variable to maintain it. no idea why. I don't see anything\n* else that should be touching it... but clearly something clears it out.\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemApprovalStatus = function (p,listViewObject) {\n    //check if the item has actually been modified.\n    if (p.versionNumberString != p.previousVersion) {\n        var xmlDoc = listViewObject.getXmlDocument();\n        if (xmlDoc) {\n            p.approvalStatus = $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:Data/tcm:ApprovalStatus/@xlink:title\");\n        }\n    } else {\n        p.approvalStatus = p.previousApprovalStatus;\n    }\n    if (p.approvalStatus === undefined || p.approvalStatus.toUpperCase() == 'UNAPPROVED') {\n        var foo = p.approvalStatus;\n        p.approvalStatus = 'WIP';\n    }\n    return p.approvalStatus;\n};\n\n\n/*\n* Gets the PublishDate from the item list view\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemPublishDate = function (p,listViewObject) {\n    //modification won't alter publish date.\n    var p = listViewObject.properties;\n    return p.publishDate;\n};\n\n\n/*\n*   get the modified date for the workflow version, overwrite OOB since that uses last major version\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemUpdatedModifiedDate = function (p,listViewObject) {\n    var xmlDoc = listViewObject.getXmlDocument();\n    var modDate = $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:VersionInfo/tcm:RevisionDate\");\n    return modDate;\n}\n\n\n/*\n* Gets the updated Version information from the item\n*/\nMyCompany.Tridion.RTFExtensions.Utilities.getListViewItemUpdatedVersion = function (p,listViewObject) {\n    var p = listViewObject.properties;\n    var xmlDoc = listViewObject.getXmlDocument();\n    var newVersionString = undefined;\n    if (xmlDoc) {\n        newVersionString = String.format(\"{0}.{1}\", $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:VersionInfo/tcm:Version\"), $xml.getInnerText(xmlDoc, \"/tcm:*/tcm:Info/tcm:VersionInfo/tcm:Revision\"));\n    }\n    if (newVersionString != undefined) {\n        //want to ensure we're getting a LATER version than we had (because it will try to load the non-workflow version afterwards...\n        var iResult = newVersionString.localeCompare(p.previousVersion);\n        if (p.previousVersion === undefined || iResult &gt; 0) {\n            p.versionNumberString = newVersionString;\n        } else {\n            p.versionNumberString = p.previousVersion;\n        }\n    } else {\n        p.versionNumberString = p.previousVersion;\n    }\n    return p.versionNumberString;\n};\n\n\n\nfunction launchPopup(winURL, winName, winFeatures, winObj) {\n    // this will hold our opened window\n    var theWin;\n    // first check to see if the window already exists\n    if (winObj != null) {\n        // the window has already been created, but did the user close it?\n        // if so, then reopen it. Otherwise make it the active window.\n        if (!winObj.closed) {\n            winObj.focus();\n            return winObj;\n        }\n        // otherwise fall through to the code below to re-open the window\n    }\n    // if we get here, then the window hasn't been created yet, or it\n    // was closed by the user.\n    theWin = window.open(winURL, winName, winFeatures);\n    return theWin;\n}\n\nvar $extUtils = MyCompany.Tridion.RTFExtensions.Utilities;\n</code></pre>\n    ","a":"\n<blockquote>\n  <p>[Exception... \"Component returned failure code: 0x80004002\n  (NS_NOINTERFACE) [nsIWebProgress.DOMWindow]\"</p>\n</blockquote>\n\n<p>This means that there was no window assigned to the <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIWebProgress\" rel=\"nofollow\">nsIWebProgress</a> object.  So it has nowhere to display data.</p>\n\n<blockquote>\n  <p>nsresult: \"0x80004002 (NS_NOINTERFACE)\" location: \"JS frame ::\n  chrome://browser/content/tabbrowser.xml :: :: line 545\" data: no]</p>\n</blockquote>\n\n<p>This is telling you what file is associated with that error.  and what line it faulted on.</p>\n\n<p><strong><em>But the real key is the NS_NOINTERFACE error.  Which means the interface has not been registered.</em></strong></p>\n\n<p>You are using <code>Type.enableInterface()</code>.  Is that a custom method you are declaring somewhere else ?   I don't see it.   You might want to change that to <code>.registerInterface()</code></p>\n\n<p>See this link <a href=\"https://msdn.microsoft.com/en-us/library/vstudio/bb397568%28v=vs.100%29.aspx\" rel=\"nofollow\">Type Class</a>  and  <a href=\"https://msdn.microsoft.com/en-us/library/vstudio/bb397478(v=vs.100).aspx\" rel=\"nofollow\">Type.registerInterface()</a></p>\n    "},{"t":"JavaScript closures vs. anonymous functions","l":"http://stackoverflow.com/questions/12930272/javascript-closures-vs-anonymous-functions","q":"\n\n<p>A friend of mine and me are currently discussing what is a closure in JS and what isn't. We just want to make sure we really understand it correctly.</p>\n\n<p>Let's take this example. We have a counting loop and want to print the counter variable on the console delayed. Therefore we use setTimeout and closures to capture the value of the counter variable to make sure that it will not print N times the value N.</p>\n\n<p>The wrong solution without closures or anything near to closures would be:</p>\n\n<pre><code>for(var i = 0; i &lt; 10; i++) {\n    setTimeout(function() {\n        console.log(i);\n    }, 1000);\n}\n</code></pre>\n\n<p>which will of course print 10 times the value of <code>i</code> after the loop, namely 10.</p>\n\n<p><strong>So his attempt was:</strong></p>\n\n<pre><code>for(var i = 0; i &lt; 10; i++) {\n    (function(){\n        var i2 = i;\n        setTimeout(function(){\n            console.log(i2);\n        }, 1000)\n    })();\n}\n</code></pre>\n\n<p>printing 0 to 9 as expected.</p>\n\n<p>I told him that he isn't using a <em>closure</em> to capture <code>i</code>, but he insists that he does. I proved that he doesn't use closures by putting the for loop body within another setTimeout (passing his anonymous function to setTimeout), printing 10 times 10 again. The same applies if I store his function in a var and execute it <em>after</em> the loop, also printing 10 times 10. So my argument is that <strong>he doesn't really <em>capture</em> the value of <code>i</code></strong>, making his version <em>not</em> a closure.</p>\n\n<p><strong>My attempt was:</strong></p>\n\n<pre><code>for(var i = 0; i &lt; 10; i++) {\n    setTimeout((function(i2){\n        return function() {\n            console.log(i2);\n        }\n    })(i), 1000);\n}\n</code></pre>\n\n<p>So I capture <code>i</code> (named <code>i2</code> within the closure), but now I <em>return</em> another function and pass this around. <strong>In my case, the function passed to setTimeout really captures <code>i</code>.</strong></p>\n\n<p><strong>Now who is using closures and who isn't?</strong></p>\n\n<p>Note that both solutions print 0 to 9 on the console delayed, so they solve the original problem, but we want to understand which of those two solutions <strong>uses closures</strong> to accomplish this.</p>\n    ","a":"\n<p><strong>Editor's Note:</strong> All functions in JavaScript are closures as explained in this <a href=\"http://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/\">post</a>. However we are only interested in identifying a subset of these functions which are <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Closures\">interesting</a> from a theoretical point of view. Henceforth any reference to the word <em>closure</em> will refer to this subset of functions unless otherwise stated.</p>\n\n<p>A simple explanation for closures:</p>\n\n<ol>\n<li>Take a function. Let's call it F.</li>\n<li>List all the variables of F.</li>\n<li>The variables may be of two types:\n<ol>\n<li>Local variables (bound variables)</li>\n<li>Non-local variables (free variables)</li>\n</ol></li>\n<li>If F has no free variables then it cannot be a closure.</li>\n<li>If F has any free variables (which are defined in <strong>a</strong> parent scope of F) then:\n<ol>\n<li>There must be only one parent scope of F to which <strong>a</strong> free variable is bound.</li>\n<li>If F is <strong>referenced</strong> from outside <strong>that</strong> parent scope, then it becomes a closure for <strong>that</strong> free variable.</li>\n<li><strong>That</strong> free variable is called an upvalue of the closure F.</li>\n</ol></li>\n</ol>\n\n<p>Now let's use this to figure out who uses closures and who doesn't (for the sake of explanation I have named the functions):</p>\n\n<p><strong>Case 1: Your Friend's Program</strong></p>\n\n<pre><code>for (var i = 0; i &lt; 10; i++) {\n    (function f() {\n        var i2 = i;\n        setTimeout(function g() {\n            console.log(i2);\n        }, 1000);\n    })();\n}\n</code></pre>\n\n<p>In the above program there are two functions: <code>f</code> and <code>g</code>. Let's see if they are closures:</p>\n\n<p>For <code>f</code>:</p>\n\n<ol>\n<li>List the variables:\n<ol>\n<li><code>i2</code> is a <strong>local</strong> variable.</li>\n<li><code>i</code> is a <strong>free</strong> variable.</li>\n<li><code>setTimeout</code> is a <strong>free</strong> variable.</li>\n<li><code>g</code> is a <strong>local</strong> variable.</li>\n<li><code>console</code> is a <strong>free</strong> variable.</li>\n</ol></li>\n<li>Find the parent scope to which each free variable is bound:\n<ol>\n<li><code>i</code> is <strong>bound</strong> to the global scope.</li>\n<li><code>setTimeout</code> is <strong>bound</strong> to the global scope.</li>\n<li><code>console</code> is <strong>bound</strong> to the global scope.</li>\n</ol></li>\n<li>In which scope is the function <strong>referenced</strong>? The <strong>global scope</strong>.\n<ol>\n<li>Hence <code>i</code> is not <strong>closed over</strong> by <code>f</code>.</li>\n<li>Hence <code>setTimeout</code> is not <strong>closed over</strong> by <code>f</code>.</li>\n<li>Hence <code>console</code> is not <strong>closed over</strong> by <code>f</code>.</li>\n</ol></li>\n</ol>\n\n<p>Thus the function <code>f</code> is not a closure.</p>\n\n<p>For <code>g</code>:</p>\n\n<ol>\n<li>List the variables:\n<ol>\n<li><code>console</code> is a <strong>free</strong> variable.</li>\n<li><code>i2</code> is a <strong>free</strong> variable.</li>\n</ol></li>\n<li>Find the parent scope to which each free variable is bound:\n<ol>\n<li><code>console</code> is <strong>bound</strong> to the global scope.</li>\n<li><code>i2</code> is <strong>bound</strong> to the scope of <code>f</code>.</li>\n</ol></li>\n<li>In which scope is the function <strong>referenced</strong>? The <strong>scope of <code>setTimeout</code></strong>.\n<ol>\n<li>Hence <code>console</code> is not <strong>closed over</strong> by <code>g</code>.</li>\n<li>Hence <code>i2</code> is <strong>closed over</strong> by <code>g</code>.</li>\n</ol></li>\n</ol>\n\n<p>Thus the function <code>g</code> is a closure for the free variable <code>i2</code> (which is an upvalue for <code>g</code>) <strong>when</strong> it's <strong>referenced</strong> from within <code>setTimeout</code>.</p>\n\n<p><em>Bad for you:</em> Your friend is using a closure. The inner function is a closure.</p>\n\n<p><strong>Case 2: Your Program</strong></p>\n\n<pre><code>for (var i = 0; i &lt; 10; i++) {\n    setTimeout((function f(i2) {\n        return function g() {\n            console.log(i2);\n        };\n    })(i), 1000);\n}\n</code></pre>\n\n<p>In the above program there are two functions: <code>f</code> and <code>g</code>. Let's see if they are closures:</p>\n\n<p>For <code>f</code>:</p>\n\n<ol>\n<li>List the variables:\n<ol>\n<li><code>i2</code> is a <strong>local</strong> variable.</li>\n<li><code>g</code> is a <strong>local</strong> variable.</li>\n<li><code>console</code> is a <strong>free</strong> variable.</li>\n</ol></li>\n<li>Find the parent scope to which each free variable is bound:\n<ol>\n<li><code>console</code> is <strong>bound</strong> to the global scope.</li>\n</ol></li>\n<li>In which scope is the function <strong>referenced</strong>? The <strong>global scope</strong>.\n<ol>\n<li>Hence <code>console</code> is not <strong>closed over</strong> by <code>f</code>.</li>\n</ol></li>\n</ol>\n\n<p>Thus the function <code>f</code> is not a closure.</p>\n\n<p>For <code>g</code>:</p>\n\n<ol>\n<li>List the variables:\n<ol>\n<li><code>console</code> is a <strong>free</strong> variable.</li>\n<li><code>i2</code> is a <strong>free</strong> variable.</li>\n</ol></li>\n<li>Find the parent scope to which each free variable is bound:\n<ol>\n<li><code>console</code> is <strong>bound</strong> to the global scope.</li>\n<li><code>i2</code> is <strong>bound</strong> to the scope of <code>f</code>.</li>\n</ol></li>\n<li>In which scope is the function <strong>referenced</strong>? The <strong>scope of <code>setTimeout</code></strong>.\n<ol>\n<li>Hence <code>console</code> is not <strong>closed over</strong> by <code>g</code>.</li>\n<li>Hence <code>i2</code> is <strong>closed over</strong> by <code>g</code>.</li>\n</ol></li>\n</ol>\n\n<p>Thus the function <code>g</code> is a closure for the free variable <code>i2</code> (which is an upvalue for <code>g</code>) <strong>when</strong> it's <strong>referenced</strong> from within <code>setTimeout</code>.</p>\n\n<p><em>Good for you:</em> You are using a closure. The inner function is a closure.</p>\n\n<p>So both you and your friend are using closures. Stop arguing. I hope I cleared the concept of closures and how to identify them for the both of you.</p>\n\n<p><strong>Edit:</strong> A simple explanation as to why are all functions closures (credits @Peter):</p>\n\n<p>First let's consider the following program (it's the <a href=\"http://jsfiddle.net/KyQKw/\">control</a>):</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>lexicalScope();\n\nfunction lexicalScope() {\n    var message = \"This is the control. You should be able to see this message being alerted.\";\n\n    regularFunction();\n\n    function regularFunction() {\n        alert(eval(\"message\"));\n    }\n}</code></pre>\n</div>\n</div>\n<p></p>\n\n<ol>\n<li>We know that both <code>lexicalScope</code> and <code>regularFunction</code> aren't closures <strong>from the above definition</strong>.</li>\n<li>When we execute the program <strong>we expect</strong> <code>message</code> to be alerted <strong>because</strong> <code>regularFunction</code> is not a closure (i.e. it has access to <strong>all</strong> the variables in it's parent scope - including <code>message</code>).</li>\n<li>When we execute the program <strong>we observe</strong> that <code>message</code> is indeed alerted.</li>\n</ol>\n\n<p>Next let's consider the following program (it's the <a href=\"http://jsfiddle.net/KyQKw/1/\">alternative</a>):</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var closureFunction = lexicalScope();\n\nclosureFunction();\n\nfunction lexicalScope() {\n    var message = \"This is the alternative. If you see this message being alerted then in means that every function in JavaScript is a closure.\";\n\n    return function closureFunction() {\n        alert(eval(\"message\"));\n    };\n}</code></pre>\n</div>\n</div>\n<p></p>\n\n<ol>\n<li>We know that only <code>closureFunction</code> is a closure <strong>from the above definition</strong>.</li>\n<li>When we execute the program <strong>we expect</strong> <code>message</code> not to be alerted <strong>because</strong> <code>closureFunction</code> is a closure (i.e. it only has access to all it's <strong>non-local variables</strong> at <strong>the time the function is created</strong> (<a href=\"http://stackoverflow.com/a/12930799/783743\" title=\"scope - JavaScript closures vs. anonymous functions - Stack Overflow\">see this answer</a>) - this does not include <code>message</code>).</li>\n<li>When we execute the program <strong>we observe</strong> that <code>message</code> is actually being alerted.</li>\n</ol>\n\n<p>What do we infer from this?</p>\n\n<ol>\n<li>JavaScript interpreters do not treat closures differently from the way they treat other functions.</li>\n<li>Every function carries it's <a href=\"http://dmitrysoshnikov.com/ecmascript/chapter-4-scope-chain/\">scope chain</a> along with it. Closures don't have a <strong>separate</strong> referencing environment.</li>\n<li>A closure is just like every other function. We just call them closures when they are <strong>referenced</strong> in a scope <strong>outside</strong> the scope to which they belong <strong>because</strong> this is an interesting case.</li>\n</ol>\n    "},{"t":"ExecJS and could not find a JavaScript runtime","l":"http://stackoverflow.com/questions/6282307/execjs-and-could-not-find-a-javascript-runtime","q":"\n\n<p>I'm trying to use the <a href=\"https://github.com/RailsApps/rails3-mongoid-devise\">Mongoid / Devise Rails 3.1 template</a> (<em><a href=\"http://mongoid.org/\">Mongoid</a></em> and <em><a href=\"https://github.com/plataformatec/devise\">Devise</a></em>), and I keep getting an error stating <a href=\"http://rubygems.org/gems/execjs\">ExecJS</a> cannot find a JavaScript runtime.  Fair enough when I didn't have any installed, but I've tried installing <a href=\"http://en.wikipedia.org/wiki/Nodejs\">Node.js</a>, <a href=\"https://github.com/nu7hatch/mustang\">Mustang</a> and the <a href=\"https://github.com/cowboyd/therubyracer\">Ruby Racer</a>, but nothing is working. </p>\n\n<p>I could not find a JavaScript runtime. See <a href=\"https://github.com/sstephenson/execjs\">sstephenson/ExecJS</a> (GitHub) for a list of available runtimes (<code>ExecJS::RuntimeUnavailable</code>).</p>\n\n<p>What do I need to do to get this working?</p>\n    ","a":"\n<h2>Ubuntu Users</h2>\n\n<p>I'm on Ubuntu 11.04 and had similar issues. <a href=\"https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager\">Installing Node.js</a> fixed it.</p>\n\n<p>As of Ubuntu 13.04 x64 you only need to run:</p>\n\n<pre><code>sudo apt-get install nodejs\n</code></pre>\n\n<p>This will solve the problem.</p>\n\n<hr>\n\n<h2>CentOS/RedHat Users</h2>\n\n<pre><code>sudo yum install nodejs\n</code></pre>\n    "},{"t":"What does “javascript:void(0)” mean?","l":"http://stackoverflow.com/questions/1291942/what-does-javascriptvoid0-mean","q":"\n\n<pre><code>&lt;a href=\"javascript:void(0)\" id=\"loginlink\"&gt;login&lt;/a&gt;\n</code></pre>\n\n<p>I've seen such <code>href</code>s many times, but I don't know what exactly that means.</p>\n    ","a":"\n<blockquote>\n  <p>The <code>void</code> operator evaluates the given\n  expression and then returns <code>undefined</code>.</p>\n  \n  <p>The <code>void</code> operator is often used merely\n  to obtain the <code>undefined</code> primitive\n  value, usually using “<code>void(0)</code>” (which\n  is equivalent to “<code>void 0</code>”). In these\n  cases, the global variable <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/undefined\"><code>undefined</code></a>\n  can be used instead (assuming it has\n  not been assigned to a non-default\n  value).</p>\n</blockquote>\n\n<p>An explanation is provided here: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/void\"><code>void</code> operator</a>.</p>\n\n<p>The reason you’d want to do this with the <code>href</code> of a link is that normally, a <code>javascript:</code> URL will redirect the browser to a plain text version of the result of evaluating that JavaScript. But if the result is <code>undefined</code>, then the browser stays on the same page. <code>void(0)</code> is just the smallest script possible that evaluates as <code>undefined</code>.</p>\n    "},{"t":"JavaScript check if variable exists (is defined/initialized) - Which method is better?","l":"http://stackoverflow.com/questions/5113374/javascript-check-if-variable-exists-is-defined-initialized-which-method-is-b","q":"\n\n<p>Which method of checking if a variable has been initialized is better/correct?\n(Assuming the variable could hold anything (string, int, object, function, etc.))</p>\n\n<pre><code>if (elem) { // or !elem\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (typeof(elem) !== 'undefined') {\n</code></pre>\n\n<p>or</p>\n\n<pre><code>if (elem != null) {\n</code></pre>\n    ","a":"\n<p>The <code>typeof</code> operator will check if the variable is really undefined.</p>\n\n<pre><code>if (typeof variable === 'undefined') {\n    // variable is undefined\n}\n</code></pre>\n\n<p>The <code>typeof</code> operator, unlike the other operators, doesn't throw a <em>ReferenceError</em> exception when used with an undeclared variable.</p>\n\n<p>For more info on using strict comparison, see: <a href=\"http://stackoverflow.com/q/359494/584192\">JavaScript === vs == : Does it matter which \"equal\" operator I use?</a> .</p>\n    "},{"t":"Why does [1,2] + [3,4] = “1,23,4” in JavaScript?","l":"http://stackoverflow.com/questions/7124884/why-does-1-2-3-4-1-23-4-in-javascript","q":"\n\n<p>I wanted to add the elements of an array into another, so I tried this simple sentence in our beloved Firebug:</p>\n\n<pre><code>[1,2] + [3,4]\n</code></pre>\n\n<p>It responded with:</p>\n\n<pre><code>\"1,23,4\"\n</code></pre>\n\n<p>What is going on?</p>\n    ","a":"\n<p>The <code>+</code> operator <strong>is not defined for arrays</strong>. </p>\n\n<p>What happens is that Javascript <strong>converts arrays into strings</strong> and concatenates those.</p>\n\n<p>&nbsp;</p>\n\n<h2>Update</h2>\n\n<p>Since this question and consequently my answer is getting a lot of attention I felt that in addition to the insightful stuff posted by <a href=\"http://stackoverflow.com/questions/7124884/why-does-1-2-3-4-1-23-4-in-javascript/7124918#7124918\">Jeremy Banks</a> it would be useful to have an <strong>overview</strong> about how the <code>+</code> operator behaves in general.</p>\n\n<p>So, here it goes.</p>\n\n<p>Excluding E4X and implementation-specific stuff, JavaScript has <strong>6</strong> built-in <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special/typeof\">data types</a>: </p>\n\n<ol>\n<li><code>undefined</code></li>\n<li><code>boolean</code></li>\n<li><code>number</code></li>\n<li><code>string</code></li>\n<li><code>function</code></li>\n<li><code>object</code></li>\n</ol>\n\n<p>Note that <strong>neither</strong> <code>null</code> <strong>nor</strong> <code>[]</code> is a separate type - both return <code>object</code> when fed to <code>typeof</code>. However <code>+</code> works differently in either case.</p>\n\n<p>That's right - JavaScript has <strong>no primitive arrays</strong> as such; only instances of a class called <code>Array</code> with some syntactic sugar to ease the pain.</p>\n\n<p>Adding more to the confusion, wrapper entities such as <code>new Number(5)</code>, <code>new Boolean(true)</code> and <code>new String(\"abc\")</code> are all of <code>object</code> type, not numbers, booleans or strings as one might expect. Nevertheless for arithmetic operators <code>Number</code> and <code>Boolean</code> behave as numbers.</p>\n\n<p>Easy, huh? With all that out of the way, we can move on to the overview itself.</p>\n\n<p><strong>Different result types of <code>+</code> by operand types</strong></p>\n\n<pre><code>-------------------------------------------------------------------------------------------\n            | undefined | boolean | number | string | function | object | null   | array  | \n-------------------------------------------------------------------------------------------\n\nundefined   | number    | number  | number | string | string   | string | number | string | \n\nboolean     | number    | number  | number | string | string   | string | number | string | \n\nnumber      | number    | number  | number | string | string   | string | number | string | \n\nstring      | string    | string  | string | string | string   | string | string | string | \n\nfunction    | string    | string  | string | string | string   | string | string | string | \n\nobject      | string    | string  | string | string | string   | string | string | string | \n\nnull        | number    | number  | number | string | string   | string | number | string | \n\narray       | string    | string  | string | string | string   | string | string | string | \n\n-------------------------------------------------------------------------------------------\n</code></pre>\n\n<p>* <sup>this applies to Chrome 13, Firefox 6, Opera 11 and IE9. Checking other browsers and versions is left as an exercise for the reader.</sup></p>\n\n<p><strong>Note:</strong> As pointed out by <a href=\"http://stackoverflow.com/users/5445/cms\">CMS</a>, for certain cases of objects such as <code>Number</code>, <code>Boolean</code> and custom ones the <code>+</code> operator doesn't necessarily produce a string result. It can vary depending on the implementation of object to primitive conversion. For example <code>var o = { valueOf:function () { return 4; } };</code> evaluating <code>o + 2;</code> produces <code>6</code>, a <code>number</code>, evaluating <code>o + '2'</code> produces <code>'42'</code>, a <code>string</code>.</p>\n\n<p>To see how the overview table was generated visit <a href=\"http://jsfiddle.net/4EjXd/\">http://jsfiddle.net/4EjXd/</a></p>\n    "},{"t":"How to “properly” create a custom object in JavaScript?","l":"http://stackoverflow.com/questions/1595611/how-to-properly-create-a-custom-object-in-javascript","q":"\n\n<p>I'm still trying to understand JavaScript, and I wonder about what the best way is to create an object that has properties and methods.</p>\n\n<p>I have seen examples where the person used \"var self = this\" and then uses \"self.\" in all functions to make sure the scope is always correct.</p>\n\n<p>Then I have seen examples of using .prototype to add properties, while others do it inline.</p>\n\n<p>Can someone give me a proper example of a JavaScript object with some Properties and Methods?</p>\n\n<p>Thanks!</p>\n    ","a":"\n<p>There are two models for implementing classes and instances in JavaScript: the prototyping way, and the closure way. Both have advantages and drawbacks, and there are plenty of extended variations. Many programmers and libraries have different approaches and class-handling utility functions to paper over some of the uglier parts of the language.</p>\n\n<p>The result is that in mixed company you will have a mishmash of metaclasses, all behaving slightly differently. What's worse, most JavaScript tutorial material is terrible and serves up some kind of in-between compromise to cover all bases, leaving you very confused. (Probably the author is also confused. JavaScript's object model is very different to most programming languages, and in many places straight-up badly designed.)</p>\n\n<p>Let's start with <strong>the prototype way</strong>. This is the most JavaScript-native you can get: there is a minimum of overhead code and instanceof will work with instances of this kind of object.</p>\n\n<pre><code>function Shape(x, y) {\n    this.x= x;\n    this.y= y;\n}\n</code></pre>\n\n<p>We can add methods to the instance created by <code>new Shape</code> by writing them to the <code>prototype</code> lookup of this constructor function:</p>\n\n<pre><code>Shape.prototype.toString= function() {\n    return 'Shape at '+this.x+', '+this.y;\n};\n</code></pre>\n\n<p>Now to subclass it, in as much as you can call what JavaScript does subclassing. We do that by completely replacing that weird magic <code>prototype</code> property:</p>\n\n<pre><code>function Circle(x, y, r) {\n    Shape.call(this, x, y); // invoke the base class's constructor function to take co-ords\n    this.r= r;\n}\nCircle.prototype= new Shape();\n</code></pre>\n\n<p>before adding methods to it:</p>\n\n<pre><code>Circle.prototype.toString= function() {\n    return 'Circular '+Shape.prototype.toString.call(this)+' with radius '+this.r;\n}\n</code></pre>\n\n<p>This example will work and you will see code like it in many tutorials. But man, that <code>new Shape()</code> is ugly: we're instantiating the base class even though no actual Shape is to be created. It happens to work in this simple case because JavaScript is so sloppy: it allows zero arguments to be passed in, in which case <code>x</code> and <code>y</code> become <code>undefined</code> and are assigned to the prototype's <code>this.x</code> and <code>this.y</code>. If the constructor function were doing anything more complicated, it would fall flat on its face.</p>\n\n<p>So what we need to do is find a way to create a prototype object which contains the methods and other members we want at a class level, without calling the base class's constructor function. To do this we are going to have to start writing helper code. This is the simplest approach I know of:</p>\n\n<pre><code>function subclassOf(base) {\n    _subclassOf.prototype= base.prototype;\n    return new _subclassOf();\n}\nfunction _subclassOf() {};\n</code></pre>\n\n<p>This transfers the base class's members in its prototype to a new constructor function which does nothing, then uses that constructor. Now we can write simply:</p>\n\n<pre><code>function Circle(x, y, r) {\n    Shape.call(this, x, y);\n    this.r= r;\n}\nCircle.prototype= subclassOf(Shape);\n</code></pre>\n\n<p>instead of the <code>new Shape()</code> wrongness. We now have an acceptable set of primitives to built classes.</p>\n\n<p>There are a few refinements and extensions we can consider under this model. For example here is a syntactical-sugar version:</p>\n\n<pre><code>Function.prototype.subclass= function(base) {\n    var c= Function.prototype.subclass.nonconstructor;\n    c.prototype= base.prototype;\n    this.prototype= new c();\n};\nFunction.prototype.subclass.nonconstructor= function() {};\n\n...\n\nfunction Circle(x, y, r) {\n    Shape.call(this, x, y);\n    this.r= r;\n}\nCircle.subclass(Shape);\n</code></pre>\n\n<p>Either version has the drawback that the constructor function cannot be inherited, as it is in many languages. So even if your subclass adds nothing to the construction process, it must remember to call the base constructor with whatever arguments the base wanted. This can be slightly automated using <code>apply</code>, but still you have to write out:</p>\n\n<pre><code>function Point() {\n    Shape.apply(this, arguments);\n}\nPoint.subclass(Shape);\n</code></pre>\n\n<p>So a common extension is to break out the initialisation stuff into its own function rather than the constructor itself. This function can then inherit from the base just fine:</p>\n\n<pre><code>function Shape() { this._init.apply(this, arguments); }\nShape.prototype._init= function(x, y) {\n    this.x= x;\n    this.y= y;\n};\n\nfunction Point() { this._init.apply(this, arguments); }\nPoint.subclass(Shape);\n// no need to write new initialiser for Point!\n</code></pre>\n\n<p>Now we've just got the same constructor function boilerplate for each class. Maybe we can move that out into its own helper function so we don't have to keep typing it, for example instead of <code>Function.prototype.subclass</code>, turning it round and letting the base class's Function spit out subclasses:</p>\n\n<pre><code>Function.prototype.makeSubclass= function() {\n    function Class() {\n        if ('_init' in this)\n            this._init.apply(this, arguments);\n    }\n    Function.prototype.makeSubclass.nonconstructor.prototype= this.prototype;\n    Class.prototype= new Function.prototype.makeSubclass.nonconstructor();\n    return Class;\n};\nFunction.prototype.makeSubclass.nonconstructor= function() {};\n\n...\n\nShape= Object.makeSubclass();\nShape.prototype._init= function(x, y) {\n    this.x= x;\n    this.y= y;\n};\n\nPoint= Shape.makeSubclass();\n\nCircle= Shape.makeSubclass();\nCircle.prototype._init= function(x, y, r) {\n    Shape.prototype._init.call(this, x, y);\n    this.r= r;\n};\n</code></pre>\n\n<p>...which is starting to look a bit more like other languages, albeit with slightly clumsier syntax. You can sprinkle in a few extra features if you like. Maybe you want <code>makeSubclass</code> to take and remember a class name and provide a default <code>toString</code> using it. Maybe you want to make the constructor detect when it has accidentally been called without the <code>new</code> operator (which would otherwise often result in very annoying debugging):</p>\n\n<pre><code>Function.prototype.makeSubclass= function() {\n    function Class() {\n        if (!(this instanceof Class))\n            throw('Constructor called without \"new\"');\n        ...\n</code></pre>\n\n<p>Maybe you want to pass in all the new members and have <code>makeSubclass</code> add them to the prototype, to save you having to write <code>Class.prototype...</code> quite so much. A lot of class systems do that, eg:</p>\n\n<pre><code>Circle= Shape.makeSubclass({\n    _init: function(x, y, z) {\n        Shape.prototype._init.call(this, x, y);\n        this.r= r;\n    },\n    ...\n});\n</code></pre>\n\n<p>There are a lot of potential features you might consider desirable in an object system and no-one really agrees on one particular formula.</p>\n\n<hr>\n\n<p>The <strong>closure way</strong>, then. This avoids the problems of JavaScript's prototype-based inheritance, by not using inheritance at all. Instead:</p>\n\n<pre><code>function Shape(x, y) {\n    var that= this;\n\n    this.x= x;\n    this.y= y;\n\n    this.toString= function() {\n        return 'Shape at '+that.x+', '+that.y;\n    };\n}\n\nfunction Circle(x, y, r) {\n    var that= this;\n\n    Shape.call(this, x, y);\n    this.r= r;\n\n    var _baseToString= this.toString;\n    this.toString= function() {\n        return 'Circular '+_baseToString(that)+' with radius '+that.r;\n    };\n};\n\nvar mycircle= new Circle();\n</code></pre>\n\n<p>Now every single instance of <code>Shape</code> will have its own copy of the <code>toString</code> method (and any other methods or other class members we add).</p>\n\n<p>The bad thing about every instance having its own copy of each class member is that it's less efficient. If you are dealing with large numbers of subclassed instances, prototypical inheritance may serve you better. Also calling a method of the base class is slightly annoying as you can see: we have to remember what the method was before the subclass constructor overwrote it, or it gets lost.</p>\n\n<p>[Also because there is no inheritance here, the <code>instanceof</code> operator won't work; you would have to provide your own mechanism for class-sniffing if you need it. Whilst you <em>could</em> fiddle the prototype objects in a similar way as with prototype inheritance, it's a bit tricky and not really worth it just to get <code>instanceof</code> working.]</p>\n\n<p>The good thing about every instance having its own method is that the method may then be bound to the specific instance that owns it. This is useful because of JavaScript's weird way of binding <code>this</code> in method calls, which has the upshot that if you detach a method from its owner:</p>\n\n<pre><code>var ts= mycircle.toString;\nalert(ts());\n</code></pre>\n\n<p>then <code>this</code> inside the method won't be the Circle instance as expected (it'll actually be the global <code>window</code> object, causing widespread debugging woe). In reality this typically happens when a method is taken and assigned to a <code>setTimeout</code>, <code>onclick</code> or <code>EventListener</code> in general.</p>\n\n<p>With the prototype way, you have to include a closure for every such assignment:</p>\n\n<pre><code>setTimeout(function() {\n    mycircle.move(1, 1);\n}, 1000);\n</code></pre>\n\n<p>or, in the future (or now if you hack Function.prototype) you can also do it with <code>function.bind()</code>:</p>\n\n<pre><code>setTimeout(mycircle.move.bind(mycircle, 1, 1), 1000);\n</code></pre>\n\n<p>if your instances are done the closure way, the binding is done for free by the closure over the instance variable (usually called <code>that</code> or <code>self</code>, though personally I would advise against the latter as <code>self</code> already has another, different meaning in JavaScript). You don't get the arguments <code>1, 1</code> in the above snippet for free though, so you would still need another closure or a <code>bind()</code> if you need to do that.</p>\n\n<p>There are lots of variants on the closure method too. You may prefer to omit <code>this</code> completely, creating a new <code>that</code> and returning it instead of using the <code>new</code> operator:</p>\n\n<pre><code>function Shape(x, y) {\n    var that= {};\n\n    that.x= x;\n    that.y= y;\n\n    that.toString= function() {\n        return 'Shape at '+that.x+', '+that.y;\n    };\n\n    return that;\n}\n\nfunction Circle(x, y, r) {\n    var that= Shape(x, y);\n\n    that.r= r;\n\n    var _baseToString= that.toString;\n    that.toString= function() {\n        return 'Circular '+_baseToString(that)+' with radius '+r;\n    };\n\n    return that;\n};\n\nvar mycircle= Circle(); // you can include `new` if you want but it won't do anything\n</code></pre>\n\n<p>Which way is “proper”? Both. Which is “best”? That depends on your situation. FWIW I tend towards prototyping for real JavaScript inheritance when I'm doing strongly OO stuff, and closures for simple throwaway page effects.</p>\n\n<p>But both ways are quite counter-intuitive to most programmers. Both have many potential messy variations. You will meet both (as well as many in-between and generally broken schemes) if you use other people's code/libraries. There is no one generally-accepted answer. Welcome to the wonderful world of JavaScript objects.</p>\n\n<p>[This has been part 94 of Why JavaScript Is Not My Favourite Programming Language.]</p>\n    "},{"t":"Detect iPad Mini in HTML5","l":"http://stackoverflow.com/questions/13248493/detect-ipad-mini-in-html5","q":"\n\n<p>Apple's iPad Mini is a smaller clone of the iPad 2 in more ways than we'd want. In JavaScript, the <code>window.navigator</code> object exposes the same values for the Mini and iPad 2. My tests so far to detect the difference have not lead to success.</p>\n\n<p>Why is this important? </p>\n\n<p>As the iPad Mini and iPad 2 screens are identical in pixels but vary in actual size (inches / centimeters), they vary in <a href=\"http://en.wikipedia.org/wiki/Pixel_density\">PPI</a> (pixels per inch).</p>\n\n<p>For web applications and games to offer a friendly user interface, certain elements are adjusted in size relative to a user's thumb or finger position, thus, we may want to scale certain images or buttons to provide for that better user experience.</p>\n\n<p>Things I have tried so far (including some pretty obvious approaches):</p>\n\n<ul>\n<li><code>window.devicepixelratio</code></li>\n<li>CSS element width in cm unit</li>\n<li>CSS media queries (such as <code>resolution</code> and <code>-webkit-device-pixel-ratio</code>)</li>\n<li>SVG drawings in similar units</li>\n<li>Doing all sorts of CSS webkit transforms for a set time and counting rendered frames with <code>requestAnimFrame</code> (I was hoping to detect a measurable difference)</li>\n</ul>\n\n<p>I'm fresh out of ideas. How about you?</p>\n\n<p><strong>Update</strong>\nThanks for the responses so far. I would like to comment on people voting against detecting iPad mini versus 2 as Apple has uhm, one guideline to rule them all. Okay, here's my reasoning why I feel it really makes all sense in the world to know if a person is using an iPad mini or a 2. And do with my reasoning what you like.</p>\n\n<p>The iPad mini is not only a much smaller device (9.7 inch versus 7.9 inch), but its form factor allows for a different usage. The iPad 2 is usually held with two hands when gaming unless you're <a href=\"http://en.wikipedia.org/wiki/Chuck_Norris_facts\">Chuck Norris</a>. The mini is smaller, but it is also much lighter and allows for gameplay where you hold it in one hand and use another to swipe or tap or whatnot. As a game designer and developer myself, I'd just like to <strong>know</strong> if it's a mini so I can choose to provide the player with a different controlscheme if I want (for instance after A/B testing with a group of players). </p>\n\n<p>Why? Well, it's a proven fact that the majority of users tend to go with the default settings, so leaving out a virtual thumbstick and putting some other tap-based control on the screen (just giving an arbitrary example here) when the player loads up the game for the first time is what I, and probably other game designers, would love to <strong>be able to</strong> do.</p>\n\n<p>So IMHO this goes beyond the thick fingers / guidelines discussions and is just something Apple and all other vendors ought to do: allow us to uniquely identify your device and <strong>think different</strong> instead of <strong>following</strong> guidelines.</p>\n    ","a":"\n<p>Play a stereo audio file and compare the accelerometer response when volume is high on the right channel and on the left channel - iPad2 had mono speakers whereas iPad Mini has built-in stereo speakers.</p>\n\n<p><em>Need your help to gather the data please visit <a href=\"http://www.intechrity365.com/collectIpadMini2.html\">this page</a> and help me collect data for this crazy idea. I don't have an iPad mini so I really need your help</em></p>\n    "},{"t":"Does it make sense to use Require.js with Angular.js? [closed]","l":"http://stackoverflow.com/questions/12529083/does-it-make-sense-to-use-require-js-with-angular-js","q":"\n\n<p>I'm a newbie to Angular.js and trying to understand how it's different from Backbone.js... We used to manage our packages dependencies with Require.js while using Backbone. Does it make sense to do the same with Angular.js?</p>\n    ","a":"\n<p>Yes it makes sense to use <code>angular.js</code> along with <code>require.js</code> wherein you can use <code>require.js</code> for modularizing components.<br></p>\n\n<p>I can point you to a <a href=\"https://github.com/tnajdek/angular-requirejs-seed\">seed project</a> which uses <code>both angular.js and require.js</code>. Hope that helps! </p>\n    "},{"t":"What is event bubbling and capturing?","l":"http://stackoverflow.com/questions/4616694/what-is-event-bubbling-and-capturing","q":"\n\n<p>What is the difference between event bubbling and capturing? Of the two, which is the faster and better model to use?</p>\n    ","a":"\n<p>Event bubbling and capturing are two ways of event propagation in the HTML DOM API, when an event occurs in an element inside another element, and both elements have registered a handle for that event. The event propagation mode determines in <a href=\"http://www.quirksmode.org/js/events_order.html\">which order the elements receive the event</a>.</p>\n\n<p>With bubbling, the event is first captured and handled by the innermost element and then propagated to outer elements.</p>\n\n<p>With capturing, the event is first captured by the outermost element and propagated to the inner elements.</p>\n\n<p>Capturing is also called \"trickling\", which helps remember the propagation order:</p>\n\n<blockquote>\n  <p>bubble up, trickle down</p>\n</blockquote>\n\n<p>Back in the old days, Netscape advocated event capturing, while Microsoft promoted event bubbling. Both are part of the W3C <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html\">Document Object Model Events</a> standard (2000).</p>\n\n<p>IE &lt; 9 uses <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener\">only event bubbling</a>, whereas IE9+ and all major browsers support both.</p>\n\n<p>We can use the <code>addEventListener(type, listener, useCapture)</code> to register event handlers for in either bubbling (default) or capturing mode. To use the capturing model pass the third argument as <code>true</code>.</p>\n\n<p><strong>Only the bubbling model is supported by all major browsers</strong>. If you are going to use event capturing anyway, you need to handle event bubbling for IE. This makes it event bubbling easier to use, in that it provides wider browser compatibility. On the other hand, the <a href=\"http://stackoverflow.com/a/10335117/1269037\">performance of event bubbling may be slightly lower</a> for complex DOMs.</p>\n\n<h2>Example</h2>\n\n<pre><code>&lt;div&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>In the structure above, assume that a click event occurred in the <code>li</code> element.</p>\n\n<p>In capturing model, the event will be handled by the <code>div</code> first (click event handlers in the <code>div</code> will fire first), then in the <code>ul</code>, then at the last in the target element, <code>li</code>.</p>\n\n<p>In the bubbling model, the opposite will happen: the event will be first handled by the <code>li</code>, then by the <code>ul</code>, and at last by the <code>div</code> element.</p>\n\n<p>For more information, see</p>\n\n<ul>\n<li><a href=\"http://www.quirksmode.org/js/events_order.html\">Event Order</a> on QuirksMode</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener\">addEventListener</a> on MDN</li>\n<li><a href=\"http://www.quirksmode.org/js/events_advanced.html\">Events Advanced</a> on QuirksMode</li>\n</ul>\n\n<p>In the example below, if you click on any of the highlighted elements, you can see that the capturing phase of the event propagation flow occurs first, followed by the bubbling phase.</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var divs = document.getElementsByTagName('div');\n\nfunction capture() {\n    log('capture: ' + this.firstChild.nodeValue.trim())\n}\n\nfunction bubble() {\n    log('bubble: ' + this.firstChild.nodeValue.trim())\n}\n\nfor (var i = 0; i &lt; divs.length; i++) {\n    divs[i].addEventListener('click', capture, true);\n    divs[i].addEventListener('click', bubble, false);\n}\n\nvar $log = $('#log');\n\nfunction log(msg) {\n    $log.append('&lt;p&gt;' + msg + '&lt;/p&gt;');\n}</code></pre>\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>div {\n    border: 1px solid red;\n    padding: 5px;\n    min-height: 10px;\n}</code></pre>\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;script src=\"http://code.jquery.com/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;div&gt;1\n    &lt;div&gt;2\n        &lt;div&gt;3\n            &lt;div&gt;4\n                &lt;div&gt;5&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;section id=\"log\"&gt;&lt;/section&gt;</code></pre>\n</div>\n</div>\n<p></p>\n\n<p><a href=\"http://jsfiddle.net/cwtuan/je1g3f29/16\">Another example at JSFiddle</a>.</p>\n    "},{"t":"How do I send a cross-domain POST request via JavaScript?","l":"http://stackoverflow.com/questions/298745/how-do-i-send-a-cross-domain-post-request-via-javascript","q":"\n\n<p>How do I send a cross-domain POST request via JavaScript?</p>\n\n<p>Notes - it shouldn't refresh the page, and I need to grab and parse the response afterward.</p>\n\n<p>Your help with some code examples will be much appreciated.</p>\n    ","a":"\n<p><strong>Update:</strong> Before continuing everyone should read and understand the <a href=\"http://www.html5rocks.com/en/tutorials/cors/\">html5rocks tutorial</a> on CORS. It is easy to understand and very clear.</p>\n\n<p>If you control the server being POSTed, simply leverage the \"Cross-Origin Resource Sharing standard\" by setting response headers on the server.  This answer is discussed in other answers in this thread, but not very clearly in my opinion.</p>\n\n<p>In short here is how you accomplish the cross domain POST from from.com/1.html to to.com/postHere.php (using PHP as an example). Note: you only need to set <code>Access-Control-Allow-Origin</code> for NON <code>OPTIONS</code> requests - this example always sets all headers for a smaller code snippet.</p>\n\n<ol>\n<li><p>In postHere.php setup the following:</p>\n\n<pre><code>switch ($_SERVER['HTTP_ORIGIN']) {\n    case 'http://from.com': case 'https://from.com':\n    header('Access-Control-Allow-Origin: '.$_SERVER['HTTP_ORIGIN']);\n    header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');\n    header('Access-Control-Max-Age: 1000');\n    header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');\n    break;\n}\n</code></pre>\n\n<p>This allows your script to make cross domain POST, GET and OPTIONS.  This will become clear as you continue to read...</p></li>\n<li><p>Setup your cross domain POST from JS (jQuery example):</p>\n\n<pre><code>$.ajax({\n    type: 'POST',\n    url: 'https://to.com/postHere.php',\n    crossDomain: true,\n    data: '{\"some\":\"json\"}',\n    dataType: 'json',\n    success: function(responseData, textStatus, jqXHR) {\n        var value = responseData.someKey;\n    },\n    error: function (responseData, textStatus, errorThrown) {\n        alert('POST failed.');\n    }\n});\n</code></pre></li>\n</ol>\n\n<p>When you do the POST in step 2, your browser will send a \"OPTIONS\" method to the server.  This is a \"sniff\" by the browser to see if the server is cool with you POSTing to it.  The server responds with an \"Access-Control-Allow-Origin\" telling the browser its OK to POST|GET|ORIGIN if request originated from \"<a href=\"http://from.com\">http://from.com</a>\" or \"<a href=\"https://from.com\">https://from.com</a>\".  Since the server is OK with it, the browser will make a 2nd request (this time a POST).  It is good practice to have your client set the content type it is sending - so you'll need to allow that as well.</p>\n\n<p>MDN has a great write-up about <a href=\"https://developer.mozilla.org/en/http_access_control\">HTTP access control</a>, that goes into detail of how the entire flow works. According to their docs, it should \"work in browsers that support cross-site XMLHttpRequest\". This is a bit misleading however, as I <em>THINK</em> only modern browsers allow cross domain POST.  I have only verified this works with safari,chrome,FF 3.6.</p>\n\n<p>Keep in mind the following if you do this:</p>\n\n<ol>\n<li>Your server will have to handle 2 requests per operation</li>\n<li>You will have to think about the security implications. Be careful before doing something like 'Access-Control-Allow-Origin: *' </li>\n<li>This wont work on mobile browsers. In my experience they do not allow cross domain POST at all. I've tested android, iPad, iPhone</li>\n<li>There is a pretty big bug in FF &lt; 3.6 where if the server returns a non 400 response code AND there is a response body (validation errors for example), FF 3.6 wont get the response body. This is a huge pain in the ass, since you cant use good REST practices. See bug <a href=\"http://bugs.jquery.com/ticket/7868#comment:11\">here</a> (its filed under jQuery, but my guess is its a FF bug - seems to be fixed in FF4).</li>\n<li>Always return the headers above, not just on OPTION requests. FF needs it in the response from the POST.</li>\n</ol>\n    "},{"t":"Frame Buster Buster … buster code needed","l":"http://stackoverflow.com/questions/958997/frame-buster-buster-buster-code-needed","q":"\n\n<p>Let's say you don't want other sites to \"frame\" your site in an <code>&lt;iframe&gt;</code>:</p>\n\n<pre><code>&lt;iframe src=\"http://example.org\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>So you insert anti-framing, frame busting JavaScript into all your pages:</p>\n\n<pre><code>/* break us out of any containing iframes */\nif (top != self) { top.location.replace(self.location.href); }\n</code></pre>\n\n<p>Excellent! Now you \"bust\" or break out of any containing iframe automatically. Except for one small problem.</p>\n\n<p>As it turns out, <strong>your frame-busting code can be busted</strong>, <a href=\"http://coderrr.wordpress.com/2009/02/13/preventing-frame-busting-and-click-jacking-ui-redressing/\">as shown here</a>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var prevent_bust = 0  \n    window.onbeforeunload = function() { prevent_bust++ }  \n    setInterval(function() {  \n      if (prevent_bust &gt; 0) {  \n        prevent_bust -= 2  \n        window.top.location = 'http://example.org/page-which-responds-with-204'  \n      }  \n    }, 1)  \n&lt;/script&gt;\n</code></pre>\n\n<p>This code does the following:</p>\n\n<ul>\n<li>increments a counter every time the browser attempts to navigate away from the current page, via the <code>window.onbeforeunload</code> event handler</li>\n<li>sets up a timer that fires every millisecond via <code>setInterval()</code>, and if it sees the counter incremented, changes the current location to a server of the attacker's control</li>\n<li>that server serves up a page with HTTP status code <strong>204</strong>, which does not cause the browser to navigate anywhere</li>\n</ul>\n\n<p>My question is -- and this is more of a JavaScript puzzle than an actual <em>problem</em> -- how can you defeat the frame-busting buster? </p>\n\n<p>I had a few thoughts, but nothing worked in my testing:</p>\n\n<ul>\n<li>attempting to clear the <code>onbeforeunload</code> event via <code>onbeforeunload = null</code> had no effect</li>\n<li>adding an <code>alert()</code> stopped the process let the user know it was happening, but did not interfere with the code in any way; clicking OK lets the busting continue as normal</li>\n<li>I can't think of any way to clear the <code>setInterval()</code> timer</li>\n</ul>\n\n<p>I'm not much of a JavaScript programmer, so here's my challenge to you: <strong>hey buster, can you bust the frame-busting buster?</strong></p>\n    ","a":"\n<p>I'm not sure if this is viable or not - but if you can't break the frame, why not just display a warning. For example, If your page isn't the \"top page\" create a setInterval method that tries to break the frame. If after 3 or 4 tries your page still isn't the top page - create a div element that covers the whole page (modal box) with a message and a link like...</p>\n\n<blockquote>\n  <p>You are viewing this page in a unauthorized frame window - (Blah blah... potential security issue)</p>\n  \n  <p><strong>click this link to fix this problem</strong></p>\n</blockquote>\n\n<p>Not the best, but I don't see any way they could script their way out of that.</p>\n    "},{"t":"jQuery Get Selected Option From Dropdown","l":"http://stackoverflow.com/questions/10659097/jquery-get-selected-option-from-dropdown","q":"\n\n<p></p>Usually I use <code>$(\"#id\").val()</code> to return the value of the selected option , but this time it doesn't work.<p></p>\nThe selected tag has the id <code>aioConceptName</code><p></p>\n\n<h3>html code </h3>\n\n<pre><code>&lt;label&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" name=\"name\" /&gt;\n    &lt;select id=\"aioConceptName\"&gt;\n        &lt;option&gt;choose io&lt;/option&gt;\n        &lt;option&gt;roma&lt;/option&gt;\n        &lt;option&gt;totti&lt;/option&gt;\n    &lt;/select&gt;\n&lt;/label&gt;\n</code></pre>\n    ","a":"\n<p>For dropdown options you probably want something like this:</p>\n\n<pre><code>var conceptName = $('#aioConceptName').find(\":selected\").text();\n</code></pre>\n\n<p>The reason <code>val()</code> doesn't do the trick is because clicking an option doesn't change the value of the dropdown--it just adds the <code>:selected</code> property to the selected option which is a <em>child</em> of the dropdown.</p>\n    "},{"t":"Escaping HTML strings with jQuery","l":"http://stackoverflow.com/questions/24816/escaping-html-strings-with-jquery","q":"\n\n<p>Does anyone know of an easy way to escape HTML from strings in <a href=\"http://jquery.com/\">jQuery</a>?  I need to be able to pass an arbitrary string and have it properly escaped for display in an HTML page (preventing JavaScript/HTML injection attacks).  I'm sure it's possible to extend jQuery to do this, but I don't know enough about the framework at the moment to accomplish this.</p>\n    ","a":"\n<p>Since you're using jQuery, you can just set the element's <code>text</code> property:</p>\n\n<pre><code>// before:\n// &lt;div class=\"someClass\"&gt;text&lt;/div&gt;\nvar someHtmlString = \"&lt;script&gt;alert('hi!');&lt;/script&gt;\";\n\n// set a DIV's text:\n$(\"div.someClass\").text(someHtmlString);\n// after: \n// &lt;div class=\"someClass\"&gt;&amp;lt;script&amp;gt;alert('hi!');&amp;lt;/script&amp;gt;&lt;/div&gt;\n\n// get the text in a string:\nvar escaped = $(\"&lt;div&gt;\").text(someHtmlString).html();\n// value: \n// &amp;lt;script&amp;gt;alert('hi!');&amp;lt;/script&amp;gt;\n</code></pre>\n    "},{"t":"Why is setTimeout(fn, 0) sometimes useful?","l":"http://stackoverflow.com/questions/779379/why-is-settimeoutfn-0-sometimes-useful","q":"\n\n<p>I've recently run into a rather nasty bug, wherein the code was loading a <code>&lt;select&gt;</code> dynamically via JavaScript.  This dynamically loaded <code>&lt;select&gt;</code> had a pre-selected value.  In IE6, we already had code to fix the selected <code>&lt;option&gt;</code>, because sometimes the <code>&lt;select&gt;</code>'s <code>selectedIndex</code> value would be out of sync with the selected <code>&lt;option&gt;</code>'s <code>index</code> attribute, as below:</p>\n\n<pre><code>field.selectedIndex = element.index;\n</code></pre>\n\n<p>However, this code wasn't working.  Even though the field's <code>selectedIndex</code> was being set correctly, the wrong index would end up being selected.  However, if I stuck an <code>alert()</code> statement in at the right time, the correct option would be selected.  Thinking this might be some sort of timing issue, I tried something random that I'd seen in code before:</p>\n\n<pre><code>var wrapFn = (function() {\n    var myField = field;\n    var myElement = element;\n\n    return function() {\n        myField.selectedIndex = myElement.index;\n    }\n})();\nsetTimeout(wrapFn, 0);\n</code></pre>\n\n<p>And this worked!</p>\n\n<p>I've got a solution for my problem, but I'm uneasy that I don't know exactly why this fixes my problem.  Does anyone have an official explanation?  What browser issue am I avoiding by calling my function \"later\" using <code>setTimeout()</code>?</p>\n    ","a":"\n<p>This works because you're doing co-operative multi-tasking. </p>\n\n<p>A browser has to do a number of things pretty much all at once, and just one of those is execute JavaScript. But one of the things JavaScript is very often used for is to ask the browser to build a display element. This is often assumed to be done synchronously (particularly as JavaScript is not executed in parallel) but there is no guarantee this is the case and JavaScript does not have a well-defined mechanism for waiting. </p>\n\n<p>The solution is to \"pause\" the JavaScript execution to let the rendering threads catch up. And this is the effect that <code>setTimeout()</code> with a timeout of <strong>0</strong> does. It is like a thread/process yield in C. Although it seems to say \"run this immediately\" it actually gives the browser a chance to finish doing some non-JavaScript things that have been waiting to finish before attending to this new piece of JavaScript.</p>\n\n<p>(In actuality, <code>setTimeout()</code> re-queues the new JavaScript at the end of the execution queue. See the comments for links to a longer explanation.)</p>\n\n<p>IE6 just happens to be more prone to this error, but I have seen it occur on older versions of Mozilla and in Firefox.</p>\n    "},{"t":"How can I pass a parameter to a setTimeout() callback?","l":"http://stackoverflow.com/questions/1190642/how-can-i-pass-a-parameter-to-a-settimeout-callback","q":"\n\n<p>I have some JavaScript code that looks like:</p>\n\n<pre><code>function statechangedPostQuestion()\n{\n  //alert(\"statechangedPostQuestion\");\n  if (xmlhttp.readyState==4)\n  {\n    var topicId = xmlhttp.responseText;\n    setTimeout(\"postinsql(topicId)\",4000);\n  }\n}\n\nfunction postinsql(topicId)\n{\n  //alert(topicId);\n}\n</code></pre>\n\n<p>I get a error that <code>topicId</code> is not defined\nEverything was working before i used the <code>setTimeout()</code> function. </p>\n\n<p>I want my <code>postinsql(topicId)</code> function to be called after some time. \nWhat should i do?</p>\n    ","a":"\n<pre><code>setTimeout(function() {\n    postinsql(topicId);\n}, 4000)\n</code></pre>\n\n<p>You need to feed an anonymous function as a parameter instead of a string, the latter method shouldn't even work per the ECMAScript specification but browsers are just lenient. This is the proper solution, don't ever rely on passing a string as a 'function' when using <code>setTimeout()</code> or <code>setInterval()</code>, it's slower because it has to be evaluated and it just isn't right.</p>\n    "},{"t":"Integer division in JavaScript","l":"http://stackoverflow.com/questions/4228356/integer-division-in-javascript","q":"\n\n<p>In JavaScript, how do I get:</p>\n\n<ol>\n<li>the whole number of times a given integer\ngoes into another?</li>\n<li>the remainder?</li>\n</ol>\n    ","a":"\n<p>For some number <code>y</code> and some divisor <code>x</code> compute the division (<code>div</code>) and remainder (<code>rem</code>) as:</p>\n\n<pre><code>var div = Math.floor(y/x);\nvar rem = y % x;\n</code></pre>\n    "},{"t":"Static variables in JavaScript","l":"http://stackoverflow.com/questions/1535631/static-variables-in-javascript","q":"\n\n<p>How can I create static variables in Javascript?</p>\n    ","a":"\n<p>If you come from a class-based, strongly typed object-oriented language <em>(like Java, C++ or C#)</em> I assume that you are trying to create a variable or method associated to a \"type\" but not to an instance.</p>\n\n<p>An example using a \"classical\" approach, with constructor functions maybe could help you to catch the concepts of basic OO JavaScript:</p>\n\n<pre><code>function MyClass () { // constructor function\n  var privateVariable = \"foo\";  // Private variable \n\n  this.publicVariable = \"bar\";  // Public variable \n\n  this.privilegedMethod = function () {  // Public Method\n    alert(privateVariable);\n  };\n}\n\n// Instance method will be available to all instance but only load once in memory \nMyClass.prototype.publicMethod = function () {    \n  alert(this.publicVariable);\n};\n\n// Static variable shared by all instance \nMyClass.staticProperty = \"baz\";\n\n//...\nvar myInstance = new MyClass();\n</code></pre>\n\n<p><code>staticProperty</code> is defined in the MyClass object (which is a function) and has nothing to do with its created instances, JavaScript treats functions as <a href=\"http://en.wikipedia.org/wiki/First-class_function\">first-class objects</a>, so being an object, you can assign properties to a function.</p>\n    "},{"t":"Which keycode for escape key with jQuery","l":"http://stackoverflow.com/questions/1160008/which-keycode-for-escape-key-with-jquery","q":"\n\n<p>I have two functions.  When enter is pressed the functions runs correctly but when escape is pressed it doesn't. What's the correct number for the escape key?  </p>\n\n<pre><code>$(document).keypress(function(e) { \n    if (e.which == 13) $('.save').click();   // enter (works as expected)\n    if (e.which == 27) $('.cancel').click(); // esc   (does not work)\n});\n</code></pre>\n    ","a":"\n<p>Try with the <a href=\"http://docs.jquery.com/Events/keyup\">keyup event</a>:</p>\n\n<pre><code>$(document).keyup(function(e) {\n  if (e.keyCode == 13) $('.save').click();     // enter\n  if (e.keyCode == 27) $('.cancel').click();   // esc\n});\n</code></pre>\n    "},{"t":"How can I add a key/value pair to a JavaScript object literal?","l":"http://stackoverflow.com/questions/1168807/how-can-i-add-a-key-value-pair-to-a-javascript-object-literal","q":"\n\n<p>Here is my object literal:</p>\n\n<pre><code>var obj = {key1: value1, key2: value2};\n</code></pre>\n\n<p>How can I add <code>{key3: value3}</code> to the object?</p>\n    ","a":"\n<p>There are two ways to add new <strong>properties</strong> to an object:</p>\n\n<pre><code>var obj = {\n    key1: value1,\n    key2: value2\n};\n</code></pre>\n\n<h3>Using dot notation:</h3>\n\n<pre><code>obj.key3 = \"value3\";\n</code></pre>\n\n<h3>Using square bracket notation:</h3>\n\n<pre><code>obj[\"key3\"] = \"value3\";\n</code></pre>\n\n<p>The first form is used when you know the name of the property. The second form is used when the name of the property is dynamically determined. Like in this example:</p>\n\n<pre><code>var getProperty = function (propertyName) {\n    return obj[propertyName];\n};\n\ngetProperty(\"key1\");\ngetProperty(\"key2\");\ngetProperty(\"key3\");\n</code></pre>\n\n<hr>\n\n<p>A <em>real</em> JavaScript array can be constructed using either:</p>\n\n<h3>The Array literal notation:</h3>\n\n<pre><code>var arr = [];\n</code></pre>\n\n<h3>The Array constructor notation:</h3>\n\n<pre><code>var arr = new Array();\n</code></pre>\n    "},{"t":"Convert JS object to JSON string","l":"http://stackoverflow.com/questions/4162749/convert-js-object-to-json-string","q":"\n\n<p>If I defined an object in JS with:</p>\n\n<pre><code>var j={\"name\":\"binchen\"};\n</code></pre>\n\n<p>How can I convert the object to JSON? The output string should be:</p>\n\n<pre><code>'{\"name\":\"binchen\"}'\n</code></pre>\n    ","a":"\n<p>Modern browsers (IE8, FF3, Chrome etc.) have native JSON support built in (Same API as with JSON2).</p>\n\n<p>So as long you're not dealing with IE6/7 you can do it just as easily as that:</p>\n\n<pre><code>var j={\"name\":\"binchen\"};\nJSON.stringify(j); // '{\"name\":\"binchen\"}'\n</code></pre>\n\n<p>But to add support for the oldie's, you should also include the <a href=\"http://www.json.org/js.html\">json2 script</a></p>\n    "},{"t":"Get class list for element with jQuery","l":"http://stackoverflow.com/questions/1227286/get-class-list-for-element-with-jquery","q":"\n\n<p>Is there a way in jQuery to loop through or assign to an array all of the classes that are assigned to an element?</p>\n\n<p>ex.</p>\n\n<pre><code>&lt;div class=\"Lorem ipsum dolor_spec sit amet\"&gt;Hello World!&lt;/div&gt;\n</code></pre>\n\n<p>I will be looking for a \"special\" class as in \"dolor_spec\" above.  I know that I could use hasClass() but the actual class name may not necessarily be known at the time.</p>\n    ","a":"\n<p>You can use <code>document.getElementById('divId').className.split(/\\s+/);</code> to get you an array of class names.</p>\n\n<p>Then you can iterate and find the one you want.</p>\n\n<pre><code>var classList = document.getElementById('divId').className.split(/\\s+/);\nfor (var i = 0; i &lt; classList.length; i++) {\n   if (classList[i] === 'someClass') {\n     //do something\n   }\n}\n</code></pre>\n\n<p>jQuery does not really help you here.....</p>\n\n<pre><code>var classList =$('#divId').attr('class').split(/\\s+/);\n$.each( classList, function(index, item){\n    if (item === 'someClass') {\n       //do something\n    }\n});\n</code></pre>\n    "},{"t":"Can I use jQuery with Node.js?","l":"http://stackoverflow.com/questions/1801160/can-i-use-jquery-with-node-js","q":"\n\n<p>Is it possible to use jQuery selectors/DOM manipulation on the server-side using Node.js?</p>\n    ","a":"\n<p><strong>Update</strong>: (late 2013) The official jQuery team finally took over the management of the <code>jquery</code> package on npm, but omitted any node usage instructions in the README.</p>\n\n<p><strong>An example of usage</strong> can be found at <a href=\"http://github.com/coolaj86/node-jquery\" rel=\"nofollow\">http://github.com/coolaj86/node-jquery</a>.</p>\n\n<p>Since November 4th, 2010, you can simply do this:</p>\n\n<pre><code>npm install jquery\n</code></pre>\n\n<p>This package internally uses the modules <a href=\"https://github.com/tmpvar/jsdom\" rel=\"nofollow\">jsdom</a> and <a href=\"https://github.com/driverdan/node-XMLHttpRequest\" rel=\"nofollow\">xmlhttprequest</a>. The package manager will handle the installing of dependencies. Read the thread <a href=\"http://groups.google.com/group/nodejs/browse_thread/thread/e02619ec7d208d28\" rel=\"nofollow\">here</a>.</p>\n\n<p><strong>Update</strong>: (March 1, 2015) Note that the most recent version of jsdom (&gt;= 4.0.0) does not work with with node.js (it only works with io.js).  The example at <a href=\"http://github.com/coolaj86/node-jquery\" rel=\"nofollow\">http://github.com/coolaj86/node-jquery</a> does work in node.js, however, if you install jsdom 3.1.2 instead of the most recent version:</p>\n\n<pre><code>npm install jquery\nnpm install jsdom@3.1.2\n</code></pre>\n    "},{"t":"How can you encode a string to Base64 in JavaScript?","l":"http://stackoverflow.com/questions/246801/how-can-you-encode-a-string-to-base64-in-javascript","q":"\n\n<p>I have a PHP script that can encode a PNG image to a Base64 string.</p>\n\n<p>I'd like to do the same thing using JavaScript. I know how to open files, but I'm not sure how to do the encoding? I'm not used to working with binary data.</p>\n    ","a":"\n<p>If you’re writing code that doesn’t need to support IE9 or earlier, then you can use <a href=\"https://developer.mozilla.org/En/DOM/Window.btoa\"><code>btoa()</code></a> and <a href=\"https://developer.mozilla.org/en/DOM/window.atob\"><code>atob()</code></a> to convert to and from base64 encoding. Otherwise, use something like <a href=\"http://stackoverflow.com/questions/246801/how-can-you-encode-to-base64-using-javascript#246813\">the function Sunny referenced</a>.</p>\n\n<p>There appears to be some confusion in the comments regarding what these functions accept/return, so…</p>\n\n<ul>\n<li><p><code>btoa()</code> accepts a “string” where each character represents an 8-bit byte – if you pass a string containing characters that can’t be represented in 8 bits, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.btoa#Unicode_Strings\">it will probably break</a>. This isn’t a problem <em>if</em> you’re actually treating the string as a byte array, but if you’re trying to do something else then you’ll have to encode it first.</p></li>\n<li><p><code>atob()</code> returns a “string” where each character represents an 8-bit byte – that is, its value will be between <code>0</code> and <code>0xff</code>. This does <em>not</em> mean it’s ASCII – presumably if you’re using this function at all, you expect to be working with binary data and not text.</p></li>\n</ul>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1095102/how-do-i-load-binary-image-data-using-javascript-and-xmlhttprequest\">How do I load binary image data using Javascript and XMLHttpRequest?</a></li>\n</ul>\n    "},{"t":"How do I remove objects from a javascript associative array?","l":"http://stackoverflow.com/questions/346021/how-do-i-remove-objects-from-a-javascript-associative-array","q":"\n\n<p>Suppose I have this code:  </p>\n\n<pre><code>var myArray = new Object();\nmyArray[\"firstname\"] = \"Bob\";\nmyArray[\"lastname\"] = \"Smith\";\nmyArray[\"age\"] = 25;\n</code></pre>\n\n<p>Now if I wanted to remove \"lastname\"?....is there some equivalent of<br>\n<code>myArray[\"lastname\"].remove()</code>?</p>\n\n<p>(I need the element gone because the number of elements is important and I want to keep things clean.)</p>\n    ","a":"\n<p>Use the \"delete\" keyword in Javascript.</p>\n\n<pre><code>delete myArray[\"lastname\"];\n</code></pre>\n    "},{"t":"How to check that a number is float or integer?","l":"http://stackoverflow.com/questions/3885817/how-to-check-that-a-number-is-float-or-integer","q":"\n\n<p>How to find that a number is <code>float</code> or <code>integer</code>?</p>\n\n<pre><code>1.25 --&gt; float  \n1 --&gt; integer  \n0 --&gt; integer  \n0.25 --&gt; float\n</code></pre>\n    ","a":"\n<p>check for a remainder when dividing by 1:</p>\n\n<pre><code>function isInt(n) {\n   return n % 1 === 0;\n}\n</code></pre>\n\n<p>If you don't know that the argument is a number you need two tests:</p>\n\n<pre><code>function isInt(n){\n    return Number(n) === n &amp;&amp; n % 1 === 0;\n}\n\nfunction isFloat(n){\n    return n === Number(n) &amp;&amp; n % 1 !== 0;\n}\n</code></pre>\n    "},{"t":"Converting an object to a string","l":"http://stackoverflow.com/questions/5612787/converting-an-object-to-a-string","q":"\n\n<p>How can I convert a JavaScript object into a string?</p>\n\n<p>Example:</p>\n\n<pre><code>var o = {a:1, b:2}\nconsole.log(o)\nconsole.log('Item: ' + o)\n</code></pre>\n\n<p>Output:</p>\n\n<blockquote>\n  <p>Object { a=1, b=2} // very nice readable output :)<br>\n  Item: [object Object] // no idea what's inside :(</p>\n</blockquote>\n    ","a":"\n<p>I would recommend using <code>JSON.stringify</code>, which serializes an object. Most modern browsers support this method natively, but for those that don't, you can include a <a href=\"https://github.com/douglascrockford/JSON-js\">JS version</a>: </p>\n\n<pre><code>var obj = {\n  name: 'myObj'\n};\n\nJSON.stringify(obj);\n</code></pre>\n    "},{"t":"How to measure time taken by a function to execute","l":"http://stackoverflow.com/questions/313893/how-to-measure-time-taken-by-a-function-to-execute","q":"\n\n<p>I need to get execution time in milliseconds.</p>\n    ","a":"\n<p>use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime\">Date().getTime()</a></p>\n\n<blockquote>\n  <p>The getTime() method returns the number of milliseconds since midnight of January 1, 1970.</p>\n</blockquote>\n\n<p>ex.</p>\n\n<pre><code>var start = new Date().getTime();\n\nfor (i = 0; i &lt; 50000; ++i) {\n// do something\n}\n\nvar end = new Date().getTime();\nvar time = end - start;\nalert('Execution time: ' + time);\n</code></pre>\n\n<p>alternatively, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds\">getMilliseconds()</a> will give the milliseconds of the current Date object.</p>\n    "},{"t":"What is the purpose of backbone.js?","l":"http://stackoverflow.com/questions/5418369/what-is-the-purpose-of-backbone-js","q":"\n\n<p>I tried to understand the utility of backbone.js from its site <a href=\"http://documentcloud.github.com/backbone\">http://documentcloud.github.com/backbone</a>, but I still couldn't figure out much.</p>\n\n<p>Can anybody help me by explaining how it works and how could it be helpful in writing better JavaScript?</p>\n    ","a":"\n<p>Backbone.js is basically an uber-light framework that allows you to structure your Javascript code in an <strong>MVC</strong>(Model, View, Controller) fashion where... </p>\n\n<p><strong>Model</strong> is part of your code that retrieves and populates the data, </p>\n\n<p><strong>View</strong> is the HTML representation of this model(views change as models change, etc) </p>\n\n<p>and optional <strong>Controller</strong> that in this case allows you to save the state of your javascript application via a hashbang url, for example: <a href=\"http://twitter.com/#search?q=backbone.js\">http://twitter.com/#search?q=backbone.js</a></p>\n\n<p>Some pros that I discovered with Backbone: </p>\n\n<ul>\n<li><p>No more Javascript Spaghetti: code is organized and broken down into semantically meaningful .js files which are later combined using JAMMIT</p></li>\n<li><p>No more jQuery.data(bla, bla): no need to store data in DOM, store data in models instead</p></li>\n<li><p>event binding just works</p></li>\n<li><p>extremely useful underscore utility library</p></li>\n<li><p>backbone.js code is well documented and a great read. opened my eyes to a number of JS code techniques.</p></li>\n</ul>\n\n<p>Cons:</p>\n\n<ul>\n<li>Took me a while to wrap my head around it and figure out how to apply it to my code, but im a Javascript Newb.</li>\n</ul>\n\n<p>Here is a set of great tutorials on using Backbone with Rails as the back-end:</p>\n\n<p><strong>CloudEdit: A Backbone.js Tutorial with Rails:</strong></p>\n\n<p><a href=\"http://www.jamesyu.org/2011/01/27/cloudedit-a-backbone-js-tutorial-by-example/\">http://www.jamesyu.org/2011/01/27/cloudedit-a-backbone-js-tutorial-by-example/</a></p>\n\n<p><a href=\"http://www.jamesyu.org/2011/02/09/backbone.js-tutorial-with-rails-part-2/\">http://www.jamesyu.org/2011/02/09/backbone.js-tutorial-with-rails-part-2/</a></p>\n\n<p>p.s. There is also this wonderful <strong>Collection</strong> class that lets you deal with collections of models and mimic nested models, but i don't want to confuse you from the start.</p>\n    "},{"t":"How to get the value from the URL parameter?","l":"http://stackoverflow.com/questions/979975/how-to-get-the-value-from-the-url-parameter","q":"\n\n<p>I have a URL with a parameter as follows,</p>\n\n<blockquote>\n  <p>www.test.com/t.html?a=1&amp;b=3&amp;c=m2-m3-m4-m5 </p>\n</blockquote>\n\n<p>I need to get the whole value of <code>c</code>. I tried to read the URL, but I got only <code>m2</code>. How do I do this using JavaScript?</p>\n    ","a":"\n<p>JavaScript has nothing built in for handling query string parameters. </p>\n\n<p>You could access <code>location.search</code>, which would give you from the <code>?</code> character on to the end of the URL or the start of the fragment identifier (#foo), whichever comes first.</p>\n\n<p>This suggests that you have written (or found some third party) code for reading the query string and accessing just the bit that you want - but you haven't shared it with us, so it is hard to say what is wrong with it.</p>\n\n<p>The code I generally use is this:</p>\n\n<pre><code>var QueryString = function () {\n  // This function is anonymous, is executed immediately and \n  // the return value is assigned to QueryString!\n  var query_string = {};\n  var query = window.location.search.substring(1);\n  var vars = query.split(\"&amp;\");\n  for (var i=0;i&lt;vars.length;i++) {\n    var pair = vars[i].split(\"=\");\n        // If first entry with this name\n    if (typeof query_string[pair[0]] === \"undefined\") {\n      query_string[pair[0]] = decodeURIComponent(pair[1]);\n        // If second entry with this name\n    } else if (typeof query_string[pair[0]] === \"string\") {\n      var arr = [ query_string[pair[0]],decodeURIComponent(pair[1]) ];\n      query_string[pair[0]] = arr;\n        // If third or later entry with this name\n    } else {\n      query_string[pair[0]].push(decodeURIComponent(pair[1]));\n    }\n  } \n    return query_string;\n}();\n</code></pre>\n\n<p>You can then access <code>QueryString.c</code></p>\n    "},{"t":"jQuery Set Cursor Position in Text Area","l":"http://stackoverflow.com/questions/499126/jquery-set-cursor-position-in-text-area","q":"\n\n<p>How do you set the cursor position in a text field using jQuery?  I've got a text field with content, and I want the users cursor to be positioned at a certain offset when they focus on the field.  The code should look kind of like this:</p>\n\n<pre><code>$('#input').focus(function() {\n  $(this).setCursorPosition(4);\n});\n</code></pre>\n\n<p>What would the implementation of that setCursorPosition function look like?  If you had a text field with the content abcdefg, this call would result in the cursor being positioned as follows: abcd*<em>|</em>*efg.</p>\n\n<p>Java has a similar function, setCaretPosition.  Does a similar method exist for javascript?</p>\n\n<p><strong>Update: I modified CMS's code to work with jQuery as follows:</strong></p>\n\n<pre><code>new function($) {\n  $.fn.setCursorPosition = function(pos) {\n    if (this.setSelectionRange) {\n      this.setSelectionRange(pos, pos);\n    } else if (this.createTextRange) {\n      var range = this.createTextRange();\n      range.collapse(true);\n      if(pos &lt; 0) {\n        pos = $(this).val().length + pos;\n      }\n      range.moveEnd('character', pos);\n      range.moveStart('character', pos);\n      range.select();\n    }\n  }\n}(jQuery);\n</code></pre>\n    ","a":"\n<p>I have two functions:</p>\n\n<pre><code>function setSelectionRange(input, selectionStart, selectionEnd) {\n  if (input.setSelectionRange) {\n    input.focus();\n    input.setSelectionRange(selectionStart, selectionEnd);\n  }\n  else if (input.createTextRange) {\n    var range = input.createTextRange();\n    range.collapse(true);\n    range.moveEnd('character', selectionEnd);\n    range.moveStart('character', selectionStart);\n    range.select();\n  }\n}\n\nfunction setCaretToPos (input, pos) {\n  setSelectionRange(input, pos, pos);\n}\n</code></pre>\n\n<p>Then you can use setCaretToPos like this:</p>\n\n<pre><code>setCaretToPos(document.getElementById(\"YOURINPUT\"), 4);\n</code></pre>\n    "},{"t":"Google Maps JS API v3 - Simple Multiple Marker Example","l":"http://stackoverflow.com/questions/3059044/google-maps-js-api-v3-simple-multiple-marker-example","q":"\n\n<p>Fairly new to the Google Maps Api. I've got an array of data that I want to cycle through and plot on a map. Seems fairly simple, but all the multi-marker tutorials I have found are quite complex.</p>\n\n<p>Lets use the data array from google's site for an example:</p>\n\n<pre><code>var locations = [\n  ['Bondi Beach', -33.890542, 151.274856, 4],\n  ['Coogee Beach', -33.923036, 151.259052, 5],\n  ['Cronulla Beach', -34.028249, 151.157507, 3],\n  ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],\n  ['Maroubra Beach', -33.950198, 151.259302, 1]\n];\n</code></pre>\n\n<p>I simply want to plot all of these points and have an infoWindow pop up when clicked to display the name.</p>\n\n<p>Any help is greatly appreciated!</p>\n    ","a":"\n<p>This is the simplest I could reduce it to:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt; \n&lt;head&gt; \n  &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" /&gt; \n  &lt;title&gt;Google Maps Multiple Markers&lt;/title&gt; \n  &lt;script src=\"http://maps.google.com/maps/api/js?sensor=false\" \n          type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/head&gt; \n&lt;body&gt;\n  &lt;div id=\"map\" style=\"width: 500px; height: 400px;\"&gt;&lt;/div&gt;\n\n  &lt;script type=\"text/javascript\"&gt;\n    var locations = [\n      ['Bondi Beach', -33.890542, 151.274856, 4],\n      ['Coogee Beach', -33.923036, 151.259052, 5],\n      ['Cronulla Beach', -34.028249, 151.157507, 3],\n      ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],\n      ['Maroubra Beach', -33.950198, 151.259302, 1]\n    ];\n\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 10,\n      center: new google.maps.LatLng(-33.92, 151.25),\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n\n    var infowindow = new google.maps.InfoWindow();\n\n    var marker, i;\n\n    for (i = 0; i &lt; locations.length; i++) {  \n      marker = new google.maps.Marker({\n        position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n        map: map\n      });\n\n      google.maps.event.addListener(marker, 'click', (function(marker, i) {\n        return function() {\n          infowindow.setContent(locations[i][0]);\n          infowindow.open(map, marker);\n        }\n      })(marker, i));\n    }\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Screenshot:</p>\n\n<p><img src=\"http://i.imgur.com/mM82YXg.png\" alt=\"Google Maps Multiple Markers\"></p>\n\n<p>There is some closure magic happening when passing the callback argument to the <code>addListener</code> method. This can be quite a tricky topic, if you are not familiar with how closures work. I would suggest checking out the following Mozilla article for a brief introduction, if it is the case:</p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Closures\">Mozilla Dev Center: Working with Closures</a></li>\n</ul>\n    "},{"t":"How to set the value property in AngularJS' ng-options?","l":"http://stackoverflow.com/questions/12139152/how-to-set-the-value-property-in-angularjs-ng-options","q":"\n\n<p>Here is what seems to be bothering a lot of people (including me).\nWhen using the <code>ng-options</code> directive in AngluarJS to fill in the options for a <code>&lt;select&gt;</code> tag I cannot figure out how to set the value for an option. The documentation for this is really unclear - at least for a simpleton like me. </p>\n\n<p>I can set the text for an option easily like so: </p>\n\n<pre><code>ng-options=\"select p.text for p in resultOptions\"\n</code></pre>\n\n<p>when <code>resultOptions</code> is for example: </p>\n\n<pre><code>[\n    {\n        \"value\": 1,\n        \"text\": \"1st\"\n    },\n    {\n        \"value\": 2,\n        \"text\": \"2nd\"\n    }\n]\n</code></pre>\n\n<p>Should be (and probably is) the most simple thing to set the option values, but so far I just don't get it.</p>\n    ","a":"\n<blockquote>\n  <p><a href=\"http://docs.angularjs.org/api/ng.directive:select\">http://docs.angularjs.org/api/ng.directive:select</a></p>\n  \n  <p><strong>ngOptions(optional)</strong> – {<code>comprehension_expression=</code>} – in one of the\n  following forms: </p>\n  \n  <p><em>for array data sources</em>:<br>\n  <code>label for value in array</code><br>\n  <code>select as label for value in array</code><br>\n  <code>label group by group for value in array</code><br>\n  <code>select as label group by group for value in array track by trackexpr</code><br>\n  <em>for object data sources:</em><br>\n  <code>label for (key , value) in object</code><br>\n  <code>select as label for (key , value) in object</code><br>\n  <code>label group by group for (key, value) in object</code><br>\n  <code>select as label group by group for (key, value) in object</code></p>\n</blockquote>\n\n<p>In your case, it should be</p>\n\n<pre><code>array = [{ \"value\": 1, \"text\": \"1st\" }, { \"value\": 2, \"text\": \"2nd\" }];\n\n&lt;select ng-options=\"obj.value as obj.text for obj in array\"&gt;&lt;/select&gt;\n</code></pre>\n\n<h2>Update</h2>\n\n<p>With the updates on Angular, it is now possible to set the actual value for the <code>value</code> attribute of <code>select</code> element with <code>track by</code> expression.</p>\n\n<pre><code>&lt;select ng-options=\"obj.text for obj in array track by obj.value\"&gt;\n&lt;/select&gt;\n</code></pre>\n\n<h2>How to remember this ugly stuff</h2>\n\n<p>To all the people who are having hard time to remember this syntax form: I agree this isn't the most easiest or beautiful syntax. This syntax is kind of an extended version of Python's list comprehensions and knowing that helps me to remember the syntax very easily. It's something like this:</p>\n\n<p>Python code:</p>\n\n<pre><code>my_list = [x**2 for x in [1, 2, 3, 4, 5]]\n&gt; [1, 4, 9, 16, 25]\n# let people to be a list of person instances\nmy_list2 = [person.name for person in people]\n&gt; my_list2 = ['Alice', 'Bob']\n</code></pre>\n\n<p>This is actually the same syntax as the first one listed above. However, in <code>&lt;select&gt;</code> we usually need to differentiate between the actual value in code and the text shown (the label) in a <code>&lt;select&gt;</code> element. Like, we need <code>person.id</code> in the code but we don't want to show the <code>id</code> to the user, we want to show its name. Likewise, we're not interested in the <code>person.name</code> in the code. There comes <code>as</code> keyword to label stuff. So it becomes like this:</p>\n\n<pre><code>person.id as person.name for person in people\n</code></pre>\n\n<p>Or, instead of <code>person.id</code> we could need the <code>person</code> instance/reference itself. See below:</p>\n\n<pre><code>person as person.name for person in people\n</code></pre>\n\n<p>For JS objects, the same method applies as well, just remember that the items in the object is deconstructed with <code>(key, value)</code> pairs.</p>\n    "},{"t":"Using jQuery to test if an input has focus","l":"http://stackoverflow.com/questions/967096/using-jquery-to-test-if-an-input-has-focus","q":"\n\n<p>On the front page of a site I am building, several <code>&lt;div&gt;</code>s use the CSS :hover property to add a border when the mouse is over them. One of the <code>&lt;div&gt;</code>s contains a <code>&lt;form&gt;</code> which, using jQuery, will keep the border if an input within it has focus. This works perfectly except that IE6 does not support :hover on any elements other than <code>&lt;a&gt;</code>s. So, for this browser only we are using jQuery to mimic css :hover using the $(#element).hover() method. The only problem is, now that jQuery handles both the form focus() <em>and</em> hover(), when an input has focus then the user moves the mouse in and out, the border goes away.</p>\n\n<p>I was thinking we could use some kind of conditional to stop this behavior. For instance, if we tested on mouse out if any of the inputs had focus, we could stop the border from going away. AFAIK, there is no :focus selector in jQuery, so I'm not sure how to make this happen. Any ideas?</p>\n\n<p>Thanks for your help.</p>\n    ","a":"\n<h2>jQuery 1.6+</h2>\n\n<p>jQuery added a <a href=\"http://api.jquery.com/focus-selector/\"><code>:focus</code></a> selector so we no longer need to add it ourselves. Just use <code>$(\"..\").is(\":focus\")</code></p>\n\n<h2>jQuery 1.5 and below</h2>\n\n<p><strong>Edit:</strong> As times change, we find better methods for testing focus, the new favorite is <a href=\"https://gist.github.com/450017\">this gist from Ben Alman</a>:</p>\n\n<pre><code>jQuery.expr[':'].focus = function( elem ) {\n  return elem === document.activeElement &amp;&amp; ( elem.type || elem.href );\n};\n</code></pre>\n\n<p>Quoted from Mathias Bynens <a href=\"http://stackoverflow.com/questions/967096/using-jquery-to-test-if-an-input-has-focus/5391608#5391608\">here</a>:</p>\n\n<blockquote>\n  <p>Note that the <code>(elem.type || elem.href)</code> test was added to filter out false positives like body. This way, we make sure to filter out all elements except form controls and hyperlinks.</p>\n</blockquote>\n\n<p>You're defining a new selector. See <a href=\"http://docs.jquery.com/Plugins/Authoring\">Plugins/Authoring</a>. Then you can do:</p>\n\n<pre><code>if ($(\"...\").is(\":focus\")) {\n  ...\n}\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>$(\"input:focus\").doStuff();\n</code></pre>\n\n<h2>Any jQuery</h2>\n\n<p>If you just want to figure out which element has focus, you can use </p>\n\n<pre><code>$(document.activeElement)\n</code></pre>\n\n<p>If you aren't sure if the version will be 1.6 or lower, you can add the <code>:focus</code> selector if it is missing:</p>\n\n<pre><code>(function ( $ ) {\n    var filters = $.expr[\":\"];\n    if ( !filters.focus ) { \n        filters.focus = function( elem ) {\n           return elem === document.activeElement &amp;&amp; ( elem.type || elem.href );\n        };\n    }\n})( jQuery );\n</code></pre>\n    "},{"t":"Selecting and manipulating CSS pseudo-elements such as ::before and ::after using jQuery","l":"http://stackoverflow.com/questions/5041494/selecting-and-manipulating-css-pseudo-elements-such-as-before-and-after-usin","q":"\n\n<p>Is there any way to select/manipulate CSS pseudo-elements such as <code>::before</code> and <code>::after</code> (and the old version with one semi-colon) using jQuery?</p>\n\n<p>For example, my stylesheet has the following rule:</p>\n\n<pre><code>.span::after{ content:'foo' }\n</code></pre>\n\n<p>How can I change 'foo' to 'bar' using jQuery?</p>\n    ","a":"\n<p>You could also pass the content to the pseudo element with a data attribute and then use jQuery to manipulate that:</p>\n\n<p>In HTML:</p>\n\n<pre><code>&lt;span&gt;foo&lt;/span&gt;\n</code></pre>\n\n<p>In jQuery:</p>\n\n<pre><code>&lt;script&gt;\n$('span').hover(function(){\n    $(this).attr('data-content','bar');\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>In CSS: </p>\n\n<pre><code>span:after {\ncontent: attr(data-content) ' any other text you may want';\n}\n</code></pre>\n\n<p>If you want to prevent the 'other text' from showing up, you could combine this with seucolega's solution like this:</p>\n\n<p>In HTML:</p>\n\n<pre><code>&lt;span&gt;foo&lt;/span&gt;\n</code></pre>\n\n<p>In jQuery:</p>\n\n<pre><code>&lt;script&gt;\n$('span').hover(function(){\n    $(this).addClass('change').attr('data-content','bar');\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>In CSS: </p>\n\n<pre class=\"lang-css prettyprint-override\"><code>span.change:after {\n    content: attr(data-content) ' any other text you may want';\n}\n</code></pre>\n    "},{"t":"What does jQuery.fn mean?","l":"http://stackoverflow.com/questions/4083351/what-does-jquery-fn-mean","q":"\n\n<p>What does the 'fn' here mean?</p>\n\n<pre><code>window.jQuery.fn.jquery\n</code></pre>\n    ","a":"\n<p>In jQuery, the <code>fn</code> property is just an alias to the <code>prototype</code> property.</p>\n\n<p>The <code>jQuery</code> identifier (or <code>$</code>) is just a <em>constructor function</em>, and all instances created with it, inherit from the constructor's prototype.</p>\n\n<p>A simple constructor function:</p>\n\n<pre><code>function Test() {\n  this.a = 'a';\n}\nTest.prototype.b = 'b';\n\nvar test = new Test(); \ntest.a; // \"a\", own property\ntest.b; // \"b\", inherited property\n</code></pre>\n\n<p>A simple structure that resembles the architecture of jQuery:</p>\n\n<pre><code>(function() {\n  var foo = function(arg) { // core constructor\n    // ensure to use the `new` operator\n    if (!(this instanceof foo))\n      return new foo(arg);\n    // store an argument for this example\n    this.myArg = arg;\n    //..\n  };\n\n  // create `fn` alias to `prototype` property\n  foo.fn = foo.prototype = {\n    init: function () {/*...*/}\n    //...\n  };\n\n  // expose the library\n  window.foo = foo;\n})();\n\n// Extension:\n\nfoo.fn.myPlugin = function () {\n  alert(this.myArg);\n  return this; // return `this` for chainability\n};\n\nfoo(\"bar\").myPlugin(); // alerts \"bar\"\n</code></pre>\n    "},{"t":"How can I add new array elements at the beginning of an array in JavaScript?","l":"http://stackoverflow.com/questions/8073673/how-can-i-add-new-array-elements-at-the-beginning-of-an-array-in-javascript","q":"\n\n<p>I have a need to add elements (I retrieve on timely basis using AJAX) at the top of an array.</p>\n\n<p>For example, if my array looks like below:</p>\n\n<pre><code>[23, 45, 12, 67]\n</code></pre>\n\n<p>And the response from my AJAX call is <code>34</code>, I want the updated array to be like the following:</p>\n\n<pre><code>[34, 23, 45, 12, 67]\n</code></pre>\n\n<p>Currently I am planning to do it like this:</p>\n\n<pre><code>var newArray = [];\nnewArray.push(response);\n\nfor (int i=0; i &lt; theArray.length; i++) {\n    newArray.push(theArray[i]);\n}\n\ntheArray = newArray;\ndelete newArray;\n</code></pre>\n\n<p>Is there any better way to do this? Does JavaScript have any built-in functionality that does this?</p>\n\n<p>The complexity of my method is <code>O(n)</code> and it would be really interesting to see better implementations.</p>\n    ","a":"\n<p>Use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift\"><code>unshift</code></a>. It's like <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push\"><code>push</code></a>, except it adds elements to the beginning of the array instead of the end.</p>\n\n<ul>\n<li><code>unshift</code>/<code>push</code> - add an element to the beginning/end of an array</li>\n<li><code>shift</code>/<code>pop</code>  - remove and return the first/last element of and array</li>\n</ul>\n\n<p>A simple diagram...</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>   unshift -&gt; array &lt;- push\n   shift   &lt;- array -&gt; pop\n</code></pre>\n\n<p>and chart:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>          add  remove  start  end\n   push    X                   X\n    pop           X            X\nunshift    X             X\n  shift           X      X\n</code></pre>\n\n<p>Check out the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array\">MDN Array documentation</a>. Virtually every language that has the ability to push/pop elements from an array will also have the ability to unshift/shift (sometimes called <code>push_front</code>/<code>pop_front</code>) elements, you should never have to implement these yourself.</p>\n    "},{"t":"Is there a (built-in) way in JavaScript to check if a string is a valid number?","l":"http://stackoverflow.com/questions/175739/is-there-a-built-in-way-in-javascript-to-check-if-a-string-is-a-valid-number","q":"\n\n<p>I'm hoping there's something in the same conceptual space as the old VB6 IsNumeric() function?</p>\n    ","a":"\n<h2>To check if a variable (including a string) is a number, check if it is not a number:</h2>\n\n<p>This works regardless of whether the variable contains is a string or number.</p>\n\n<pre><code>isNaN(num)     // returns true if the variable does NOT contain a valid number\n</code></pre>\n\n<h3>Examples:</h3>\n\n<pre><code>isNaN(123)       // false\nisNaN('123')     // false\nisNaN('1e10000') // false  (number is Infinity)\nisNaN('foo')     // true\nisNaN('10px')    // true\n</code></pre>\n\n<p>Of course, you can negate this if you need to. For example, to implement the <code>IsNumeric</code> example you gave:</p>\n\n<pre><code>function isNumeric(num){\n    return !isNaN(num)\n}\n</code></pre>\n\n<h2>To convert a string containing a number into a number:</h2>\n\n<p>only works if the string <em>only</em> contains numeric characters, else it returns <code>NaN</code>.</p>\n\n<pre><code>+num              // returns the numeric value of the string, or NaN if the \n                  // string isn't purely numeric characters\n</code></pre>\n\n<h3>Examples:</h3>\n\n<pre><code>+'12'             // 12\n+'12.'            // 12\n+'12..'           // Nan\n+'.12'            // 0.12\n+'..12'           // Nan\n+'foo'            // NaN\n+'12px'           // NaN\n</code></pre>\n\n<h2>To convert a string loosely to a number</h2>\n\n<p>useful for converting '12px' to 12, for example.</p>\n\n<pre><code>parseInt(num)     // extracts a numeric value from the \n                  // start of the string, or NaN.\n</code></pre>\n\n<h3>Examples:</h3>\n\n<pre><code>parseInt('12', 10)    // 12\nparseInt('aaa', 10)   // NaN\nparseInt('12px', 10)  // 12\nparseInt('foo2', 10)  // NaN      These last two may be different\nparseInt('12a5', 10)  // 12       from what you expected to see. \n</code></pre>\n\n<h2>Floats</h2>\n\n<p>Bear in mind that, unlike <code>+num</code>, <code>parseInt</code> (as the name suggests) will convert a float into an integer by chopping off everything following the decimal point (if you want to use <code>parseInt()</code> <em>because of</em> this behaviour, you're probably better off with <code>Math.floor()</code> instead):</p>\n\n<pre><code>parseInt(12.345, 10)   // 12\nparseInt('12.345', 10) // 12\n+'12.345'          // 12.345\n</code></pre>\n\n<h2>Empty strings</h2>\n\n<p>Empty strings may be a little counter-intuitive. <code>+num</code> converts empty strings to zero, and <code>isNaN()</code> assumes the same:</p>\n\n<pre><code>+''                // 0\nisNaN('')          // false\n</code></pre>\n\n<p>But <code>parseInt()</code> does not agree:</p>\n\n<pre><code>parseInt('', 10)       // NaN\n</code></pre>\n    "},{"t":"jQuery/Javascript to replace broken images","l":"http://stackoverflow.com/questions/92720/jquery-javascript-to-replace-broken-images","q":"\n\n<p>I have a web page that includes a bunch of images.\nSometimes the image isn't available so a broken image is displayed in the clients browser.</p>\n\n<p>How do I use jQuery to get the set of images, filter it to broken images then replace the   src?</p>\n\n<p>--I thought it would be easier to do this with Jquery, but It turned out much easier to just use a pure javascript solution. i.e the one provided by Prestaul</p>\n    ","a":"\n<p>Handle the <code>onError</code> event for the image to reassign its source using JavaScript:</p>\n\n<pre><code>function imgError(image) {\n    image.onerror = \"\";\n    image.src = \"/images/noimage.gif\";\n    return true;\n}\n</code></pre>\n\n\n\n<pre><code>&lt;img src=\"image.png\" onerror=\"imgError(this);\"/&gt;\n</code></pre>\n\n<p>Or without a JavaScript function:</p>\n\n<pre><code>&lt;img src=\"image.png\" onError=\"this.onerror=null;this.src='/images/noimage.gif';\" /&gt;\n</code></pre>\n\n<p>The following compatibility table lists the browsers that support the error facility:</p>\n\n<p><a href=\"http://www.quirksmode.org/dom/events/error.html\">http://www.quirksmode.org/dom/events/error.html</a></p>\n    "},{"t":"Object comparison in JavaScript [duplicate]","l":"http://stackoverflow.com/questions/1068834/object-comparison-in-javascript","q":"\n\n<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/201183/how-do-you-determine-equality-for-two-javascript-objects\">How do you determine equality for two JavaScript objects?</a>  </p>\n</blockquote>\n\n\n\n<p>What is the best way to compare Objects in JavaScript?</p>\n\n<p>Example:</p>\n\n<pre><code>var user1 = {name : \"nerd\", org: \"dev\"};\nvar user2 = {name : \"nerd\", org: \"dev\"};\nvar eq = user1 == user2;\nalert(eq); // gives false\n</code></pre>\n\n<p>I know that \"Two objects are equal if they refer to the exact same Object\", but is there a way to check it another way??</p>\n\n<p>Using this way works for me.....but is it the only possibility?</p>\n\n<pre><code>var eq = Object.toJSON(user1) == Object.toJSON(user2);\nalert(eq); // gives true\n</code></pre>\n    ","a":"\n<p>Unfortunately there is no perfect way, unless you use <code>_proto_</code> recursively and access all non-enumerable properties, but this works in Firefox only.</p>\n\n<p>So the best I can do is to guess usage scenarios.</p>\n\n<hr>\n\n<h2><strong>1) Fast and limited.</strong></h2>\n\n<p>Works when you have simple JSON-style objects without methods and DOM nodes inside:</p>\n\n<pre><code> JSON.stringify(obj1) === JSON.stringify(obj2) \n</code></pre>\n\n<p>The ORDER of the properties IS IMPORTANT, so this method will return false for following objects:</p>\n\n<pre><code> x = {a: 1, b: 2};\n y = {b: 2, a: 1};\n</code></pre>\n\n<hr>\n\n<h2><strong>2) Slow and more generic.</strong></h2>\n\n<p>Compares objects without digging into prototypes, then compares properties' projections recursively, and also compares constructors.</p>\n\n<p>This is almost correct algorithm:</p>\n\n<pre><code>function deepCompare () {\n  var i, l, leftChain, rightChain;\n\n  function compare2Objects (x, y) {\n    var p;\n\n    // remember that NaN === NaN returns false\n    // and isNaN(undefined) returns true\n    if (isNaN(x) &amp;&amp; isNaN(y) &amp;&amp; typeof x === 'number' &amp;&amp; typeof y === 'number') {\n         return true;\n    }\n\n    // Compare primitives and functions.     \n    // Check if both arguments link to the same object.\n    // Especially useful on step when comparing prototypes\n    if (x === y) {\n        return true;\n    }\n\n    // Works in case when functions are created in constructor.\n    // Comparing dates is a common scenario. Another built-ins?\n    // We can even handle functions passed across iframes\n    if ((typeof x === 'function' &amp;&amp; typeof y === 'function') ||\n       (x instanceof Date &amp;&amp; y instanceof Date) ||\n       (x instanceof RegExp &amp;&amp; y instanceof RegExp) ||\n       (x instanceof String &amp;&amp; y instanceof String) ||\n       (x instanceof Number &amp;&amp; y instanceof Number)) {\n        return x.toString() === y.toString();\n    }\n\n    // At last checking prototypes as good a we can\n    if (!(x instanceof Object &amp;&amp; y instanceof Object)) {\n        return false;\n    }\n\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n        return false;\n    }\n\n    if (x.constructor !== y.constructor) {\n        return false;\n    }\n\n    if (x.prototype !== y.prototype) {\n        return false;\n    }\n\n    // Check for infinitive linking loops\n    if (leftChain.indexOf(x) &gt; -1 || rightChain.indexOf(y) &gt; -1) {\n         return false;\n    }\n\n    // Quick checking of one object beeing a subset of another.\n    // todo: cache the structure of arguments[0] for performance\n    for (p in y) {\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n            return false;\n        }\n        else if (typeof y[p] !== typeof x[p]) {\n            return false;\n        }\n    }\n\n    for (p in x) {\n        if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n            return false;\n        }\n        else if (typeof y[p] !== typeof x[p]) {\n            return false;\n        }\n\n        switch (typeof (x[p])) {\n            case 'object':\n            case 'function':\n\n                leftChain.push(x);\n                rightChain.push(y);\n\n                if (!compare2Objects (x[p], y[p])) {\n                    return false;\n                }\n\n                leftChain.pop();\n                rightChain.pop();\n                break;\n\n            default:\n                if (x[p] !== y[p]) {\n                    return false;\n                }\n                break;\n        }\n    }\n\n    return true;\n  }\n\n  if (arguments.length &lt; 1) {\n    return true; //Die silently? Don't know how to handle such case, please help...\n    // throw \"Need two or more arguments to compare\";\n  }\n\n  for (i = 1, l = arguments.length; i &lt; l; i++) {\n\n      leftChain = []; //Todo: this can be cached\n      rightChain = [];\n\n      if (!compare2Objects(arguments[0], arguments[i])) {\n          return false;\n      }\n  }\n\n  return true;\n}\n</code></pre>\n\n<p>Known issues (well, they have very low priority, probably you'll never notice them):</p>\n\n<ul>\n<li>objects with different prototype structure but same projection</li>\n<li>functions may have identical text but refer to different closures</li>\n</ul>\n\n<p><strong>Tests:</strong> passes tests are from <em><a href=\"http://stackoverflow.com/a/16788517/139361\">How to determine equality for two JavaScript objects?</a></em>.</p>\n    "},{"t":"Using Rails 3.1, where do you put your “page specific” javascript code?","l":"http://stackoverflow.com/questions/6167805/using-rails-3-1-where-do-you-put-your-page-specific-javascript-code","q":"\n\n<p>To my understanding, all of your javascript gets merged into 1 file. Rails does this by default when it adds <code>//= require_tree .</code> to the bottom of your <code>application.js</code> manifest file. </p>\n\n<p>This sounds like a real life-saver, but I am a little concerned about page-specific javascript code. Does this code get executed on every page? The last thing I want is for all of my objects to be instantiated for every page when they are only needed on 1 page. </p>\n\n<p>Also, isn't there potential for code that clashes too?</p>\n\n<p>Or do you put a small <code>script</code> tag at the bottom of the page that just calls into a method that executes the javascript code for the page?</p>\n\n<p>Do you no longer need require.js then?</p>\n\n<p>Thanks</p>\n\n<p><strong>EDIT</strong>: I appreciate all the answers... and I don't think they are really getting at the problem. Some of them are about styling and don't seem to relate... and others just mention <code>javascript_include_tag</code>... which I know exists (obviously...) but it would appear that the Rails 3.1 way going forward is to wrap up all of your Javascript into 1 file rather than loading individual Javascript at the bottom of each page.</p>\n\n<p>The best solution I can come up with is to wrap certain features in <code>div</code> tags with <code>id</code>s or <code>class</code>es. In the javascript code, you just check if the <code>id</code> or <code>class</code> is on the page, and if it is, you run the javascript code that is associated with it. This way if the dynamic element is not on the page, the javascript code doesn't run - even though it's been included in the massive <code>application.js</code> file packaged by Sprockets.</p>\n\n<p>My above solution has the benefit that if a search box is included on 8 of the 100 pages, it will run on only those 8 pages. You also won't have to include the same code on 8 of the pages on the site. In fact, you'll never have to include manual script tags on your site anywhere ever again.</p>\n\n<p>I think this is the actual answer to my question.</p>\n    ","a":"\n<p>I appreciate all the answers... and I don't think they are really getting at the problem. Some of them are about styling and don't seem to relate... and others just mention <code>javascript_include_tag</code>... which I know exists (obviously...) but it would appear that the Rails 3.1 way going forward is to wrap up all of your Javascript into 1 file rather than loading individual Javascript at the bottom of each page.</p>\n\n<p>The best solution I can come up with is to wrap certain features in <code>div</code> tags with <code>id</code>s or <code>class</code>es. In the javascript code. Then you just check if the <code>id</code> or <code>class</code> is on the page, and if it is, you run the javascript code that is associated with it. This way if the dynamic element is not on the page, the javascript code doesn't run - even though it's been included in the massive <code>application.js</code> file packaged by Sprockets.</p>\n\n<p>My above solution has the benefit that if a search box is included on 8 of the 100 pages, it will run on only those 8 pages. You also won't have to include the same code on 8 of the pages on the site. In fact, you'll never have to include manual script tags on your site anywhere ever again - except to maybe preload data.</p>\n\n<p>I think this is the actual answer to my question.</p>\n    "},{"t":"How to detect pressing enter on keyboard using jquery?","l":"http://stackoverflow.com/questions/979662/how-to-detect-pressing-enter-on-keyboard-using-jquery","q":"\n\n<p>I would like to detect whether the user has pressed enter using Jquery.</p>\n\n<p>How is this possible? does it require a plugiN?</p>\n\n<p>EDIT: it looks like it is the keypress command. \n<a href=\"http://docs.jquery.com/Events/keypress\">http://docs.jquery.com/Events/keypress</a>\nI wanted to know if anyone knows if there are browser issues with that command - like are there any browser compatibility issues I should know about?</p>\n    ","a":"\n<p>The whole point of jQuery is that you don't have to worry about browser differences. I am pretty sure you can safely go with <kbd>enter</kbd> being 13 in all browsers. So with that in mind, you can do this:</p>\n\n<pre><code>$(document).keypress(function(e) {\n    if(e.which == 13) {\n        alert('You pressed enter!');\n    }\n});\n</code></pre>\n    "},{"t":"Constructors in JavaScript objects","l":"http://stackoverflow.com/questions/1114024/constructors-in-javascript-objects","q":"\n\n<p>Can JavaScript classes/objects have constructors? How are they created?</p>\n    ","a":"\n<p>Using prototypes:</p>\n\n<pre><code>function Box(color) // Constructor\n{\n    this.color = color;\n}\n\nBox.prototype.getColor = function()\n{\n    return this.color;\n}\n</code></pre>\n\n<p>Hiding \"color\" (somewhat resembles a private member variable):</p>\n\n<pre><code>function Box(col)\n{\n   var color = col;\n\n   this.getColor = function()\n   {\n       return color;\n   }\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var blueBox = new Box(\"blue\");\nalert(blueBox.getColor()); // will alert blue\n\nvar greenBox = new Box(\"green\");\nalert(greenBox.getColor()); // will alert green\n</code></pre>\n    "},{"t":"Node.js on multi-core machines","l":"http://stackoverflow.com/questions/2387724/node-js-on-multi-core-machines","q":"\n\n<p><a href=\"http://en.wikipedia.org/wiki/Node.js\">Node.js</a> looks interesting, <strong>BUT</strong> I must miss something - isn't Node.js tuned only to run on a single process and thread?</p>\n\n<p>Then how does it scale for multi-core CPUs and multi-CPU servers? After all, it is all great to make fast as possible single-thread server, but for high loads I would want to use several CPUs. And the same goes for making applications faster - seems today the way is use multiple CPUs and parallelize the tasks.</p>\n\n<p>How does Node.js fit into this picture? Is its idea to somehow distribute multiple instances or what?</p>\n    ","a":"\n<p>(I can't delete this answer, but it's outdated, now. For a more detailed answer, see Dave Dopson's below.)</p>\n\n<p><a href=\"http://nodejs.org/\">Node.js</a> doesn't support multiple CPUs out of the box, yet as per the web page:</p>\n\n<blockquote>\n  <p><em>But what about multiple-processor concurrency? Threads are necessary to scale programs to multi-core computers.</em> Processes are necessary to scale to multi-core computers, not memory-sharing threads. The fundamentals of scalable systems are fast networking and non-blocking design—the rest is message passing. In future versions, Node.js will be able to fork new processes (using the Web Workers API), but this is something that fits well into the current design. </p>\n</blockquote>\n\n<p>But you can still use the other cores; you just have to write more code. It's not something that Node.js will do automatically for you. On the positive side, this gives you more control.</p>\n    "},{"t":"Create a file in memory for user to download, not through server","l":"http://stackoverflow.com/questions/3665115/create-a-file-in-memory-for-user-to-download-not-through-server","q":"\n\n<p>Is there any way I can create a text file on the client side and prompt the user to download it, without any interaction with the server?\nI know I can't write directly to their machine (security and all), but can I create and prompt them to save it?</p>\n    ","a":"\n<p>You can use data URIs.  Browser support varies; see <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme#Web_browser_support\">Wikipedia</a>.  Example:</p>\n\n<pre><code>&lt;a href=\"data:application/octet-stream;charset=utf-16le;base64,//5mAG8AbwAgAGIAYQByAAoA\"&gt;text file&lt;/a&gt;\n</code></pre>\n\n<p>The octet-stream is to force a download prompt.  Otherwise, it will probably open in the browser.</p>\n\n<p>For CSV, try:</p>\n\n<pre><code>&lt;a href=\"data:application/octet-stream,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A\"&gt;CSV Octet&lt;/a&gt;z\n</code></pre>\n\n<p>Try the <a href=\"http://jsfiddle.net/VBJ9h/319/\">jsFiddle demo</a>.</p>\n    "},{"t":"JavaScript: How do I print a message to the error console?","l":"http://stackoverflow.com/questions/164397/javascript-how-do-i-print-a-message-to-the-error-console","q":"\n\n<p>How can I print a message to the error console, preferably including a variable? </p>\n\n<p>For example, something like:</p>\n\n<pre><code>print('x=%d', x);\n</code></pre>\n    ","a":"\n<p>Install <a href=\"http://en.wikipedia.org/wiki/Firebug_%28software%29\">Firebug</a> and then you can use <code>console.log(...)</code> and <code>console.debug(...)</code>, etc. (see <a href=\"http://getfirebug.com/wiki/index.php/Console_Panel#Message_types\">the documentation</a> for more).</p>\n    "},{"t":"Difference between angular-route and angular-ui-router","l":"http://stackoverflow.com/questions/21023763/difference-between-angular-route-and-angular-ui-router","q":"\n\n<p>I am new to AngularJS. I find Angular quite interesting and planning to use angular in my big apps. So I am in the process to find out the right modules to use.</p>\n\n<p>What is the difference between <strong>ngRoute (angular-route.js)</strong> and <strong>ui-router (angular-ui-router.js)</strong> modules?</p>\n\n<p>In many articles when <em>ngRoute</em> is used, route is configured with <strong><em>$routeProvider</em></strong>. However, when used with <em>ui-router</em>, route is configured with <strong><em>$stateProvider and $urlRouterProvider</em></strong>. </p>\n\n<p>This creates a bit of confusion for me. Which module should I use for better manageability and extensibility? Your answers are greatly appreciated. </p>\n    ","a":"\n<p><a href=\"https://github.com/angular-ui/ui-router\">ui-router</a> is a 3rd-party module and is very powerful.  It supports everything the normal ngRoute can do as well as many extra functions.</p>\n\n<p>Here are some common reason ui-router is chosen over ngRoute:</p>\n\n<ul>\n<li><p>ui-router allows for <a href=\"https://github.com/angular-ui/ui-router/wiki/Nested-States-%26-Nested-Views\">nested views</a> and <a href=\"https://github.com/angular-ui/ui-router/wiki/Multiple-Named-Views\">multiple named views</a>.  This is very useful with larger app where you may have pages that inherit from other sections.</p></li>\n<li><p>ui-router allows for you to have strong-type linking between states based on state names.  Change the url in one place will update every link to that state when you build your links with <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.directive:ui-sref\"><code>ui-sref</code></a>. Very useful for larger projects where URLs might change.</p></li>\n<li><p>There is also the concept of the <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$stateProvider#methods_decorator\">decorator</a> which could be used to allow your routes to be dynamically created based on the URL that is trying to be accessed. This could mean that you will not need to specify all of your routes before hand.</p></li>\n<li><p><a href=\"https://github.com/angular-ui/ui-router/wiki#state-manager\">states</a> allow you to map and access different information about different states and you can easily pass information between states via <a href=\"https://github.com/angular-ui/ui-router/wiki/URL-Routing#stateparams-service\"><code>$stateParams</code></a>.</p></li>\n<li><p>You can easily determine if you are in a state or parent of a state to adjust UI element (highlighting the navigation of the current state) within your templates via <a href=\"http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state\"><code>$state</code></a> provided by ui-router which you can expose via setting it in <code>$rootScope</code> on <code>run</code>.</p></li>\n</ul>\n\n<p>In essence, ui-router is ngRouter with more features, under the sheets it is quite different. These additional features are very useful for larger applications.</p>\n\n<p>More Information:</p>\n\n<ul>\n<li>Github: <a href=\"https://github.com/angular-ui/ui-router\">https://github.com/angular-ui/ui-router</a></li>\n<li>Documentation:\n<ul>\n<li>API Reference: <a href=\"http://angular-ui.github.io/ui-router/site/#/api\">http://angular-ui.github.io/ui-router/site/#/api</a></li>\n<li>Guide: <a href=\"https://github.com/angular-ui/ui-router/wiki\">https://github.com/angular-ui/ui-router/wiki</a></li>\n</ul></li>\n<li>FAQs: <a href=\"https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions\">https://github.com/angular-ui/ui-router/wiki/Frequently-Asked-Questions</a></li>\n<li>Sample Application: <a href=\"http://angular-ui.github.io/ui-router/sample/#/\">http://angular-ui.github.io/ui-router/sample/#/</a> </li>\n</ul>\n    "},{"t":"Insert HTML into view using AngularJS","l":"http://stackoverflow.com/questions/9381926/insert-html-into-view-using-angularjs","q":"\n\n<p>Is it possible to create an HTML fragment in an Angular controller and have this HTML shown in the view?</p>\n\n<p>This comes from a requirement to turn an inconsistent JSON blob into a nested list of <code>id : value</code> pairs. Therefore the HTML is created in the controller and I am now looking to display it.</p>\n\n<p>I have created a model property, but cannot render this in the view without it just printing the HTML.</p>\n\n<hr>\n\n<p>Update</p>\n\n<p>It appears that the problem arises from angular rendering the created HTML as a string within quotes. Will attempt to find a way around this.</p>\n\n<p>Example controller :</p>\n\n<pre><code>var SomeController = function () {\n\n    this.customHtml = '&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;';\n}\n</code></pre>\n\n<p>Example view :</p>\n\n<pre><code>&lt;div ng:bind=\"customHtml\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Gives :</p>\n\n<pre><code>&lt;div&gt;\n    \"&lt;ul&gt;&lt;li&gt;render me please&lt;/li&gt;&lt;/ul&gt;\"\n&lt;/div&gt;\n</code></pre>\n    ","a":"\n<p>Swaff's answer was correct as of that date but that doesn't work anymore; now you use:</p>\n\n<p>For Angular 1.3, use <code>ng-bind-html</code> in the HTML:</p>\n\n<pre><code>&lt;div ng-bind-html=\"thisCanBeusedInsideNgBindHtml\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and use <code>$sce.trustAsHtml()</code> in the controller to convert the html string.</p>\n\n<pre><code> $scope.thisCanBeusedInsideNgBindHtml = $sce.trustAsHtml(someHtmlVar);\n</code></pre>\n\n<p>UPDATE 2: as Sasha points out, for Angular 1.2, use:</p>\n\n<pre><code>&lt;div ng-bind-html=\"expression\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>UPDATE: as Damax pointed out, now use:</p>\n\n<pre><code>&lt;div ng-bind-html-unsafe=\"expression\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>OLD WAY:</p>\n\n<pre><code>&lt;div ng-bind-html=\"expression\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>instead of</p>\n\n<pre><code>&lt;div&gt;{{expression}}&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"https://github.com/angular/angular.js/blob/master/CHANGELOG.md\">https://github.com/angular/angular.js/blob/master/CHANGELOG.md</a> (scroll down / search for \"ng-bind-html\" in this page to see details of the change)</p>\n\n<p>ALSO, this now requires the \"ngSanitize\" module (I got hung up on this for awhile and couldn't figure out why it wasn't working - and the documentation doesn't seem clear on how to include this module). There's 2 steps:</p>\n\n<ol>\n<li><p>include the angular-sanitize.min.js resource, i.e.:<br>\n<code>&lt;script src=\"lib/angular/angular-sanitize.min.js\"&gt;&lt;/script&gt;</code></p></li>\n<li><p>In a js file (controller or usually app.js), include ngSanitize, i.e.:<br>\n<code>angular.module('myApp', ['myApp.filters', 'myApp.services', 'myApp.directives', 'ngSanitize'])</code></p></li>\n</ol>\n    "},{"t":"Check if object is a jQuery object","l":"http://stackoverflow.com/questions/1853223/check-if-object-is-a-jquery-object","q":"\n\n<p>Is there a fast way of checking if an object is a jQuery object or a native JavaScript object?</p>\n\n<p>example:</p>\n\n<pre><code>var o = {};\nvar e = $('#element');\n\nfunction doStuff(o) {\n    if (o.selector) {\n        console.log('object is jQuery');\n    }\n}\n\ndoStuff(o);\ndoStuff(e);\n</code></pre>\n\n<p>obviously, the code above works but it's not safe. You could potentially add a selector key to the <code>o</code> object and get the same result. Is there a better way of making sure that the object actually is a jQuery object?</p>\n\n<p>Something in line with <code>(typeof obj == 'jquery')</code></p>\n    ","a":"\n<p>You can use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Special_Operators/Instanceof_Operator\"><code>instanceof</code></a> operator:</p>\n\n<pre><code>obj instanceof jQuery\n</code></pre>\n\n<p><strong>Explanation</strong>: the <code>jQuery</code> function (aka <code>$</code>) is implemented as a <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Objects#Using_a_constructor_function\">constructor function</a>. Constructor functions are to be called with the <code>new</code> prefix.</p>\n\n<p>When you call <code>$(foo)</code>, internally jQuery translates this to <code>new jQuery(foo)</code><sup>1</sup>. JavaScript proceeds to initialize <code>this</code> inside the constructor function to point to a new instance of <code>jQuery</code>, setting it's properties to those found on <code>jQuery.prototype</code> (aka <code>jQuery.fn</code>). Thus, you get a <code>new</code> object where <code>instanceof jQuery</code> is <code>true</code>.</p>\n\n<hr>\n\n<p><sup>1</sup><sub>It's actually <code>new jQuery.prototype.init(foo)</code>: the constructor logic has been offloaded to another constructor function called <code>init</code>, but the concept is the same.</sub></p>\n    "},{"t":"jQuery .keyup() delay","l":"http://stackoverflow.com/questions/1909441/jquery-keyup-delay","q":"\n\n<p>I've got a search field.</p>\n\n<p>Right now it searches for every keyup. So if someone types Windows, it will make a search with AJAX for every keypress: W, Wi, Win, Wind, Windo, Window, Windows.</p>\n\n<p>I want to have a delay, so it only searches when the user stops typing for 200 ms.</p>\n\n<p>There is no option for this in the keyup function, and I have tried <code>setTimeout</code>, but it didn't work.</p>\n\n<p>How can I do that?</p>\n    ","a":"\n<p>I use this function for the same purpose, executing a function after the user has stopped typing for a specified amount of time:</p>\n\n<pre><code>var delay = (function(){\n  var timer = 0;\n  return function(callback, ms){\n    clearTimeout (timer);\n    timer = setTimeout(callback, ms);\n  };\n})();\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>$('input').keyup(function() {\n    delay(function(){\n      alert('Time elapsed!');\n    }, 1000 );\n});\n</code></pre>\n\n<p>For something more sophisticated, give a look to the jQuery <a href=\"https://github.com/dennyferra/TypeWatch\">Typewatch</a> plugin.</p>\n    "},{"t":"'console' is undefined error for Internet Explorer","l":"http://stackoverflow.com/questions/3326650/console-is-undefined-error-for-internet-explorer","q":"\n\n<p>I'm using Firebug and have some statements like:</p>\n\n<pre><code>console.log(\"...\");\n</code></pre>\n\n<p>in my page. In IE8 (probably earlier versions too) I get script errors saying 'console' is undefined. I tried putting this at the top of my page:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    if (!console) console = {log: function() {}};\n&lt;/script&gt;\n</code></pre>\n\n<p>still I get the errors. Any way to get rid of the errors?</p>\n    ","a":"\n<p>Try</p>\n\n<pre><code>if (!window.console) console = ...\n</code></pre>\n\n<p>An undefined variable cannot be referred directly. However, all global variables are attributes of the same name of the global context (<code>window</code> in case of browsers), and accessing an undefined attribute is fine.</p>\n    "},{"t":"Why does (0 < 5 < 3) return true?","l":"http://stackoverflow.com/questions/4089284/why-does-0-5-3-return-true","q":"\n\n<p>This may be a stupid question but I was playing around in jsfiddle.net and I'm curious as to why this returns true?</p>\n\n<pre><code>if(0 &lt; 5 &lt; 3) {\n    alert(\"True\");\n}\n</code></pre>\n\n<p>So does this -</p>\n\n<pre><code>if(0 &lt; 5 &lt; 2) {\n    alert(\"True\");\n}\n</code></pre>\n\n<p>But this doesn't - </p>\n\n<pre><code>if(0 &lt; 5 &lt; 1) {\n    alert(\"True\");\n}\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>I suppose the next question is is this quirk ever useful?</p>\n    ","a":"\n<p>Order of operations causes <code>(0 &lt; 5 &lt; 3)</code> to be interpreted in javascript as <code>((0 &lt; 5) &lt; 3)</code> which produces <code>(true &lt; 3)</code> and true is counted as 1, causing it to return true.</p>\n\n<p>This is also why <code>(0 &lt; 5 &lt; 1)</code> returns false, <code>(0 &lt; 5)</code> returns true, which is interpreted as <code>1</code>, resulting in <code>(1 &lt; 1)</code>.</p>\n    "},{"t":"Why does 2+ 40 equal 42?","l":"http://stackoverflow.com/questions/31507143/why-does-2-40-equal-42","q":"\n\n<p>I was baffled when a colleague showed me this line of JavaScript alerting 42.</p>\n\n<p></p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>alert(2+ 40);</code></pre>\n</div>\n</div>\n<p></p>\n\n<p>It quickly turns out that what looks like a minus sign is actually an arcane Unicode character with clearly different semantics.</p>\n\n<p>This left me wondering why that character doesn't produce a syntax error when the expression is parsed. I'd also like to know if there are more characters behaving like this.</p>\n    ","a":"\n<p>That character is <a href=\"https://codepoints.net/U+1680\">\"OGHAM SPACE MARK\"</a>, which is a space character. So the code is equivalent to <code>alert(2+ 40)</code>.</p>\n\n<blockquote>\n  <p>I'd also like to know if there are more characters behaving like this.</p>\n</blockquote>\n\n<p>Any Unicode character in the Zs class <a href=\"http://www.ecma-international.org/ecma-262/6.0/#sec-white-space\">is a white space character in JavaScript</a>, <a href=\"https://codepoints.net/search?q=&amp;na=&amp;int=&amp;gc[]=Zs&amp;Bidi_M=&amp;Bidi_C=&amp;CE=&amp;Comp_Ex=&amp;XO_NFC=&amp;XO_NFD=&amp;XO_NFKC=&amp;XO_NFKD=&amp;Join_C=&amp;Upper=&amp;Lower=&amp;OUpper=&amp;OLower=&amp;CI=&amp;Cased=&amp;CWCF=&amp;CWCM=&amp;CWL=&amp;CWKCF=&amp;CWT=&amp;CWU=&amp;IDS=&amp;OIDS=&amp;XIDS=&amp;IDC=&amp;OIDC=&amp;XIDC=&amp;Pat_Syn=&amp;Pat_WS=&amp;Dash=&amp;Hyphen=&amp;QMark=&amp;Term=&amp;STerm=&amp;Dia=&amp;Ext=&amp;SD=&amp;Alpha=&amp;OAlpha=&amp;Math=&amp;OMath=&amp;Hex=&amp;AHex=&amp;DI=&amp;ODI=&amp;LOE=&amp;WSpace=&amp;Gr_Base=&amp;Gr_Ext=&amp;OGr_Ext=&amp;Gr_Link=&amp;Ideo=&amp;UIdeo=&amp;IDSB=&amp;IDST=&amp;Radical=&amp;Dep=&amp;VS=&amp;NChar=\">but there don't seem to be that many</a>.</p>\n\n<p>However, <a href=\"https://mathiasbynens.be/notes/javascript-identifiers-es6\">JavaScript also allows Unicode characters in identifiers</a>, which lets you use interesting variable names like <code>ಠ_ಠ</code>.</p>\n    "},{"t":"What is the difference between substr and substring?","l":"http://stackoverflow.com/questions/3745515/what-is-the-difference-between-substr-and-substring","q":"\n\n<p>What is the difference between</p>\n\n<pre><code>alert(\"abc\".substr(0,2));\n</code></pre>\n\n<p>and</p>\n\n<pre><code>alert(\"abc\".substring(0,2));\n</code></pre>\n\n<p>They both seem to output “ab”.</p>\n    ","a":"\n<p>The difference is in the second argument. The second argument to <code>substring</code> is the index to stop at (but not include), but the second argument to <code>substr</code> is the maximum length to return.</p>\n\n<p>Links?</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substr\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substr</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substring\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substring</a></p>\n    "},{"t":"jQuery selectors on custom data attributes using HTML5","l":"http://stackoverflow.com/questions/4146502/jquery-selectors-on-custom-data-attributes-using-html5","q":"\n\n<p>I would like to know what selectors are available for these data attributes that come with HTML5.</p>\n\n<p>Taking this piece of HTML as an example:</p>\n\n<pre><code>&lt;ul data-group=\"Companies\"&gt;\n  &lt;li data-company=\"Microsoft\"&gt;&lt;/li&gt;\n  &lt;li data-company=\"Google\"&gt;&lt;/li&gt;\n  &lt;li data-company =\"Facebook\"&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>Are there selectors to get:</p>\n\n<ul>\n<li>All elements with <code>data-company=\"Microsoft\"</code> below <code>\"Companies\"</code></li>\n<li>All elements with <code>data-company!=\"Microsoft\"</code> below <code>\"Companies\"</code></li>\n<li>In other cases is it possible to use other selectors like \"contains, less than, greater than, etc...\".</li>\n</ul>\n    ","a":"\n<pre><code>$(\"ul[data-group='Companies'] li[data-company='Microsoft']\") //Get all elements with data-company=\"Microsoft\" below \"Companies\"\n\n$(\"ul[data-group='Companies'] li:not([data-company='Microsoft'])\") //get all elements with data-company!=\"Microsoft\" below \"Companies\"\n</code></pre>\n\n<p>Look in to <a href=\"http://api.jquery.com/category/selectors/\">jQuery Selectors</a> :contains is a selector</p>\n\n<p>here is info on the <a href=\"http://api.jquery.com/contains-selector/\">:contains selector</a></p>\n    "},{"t":"JSON datetime between Python and JavaScript","l":"http://stackoverflow.com/questions/455580/json-datetime-between-python-and-javascript","q":"\n\n<p>I want to send a datetime.datetime object in serialized form from Python using <a href=\"http://en.wikipedia.org/wiki/JSON\">JSON</a> and de-serialize in JavaScript using JSON. What is the best way to do this?</p>\n    ","a":"\n<p>You can add the 'default' parameter to json.dumps to handle this:</p>\n\n<pre><code>&gt;&gt;&gt; dthandler = lambda obj: (\n...     obj.isoformat()\n...     if isinstance(obj, datetime.datetime)\n...     or isinstance(obj, datetime.date)\n...     else None)\n&gt;&gt;&gt; json.dumps(datetime.datetime.now(), default=dthandler)\n'\"2010-04-20T20:08:21.634121\"'\n</code></pre>\n\n<p>Which is <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> format. </p>\n\n<p>A more comprehensive default handler function:</p>\n\n<pre><code>def handler(obj):\n    if hasattr(obj, 'isoformat'):\n        return obj.isoformat()\n    elif isinstance(obj, ...):\n        return ...\n    else:\n        raise TypeError, 'Object of type %s with value of %s is not JSON serializable' % (type(obj), repr(obj))\n</code></pre>\n\n<p>Update:  Added output of type as well as value.<br>\nUpdate:  Also handle date </p>\n    "},{"t":"How to get browser to navigate to URL in Javascript?","l":"http://stackoverflow.com/questions/1226714/how-to-get-browser-to-navigate-to-url-in-javascript","q":"\n\n<p>What is the best (correct, modern, cross-browser, safe) way to get a web browser to navigate to a URL of your choice using Javascript?</p>\n    ","a":"\n<p>This works in all browsers:</p>\n\n<pre><code>window.location.href = '...';\n</code></pre>\n\n<p>If you wanted to change the page without it reflecting in the browser back history, you can do:</p>\n\n<pre><code>window.location.replace('...');\n</code></pre>\n    "},{"t":"How do I add a class to a given element?","l":"http://stackoverflow.com/questions/507138/how-do-i-add-a-class-to-a-given-element","q":"\n\n<p>I have a element that already has a class:</p>\n\n<pre><code>&lt;div class=\"someclass\"&gt;\n          &lt;img ... id=\"image1\" name=\"image1\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Now I want to create a javascript function that will add a class to the div (not replace, but add).</p>\n\n<p>How can I do that?</p>\n    ","a":"\n<p>Add a space plus the name of your new class to the <code>className</code> property of the element. First, put an <code>id</code> on the element so you can easily get a reference.</p>\n\n<pre><code>&lt;div id=\"div1\" class=\"someclass\"&gt;\n    &lt;img ... id=\"image1\" name=\"image1\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Then </p>\n\n<pre><code>var d = document.getElementById(\"div1\");\nd.className = d.className + \" otherclass\";\n</code></pre>\n\n<p>See also <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/className\">element.className on MDN</a>.</p>\n    "},{"t":"Why do you need to invoke an anonymous function on the same line?","l":"http://stackoverflow.com/questions/1140089/why-do-you-need-to-invoke-an-anonymous-function-on-the-same-line","q":"\n\n<p>I was reading some posts about closures and saw this everywhere, but there is no clear explanation how it works - everytime I was just told to use it...:</p>\n\n<pre><code>// Create a new anonymous function, to use as a wrapper\n(function(){\n    // The variable that would, normally, be global\n    var msg = \"Thanks for visiting!\";\n\n    // Binding a new function to a global object\n    window.onunload = function(){\n        // Which uses the 'hidden' variable\n        alert( msg );\n    };\n// Close off the anonymous function and execute it\n})();\n</code></pre>\n\n<p>Ok I see that we will create new anonymous function and then execute it. So after that this simple code should work (and it does):</p>\n\n<pre><code>(function (msg){alert(msg)})('SO');\n</code></pre>\n\n<p>My question is what kind of magic happens here? I thought that when I wrote:</p>\n\n<pre><code>(function (msg){alert(msg)})\n</code></pre>\n\n<p>then a new unnamed function would be created like function \"\"(msg) ...</p>\n\n<p>but then why doesn't this work?</p>\n\n<pre><code>(function (msg){alert(msg)});\n('SO');\n</code></pre>\n\n<p>Why does it need to be in the same line?</p>\n\n<p>Could you please point me some posts or give me an explanation?</p>\n    ","a":"\n<p>Drop the semicolon after the function definition.</p>\n\n<pre><code>(function (msg){alert(msg)})\n('SO');\n</code></pre>\n\n<p>Above should work.</p>\n\n<p>DEMO Page: <a href=\"http://jsbin.com/ujazi\">http://jsbin.com/ujazi</a></p>\n\n<p>Code: <a href=\"http://jsbin.com/ujazi/edit\">http://jsbin.com/ujazi/edit</a></p>\n\n<p>I have discussed this kind of pattern in this post:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1122690/jquery-and-questions/1122740#1122740\">jQuery and $ questions</a></p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>If you look at <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\">ECMA script specification</a>, there are 3 ways you can define a function. (Page 98, Section 13 Function Definition)</p>\n\n<h2>1. Using Function constructor</h2>\n\n<pre><code>var sum = new Function('a','b', 'return a + b;');\nalert(sum(10, 20)); //alerts 30\n</code></pre>\n\n<h2>2. Using Function declaration.</h2>\n\n<pre><code>function sum(a, b)\n{\n    return a + b;\n}\n\nalert(sum(10, 10)); //Alerts 20;\n</code></pre>\n\n<h2>3. Function Expression</h2>\n\n<pre><code>var sum = function(a, b) { return a + b; }\n\nalert(sum(5, 5)); // alerts 10\n</code></pre>\n\n<p>So you may ask, what's the difference between declaration and expression? </p>\n\n<p>From ECMA Script specification:</p>\n\n<blockquote>\n  <p>FunctionDeclaration :\n      function Identifier ( FormalParameterListopt ){ FunctionBody\n  }</p>\n  \n  <p>FunctionExpression :\n      function Identifieropt ( FormalParameterListopt ){ FunctionBody\n  }</p>\n</blockquote>\n\n<p>If you notice, 'identifier' is <strong>optional</strong> for function expression. And when you don't give an identifier, you create an anonymous function. It doesn't mean that you can't specify an identifier.</p>\n\n<p>This means following is valid.</p>\n\n<pre><code>var sum = function mySum(a, b) { return a + b; }\n</code></pre>\n\n<p>Important point to note is that you can use 'mySum' only inside the mySum function body, not outside. See following example:</p>\n\n<pre><code>var test1 = function test2() { alert(typeof test2); }\n\nalert(typeof(test2)); //alerts 'undefined', surprise! \n\ntest1(); //alerts 'function' because test2 is a function.\n</code></pre>\n\n<p><a href=\"http://jsbin.com/esupa\">Live Demo</a></p>\n\n<p>Compare this to</p>\n\n<pre><code> function test1() { alert(typeof test1) };\n\n alert(typeof test1); //alerts 'function'\n\n test1(); //alerts 'function'\n</code></pre>\n\n<hr>\n\n<p>Armed with this knowledge, let's try to analyze your code.</p>\n\n<p>When you have code like, </p>\n\n<pre><code>    function(msg) { alert(msg); }\n</code></pre>\n\n<p>You created a function expression. And you can execute this function expression by wrapping it inside parenthesis.</p>\n\n<pre><code>    (function(msg) { alert(msg); })('SO'); //alerts SO.\n</code></pre>\n    "},{"t":"Add days to DateTime","l":"http://stackoverflow.com/questions/563406/add-days-to-datetime","q":"\n\n<p>How to add days to current <code>DateTime</code> using JavaScript. Does JavaScript have a built in function like .Net <code>AddDay</code>?</p>\n    ","a":"\n<p><strong>A general solution to this question is provided by AnthonyWJones below, whereas this answer will lead to bugs if you assume it works on arbitrary dates.  There is no good reason to use this solution as its logic is unclear and it will break in anything but the most simplistic scenarios.</strong></p>\n\n<pre><code>var today = new Date();\nvar tomorrow = new Date(today);\ntomorrow.setDate(today.getDate()+1);\n</code></pre>\n\n<p>This will deal with end of months so adding 32 days will work.</p>\n\n<p><strong>Note that this approach fails if the 'from' <code>Date</code> is not in the same year <em>or</em> month as the <em>current</em> <code>Date</code>:</strong></p>\n\n<pre><code>var from = new Date('2010-12-20T00:00:00');\nvar to = new Date();\nto.setDate(from.getDate() + 30); // Tue Nov 19 2013 (WRONG!)\n</code></pre>\n    "},{"t":"How to randomize (shuffle) a JavaScript array?","l":"http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array","q":"\n\n<p>I have one array like this:</p>\n\n<pre><code>var arr 1 = [\"a\", \"b\", \"c\", \"d\"];\n</code></pre>\n\n<p>How can I randomize / shuffle it?</p>\n    ","a":"\n<p>The de-facto unbiased shuffle algorithm is the Fisher-Yates (aka Knuth) Shuffle.</p>\n\n<p>See <a href=\"https://github.com/coolaj86/knuth-shuffle\">https://github.com/coolaj86/knuth-shuffle</a></p>\n\n<p>You can see a <a href=\"http://bost.ocks.org/mike/shuffle/\">great visualization here</a> (and the original post <a href=\"http://sedition.com/perl/javascript-fy.html\">linked to this</a>)</p>\n\n<pre><code>function shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex ;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n</code></pre>\n\n<p>Used like so</p>\n\n<pre><code>var arr = [2, 11, 37, 42];\nshuffle(arr);\nconsole.log(arr);\n</code></pre>\n\n<p>Some more info <a href=\"http://en.wikipedia.org/wiki/Fisher-Yates_shuffle\">about the algorithm</a> used.</p>\n    "},{"t":"Changing the image source using jQuery","l":"http://stackoverflow.com/questions/554273/changing-the-image-source-using-jquery","q":"\n\n<p>My DOM looks like this:</p>\n\n<pre><code>&lt;div id=\"d1\"&gt;\n   &lt;div class=\"c1\"&gt;\n            &lt;a href=\"#\"&gt;&lt;img src=\"img1_on.gif\"&gt;&lt;/a&gt;\n            &lt;a href=\"#\"&gt;&lt;img src=\"img2_on.gif\"&gt;&lt;/a&gt;\n   &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>When someone clicks on an image, I want the image src to change to <code>&lt;img src=\"imgx_off.gif\"&gt;</code> where <code>x</code> represents the image number 1 or 2.</p>\n\n<p>Is this possible or do I have to use CSS to change the images?</p>\n    ","a":"\n<p>You can use jQuery's <a href=\"http://api.jquery.com/attr/\">attr()</a> function.  For example, if you img tag has an id attribute of 'my_image':</p>\n\n<pre><code>&lt;img id=\"my_image\" src=\"first.jpg\"/&gt;\n</code></pre>\n\n<p>Then you can change the src in jQuery by:</p>\n\n<pre><code>$(\"#my_image\").attr(\"src\",\"second.jpg\");\n</code></pre>\n\n<p>To attach this to an onclick event, you could write:</p>\n\n<pre><code>$('#my_image').on({\n    'click': function(){\n        $('#my_image').attr('src','second.jpg');\n    }\n});\n</code></pre>\n\n<p>To rotate the image, you could do this:</p>\n\n<pre><code>$('img').on({\n    'click': function() {\n         var src = ($(this).attr('src') === 'img1_on.jpg')\n            ? 'img2_on.jpg'\n            : 'img1_on.jpg';\n         $(this).attr('src', src);\n    }\n});\n</code></pre>\n    "},{"t":"How to apply !important using .css()?","l":"http://stackoverflow.com/questions/2655925/how-to-apply-important-using-css","q":"\n\n<p>I am having trouble applying a style that is <code>!important</code>. I’ve tried:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$(\"#elem\").css(\"width\", \"100px !important\");\n</code></pre>\n\n<p>This does <strong>nothing</strong>; no width style whatsoever is applied. Is there a jQuery-ish way of applying such a style without having to overwrite <code>cssText</code> (which would mean I’d need to parse it first, etc.)?</p>\n\n<p><strong>Edit</strong>: I should add that I have a stylesheet with an <code>!important</code> style that I am trying to override with an <code>!important</code> style inline, so using <code>.width()</code> and the like does not work since it gets overridden by my external <code>!important</code> style.</p>\n\n<p>Also, the value that will override the previous value <strong>is computed</strong>, so I cannot simply create another external style.</p>\n    ","a":"\n<p>I think I've found a real solution. I've made it into a new function:</p>\n\n<p><code>jQuery.style(name, value, priority);</code></p>\n\n<p>You can use it to get values with <code>.style('name')</code> just like <code>.css('name')</code>, get the CSSStyleDeclaration with <code>.style()</code>, and also set values - with the ability to specify the priority as 'important'. See <a href=\"https://developer.mozilla.org/en/DOM/CSSStyleDeclaration\">https://developer.mozilla.org/en/DOM/CSSStyleDeclaration</a>.</p>\n\n<h2>Demo</h2>\n\n<pre><code>var div = $('someDiv');\nconsole.log(div.style('color'));\ndiv.style('color', 'red');\nconsole.log(div.style('color'));\ndiv.style('color', 'blue', 'important');\nconsole.log(div.style('color'));\nconsole.log(div.style().getPropertyPriority('color'));\n</code></pre>\n\n<p>Here's the output:</p>\n\n<pre><code>null\nred\nblue\nimportant\n</code></pre>\n\n<h2>The Function</h2>\n\n<pre><code>(function($) {    \n  if ($.fn.style) {\n    return;\n  }\n\n  // Escape regex chars with \\\n  var escape = function(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&amp;\");\n  };\n\n  // For those who need them (&lt; IE 9), add support for CSS functions\n  var isStyleFuncSupported = !!CSSStyleDeclaration.prototype.getPropertyValue;\n  if (!isStyleFuncSupported) {\n    CSSStyleDeclaration.prototype.getPropertyValue = function(a) {\n      return this.getAttribute(a);\n    };\n    CSSStyleDeclaration.prototype.setProperty = function(styleName, value, priority) {\n      this.setAttribute(styleName, value);\n      var priority = typeof priority != 'undefined' ? priority : '';\n      if (priority != '') {\n        // Add priority manually\n        var rule = new RegExp(escape(styleName) + '\\\\s*:\\\\s*' + escape(value) +\n            '(\\\\s*;)?', 'gmi');\n        this.cssText =\n            this.cssText.replace(rule, styleName + ': ' + value + ' !' + priority + ';');\n      }\n    };\n    CSSStyleDeclaration.prototype.removeProperty = function(a) {\n      return this.removeAttribute(a);\n    };\n    CSSStyleDeclaration.prototype.getPropertyPriority = function(styleName) {\n      var rule = new RegExp(escape(styleName) + '\\\\s*:\\\\s*[^\\\\s]*\\\\s*!important(\\\\s*;)?',\n          'gmi');\n      return rule.test(this.cssText) ? 'important' : '';\n    }\n  }\n\n  // The style function\n  $.fn.style = function(styleName, value, priority) {\n    // DOM node\n    var node = this.get(0);\n    // Ensure we have a DOM node\n    if (typeof node == 'undefined') {\n      return this;\n    }\n    // CSSStyleDeclaration\n    var style = this.get(0).style;\n    // Getter/Setter\n    if (typeof styleName != 'undefined') {\n      if (typeof value != 'undefined') {\n        // Set style property\n        priority = typeof priority != 'undefined' ? priority : '';\n        style.setProperty(styleName, value, priority);\n        return this;\n      } else {\n        // Get style property\n        return style.getPropertyValue(styleName);\n      }\n    } else {\n      // Get CSSStyleDeclaration\n      return style;\n    }\n  };\n})(jQuery);\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en/DOM/CSSStyleDeclaration\">https://developer.mozilla.org/en/DOM/CSSStyleDeclaration</a> for examples of how to read and set the CSS values. My issue was that I had already set <code>!important</code> for the width in my CSS to avoid conflicts with other theme CSS, but any changes I made to the width in jQuery would be unaffected since they would be added to the style attribute.</p>\n\n<h2>Compatibility</h2>\n\n<p>For setting with the priority using the <code>setProperty</code> function, <a href=\"http://help.dottoro.com/ljdpsdnb.php\">http://help.dottoro.com/ljdpsdnb.php</a> says there is support for IE 9+ and all other browsers. I have tried with IE 8 and it has failed, which is why I built support for it in my functions (see above). It will work on all other browsers using setProperty, but it will need my custom code to work in &lt; IE 9.</p>\n    "},{"t":"Are there legitimate uses for JavaScript's “with” statement?","l":"http://stackoverflow.com/questions/61552/are-there-legitimate-uses-for-javascripts-with-statement","q":"\n\n<p><a href=\"http://www.stackoverflow.com/questions/61088/hidden-features-of-javascript#61118\">Alan Storm's comments</a> in response to my answer regarding the <a href=\"http://developer.mozilla.org/index.php?title=En/Core_JavaScript_1.5_Reference/Statements/With\"><code>with</code> statement</a> got me thinking. I've seldom found a reason to use this particular language feature, and had never given much thought to how it might cause trouble. Now, I'm curious as to how I might make effective use of <code>with</code>, while avoiding its pitfalls...</p>\n\n<p>So my question is, where have you found the <code>with</code> statement useful?</p>\n    ","a":"\n<p>Another use occurred to me today, so I searched the web excitedly and found an existing mention of it: <a href=\"http://web.archive.org/web/20090111183416/http://www.hedgerwow.com/360/dhtml/js_block_scope.html\" rel=\"nofollow\">Defining Variables inside Block Scope</a>.</p>\n\n<h3>Background</h3>\n\n<p>JavaScript, in spite of its superficial resemblance to C and C++, does not scope variables to the block they are defined in:</p>\n\n<pre><code>var name = \"Joe\";\nif ( true )\n{\n   var name = \"Jack\";\n}\n// name now contains \"Jack\"\n</code></pre>\n\n<p>Declaring a closure in a loop is a common task where this can lead to errors:</p>\n\n<pre><code>for (var i=0; i&lt;3; ++i)\n{\n   var num = i;\n   setTimeout(function() { alert(num); }, 10);\n}\n</code></pre>\n\n<p>Because the for loop does not introduce a new scope, the same <code>num</code> - with a value of <code>2</code> - will be shared by all three functions. </p>\n\n<h3>A new scope: <code>let</code> and <code>with</code></h3>\n\n<p>With the introduction of the <code>let</code> statement in <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let\" rel=\"nofollow\">ES6</a>, it becomes easy to introduce a new scope when necessary to avoid these problems:</p>\n\n<pre><code>// variables introduced in this statement \n// are scoped to each iteration of the loop\nfor (let i=0; i&lt;3; ++i)\n{\n   setTimeout(function() { alert(num); }, 10);\n}\n</code></pre>\n\n<p>Or even:</p>\n\n<pre><code>for (var i=0; i&lt;3; ++i)\n{\n   // variables introduced in this statement \n   // are scoped to the block containing it.\n   let num = i;\n   setTimeout(function() { alert(num); }, 10);\n}\n</code></pre>\n\n<p>Until ES6 is universally available, this use remains limited to the newest browsers and developers willing to use transpilers. However, we can easily simulate this behavior using <code>with</code>:</p>\n\n<pre><code>for (var i=0; i&lt;3; ++i)\n{\n   // object members introduced in this statement \n   // are scoped to the block following it.\n   with ({num: i})\n   {\n      setTimeout(function() { alert(num); }, 10);\n   }\n}\n</code></pre>\n\n<p>The loop now works as intended, creating three separate variables with values from 0 to 2. Note that variables declared <em>within</em> the block are not scoped to it, unlike the behavior of blocks in C++ (in C, variables must be declared at the start of a block, so in a way it is similar). This behavior is actually quite similar to a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let#let_blocks\" rel=\"nofollow\"><code>let</code> block syntax</a> introduced in earlier versions of Mozilla browsers, but not widely adopted elsewhere.</p>\n    "},{"t":"Why is using the JavaScript eval function a bad idea?","l":"http://stackoverflow.com/questions/86513/why-is-using-the-javascript-eval-function-a-bad-idea","q":"\n\n<p>The eval function is a powerful and easy way to dynamically generate code, so what are the caveats?</p>\n    ","a":"\n<ol>\n<li><p>Improper use of eval opens up your\ncode for injection attacks</p></li>\n<li><p>Debugging can be more challenging\n(no line numbers, etc.)</p></li>\n<li><p>eval'd code executes more slowly (no opportunity to compile/cache eval'd code)</p></li>\n</ol>\n\n<p>Edit: As @Jeff Walden points out in comments, #3 is less true today than it was in 2008. However, while some caching of compiled scripts may happen this will only be limited to scripts that are eval'd repeated with no modification. A more likely scenario is that you are eval'ing scripts that have undergone slight modification each time and as such could not be cached. Let's just say that SOME eval'd code executes more slowly.</p>\n    "},{"t":"Include jQuery in the JavaScript Console","l":"http://stackoverflow.com/questions/7474354/include-jquery-in-the-javascript-console","q":"\n\n<p>Is there an easy way to include jQuery in the Chrome JavaScript console for sites that do not use it? For example, on a website I would like to get the number of rows in a table. I know this is really easy with jQuery.</p>\n\n<pre><code>$('element').length;\n</code></pre>\n\n<p>The site does not use jQuery. Can I add it in from the command line?</p>\n    ","a":"\n<p>Run this in your browser's JavaScript console, then jQuery should be available...</p>\n\n<pre><code>var jq = document.createElement('script');\njq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js\";\ndocument.getElementsByTagName('head')[0].appendChild(jq);\n// ... give time for script to load, then type.\njQuery.noConflict();\n</code></pre>\n\n<p><strong>NOTE:</strong> if the site has scripts that conflict with jQuery (other libs, etc.) you could still run into problems.</p>\n    "},{"t":"What is the purpose of the HTML “no-js” class?","l":"http://stackoverflow.com/questions/6724515/what-is-the-purpose-of-the-html-no-js-class","q":"\n\n<p>I notice that in a lot of template engines, in the <a href=\"http://html5boilerplate.com/\">HTML5 Boilerplate</a>, in various frameworks and in plain php sites there is the <code>no-js</code> class added onto the <code>&lt;HTML&gt;</code> tag. </p>\n\n<p>Why is this done? Is there some sort of default browser behavior that reacts to this class? Why include it always? Does that not render the class itself obsolete, if there is no no-\"no-js\" case and html can be addressed directly?</p>\n\n<p>Here is an example from the HTML5 Boilerplate index.html:</p>\n\n<pre><code>&lt;!--[if lt IE 7 ]&gt; &lt;html lang=\"en\" class=\"no-js ie6\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 7 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie7\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 8 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie8\"&gt; &lt;![endif]--&gt;\n&lt;!--[if IE 9 ]&gt;    &lt;html lang=\"en\" class=\"no-js ie9\"&gt; &lt;![endif]--&gt;\n&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html lang=\"en\" class=\"no-js\"&gt; &lt;!--&lt;![endif]--&gt;\n</code></pre>\n\n<p>As you can see, the <code>&lt;html&gt;</code> element will always have this class.\nCan someone explain why this is done so often?</p>\n    ","a":"\n<p>When Modernizr runs, it removes the \"no-js\" class and replaces it with \"js\". This is a way to know in your CSS whether or not Javascript support is enabled.</p>\n\n<p>See <a href=\"https://github.com/Modernizr/Modernizr/blob/master/src/setClasses.js#L9\">Modernizer's source code</a>.</p>\n    "},{"t":"JavaScript: formatting number with exactly two decimals","l":"http://stackoverflow.com/questions/1726630/javascript-formatting-number-with-exactly-two-decimals","q":"\n\n<p>I have this line of code which rounds my numbers to 2 decimal places. But the thing is I get numbers like this. 10.8, 2.4 etc. These are not my idea of 2 decimal places so how I can improve this:</p>\n\n<pre><code>Math.round(price*Math.pow(10,2))/Math.pow(10,2);\n</code></pre>\n\n<p>I want numbers like 10.80, 2.40 etc. Use of JQuery is fine with me.</p>\n    ","a":"\n<p>To format a number using fixed-point notation, you can simply use the <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Number/toFixed\">toFixed</a> method:</p>\n\n<pre><code>(10.8).toFixed(2); // \"10.80\"\n\nvar num = 2.4;\nalert(num.toFixed(2)); // \"2.40\"\n</code></pre>\n\n<p>Note that <code>toFixed()</code> returns a string.</p>\n    "},{"t":"jquery disable/enable submit button","l":"http://stackoverflow.com/questions/1594952/jquery-disable-enable-submit-button","q":"\n\n<p>I have this html:</p>\n\n<pre><code>&lt;input type=\"text\" name=\"textField\" /&gt;\n &lt;input type=\"submit\" value=\"send\" /&gt;\n</code></pre>\n\n<p>How can I do something like this:</p>\n\n<ul>\n<li>When the text field is empty the submit should be disabled (disabled=\"disabled\").</li>\n<li>When something is typed in the text field to remove the disabled attribute.</li>\n<li>If the text field becomes empty again(the text is deleted) the submit button should be disabled again.</li>\n</ul>\n\n<p>I tried something like this:</p>\n\n<pre><code>$(document).ready(function(){\n     $('input[type=\"submit\"]').attr('disabled','disabled');\n     $('input[type=\"text\"]').change(function(){\n            if($(this).val != ''){\n               $('input[type=\"submit\"]').removeAttr('disabled');\n            }\n     });\n });\n</code></pre>\n\n<p>..but it doesn't work. Any ideas? Thanks.</p>\n    ","a":"\n<p>The problem is that the change event fires only when focus is moved away from the input (e.g. someone clicks off the input or tabs out of it).  Try using keyup instead:</p>\n\n<pre><code>$(document).ready(function() {\n     $('input[type=\"submit\"]').prop('disabled', true);\n     $('input[type=\"text\"]').keyup(function() {\n        if($(this).val() != '') {\n           $('input[type=\"submit\"]').prop('disabled', false);\n        }\n     });\n });\n</code></pre>\n    "},{"t":"Updating address bar with new URL without hash or reloading the page","l":"http://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page","q":"\n\n<p>I either dreamt about chrome (dev channel) implementing a way to update the address bar via javascript (the path, not domain) without reloading the page or they really have done this.</p>\n\n<p>However, I can't find the article I <em>think</em> I read.</p>\n\n<p>Am I crazy or is there a way to do this (in Chrome)?</p>\n\n<p>p.s. I'm not talking about window.location.hash, et al. If the above exists <a href=\"http://stackoverflow.com/a/824356/160173\">the answer to this question</a> will be untrue.</p>\n    ","a":"\n<p><strong>You can now do this in most \"modern\" browsers!</strong></p>\n\n<p>Here is the original article I read (posted July 10, 2010): <a href=\"http://spoiledmilk.com/blog/html5-changing-the-browser-url-without-refreshing-page/\">HTML5: Changing the browser-URL without refreshing page</a>.</p>\n\n<p>For a more in-depth look into pushState/replaceState/popstate (aka the HTML5 History API) <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Manipulating_the_browser_history\">see the MDN docs</a>.</p>\n\n<p>TL;DR, you can do this:</p>\n\n<pre><code>window.history.pushState(\"object or string\", \"Title\", \"/new-url\");\n</code></pre>\n\n<p>See my answer to <a href=\"http://stackoverflow.com/questions/824349/modify-the-url-without-reloading-the-page/3354511#3354511\">Modify the URL without reloading the page</a> for a basic how-to.</p>\n    "},{"t":"How to get image size (height & width) using JavaScript?","l":"http://stackoverflow.com/questions/623172/how-to-get-image-size-height-width-using-javascript","q":"\n\n<p>Are there any JavaScript or jQuery APIs or methods to get the dimensions of an image on the page?</p>\n    ","a":"\n<p><a href=\"https://developer.mozilla.org/en/DOM/element.clientWidth\">clientWidth</a> and <a href=\"https://developer.mozilla.org/en/DOM/element.clientheight\">clientHeight</a> are DOM properties that show the current in-browser size of the inner dimensions of a DOM element (excluding margin and border). So in the case of an IMG element, this will get the actual dimensions of the visible image.</p>\n\n<pre><code>var img = document.getElementById('imageid'); \n//or however you get a handle to the IMG\nvar width = img.clientWidth;\nvar height = img.clientHeight;\n</code></pre>\n    "},{"t":"How to break/exit from a each() function in JQuery? [duplicate]","l":"http://stackoverflow.com/questions/1799284/how-to-break-exit-from-a-each-function-in-jquery","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/1784780/how-to-break-out-of-jquery-each-loop\" dir=\"ltr\">How to break out of jQuery each Loop</a>\n                <span class=\"question-originals-answer-count\">\n                    4 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I have a code:</p>\n\n<pre><code>$(xml).find(\"strengths\").each(function() {\n   //Code\n   //How can i escape from this block based on a condition.\n});\n</code></pre>\n\n<p>How can i escape from the \"each\" code block based on a condition?</p>\n\n<h3>Update:</h3>\n\n<p>What if we have something like this:</p>\n\n<pre><code>$(xml).find(\"strengths\").each(function() {\n   $(this).each(function() {\n       //I want to break out from both each loops at the same time.\n   });\n});\n</code></pre>\n\n<p>Is it possible to break out from both \"each\" functions from the inner \"each\" function?</p>\n\n<p><strong># 19.03.2013</strong></p>\n\n<p><strong>If you want to continue instead of break out</strong></p>\n\n<pre><code>return true;\n</code></pre>\n    ","a":"\n<p>According to the <a href=\"http://docs.jquery.com/Utilities/jQuery.each\">documentation</a> you can simply <code>return false;</code> to break:</p>\n\n<pre><code>$(xml).find(\"strengths\").each(function() {\n\n    if (iWantToBreak)\n        return false;\n});\n</code></pre>\n    "},{"t":"Is there a way to detect if a browser window is not currently active?","l":"http://stackoverflow.com/questions/1060008/is-there-a-way-to-detect-if-a-browser-window-is-not-currently-active","q":"\n\n<p>I have JavaScript that is doing activity periodically. When the user is not looking at the site (i.e., the window or tab does not have focus), it'd be nice to not run.</p>\n\n<p>Is there a way to do this using JavaScript?</p>\n\n<p>My reference point: Gmail Chat plays a sound if the window you're using isn't active. </p>\n    ","a":"\n<p>Since originally writing this answer, a new specification has reached <em>recommendation</em> status thanks to the W3C. The <a href=\"http://www.w3.org/TR/page-visibility/\">Page Visibility API</a> now allows us to more accurately detect when a page is hidden to the user.</p>\n\n<p>Current browser support:</p>\n\n<ul>\n<li>Chrome 13+</li>\n<li>Internet Explorer 10+</li>\n<li>Firefox 10+</li>\n<li>Opera 12.10+ <sup>[<a href=\"https://dev.opera.com/blog/page-visibility-api-support-in-opera-12-10/\">read notes</a>]</sup></li>\n</ul>\n\n<p>The following code makes use of the API, falling back to the less reliable blur/focus method in incompatible browsers.</p>\n\n<pre><code>(function() {\n  var hidden = \"hidden\";\n\n  // Standards:\n  if (hidden in document)\n    document.addEventListener(\"visibilitychange\", onchange);\n  else if ((hidden = \"mozHidden\") in document)\n    document.addEventListener(\"mozvisibilitychange\", onchange);\n  else if ((hidden = \"webkitHidden\") in document)\n    document.addEventListener(\"webkitvisibilitychange\", onchange);\n  else if ((hidden = \"msHidden\") in document)\n    document.addEventListener(\"msvisibilitychange\", onchange);\n  // IE 9 and lower:\n  else if (\"onfocusin\" in document)\n    document.onfocusin = document.onfocusout = onchange;\n  // All others:\n  else\n    window.onpageshow = window.onpagehide\n    = window.onfocus = window.onblur = onchange;\n\n  function onchange (evt) {\n    var v = \"visible\", h = \"hidden\",\n        evtMap = {\n          focus:v, focusin:v, pageshow:v, blur:h, focusout:h, pagehide:h\n        };\n\n    evt = evt || window.event;\n    if (evt.type in evtMap)\n      document.body.className = evtMap[evt.type];\n    else\n      document.body.className = this[hidden] ? \"hidden\" : \"visible\";\n  }\n\n  // set the initial state (but only if browser supports the Page Visibility API)\n  if( document[hidden] !== undefined )\n    onchange({type: document[hidden] ? \"blur\" : \"focus\"});\n})();\n</code></pre>\n\n<p><code>onfocusin</code> and <code>onfocusout</code> are <a href=\"http://www.thefutureoftheweb.com/blog/detect-browser-window-focus\">required for IE 9 and lower</a>, while all others make use of <code>onfocus</code> and <code>onblur</code>, except for iOS, which uses <code>onpageshow</code> and <code>onpagehide</code>.</p>\n    "},{"t":"JavaScript: Class.method vs. Class.prototype.method","l":"http://stackoverflow.com/questions/1635116/javascript-class-method-vs-class-prototype-method","q":"\n\n<p>What is the difference between the following two declarations?</p>\n\n<pre><code>Class.method = function () { /* code */ }\nClass.prototype.method = function () { /* code using this.values */ }\n</code></pre>\n\n<p>Is it okay to think of the first statement as a declaration of a static method, and the second statement as a declaration of an instance method?</p>\n    ","a":"\n<p>Yes, the first function has no relationship with an object instance of that <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FGuide/Creating%5FNew%5FObjects/Using%5Fa%5FConstructor%5FFunction\">constructor function</a>, you can consider it like a <em>'static method'</em>.</p>\n\n<p>In JavaScript functions are <a href=\"http://en.wikipedia.org/wiki/First-class%5Ffunction\"><em>first-class</em></a> objects, that means you can treat them just like any object, in this case, you are only adding a property to the <em>function object</em>.</p>\n\n<p>The second function, as you are extending the constructor function prototype, it will be available to all the object instances created with the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Operators/Special%5FOperators/new%5FOperator\"><code>new</code></a> keyword, and the context within that function (the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Operators/Special%5FOperators/this%5FOperator\"><code>this</code></a> keyword) will refer to the actual object instance where you call it.</p>\n\n<p>Consider this example:</p>\n\n<pre><code>// constructor function\nfunction MyClass () {\n  var privateVariable; // private member only available within the constructor fn\n\n  this.privilegedMethod = function () { // it can access private members\n    //..\n  };\n}\n\n// A 'static method', it's just like a normal function \n// it has no relation with any 'MyClass' object instance\nMyClass.staticMethod = function () {};\n\nMyClass.prototype.publicMethod = function () {\n  // the 'this' keyword refers to the object instance\n  // you can access only 'privileged' and 'public' members\n};\n\nvar myObj = new MyClass(); // new object instance\n\nmyObj.publicMethod();\nMyClass.staticMethod();\n</code></pre>\n    "}]