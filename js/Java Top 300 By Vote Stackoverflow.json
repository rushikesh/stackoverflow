[{"t":"Why is processing a sorted array faster than an unsorted array?","l":"http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array","q":"\n\n<p>Here is a piece of <strong>C++</strong> code that seems very peculiar. For some strange reason, sorting the data miraculously makes the code almost six times faster.</p>\n\n<pre class=\"lang-cpp prettyprint-override\"><code>#include &lt;algorithm&gt;\n#include &lt;ctime&gt;\n#include &lt;iostream&gt;\n\nint main()\n{\n    // Generate data\n    const unsigned arraySize = 32768;\n    int data[arraySize];\n\n    for (unsigned c = 0; c &lt; arraySize; ++c)\n        data[c] = std::rand() % 256;\n\n    // !!! With this, the next loop runs faster\n    std::sort(data, data + arraySize);\n\n    // Test\n    clock_t start = clock();\n    long long sum = 0;\n\n    for (unsigned i = 0; i &lt; 100000; ++i)\n    {\n        // Primary loop\n        for (unsigned c = 0; c &lt; arraySize; ++c)\n        {\n            if (data[c] &gt;= 128)\n                sum += data[c];\n        }\n    }\n\n    double elapsedTime = static_cast&lt;double&gt;(clock() - start) / CLOCKS_PER_SEC;\n\n    std::cout &lt;&lt; elapsedTime &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"sum = \" &lt;&lt; sum &lt;&lt; std::endl;\n}\n</code></pre>\n\n<ul>\n<li>Without <code>std::sort(data, data + arraySize);</code>, the code runs in <strong>11.54</strong> seconds.</li>\n<li>With the sorted data, the code runs in <strong>1.93</strong> seconds.</li>\n</ul>\n\n<p>Initially, I thought this might be just a language or compiler anomaly. So I tried it in <strong>Java</strong>.</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>import java.util.Arrays;\nimport java.util.Random;\n\npublic class Main\n{\n    public static void main(String[] args)\n    {\n        // Generate data\n        int arraySize = 32768;\n        int data[] = new int[arraySize];\n\n        Random rnd = new Random(0);\n        for (int c = 0; c &lt; arraySize; ++c)\n            data[c] = rnd.nextInt() % 256;\n\n        // !!! With this, the next loop runs faster\n        Arrays.sort(data);\n\n        // Test\n        long start = System.nanoTime();\n        long sum = 0;\n\n        for (int i = 0; i &lt; 100000; ++i)\n        {\n            // Primary loop\n            for (int c = 0; c &lt; arraySize; ++c)\n            {\n                if (data[c] &gt;= 128)\n                    sum += data[c];\n            }\n        }\n\n        System.out.println((System.nanoTime() - start) / 1000000000.0);\n        System.out.println(\"sum = \" + sum);\n    }\n}\n</code></pre>\n\n<p>With a somewhat similar, but less extreme result.</p>\n\n<hr>\n\n<p>My first thought was that sorting brings the data into the cache, but my next thought was how silly that is, because the array was just generated.</p>\n\n<ul>\n<li>What is going on?</li>\n<li>Why is a sorted array faster than an unsorted array?</li>\n<li>The code is summing up some independent terms, and the order should not matter.</li>\n</ul>\n    ","a":"\n<p><strong>You are a victim of <a href=\"//en.wikipedia.org/wiki/Branch_predictor\">branch prediction</a> fail.</strong></p>\n\n<hr>\n\n<h2>What is Branch Prediction?</h2>\n\n<p>Consider a railroad junction:</p>\n\n<p><a href=\"//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG\"><img src=\"//i.stack.imgur.com/muxnt.jpg\" alt=\"\"></a>\n<sub><a href=\"//commons.wikimedia.org/wiki/File:Entroncamento_do_Transpraia.JPG\">Image</a> by Mecanismo, via Wikimedia Commons. Used under the <a href=\"//creativecommons.org/licenses/by-sa/3.0/deed.en\">CC-By-SA 3.0</a> license.</sub></p>\n\n<p>Now for the sake of argument, suppose this is back in the 1800s - before long distance or radio communication.</p>\n\n<p>You are the operator of a junction and you hear a train coming. You have no idea which way it is supposed to go. You stop the train to ask the captain which direction he wants. And then you set the switch appropriately.</p>\n\n<p><em>Trains are heavy and have a lot of inertia. So they take forever to start up and slow down.</em></p>\n\n<p>Is there a better way? You guess which direction the train will go!</p>\n\n<ul>\n<li>If you guessed right, it continues on.</li>\n<li>If you guessed wrong, the captain will stop, back up, and yell at you to flip the switch. Then it can restart down the other path.</li>\n</ul>\n\n<p><strong>If you guess right every time</strong>, the train will never have to stop.<br>\n<strong>If you guess wrong too often</strong>, the train will spend a lot of time stopping, backing up, and restarting.</p>\n\n<hr>\n\n<p><strong>Consider an if-statement:</strong> At the processor level, it is a branch instruction:</p>\n\n<p><img src=\"//i.stack.imgur.com/pyfwC.png\" alt=\"enter image description here\"></p>\n\n<p>You are a processor and you see a branch. You have no idea which way it will go. What do you do? You halt execution and wait until the previous instructions are complete. Then you continue down the correct path.</p>\n\n<p><em>Modern processors are complicated and have long pipelines. So they take forever to \"warm up\" and \"slow down\".</em></p>\n\n<p>Is there a better way? You guess which direction the branch will go!</p>\n\n<ul>\n<li>If you guessed right, you continue executing.</li>\n<li>If you guessed wrong, you need to flush the pipeline and roll back to the branch. Then you can restart down the other path.</li>\n</ul>\n\n<p><strong>If you guess right every time</strong>, the execution will never have to stop.<br>\n<strong>If you guess wrong too often</strong>, you spend a lot of time stalling, rolling back, and restarting.</p>\n\n<hr>\n\n<p>This is branch prediction. I admit it's not the best analogy since the train could just signal the direction with a flag. But in computers, the processor doesn't know which direction a branch will go until the last moment.</p>\n\n<p>So how would you strategically guess to minimize the number of times that the train must back up and go down the other path? You look at the past history! If the train goes left 99% of the time, then you guess left. If it alternates, then you alternate your guesses. If it goes one way every 3 times, you guess the same...</p>\n\n<p><strong><em>In other words, you try to identify a pattern and follow it.</em></strong> This is more or less how branch predictors work.</p>\n\n<p>Most applications have well-behaved branches. So modern branch predictors will typically achieve &gt;90% hit rates. But when faced with unpredictable branches with no recognizable patterns, branch predictors are virtually useless.</p>\n\n<p>Further reading: <a href=\"//en.wikipedia.org/wiki/Branch_predictor\">\"Branch predictor\" article on Wikipedia</a>.</p>\n\n<hr>\n\n<h2>As hinted from above, the culprit is this if-statement:</h2>\n\n<pre><code>if (data[c] &gt;= 128)\n    sum += data[c];\n</code></pre>\n\n<p>Notice that the data is evenly distributed between 0 and 255. \nWhen the data is sorted, roughly the first half of the iterations will not enter the if-statement. After that, they will all enter the if-statement.</p>\n\n<p>This is very friendly to the branch predictor since the branch consecutively goes the same direction many times.\nEven a simple saturating counter will correctly predict the branch except for the few iterations after it switches direction.</p>\n\n<p><strong>Quick visualization:</strong></p>\n\n<pre><code>T = branch taken\nN = branch not taken\n\ndata[] = 0, 1, 2, 3, 4, ... 126, 127, 128, 129, 130, ... 250, 251, 252, ...\nbranch = N  N  N  N  N  ...   N    N    T    T    T  ...   T    T    T  ...\n\n       = NNNNNNNNNNNN ... NNNNNNNTTTTTTTTT ... TTTTTTTTTT  (easy to predict)\n</code></pre>\n\n<p>However, when the data is completely random, the branch predictor is rendered useless because it can't predict random data.\nThus there will probably be around 50% misprediction. (no better than random guessing)</p>\n\n<pre><code>data[] = 226, 185, 125, 158, 198, 144, 217, 79, 202, 118,  14, 150, 177, 182, 133, ...\nbranch =   T,   T,   N,   T,   T,   T,   T,  N,   T,   N,   N,   T,   T,   T,   N  ...\n\n       = TTNTTTTNTNNTTTN ...   (completely random - hard to predict)\n</code></pre>\n\n<hr>\n\n<p><strong>So what can be done?</strong></p>\n\n<p>If the compiler isn't able to optimize the branch into a conditional move, you can try some hacks if you are willing to sacrifice readability for performance.</p>\n\n<p>Replace:</p>\n\n<pre><code>if (data[c] &gt;= 128)\n    sum += data[c];\n</code></pre>\n\n<p>with:</p>\n\n<pre><code>int t = (data[c] - 128) &gt;&gt; 31;\nsum += ~t &amp; data[c];\n</code></pre>\n\n<p>This eliminates the branch and replaces it with some bitwise operations.</p>\n\n<p><sub>(Note that this hack is not strictly equivalent to the original if-statement. But in this case, it's valid for all the input values of <code>data[]</code>.)</sub></p>\n\n<p><strong>Benchmarks: Core i7 920 @ 3.5 GHz</strong></p>\n\n<p>C++ - Visual Studio 2010 - x64 Release</p>\n\n<pre><code>//  Branch - Random\nseconds = 11.777\n\n//  Branch - Sorted\nseconds = 2.352\n\n//  Branchless - Random\nseconds = 2.564\n\n//  Branchless - Sorted\nseconds = 2.587\n</code></pre>\n\n<p>Java - Netbeans 7.1.1 JDK 7 - x64</p>\n\n<pre><code>//  Branch - Random\nseconds = 10.93293813\n\n//  Branch - Sorted\nseconds = 5.643797077\n\n//  Branchless - Random\nseconds = 3.113581453\n\n//  Branchless - Sorted\nseconds = 3.186068823\n</code></pre>\n\n<p>Observations:</p>\n\n<ul>\n<li><strong>With the Branch:</strong> There is a huge difference between the sorted and unsorted data.</li>\n<li><strong>With the Hack:</strong> There is no difference between sorted and unsorted data.</li>\n<li>In the C++ case, the hack is actually a tad slower than with the branch when the data is sorted.</li>\n</ul>\n\n<p>A general rule of thumb is to avoid data-dependent branching in critical loops. (such as in this example)</p>\n\n<hr>\n\n<p><strong>Update :</strong></p>\n\n<ul>\n<li><p>GCC 4.6.1 with <code>-O3</code> or <code>-ftree-vectorize</code> on x64 is able to generate a conditional move. So there is no difference between the sorted and unsorted data - both are fast.</p></li>\n<li><p>VC++ 2010 is unable to generate conditional moves for this branch even under <code>/Ox</code>.</p></li>\n<li><p>Intel Compiler 11 does something miraculous. It <a href=\"//en.wikipedia.org/wiki/Loop_interchange\">interchanges the two loops</a>, thereby hoisting the unpredictable branch to the outer loop. So not only is it immune the mispredictions, it is also twice as fast as whatever VC++ and GCC can generate! In other words, ICC took advantage of the test-loop to defeat the benchmark...</p></li>\n<li><p>If you give the Intel Compiler the branchless code, it just out-right vectorizes it... and is just as fast as with the branch (with the loop interchange).</p></li>\n</ul>\n\n<p>This goes to show that even mature modern compilers can vary wildly in their ability to optimize code...</p>\n    "},{"t":"Why is subtracting these two times (in 1927) giving a strange result?","l":"http://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result","q":"\n\n<p>If I run the following program, which parses two date strings referencing times one second apart and compares them:</p>\n\n<pre><code>public static void main(String[] args) throws ParseException {\n    SimpleDateFormat sf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");  \n    String str3 = \"1927-12-31 23:54:07\";  \n    String str4 = \"1927-12-31 23:54:08\";  \n    Date sDt3 = sf.parse(str3);  \n    Date sDt4 = sf.parse(str4);  \n    long ld3 = sDt3.getTime() /1000;  \n    long ld4 = sDt4.getTime() /1000; \n    System.out.println(ld3);  \n    System.out.println(ld4);  \n    System.out.println(ld4-ld3);\n}\n</code></pre>\n\n<p>The output is:</p>\n\n<pre><code>-1325491905\n-1325491552\n353\n</code></pre>\n\n<p>Why is <code>ld4-ld3</code> not <code>1</code> (as I would expect from the one-second difference in the times), but <code>353</code>?</p>\n\n<p>If I change the dates to times one second later:</p>\n\n<pre><code>String str3 = \"1927-12-31 23:54:08\";  \nString str4 = \"1927-12-31 23:54:09\";  \n</code></pre>\n\n<p>Then <code>ld4-ld3</code> will be <code>1</code></p>\n\n<hr>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Java version:</p>\n\n<pre><code>java version \"1.6.0_22\"\nJava(TM) SE Runtime Environment (build 1.6.0_22-b04)\nDynamic Code Evolution Client VM (build 0.2-b02-internal, 19.0-b04-internal, mixed mode)\n</code></pre>\n\n<p>Timezone(<code>TimeZone.getDefault()</code>):</p>\n\n<pre><code>sun.util.calendar.ZoneInfo[id=\"Asia/Shanghai\",\noffset=28800000,dstSavings=0,\nuseDaylight=false,\ntransitions=19,\nlastRule=null]\n\nLocale(Locale.getDefault()): zh_CN\n</code></pre>\n    ","a":"\n<p>It's a time zone change on December 31st in Shanghai.</p>\n\n<p>See <a href=\"http://www.timeanddate.com/worldclock/clockchange.html?n=237&amp;year=1927\">this page</a> for details of 1927 in Shanghai. Basically at midnight at the end of 1927, the clocks went back 5 minutes and 52 seconds. So \"1927-12-31 23:54:08\" actually happened twice, and it looks like Java is parsing it as the <em>later</em> possible instant for that local date/time - hence the difference.</p>\n\n<p>Just another episode in the often weird and wonderful world of time zones.</p>\n\n<p><strong>EDIT:</strong> Stop the press! History changes...</p>\n\n<p>The original question would no longer demonstrate quite the same behaviour, if rebuilt with  version 2013a of <a href=\"https://code.google.com/p/noda-time/source/browse/src/NodaTime.Demo/StackOverflowExamples.cs\">TZDB</a>. In 2013a, the result would be 358 seconds, with a transition time of 23:54:03 instead of 23:54:08.</p>\n\n<p>I only noticed this because I'm collecting questions like this in Noda Time, in the form of <a href=\"https://code.google.com/p/noda-time/source/browse/src/NodaTime.Demo/StackOverflowExamples.cs\">unit tests</a>... The test has now been changed, but it just goes to show - not even historical data is safe.</p>\n\n<p><strong>EDIT:</strong> History has changed again...</p>\n\n<p>In TZDB 2014f, the time of the change has moved to 1900-12-31, and it's now a mere 343 second change (so the time between <code>t</code> and <code>t+1</code> is 344 seconds, if you see what I mean).</p>\n\n<p><strong>EDIT:</strong> To answer <a href=\"http://stackoverflow.com/questions/6841333/why-is-subtracting-these-two-times-in-1927-giving-a-strange-result/6841479#comment22684267_6841479\">Ken Kin's question</a> around a transition at 1900... it looks like the Java timezone implementation treats <em>all</em> time zones as simply being in their standard time for any instant before the start of 1900 UTC:</p>\n\n<pre><code>import java.util.TimeZone;\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        long startOf1900Utc = -2208988800000L;\n        for (String id : TimeZone.getAvailableIDs()) {\n            TimeZone zone = TimeZone.getTimeZone(id);\n            if (zone.getRawOffset() != zone.getOffset(startOf1900Utc - 1)) {\n                System.out.println(id);\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>The code above produces no output on my Windows machine. So any time zone which has any offset other than its standard one at the start of 1900 will count that as a transition. TZDB itself has some data going back earlier than that, and doesn't rely on any idea of a \"fixed\" standard time (which is what <code>getRawOffset</code> assumes to be a valid concept) so other libraries needn't introduce this artificial transition.</p>\n    "},{"t":"Is Java “pass-by-reference” or “pass-by-value”?","l":"http://stackoverflow.com/questions/40480/is-java-pass-by-reference-or-pass-by-value","q":"\n\n<p>I always thought Java was <strong>pass-by-reference</strong>; however I've seen a couple of blog posts (for example, <a href=\"http://javadude.com/articles/passbyvalue.htm\">this blog</a>) that claim it's not. I don't think I understand the distinction they're making. </p>\n\n<p>What is the explanation?</p>\n    ","a":"\n<p>Java is always <em>pass-by-value</em>. Unfortunately, they decided to call pointers references, thus confusing newbies. Because those <em>references</em> are passed by value.</p>\n\n<p>It goes like this:</p>\n\n<pre><code>public static void main( String[] args ){\n    Dog aDog = new Dog(\"Max\");\n    foo(aDog);\n\n    if( aDog.getName().equals(\"Max\") ){ //true\n        System.out.println( \"Java passes by value.\" );\n\n    }else if( aDog.getName().equals(\"Fifi\") ){\n        System.out.println( \"Java passes by reference.\" );\n    }\n}\n\npublic static void foo(Dog d) {\n    d.getName().equals(\"Max\"); // true\n\n    d = new Dog(\"Fifi\");\n    d.getName().equals(\"Fifi\"); // true\n}\n</code></pre>\n\n<p>In this example <code>aDog.getName()</code> will still return <code>\"Max\"</code>. The value <code>aDog</code> within <code>main</code> is not overwritten in the function <code>foo</code> with the <code>Dog</code> <code>\"Fifi\"</code> as the object reference is passed by value. If it were passed by reference, then the <code>aDog.getName()</code> in <code>main</code> would return <code>\"Fifi\"</code> after the call to <code>foo</code>.</p>\n\n<p>Likewise:</p>\n\n<pre><code>Dog aDog = new Dog(\"Max\");\nfoo(aDog);\naDog.getName().equals(\"Fifi\"); // true\n\npublic void foo(Dog d) {\n    d.getName().equals(\"Max\"); // true\n    d.setName(\"Fifi\");\n}\n</code></pre>\n    "},{"t":"Java += operator","l":"http://stackoverflow.com/questions/8710619/java-operator","q":"\n\n<p>Until today I thought that for example:</p>\n\n<pre><code>i += j;\n</code></pre>\n\n<p>is just a shortcut for:</p>\n\n<pre><code>i = i + j;\n</code></pre>\n\n<p>But what if we try this:</p>\n\n<pre><code>int i = 5;\nlong j = 8;\n</code></pre>\n\n<p>Then <code>i = i + j;</code> will not compile but <code>i += j;</code> will compile fine.</p>\n\n<p>Does it mean that in fact <code>i += j;</code> is a shortcut for something like this\n<code>i = (type of i) (i + j)</code>?</p>\n    ","a":"\n<p>As always with these questions, the JLS holds the answer. In this case <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2\">§15.26.2 Compound Assignment Operators</a>. An extract:</p>\n\n<blockquote>\n  <p>A compound assignment expression of the form <code>E1&nbsp;op=&nbsp;E2</code> is equivalent to <code>E1&nbsp;=&nbsp;(T)((E1)&nbsp;op&nbsp;(E2))</code>, where <code>T</code> is the type of <code>E1</code>, except that <code>E1</code> is evaluated only once.</p>\n</blockquote>\n\n<p>An example cited from <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.26.2\">§15.26.2</a></p>\n\n<blockquote>\n  <p>[...] the following code is correct:</p>\n\n<pre><code>short x = 3;\nx += 4.6;\n</code></pre>\n  \n  <p>and results in x having the value 7 because it is equivalent to:</p>\n\n<pre><code>short x = 3;\nx = (short)(x + 4.6);\n</code></pre>\n</blockquote>\n\n<p>In other words, your assumption is correct.</p>\n    "},{"t":"Avoiding “!= null” statements in Java?","l":"http://stackoverflow.com/questions/271526/avoiding-null-statements-in-java","q":"\n\n<p>The idiom I use the most when programming in Java is to test if <code>object != null</code> before I use it. This is to avoid a <a href=\"http://docs.oracle.com/javase/6/docs/api/index.html?java/lang/NullPointerException.html\">NullPointerException</a>. I find the code very ugly and it becomes unreadable.</p>\n\n<p>Is there a good alternative to this? </p>\n\n<p><strong>Update:</strong>\nPan, I was not clear with my question. I want to address the necessity to test every object if you want to access a field or method of this object. For example:</p>\n\n<pre><code>...\nif (someobject != null) {\n    someobject.doCalc();\n}\n...\n</code></pre>\n\n<p>In this case I will avoid a <code>NullPointerException</code>, and I don't know exactly if the object is <code>null</code> or not. So my code get splattered with these tests.</p>\n    ","a":"\n<p>This to me sounds like a reasonably common problem that junior to intermediate developers tend to face at some point: they either don't know or don't trust the contracts they are participating in and defensively overcheck for nulls.  Additionally, when writing their own code, they tend to rely on returning nulls to indicate something thus requiring the caller to check for nulls.</p>\n\n<p>To put this another way, there are two instances where null checking comes up:</p>\n\n<ol>\n<li><p>Where null is a valid response in terms of the contract; and</p></li>\n<li><p>Where it isn't a valid response.</p></li>\n</ol>\n\n<p>(2) is easy.  Either use <code>assert</code> statements (assertions) or allow failure (for example,  <a href=\"http://docs.oracle.com/javase/6/docs/api/index.html?java/lang/NullPointerException.html\">NullPointerException</a>).  Assertions are a highly-underused Java feature that was added in 1.4.  The syntax is:</p>\n\n<pre><code>assert &lt;condition&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>assert &lt;condition&gt; : &lt;object&gt;\n</code></pre>\n\n<p>where <code>&lt;condition&gt;</code> is a boolean expression and <code>&lt;object&gt;</code> is an object whose <code>toString()</code> method's output will be included in the error.</p>\n\n<p>An <code>assert</code> statement throws an <code>Error</code> (<code>AssertionError</code>) if the condition is not true.  By default, Java ignores assertions.  You can enable assertions by passing the option <code>-ea</code> to the JVM.  You can enable and disable assertions for individual classes and packages.  This means that you can validate code with the assertions while developing and testing, and disable them in a production environment, although my testing has shown next to no performance impact from assertions.</p>\n\n<p>Not using assertions in this case is OK because the code will just fail, which is what will happen if you use assertions.  The only difference is that with assertions it might happen sooner, in a more-meaningful way and possibly with extra information, which may help you to figure out why it happened if you weren't expecting it.</p>\n\n<p>(1) is a little harder.  If you have no control over the code you're calling then you're stuck.  If null is a valid response, you have to check for it.</p>\n\n<p>If it's code that you do control, however (and this is often the case), then it's a different story.  Avoid using nulls as a response.  With methods that return collections, it's easy: return empty collections (or arrays) instead of nulls pretty much all the time.</p>\n\n<p>With non-collections it might be harder.  Consider this as an example: if you have these interfaces:</p>\n\n<pre><code>public interface Action {\n  void doSomething();\n}\n\npublic interface Parser {\n  Action findAction(String userInput);\n}\n</code></pre>\n\n<p>where Parser takes raw user input and finds something to do, perhaps if you're implementing a command line interface for something.  Now you might make the contract that it returns null if there's no appropriate action.  That leads the null checking you're talking about.</p>\n\n<p>An alternative solution is to never return null and instead use the <a href=\"https://en.wikipedia.org/wiki/Null_Object_pattern\">Null Object pattern</a>:</p>\n\n<pre><code>public class MyParser implements Parser {\n  private static Action DO_NOTHING = new Action() {\n    public void doSomething() { /* do nothing */ }\n  };\n\n  public Action findAction(String userInput) {\n    // ...\n    if ( /* we can't find any actions */ ) {\n      return DO_NOTHING;\n    }\n  }\n}\n</code></pre>\n\n<p>Compare:</p>\n\n<pre><code>Parser parser = ParserFactory.getParser();\nif (parser == null) {\n  // now what?\n  // this would be an example of where null isn't (or shouldn't be) a valid response\n}\nAction action = parser.findAction(someInput);\nif (action == null) {\n  // do nothing\n} else {\n  action.doSomething();\n}\n</code></pre>\n\n<p>to</p>\n\n<pre><code>ParserFactory.getParser().findAction(someInput).doSomething();\n</code></pre>\n\n<p>which is a much better design because it leads to more concise code.</p>\n\n<p>That said, perhaps it is entirely appropriate for the findAction() method to throw an Exception with a meaningful error message -- especially in this case where you are relying on user input.  It would be much better for the findAction method to throw an Exception than for the calling method to blow up with a simple NullPointerException with no explanation.</p>\n\n<pre><code>try {\n    ParserFactory.getParser().findAction(someInput).doSomething();\n} catch(ActionNotFoundException anfe) {\n    userConsole.err(anfe.getMessage());\n}\n</code></pre>\n\n<p>Or if you think the try/catch mechanism is too ugly, rather than Do Nothing your default action should provide feedback to the user.</p>\n\n<pre><code>public Action findAction(final String userInput) {\n    /* Code to return requested Action if found */\n    return new Action() {\n        public void doSomething() {\n            userConsole.err(\"Action not found: \" + userInput);\n        }\n    }\n}\n</code></pre>\n    "},{"t":"Proper use cases for Android UserManager.isUserAGoat()?","l":"http://stackoverflow.com/questions/13375357/proper-use-cases-for-android-usermanager-isuseragoat","q":"\n\n<p>I was looking at the new APIs introduced in <a href=\"http://en.wikipedia.org/wiki/Android_version_history#Android_4.1.2F4.2_Jelly_Bean\">Android 4.2</a>. While looking at the <a href=\"http://developer.android.com/reference/android/os/UserManager.html\"><code>UserManager</code></a> class I came across the following method:</p>\n\n<blockquote>\n  <p>public boolean isUserAGoat ()</p>\n  \n  <p>Used to determine whether the user making this call is subject to\n  teleportations.</p>\n  \n  <p>Returns whether the user making this call is a goat.</p>\n</blockquote>\n\n<p>How and when should this be used?</p>\n    ","a":"\n<p>From their <strong><a href=\"https://android.googlesource.com/platform/frameworks/base/+/android-5.0.0_r6/core/java/android/os/UserManager.java#433\">source</a></strong>, the method used to return <code>false</code> until it was changed in API 21.</p>\n\n<pre><code>/**\n * Used to determine whether the user making this call is subject to\n * teleportations.\n * @return whether the user making this call is a goat \n */\npublic boolean isUserAGoat() {\n    return false;\n}\n</code></pre>\n\n<p>It looks like the method has no real use for us as developers. Someone has previously stated that it might be an <strong><a href=\"http://en.wikipedia.org/wiki/Easter_egg_(media)\">Easter egg</a></strong>.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>In API 21 the implementation was changed to check if there is an installed app with the package <code>com.coffeestainstudios.goatsimulator</code></p>\n\n<pre><code>/**\n * Used to determine whether the user making this call is subject to\n * teleportations.\n *\n * &lt;p&gt;As of {@link android.os.Build.VERSION_CODES#LOLLIPOP}, this method can\n * now automatically identify goats using advanced goat recognition technology.&lt;/p&gt;\n *\n * @return Returns true if the user making this call is a goat.\n */\npublic boolean isUserAGoat() {\n    return mContext.getPackageManager()\n            .isPackageAvailable(\"com.coffeestainstudios.goatsimulator\");\n}\n</code></pre>\n\n<p>Here is the updated <strong><a href=\"https://android.googlesource.com/platform/frameworks/base/+/android-5.0.0_r6/core/java/android/os/UserManager.java\">source link</a></strong></p>\n    "},{"t":"Differences between HashMap and Hashtable?","l":"http://stackoverflow.com/questions/40471/differences-between-hashmap-and-hashtable","q":"\n\n<p>What are the differences between a <a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/util/HashMap.html\"><code>HashMap</code></a> and a <a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/util/Hashtable.html\"><code>Hashtable</code></a> in Java?</p>\n\n<p>Which is more <em>efficient</em> for <em>non-threaded</em> applications?</p>\n    ","a":"\n<p>There are several differences between HashMap and Hashtable in Java:</p>\n\n<ol>\n<li><p><a href=\"http://java.sun.com/javase/7/docs/api/java/util/Hashtable.html\">Hashtable</a> is synchronized, whereas <a href=\"http://java.sun.com/javase/7/docs/api/java/util/HashMap.html\">HashMap</a> is not.  This makes <code>HashMap</code> better for non-threaded applications, as unsynchronized Objects typically perform better than synchronized ones.</p></li>\n<li><p><code>Hashtable</code> does not allow null keys or values.  <code>HashMap</code> allows one null key and any number of <code>null</code> values.</p></li>\n<li><p>One of HashMap's subclasses is <a href=\"http://java.sun.com/javase/7/docs/api/java/util/LinkedHashMap.html\">LinkedHashMap</a>, so in the event that you'd want predictable iteration order (which is insertion order by default), you could easily swap out the <code>HashMap</code> for a <code>LinkedHashMap</code>.  This wouldn't be as easy if you were using <code>Hashtable</code>.</p></li>\n</ol>\n\n<p>Since synchronization is not an issue for you, I'd recommend <code>HashMap</code>. If synchronization becomes an issue, you may also look at <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html\">ConcurrentHashMap</a>.</p>\n    "},{"t":"Read/convert an InputStream to a String","l":"http://stackoverflow.com/questions/309424/read-convert-an-inputstream-to-a-string","q":"\n\n<p>If you have <code>java.io.InputStream</code> object, how should you process that object and produce a <code>String</code>?</p>\n\n<hr>\n\n<p>Suppose I have an <code>InputStream</code> that contains text data, and I want to convert this to a <code>String</code> (for example, so I can write the contents of the stream to a log file).</p>\n\n<p>What is the easiest way to take the <code>InputStream</code> and convert it to a <code>String</code>?</p>\n\n<pre><code>public String convertStreamToString(InputStream is) { \n    // ???\n}\n</code></pre>\n    ","a":"\n<p>A nice way to do this is using <a href=\"http://commons.apache.org/\">Apache commons</a> <code><a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/IOUtils.html\">IOUtils</a></code> to copy the <code>InputStream</code> into a <code>StringWriter</code>... something like</p>\n\n<pre><code>StringWriter writer = new StringWriter();\nIOUtils.copy(inputStream, writer, encoding);\nString theString = writer.toString();\n</code></pre>\n\n<p>or even</p>\n\n<pre><code>// NB: does not close inputStream, you can use IOUtils.closeQuietly for that\nString theString = IOUtils.toString(inputStream, encoding); \n</code></pre>\n\n<p>Alternatively, you could use <code>ByteArrayOutputStream</code> if you don't want to mix your Streams and Writers</p>\n    "},{"t":"Creating a memory leak with Java [closed]","l":"http://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java","q":"\n\n<p>I just had an interview, and I was asked to create a memory leak with Java.\nNeedless to say I felt pretty dumb having no clue on how to even start creating one.</p>\n\n<h3>What would an example be?</h3>\n    ","a":"\n<p>Here's a good way to create a true memory leak (objects inaccessible by running code but still stored in memory) in pure Java:</p>\n\n<ol>\n<li>The application creates a long-running thread (or use a thread pool to leak even faster).</li>\n<li>The thread loads a class via an (optionally custom) ClassLoader.</li>\n<li>The class allocates a large chunk of memory (e.g. <code>new byte[1000000]</code>), stores a strong reference to it in a static field, and then stores a reference to itself in a ThreadLocal.  Allocating the extra memory is optional (leaking the Class instance is enough), but it will make the leak work that much faster.</li>\n<li>The thread clears all references to the custom class or the ClassLoader it was loaded from.</li>\n<li>Repeat.</li>\n</ol>\n\n<p>This works because the ThreadLocal keeps a reference to the object, which keeps a reference to its Class, which in turn keeps a reference to its ClassLoader.  The ClassLoader, in turn, keeps a reference to all the Classes it has loaded.  It gets worse because in many JVM implementations Classes and ClassLoaders are allocated straight into permgen and are never GC'd at all.</p>\n\n<p>A variation on this pattern is why application containers (like Tomcat) can leak memory like a sieve if you frequently redeploy applications that happen to use ThreadLocals in any way.  (Since the application container uses Threads as described, and each time you redeploy the application a new ClassLoader is used.)</p>\n\n<p><strong>Update</strong>: Since lots of people keep asking for it, <a href=\"https://gist.github.com/dpryden/b2bb29ee2d146901b4ae\">here's some example code that shows this behavior in action</a>.</p>\n    "},{"t":"Iterate through a HashMap [duplicate]","l":"http://stackoverflow.com/questions/1066589/iterate-through-a-hashmap","q":"\n\n<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/46898/how-do-i-iterate-over-each-entry-in-a-collection-map\">How do I iterate over each Entry in a Collection Map?</a>  </p>\n</blockquote>\n\n\n\n<p>What's the best way to iterate over the items in a <code>HashMap</code>?</p>\n    ","a":"\n<p>Iterate through the <a href=\"http://www.java2s.com/Code/JavaAPI/java.util/HashtableentrySet.htm\"><code>entrySet</code></a> like so:</p>\n\n<pre><code>public static void printMap(Map mp) {\n    Iterator it = mp.entrySet().iterator();\n    while (it.hasNext()) {\n        Map.Entry pair = (Map.Entry)it.next();\n        System.out.println(pair.getKey() + \" = \" + pair.getValue());\n        it.remove(); // avoids a ConcurrentModificationException\n    }\n}\n</code></pre>\n\n<p>Read more on <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Map.html\"><code>Map</code></a></p>\n    "},{"t":"Create ArrayList (ArrayList<T>) from array (T[])","l":"http://stackoverflow.com/questions/157944/create-arraylist-arraylistt-from-array-t","q":"\n\n<p>I have an array that is initialized like:</p>\n\n<pre><code>Element[] array = {new Element(1), new Element(2), new Element(3)};\n</code></pre>\n\n<p>I would like to convert this array into an object of the ArrayList class.</p>\n\n<pre><code>ArrayList&lt;Element&gt; arraylist = ???;\n</code></pre>\n    ","a":"\n<pre><code>new ArrayList&lt;Element&gt;(Arrays.asList(array))\n</code></pre>\n    "},{"t":"Why is char[] preferred over String for passwords?","l":"http://stackoverflow.com/questions/8881291/why-is-char-preferred-over-string-for-passwords","q":"\n\n<p>In <a href=\"http://en.wikipedia.org/wiki/Swing_%28Java%29\">Swing</a>, the password field has a <code>getPassword()</code> (returns <code>char[]</code>) method instead of the usual <code>getText()</code> (returns <code>String</code>) method. Similarly, I have come across a suggestion not to use <code>String</code>s to handle passwords. Why does <code>String</code> pose a threat to security when it comes to passwords?</p>\n\n<p>It feels inconvenient to use <code>char[]</code>.</p>\n    ","a":"\n<p>Strings are immutable. That means once you've created the string, if another process can dump memory, there's no way (aside from reflection) you can get rid of the data before GC kicks in.</p>\n\n<p>With an array, you can explicitly wipe the data after you're done with it: you can overwrite the array with anything you like, and the password won't be present anywhere in the system, even <em>before</em> garbage collection.</p>\n\n<p>So yes, this <em>is</em> a security concern - but even using <code>char[]</code> only <em>reduces</em> the window of opportunity for an attacker, and it's only for this specific type of attack.</p>\n\n<p>EDIT: As noted in comments, it's possible that arrays being moved by the garbage collector will leave stray copies of the data in memory. I believe this is implementation-specific - the GC <em>may</em> clear all memory as it goes, to avoid this sort of thing. Even if it does, there's still the time during which the <code>char[]</code> contains the actual characters as an attack window.</p>\n    "},{"t":"Generating random integers in a range with Java","l":"http://stackoverflow.com/questions/363681/generating-random-integers-in-a-range-with-java","q":"\n\n<p>I am trying to generate a random integer with Java, but random in a specific range. For example, my range is 5-10, meaning that 5 is the smallest possible value the random number can take, and 10 is the biggest. Any other number in between these numbers is possible to be a value, too. </p>\n\n<p>In Java, there is a method <code>random()</code> in the <code>Math</code> class, which returns a <code>double</code> value between 0.0 and 1.0. In the class <code>Random</code> there is a method <code>nextInt(int n)</code>, which returns a random integer value in the range of 0 (inclusive) and n (exclusive). I couldn't find a method, which returns a random integer value between two numbers.</p>\n\n<p>I have tried the following things, but I still have problems:\n(minimum and maximum are the smallest and biggest numbers).</p>\n\n<p>Solution 1:</p>\n\n<pre><code>randomNum = minimum + (int)(Math.random()*maximum); \n</code></pre>\n\n<p>Problem: <code>randomNum</code> is assinged values numbers bigger than <code>maximum</code>.</p>\n\n<p>Solution 2:</p>\n\n<pre><code>Random rn = new Random();\nint n = maximum - minimum + 1;\nint i = rn.nextInt() % n;\nrandomNum =  minimum + i;\n</code></pre>\n\n<p>Problem: <code>randomNum</code>  is assigned values smaller than <code>minimum</code>.</p>\n\n<p>How do I solve this problem?</p>\n\n<p>I have tried also browsing through the archive and found:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/137783/given-a-function-which-produces-a-random-integer-in-the-range-1-to-5-write-a-fu\">Expand a random range from 1–5 to 1–7</a></li>\n<li><a href=\"http://stackoverflow.com/questions/288739/generate-random-numbers-uniformly-over-entire-range\">Generate random numbers uniformly over an entire range</a></li>\n</ul>\n\n<p>But I couldn't solve the problem.</p>\n    ","a":"\n<p>The standard way to do this is as follows:</p>\n\n<pre><code>/**\n * Returns a pseudo-random number between min and max, inclusive.\n * The difference between min and max can be at most\n * &lt;code&gt;Integer.MAX_VALUE - 1&lt;/code&gt;.\n *\n * @param min Minimum value\n * @param max Maximum value.  Must be greater than min.\n * @return Integer between min and max, inclusive.\n * @see java.util.Random#nextInt(int)\n */\npublic static int randInt(int min, int max) {\n\n    // NOTE: Usually this should be a field rather than a method\n    // variable so that it is not re-seeded every call.\n    Random rand = new Random();\n\n    // nextInt is normally exclusive of the top value,\n    // so add 1 to make it inclusive\n    int randomNum = rand.nextInt((max - min) + 1) + min;\n\n    return randomNum;\n}\n</code></pre>\n\n<p>See <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Random.html#nextInt-int-\">the relevant JavaDoc</a>.  In practice, the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Random.html\">java.util.Random</a> class is often preferable to <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Math.html#random--\">java.lang.Math.random()</a>.</p>\n\n<p>In particular, there is no need to reinvent the random integer generation wheel when there is a straightforward API within the standard library to accomplish the task.</p>\n    "},{"t":"Why is printing “B” dramatically slower than printing “#”?","l":"http://stackoverflow.com/questions/21947452/why-is-printing-b-dramatically-slower-than-printing","q":"\n\n<p>I generated two matrices of <code>1000</code> x <code>1000</code>:</p>\n\n<p>First Matrix: <code>O</code> and <code>#</code>.<br>\nSecond Matrix: <code>O</code> and <code>B</code>.</p>\n\n<p>Using the following code, the first matrix took 8.52 seconds to complete:</p>\n\n<pre><code>Random r = new Random();\nfor (int i = 0; i &lt; 1000; i++) {\n    for (int j = 0; j &lt; 1000; j++) {\n        if(r.nextInt(4) == 0) {\n            System.out.print(\"O\");\n        } else {\n            System.out.print(\"#\");\n        }\n    }\n\n   System.out.println(\"\");\n }\n</code></pre>\n\n<p>With this code, the second matrix took 259.152 seconds to complete:</p>\n\n<pre><code>Random r = new Random();\nfor (int i = 0; i &lt; 1000; i++) {\n    for (int j = 0; j &lt; 1000; j++) {\n        if(r.nextInt(4) == 0) {\n            System.out.print(\"O\");\n        } else {\n            System.out.print(\"B\"); //only line changed\n        }\n    }\n\n    System.out.println(\"\");\n}\n</code></pre>\n\n<p>What is the reason behind the dramatically different run times?</p>\n\n<hr>\n\n<p>As suggested in the comments, printing only <code>System.out.print(\"#\");</code> takes 7.8871 seconds, whereas <code>System.out.print(\"B\");</code> gives <code>still printing...</code>.</p>\n\n<p>As others who pointed out that it works for them normally, I tried <a href=\"http://ideone.com\">Ideone.com</a> for instance, and both pieces of code execute at the same speed.</p>\n\n<p>Test Conditions:</p>\n\n<ul>\n<li>I ran this test from Netbeans 7.2, with the output into its console</li>\n<li>I used <code>System.nanoTime()</code> for measurements</li>\n</ul>\n    ","a":"\n<p><em>Pure speculation</em> is that you're using a terminal that attempts to do <a href=\"http://en.wikipedia.org/wiki/Word_wrap\">word-wrapping</a> rather than character-wrapping, and treats <code>B</code> as a word character but <code>#</code> as a non-word character. So when it reaches the end of a line and searches for a place to break the line, it sees a <code>#</code> almost immediately and happily breaks there; whereas with the <code>B</code>, it has to keep searching for longer, and may have more text to wrap (which may be expensive on some terminals, e.g., outputting backspaces, then outputting spaces to overwrite the letters being wrapped).</p>\n\n<p>But that's pure speculation.</p>\n    "},{"t":"When to use LinkedList over ArrayList?","l":"http://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist","q":"\n\n<p>I've always been one to simply use:</p>\n\n<pre><code>List&lt;String&gt; names = new ArrayList&lt;String&gt;();\n</code></pre>\n\n<p>I use the interface as the type name for <em>portability</em>, so that when I ask questions such as these I can rework my code.  </p>\n\n<p>When should <code>LinkedList</code> be used over <code>ArrayList</code> and vice-versa?</p>\n    ","a":"\n<p><strong>TL;DR</strong> <code>ArrayList</code> with <code>ArrayDeque</code> are preferable in <em>much</em> more use-cases, than <code>LinkedList</code>. Not sure&nbsp;— just start with <code>ArrayList</code>.</p>\n\n<hr>\n\n<p>LinkedList and ArrayList are two different implementations of the List interface.  LinkedList implements it with a doubly-linked list.  ArrayList implements it with a dynamically resizing array.</p>\n\n<p>As with standard linked list and array operations, the various methods will have different algorithmic runtimes.</p>\n\n<p>For <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/LinkedList.html\"><code>LinkedList&lt;E&gt;</code></a></p>\n\n<ul>\n<li><code>get(int index)</code> is O(n)</li>\n<li><code>add(E element)</code> is O(1)</li>\n<li><code>add(int index, E element)</code> is O(n)</li>\n<li><code>remove(int index)</code> is O(n)</li>\n<li><code>Iterator.remove()</code> is O(1)   &lt;--- main benefit of <code>LinkedList&lt;E&gt;</code></li>\n<li><code>ListIterator.add(E element)</code> is O(1)    &lt;--- main benefit of <code>LinkedList&lt;E&gt;</code></li>\n</ul>\n\n<p>For <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html\"><code>ArrayList&lt;E&gt;</code></a></p>\n\n<ul>\n<li><code>get(int index)</code> is O(1)   &lt;--- main benefit of <code>ArrayList&lt;E&gt;</code></li>\n<li><code>add(E element)</code> is O(1) amortized, but O(n) worst-case since the array must be resized and copied</li>\n<li><code>add(int index, E element)</code> is O(n - index) amortized, but O(n) worst-case (as above)</li>\n<li><code>remove(int index)</code> is O(n - index) (i.e. removing last is O(1))</li>\n<li><code>Iterator.remove()</code> is O(n - index)</li>\n<li><code>ListIterator.add(E element)</code> is O(n - index)</li>\n</ul>\n\n<p><code>LinkedList&lt;E&gt;</code> allows for constant-time insertions or removals <em>using iterators</em>, but only sequential access of elements.  In other words, you can walk the list forwards or backwards, but finding a position in the list takes time proportional to the size of the list.</p>\n\n<p><code>ArrayList&lt;E&gt;</code>, on the other hand, allow fast random read access, so you can grab any element in constant time.  But adding or removing from anywhere but the end requires shifting all the latter elements over, either to make an opening or fill the gap.  Also, if you add more elements than the capacity of the underlying array, a new array (1.5 times the size) is allocated, and the old array is copied to the new one, so adding to an ArrayList is O(n) in the worst case but constant on average.</p>\n\n<p>So depending on the operations you intend to do, you should choose the implementations accordingly.  Iterating over either kind of List is practically equally cheap.  (Iterating over an <code>ArrayList</code> is technically faster, but unless you're doing something really performance-sensitive, you shouldn't worry about this -- they're both constants.)</p>\n\n<p>The main benefits of using a <code>LinkedList</code> arise when you re-use existing iterators to insert and remove elements. These operations can then be done in O(1) by changing the list locally only. In an array list, the remainder of the array needs to be <em>moved</em> (i.e. copied). On the other side, seeking in a <code>LinkedList</code> means following the links in O(n), whereas in an <code>ArrayList</code> the desired position can be computed mathematically and accessed in O(1).</p>\n\n<p>Also, if you have large lists, keep in mind that memory usage is also different.  Each element of a LinkedList has more overhead since pointers to the next and previous elements are also stored.  ArrayLists don't have this overhead.  However, ArrayLists take up as much memory as is allocated for the capacity, regardless of whether elements have actually been added.</p>\n\n<p>The default initial capacity of an ArrayList is pretty small (10 from Java 1.4 - 1.7).  But since the underlying implementation is an array, the array must be resized if you add a lot of elements.  To avoid the high cost of resizing when you know you're going to add a lot of elements, construct the ArrayList with a higher initial capacity.</p>\n\n<p>It's worth noting that <strong>Vector</strong> also implements the List interface and is almost identical to ArrayList.  The difference is that Vector is synchronized, so it is thread-safe.  Because of this, it is also slightly slower than ArrayList.  So as far as I understand, most Java programmers avoid Vector in favor of ArrayList since they will probably synchronize explicitly anyway if they care about that.</p>\n    "},{"t":"What is a serialVersionUID and why should I use it?","l":"http://stackoverflow.com/questions/285793/what-is-a-serialversionuid-and-why-should-i-use-it","q":"\n\n<p>Eclipse issues warnings when a <code>serialVersionUID</code> is missing.  </p>\n\n<blockquote>\n  <p>The serializable class Foo does not declare a static final\n  serialVersionUID field of type long</p>\n</blockquote>\n\n<p>What is <code>serialVersionUID</code> and why is it important?  Please show an example where missing <code>serialVersionUID</code> will cause a problem.</p>\n    ","a":"\n<p>The docs for <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html\"><code>java.io.Serializable</code></a> are probably about as good an explanation as you'll get:</p>\n\n<blockquote>\n  <p>The serialization runtime associates\n  with each serializable class a version\n  number, called a serialVersionUID,\n  which is used during deserialization\n  to verify that the sender and receiver\n  of a serialized object have loaded\n  classes for that object that are\n  compatible with respect to\n  serialization. If the receiver has\n  loaded a class for the object that has\n  a different serialVersionUID than that\n  of the corresponding sender's class,\n  then deserialization will result in an\n  <code>InvalidClassException</code>. A serializable\n  class can declare its own\n  serialVersionUID explicitly by\n  declaring a field named\n  \"<code>serialVersionUID</code>\" that must be\n  static, final, and of type <code>long</code>:</p>\n\n<pre><code>ANY-ACCESS-MODIFIER static final long serialVersionUID = 42L;\n</code></pre>\n  \n  <p>If a\n  serializable class does not explicitly\n  declare a serialVersionUID, then the\n  serialization runtime will calculate a\n  default serialVersionUID value for\n  that class based on various aspects of\n  the class, as described in the\n  Java(TM) Object Serialization\n  Specification. However, it is <em>strongly\n  recommended</em> that all serializable\n  classes explicitly declare\n  serialVersionUID values, since the\n  default serialVersionUID computation\n  is highly sensitive to class details\n  that may vary depending on compiler\n  implementations, and can thus result\n  in unexpected <code>InvalidClassExceptions</code>\n  during deserialization. Therefore, to\n  guarantee a consistent\n  serialVersionUID value across\n  different java compiler\n  implementations, a serializable class\n  must declare an explicit\n  serialVersionUID value. It is also\n  strongly advised that explicit\n  serialVersionUID declarations use the\n  private modifier where possible, since\n  such declarations apply only to the\n  immediately declaring\n  class--serialVersionUID fields are not\n  useful as inherited members.</p>\n</blockquote>\n    "},{"t":"In Java, what's the difference between public, default, protected, and private?","l":"http://stackoverflow.com/questions/215497/in-java-whats-the-difference-between-public-default-protected-and-private","q":"\n\n<p>Are there clear rules on when to use each of these when making classes and interfaces and dealing with inheritance?</p>\n    ","a":"\n<p>This Java <a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\">tutorial</a> may be of some use to you.</p>\n\n<pre>Modifier    | Class | Package | Subclass | World\n————————————+———————+—————————+——————————+———————\npublic      |  y    |    y    |    y     |   y\n————————————+———————+—————————+——————————+———————\nprotected   |  y    |    y    |    y     |   n\n————————————+———————+—————————+——————————+———————\nno modifier |  y    |    y    |    n     |   n    **also known as package-private**\n————————————+———————+—————————+——————————+———————\nprivate     |  y    |    n    |    n     |   n\n\ny: accessible\nn: not accessible\n</pre>\n    "},{"t":"How to test a class that has private methods, fields or inner classes","l":"http://stackoverflow.com/questions/34571/how-to-test-a-class-that-has-private-methods-fields-or-inner-classes","q":"\n\n<p>How do I use JUnit to test a class that has internal private methods, fields or nested classes? It seems bad to change the access modifier for a method just to be able to run a test. </p>\n    ","a":"\n<p>If you have somewhat of a legacy application, and you're not allowed to change the visibility of your methods, the best way to test private methods is to use <a href=\"http://en.wikipedia.org/wiki/Reflection_%28computer_programming%29\">reflection</a>. </p>\n\n<p>Internally we're using helpers to get/set <code>private</code> and <code>private static</code> variables as well as invoke <code>private</code> and <code>private static</code> methods. The following patterns will let you do pretty much anything related to the private methods and fields. Of course you can't change <code>private static final</code> variables through reflection.</p>\n\n<pre><code>Method method = targetClass.getDeclaredMethod(methodName, argClasses);\nmethod.setAccessible(true);\nreturn method.invoke(targetObject, argObjects);\n</code></pre>\n\n<p>And for fields:</p>\n\n<pre><code>Field field = targetClass.getDeclaredField(fieldName);\nfield.setAccessible(true);\nfield.set(object, value);\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p><strong>Notes:</strong><br>\n  1. <code>targetClass.getDeclaredMethod(methodName, argClasses)</code> lets you look into <code>private</code> methods. The same thing applies for\n  <code>getDeclaredField</code>.<br>\n  2. The <code>setAccessible(true)</code> is required to play around with privates.</p>\n</blockquote>\n    "},{"t":"Converting String to int in Java?","l":"http://stackoverflow.com/questions/5585779/converting-string-to-int-in-java","q":"\n\n<p>How can a <code>String</code> be converted to an <code>int</code> in Java?</p>\n\n<p>My String contains only numbers and I want to return the number it represents.</p>\n\n<p>For example, given the string <code>\"1234\"</code> the result should be the number <code>1234</code>.</p>\n    ","a":"\n<pre><code>int foo = Integer.parseInt(\"1234\");\n</code></pre>\n\n<p>See the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Integer.html#parseInt-java.lang.String-int-\">Javadoc</a> for more information.</p>\n\n<p><em>(If you have it in a <code>StringBuffer</code>, you'll need to do <code>Integer.parseInt(myBuffer.toString());</code> instead).</em></p>\n    "},{"t":"Is there a unique Android device ID?","l":"http://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id","q":"\n\n<p>Do Android devices have a unique id, and if so, what is a simple way to access it via Java?</p>\n    ","a":"\n<p><a href=\"http://developer.android.com/reference/android/provider/Settings.Secure.html#ANDROID_ID\"><code>Settings.Secure#ANDROID_ID</code></a> returns the Android ID as an <em>unique</em> 64-bit hex string.</p>\n\n<pre><code>import android.provider.Settings.Secure;\n\nprivate String android_id = Secure.getString(getContext().getContentResolver(),\n                                                        Secure.ANDROID_ID); \n</code></pre>\n\n<h3>Update: 06/05/2015</h3>\n\n<p>When reviewing this as a possible solution, please consider <a href=\"http://stackoverflow.com/a/2853253/166712\">Joe's answer</a> below instead as an alternative.</p>\n    "},{"t":"Using java.net.URLConnection to fire and handle HTTP requests","l":"http://stackoverflow.com/questions/2793150/using-java-net-urlconnection-to-fire-and-handle-http-requests","q":"\n\n<p>Use of <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html\"><code>java.net.URLConnection</code></a> is asked about pretty often here, and the <a href=\"http://download.oracle.com/javase/tutorial/networking/urls/connecting.html\">Oracle tutorial</a> is <em>too</em> concise about it. </p>\n\n<p>That tutorial basically only shows how to fire a GET request and read the response. It doesn't explain anywhere how to use it to among others perform a POST request, set request headers, read response headers, deal with cookies, submit a HTML form, upload a file, etc. </p>\n\n<p>So, how can I use <code>java.net.URLConnection</code> to fire and handle \"advanced\" HTTP requests?</p>\n    ","a":"\n<p><sup><em>First a disclaimer beforehand: the posted code snippets are all basic examples. You'll need to handle trivial <code>IOException</code>s and <code>RuntimeException</code>s like <code>NullPointerException</code>, <code>ArrayIndexOutOfBoundsException</code> and consorts yourself.</em></sup></p>\n\n<hr>\n\n<h3>Preparing</h3>\n\n<p>We first need to know at least the URL and the charset. The parameters are optional and depend on the functional requirements.</p>\n\n<pre><code>String url = \"http://example.com\";\nString charset = \"UTF-8\";  // Or in Java 7 and later, use the constant: java.nio.charset.StandardCharsets.UTF_8.name()\nString param1 = \"value1\";\nString param2 = \"value2\";\n// ...\n\nString query = String.format(\"param1=%s&amp;param2=%s\", \n     URLEncoder.encode(param1, charset), \n     URLEncoder.encode(param2, charset));\n</code></pre>\n\n<p>The query parameters must be in <code>name=value</code> format and be concatenated by <code>&amp;</code>. You would normally also <a href=\"http://en.wikipedia.org/wiki/Percent-encoding\">URL-encode</a> the query parameters with the specified charset using <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html\"><code>URLEncoder#encode()</code></a>.</p>\n\n<p><sup>The <code>String#format()</code> is just for convenience. I prefer it when I would need the String concatenation operator <code>+</code> more than twice.</sup></p>\n\n<hr>\n\n<h3>Firing a <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.3\">HTTP GET</a> request with (optionally) query parameters</h3>\n\n<p>It's a trivial task. It's the default request method.</p>\n\n<pre><code>URLConnection connection = new URL(url + \"?\" + query).openConnection();\nconnection.setRequestProperty(\"Accept-Charset\", charset);\nInputStream response = connection.getInputStream();\n// ...\n</code></pre>\n\n<p>Any query string should be concatenated to the URL using <code>?</code>. The <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.2\"><code>Accept-Charset</code></a> header may hint the server what encoding the parameters are in. If you don't send any query string, then you can leave the <code>Accept-Charset</code> header away. If you don't need to set any headers, then you can even use the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URL.html#openStream%28%29\"><code>URL#openStream()</code></a> shortcut method.</p>\n\n<pre><code>InputStream response = new URL(url).openStream();\n// ...\n</code></pre>\n\n<p>Either way, if the other side is a <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html\"><code>HttpServlet</code></a>, then its <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doGet()</code></a> method will be called and the parameters will be available by <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameter%28java.lang.String%29\"><code>HttpServletRequest#getParameter()</code></a>.</p>\n\n<hr>\n\n<h3>Firing a <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.5\">HTTP POST</a> request with query parameters</h3>\n\n<p>Setting the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#setDoOutput%28boolean%29\"><code>URLConnection#setDoOutput()</code></a> to <code>true</code> implicitly sets the request method to POST. The standard HTTP POST as web forms do is of type <code>application/x-www-form-urlencoded</code> wherein the query string is written to the request body.</p>\n\n<pre><code>URLConnection connection = new URL(url).openConnection();\nconnection.setDoOutput(true); // Triggers POST.\nconnection.setRequestProperty(\"Accept-Charset\", charset);\nconnection.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded;charset=\" + charset);\n\ntry (OutputStream output = connection.getOutputStream()) {\n    output.write(query.getBytes(charset));\n}\n\nInputStream response = connection.getInputStream();\n// ...\n</code></pre>\n\n<p>Note: whenever you'd like to submit a HTML form programmatically, don't forget to take the <code>name=value</code> pairs of any <code>&lt;input type=\"hidden\"&gt;</code> elements into the query string and of course also the <code>name=value</code> pair of the <code>&lt;input type=\"submit\"&gt;</code> element which you'd like to \"press\" programmatically (because that's usually been used in the server side to distinguish if a button was pressed and if so, which one).</p>\n\n<p>You can also cast the obtained <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html\"><code>URLConnection</code></a> to <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html\"><code>HttpURLConnection</code></a> and use its <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setRequestMethod%28java.lang.String%29\"><code>HttpURLConnection#setRequestMethod()</code></a> instead. But if you're trying to use the connection for output you still need to set <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#setDoOutput%28boolean%29\"><code>URLConnection#setDoOutput()</code></a> to <code>true</code>.</p>\n\n<pre><code>HttpURLConnection httpConnection = (HttpURLConnection) new URL(url).openConnection();\nhttpConnection.setRequestMethod(\"POST\");\n// ...\n</code></pre>\n\n<p>Either way, if the other side is a <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html\"><code>HttpServlet</code></a>, then its <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doPost()</code></a> method will be called and the parameters will be available by <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/ServletRequest.html#getParameter%28java.lang.String%29\"><code>HttpServletRequest#getParameter()</code></a>.</p>\n\n<hr>\n\n<h3>Actually firing the HTTP request</h3>\n\n<p>You can fire the HTTP request explicitly with <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#connect%28%29\"><code>URLConnection#connect()</code></a>, but the the request will automatically be fired on demand when you want to get any information about the HTTP response, such as the response body using <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLConnection.html#getInputStream%28%29\"><code>URLConnection#getInputStream()</code></a> and so on. The above examples does exactly that, so the <code>connect()</code> call is in fact superfluous.</p>\n\n<hr>\n\n<h3>Gathering HTTP response information</h3>\n\n<p>1) <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\">HTTP response status</a>:</p>\n\n<p>You need a <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html\"><code>HttpURLConnection</code></a> here. Cast it first if necessary.</p>\n\n<pre><code>int status = httpConnection.getResponseCode();\n</code></pre>\n\n<p>2) <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">HTTP response headers</a>:</p>\n\n<pre><code>for (Entry&lt;String, List&lt;String&gt;&gt; header : connection.getHeaderFields().entrySet()) {\n    System.out.println(header.getKey() + \"=\" + header.getValue());\n}\n</code></pre>\n\n<p>3) <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">HTTP response encoding</a>:</p>\n\n<p>When the <code>Content-Type</code> contains a <code>charset</code> parameter, then the response body is likely text based and we'd like to process the response body with the server-side specified character encoding then.</p>\n\n<pre><code>String contentType = connection.getHeaderField(\"Content-Type\");\nString charset = null;\n\nfor (String param : contentType.replace(\" \", \"\").split(\";\")) {\n    if (param.startsWith(\"charset=\")) {\n        charset = param.split(\"=\", 2)[1];\n        break;\n    }\n}\n\nif (charset != null) {\n    try (BufferedReader reader = new BufferedReader(new InputStreamReader(response, charset))) {\n        for (String line; (line = reader.readLine()) != null;) {\n            // ... System.out.println(line) ?\n        }\n    }\n}\nelse {\n    // It's likely binary content, use InputStream/OutputStream.\n}\n</code></pre>\n\n<hr>\n\n<h3>Maintaining the session</h3>\n\n<p>The server side session is usually backed by a cookie. Some web forms require that you're logged in and/or are tracked by a session. You can use the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/CookieHandler.html\"><code>CookieHandler</code></a> API to maintain cookies. You need to prepare a <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/CookieManager.html\"><code>CookieManager</code></a> with a <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/CookiePolicy.html\"><code>CookiePolicy</code></a> of <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/CookiePolicy.html#ACCEPT_ALL\"><code>ACCEPT_ALL</code></a> before sending all HTTP requests.</p>\n\n<pre><code>// First set the default cookie manager.\nCookieHandler.setDefault(new CookieManager(null, CookiePolicy.ACCEPT_ALL));\n\n// All the following subsequent URLConnections will use the same cookie manager.\nURLConnection connection = new URL(url).openConnection();\n// ...\n\nconnection = new URL(url).openConnection();\n// ...\n\nconnection = new URL(url).openConnection();\n// ...\n</code></pre>\n\n<p>Note that this is known to not always work properly in all circumstances. If it fails for you, then best is to manually gather and set the cookie headers. You basically need to grab all <code>Set-Cookie</code> headers from the response of the login or the first <code>GET</code> request and then pass this through the subsequent requests.</p>\n\n<pre><code>// Gather all cookies on the first request.\nURLConnection connection = new URL(url).openConnection();\nList&lt;String&gt; cookies = connection.getHeaderFields().get(\"Set-Cookie\");\n// ...\n\n// Then use the same cookies on all subsequent requests.\nconnection = new URL(url).openConnection();\nfor (String cookie : cookies) {\n    connection.addRequestProperty(\"Cookie\", cookie.split(\";\", 2)[0]);\n}\n// ...\n</code></pre>\n\n<p>The <code>split(\";\", 2)[0]</code> is there to get rid of cookie attributes which are irrelevant for the server side like <code>expires</code>, <code>path</code>, etc. Alternatively, you could also use <code>cookie.substring(0, cookie.indexOf(';'))</code> instead of <code>split()</code>.</p>\n\n<hr>\n\n<h3>Streaming mode</h3>\n\n<p>The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html\"><code>HttpURLConnection</code></a> will by default buffer the <em>entire</em> request body before actually sending it, regardless of whether you've set a fixed content length yourself using <code>connection.setRequestProperty(\"Content-Length\", contentLength);</code>. This may cause <code>OutOfMemoryException</code>s whenever you concurrently send large POST requests (e.g. uploading files). To avoid this, you would like to set the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setFixedLengthStreamingMode%28int%29\"><code>HttpURLConnection#setFixedLengthStreamingMode()</code></a>.</p>\n\n<pre><code>httpConnection.setFixedLengthStreamingMode(contentLength);\n</code></pre>\n\n<p>But if the content length is really not known beforehand, then you can make use of chunked streaming mode by setting the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/HttpURLConnection.html#setChunkedStreamingMode%28int%29\"><code>HttpURLConnection#setChunkedStreamingMode()</code></a> accordingly. This will set the HTTP <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.41\"><code>Transfer-Encoding</code></a> header to <code>chunked</code> which will force the request body being sent in chunks. The below example will send the body in chunks of 1KB.</p>\n\n<pre><code>httpConnection.setChunkedStreamingMode(1024);\n</code></pre>\n\n<hr>\n\n<h3>User-Agent</h3>\n\n<p>It can happen that a request returns an unexpected response, while it works fine with a real web browser. The server side is probably blocking requests based on the <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.43\"><code>User-Agent</code></a> request header. The <code>URLConnection</code> will by default set it to <code>Java/1.6.0_19</code> where the last part is obviously the JRE version. You can override this as follows:</p>\n\n<pre><code>connection.setRequestProperty(\"User-Agent\", \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36\"); // Do as if you're using Chrome 41 on Windows 7.\n</code></pre>\n\n<p>Use the User-Agent string from a <a href=\"http://www.useragentstring.com/pages/useragentstring.php\">recent browser</a>.</p>\n\n<hr>\n\n<h3>Error handling</h3>\n\n<p>If the HTTP response code is <code>4nn</code> (Client Error) or <code>5nn</code> (Server Error), then you may want to read the <code>HttpURLConnection#getErrorStream()</code> to see if the server has sent any useful error information.</p>\n\n<pre><code>InputStream error = ((HttpURLConnection) connection).getErrorStream();\n</code></pre>\n\n<p>If the HTTP response code is -1, then something went wrong with connection and response handling. The <code>HttpURLConnection</code> implementation is in older JREs somewhat buggy with keeping connections alive. You may want to turn it off by setting the <code>http.keepAlive</code> system property to <code>false</code>. You can do this programmatically in the beginning of your application by:</p>\n\n<pre><code>System.setProperty(\"http.keepAlive\", \"false\");\n</code></pre>\n\n<hr>\n\n<h3>Uploading files</h3>\n\n<p>You'd normally use <a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.2\"><code>multipart/form-data</code></a> encoding for mixed POST content (binary and character data). The encoding is in more detail described in <a href=\"http://www.faqs.org/rfcs/rfc2388.html\">RFC2388</a>.</p>\n\n<pre><code>String param = \"value\";\nFile textFile = new File(\"/path/to/file.txt\");\nFile binaryFile = new File(\"/path/to/file.bin\");\nString boundary = Long.toHexString(System.currentTimeMillis()); // Just generate some unique random value.\nString CRLF = \"\\r\\n\"; // Line separator required by multipart/form-data.\nURLConnection connection = new URL(url).openConnection();\nconnection.setDoOutput(true);\nconnection.setRequestProperty(\"Content-Type\", \"multipart/form-data; boundary=\" + boundary);\n\ntry (\n    OutputStream output = connection.getOutputStream();\n    PrintWriter writer = new PrintWriter(new OutputStreamWriter(output, charset), true);\n) {\n    // Send normal param.\n    writer.append(\"--\" + boundary).append(CRLF);\n    writer.append(\"Content-Disposition: form-data; name=\\\"param\\\"\").append(CRLF);\n    writer.append(\"Content-Type: text/plain; charset=\" + charset).append(CRLF);\n    writer.append(CRLF).append(param).append(CRLF).flush();\n\n    // Send text file.\n    writer.append(\"--\" + boundary).append(CRLF);\n    writer.append(\"Content-Disposition: form-data; name=\\\"textFile\\\"; filename=\\\"\" + textFile.getName() + \"\\\"\").append(CRLF);\n    writer.append(\"Content-Type: text/plain; charset=\" + charset).append(CRLF); // Text file itself must be saved in this charset!\n    writer.append(CRLF).flush();\n    Files.copy(textFile.toPath(), output);\n    output.flush(); // Important before continuing with writer!\n    writer.append(CRLF).flush(); // CRLF is important! It indicates end of boundary.\n\n    // Send binary file.\n    writer.append(\"--\" + boundary).append(CRLF);\n    writer.append(\"Content-Disposition: form-data; name=\\\"binaryFile\\\"; filename=\\\"\" + binaryFile.getName() + \"\\\"\").append(CRLF);\n    writer.append(\"Content-Type: \" + URLConnection.guessContentTypeFromName(binaryFile.getName())).append(CRLF);\n    writer.append(\"Content-Transfer-Encoding: binary\").append(CRLF);\n    writer.append(CRLF).flush();\n    Files.copy(binaryFile.toPath(), output);\n    output.flush(); // Important before continuing with writer!\n    writer.append(CRLF).flush(); // CRLF is important! It indicates end of boundary.\n\n    // End of multipart/form-data.\n    writer.append(\"--\" + boundary + \"--\").append(CRLF).flush();\n}\n</code></pre>\n\n<p>If the other side is a <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html\"><code>HttpServlet</code></a>, then its <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doPost()</code></a> method will be called and the parts will be available by <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html#getPart%28java.lang.String%29\"><code>HttpServletRequest#getPart()</code></a> (note, thus <strong>not</strong> <code>getParameter()</code> and so on!). The <code>getPart()</code> method is however relatively new, it's introduced in Servlet 3.0 (Glassfish 3, Tomcat 7, etc). Prior to Servlet 3.0, your best choice is using <a href=\"http://commons.apache.org/fileupload\">Apache Commons FileUpload</a> to parse a <code>multipart/form-data</code> request. Also see <a href=\"http://stackoverflow.com/questions/2422468/upload-big-file-to-servlet/2424824#2424824\">this answer</a> for examples of both the FileUpload and the Servelt 3.0 approaches.</p>\n\n<hr>\n\n<h3>Dealing with untrusted or misconfigured HTTPS sites</h3>\n\n<p>Sometimes you need to connect a HTTPS URL, perhaps because you're writing a web scraper. In that case, you may likely face a <code>javax.net.ssl.SSLException: Not trusted server certificate</code> on some HTTPS sites who doesn't keep their SSL certificates up to date, or a <code>java.security.cert.CertificateException: No subject alternative DNS name matching [hostname] found</code> or <code>javax.net.ssl.SSLProtocolException: handshake alert: unrecognized_name</code> on some misconfigured HTTPS sites.</p>\n\n<p>The following one-time-run <code>static</code> initializer in your web scraper class should make <code>HttpsURLConnection</code> more lenient as to those HTTPS sites and thus not throw those exceptions anymore.</p>\n\n<pre><code>static {\n    TrustManager[] trustAllCertificates = new TrustManager[] {\n        new X509TrustManager() {\n            @Override\n            public X509Certificate[] getAcceptedIssuers() {\n                return null; // Not relevant.\n            }\n            @Override\n            public void checkClientTrusted(X509Certificate[] certs, String authType) {\n                // Do nothing. Just allow them all.\n            }\n            @Override\n            public void checkServerTrusted(X509Certificate[] certs, String authType) {\n                // Do nothing. Just allow them all.\n            }\n        }\n    };\n\n    HostnameVerifier trustAllHostnames = new HostnameVerifier() {\n        @Override\n        public boolean verify(String hostname, SSLSession session) {\n            return true; // Just allow them all.\n        }\n    };\n\n    try {\n        System.setProperty(\"jsse.enableSNIExtension\", \"false\");\n        SSLContext sc = SSLContext.getInstance(\"SSL\");\n        sc.init(null, trustAllCertificates, new SecureRandom());\n        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n        HttpsURLConnection.setDefaultHostnameVerifier(trustAllHostnames);\n    }\n    catch (GeneralSecurityException e) {\n        throw new ExceptionInInitializerError(e);\n    }\n}\n</code></pre>\n\n<hr>\n\n<h3>Last words</h3>\n\n<p>The <a href=\"http://hc.apache.org/httpcomponents-client-ga/\">Apache HttpComponents HttpClient</a> is <em>much</em> more convenient in this all :)</p>\n\n<ul>\n<li><a href=\"http://hc.apache.org/httpcomponents-client-ga/tutorial/html/\">HttpClient Tutorial</a></li>\n<li><a href=\"http://hc.apache.org/httpcomponents-client-ga/examples.html\">HttpClient Examples</a></li>\n</ul>\n\n<hr>\n\n<h3>Parsing and extracting HTML</h3>\n\n<p>If all you want is parsing and extracting data from HTML, then better use a HTML parser like <a href=\"http://jsoup.org\">Jsoup</a></p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/3152138/what-are-the-pros-and-cons-of-the-leading-java-html-parsers/3154281#3154281\">What are the pros/cons of leading HTML parsers in Java</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2835505/how-to-scan-a-website-or-page-for-info-and-bring-it-into-my-program/2835555#2835555\">How to scan and extract a webpage in Java</a></li>\n</ul>\n    "},{"t":"Why does this code using random strings print “hello world”?","l":"http://stackoverflow.com/questions/15182496/why-does-this-code-using-random-strings-print-hello-world","q":"\n\n<p>I came across this piece of code, and found it rather interesting. The following print statement would print \"hello world\". Could anyone explain this?</p>\n\n<pre><code>System.out.println(randomString(-229985452) + \" \" + randomString(-147909649));\n</code></pre>\n\n<p>And <code>randomString()</code> looks like this</p>\n\n<pre><code>public static String randomString(int i)\n{\n    Random ran = new Random(i);\n    StringBuilder sb = new StringBuilder();\n    while (true)\n    {\n        int k = ran.nextInt(27);\n        if (k == 0)\n            break;\n\n        sb.append((char)('`' + k));\n    }\n\n    return sb.toString();\n}\n</code></pre>\n    ","a":"\n<p>When an instance of <code>java.util.Random</code> is constructed with a specific seed parameter (in this case <code>-229985452</code> or <code>-147909649</code>), it follows the random number generation algorithm <em>beginning</em> with that seed value.</p>\n\n<p>Every <code>Random</code> constructed with the same seed will generate the same pattern of numbers every time.</p>\n    "},{"t":"How can I create an executable jar with dependencies using Maven?","l":"http://stackoverflow.com/questions/574594/how-can-i-create-an-executable-jar-with-dependencies-using-maven","q":"\n\n<p>I have written a little utility to run from the command line using Java. I want to package it in a single executable jar for distribution (.jar file).</p>\n\n<p>How can I make Maven package all dependency jars into my jar?</p>\n    ","a":"\n\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;build&gt;\n  &lt;plugins&gt;\n    &lt;plugin&gt;\n      &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n      &lt;configuration&gt;\n        &lt;archive&gt;\n          &lt;manifest&gt;\n            &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\n          &lt;/manifest&gt;\n        &lt;/archive&gt;\n        &lt;descriptorRefs&gt;\n          &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\n        &lt;/descriptorRefs&gt;\n      &lt;/configuration&gt;\n    &lt;/plugin&gt;\n  &lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre>\n\n<p>and you run it with</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>mvn clean compile assembly:single\n</code></pre>\n\n<p><em>Compile goal should be added before assembly:single or otherwise the code on your own project is not included.</em></p>\n\n<p>See more details in comments.</p>\n\n<hr>\n\n<p>Commonly this goal is tied to a build phase to execute automatically. This ensures the JAR is built when executing <code>mvn install</code> or performing a deployment/release.</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;plugin&gt;\n  &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n  &lt;configuration&gt;\n    &lt;archive&gt;\n      &lt;manifest&gt;\n        &lt;mainClass&gt;fully.qualified.MainClass&lt;/mainClass&gt;\n      &lt;/manifest&gt;\n    &lt;/archive&gt;\n    &lt;descriptorRefs&gt;\n      &lt;descriptorRef&gt;jar-with-dependencies&lt;/descriptorRef&gt;\n    &lt;/descriptorRefs&gt;\n  &lt;/configuration&gt;\n  &lt;executions&gt;\n    &lt;execution&gt;\n      &lt;id&gt;make-assembly&lt;/id&gt; &lt;!-- this is used for inheritance merges --&gt;\n      &lt;phase&gt;package&lt;/phase&gt; &lt;!-- bind to the packaging phase --&gt;\n      &lt;goals&gt;\n        &lt;goal&gt;single&lt;/goal&gt;\n      &lt;/goals&gt;\n    &lt;/execution&gt;\n  &lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>\n    "},{"t":"Iterate over each Entry in a Map","l":"http://stackoverflow.com/questions/46898/iterate-over-each-entry-in-a-map","q":"\n\n<p>If I have an object implementing the <code>Map</code> interface in Java and I wish to iterate over every pair contained within it, what is the most efficient way of going through the map?  </p>\n\n<p>Will the ordering of elements depend on the specific map implementation that I have for the interface?</p>\n    ","a":"\n<pre><code>for (Map.Entry&lt;String, String&gt; entry : map.entrySet())\n{\n    System.out.println(entry.getKey() + \"/\" + entry.getValue());\n}\n</code></pre>\n    "},{"t":"How to avoid Java code in JSP files?","l":"http://stackoverflow.com/questions/3177733/how-to-avoid-java-code-in-jsp-files","q":"\n\n<p>I'm new to Java EE and I know that something like the following three lines</p>\n\n<pre><code>&lt;%= x+1 %&gt;\n&lt;%= request.getParameter(\"name\") %&gt;\n&lt;%! counter++; %&gt;\n</code></pre>\n\n<p>is an old school way of coding and in JSP version 2 there exists a method to avoid Java code in JSP files. Can someone please tell me the alternative JSP 2 lines, and what this technique is called?</p>\n    ","a":"\n<p>The use of <em>scriptlets</em> (those <code>&lt;% %&gt;</code> things) in <a href=\"http://stackoverflow.com/tags/jsp/info\">JSP</a> is indeed highly discouraged since the birth of <em>taglibs</em> (like <a href=\"http://stackoverflow.com/tags/jstl/info\">JSTL</a>) and <a href=\"http://stackoverflow.com/tags/el/info\">EL</a> (<a href=\"http://stackoverflow.com/tags/el/info\">Expression Language</a>, those <code>${}</code> things) over a decade ago.</p>\n\n<p>The major disadvantages of <em>scriptlets</em> are:</p>\n\n<ol>\n<li><strong>Reusability:</strong> you can't reuse scriptlets.</li>\n<li><strong>Replaceability:</strong> you can't make scriptlets abstract.</li>\n<li><strong>OO-ability:</strong> you can't make use of inheritance/composition.</li>\n<li><strong>Debuggability:</strong> if scriptlet throws an exception halfway, all you get is a blank page.</li>\n<li><strong>Testability:</strong> scriptlets are not unit-testable.</li>\n<li><strong>Maintainability:</strong> per saldo more time is needed to maintain mingled/cluttered/duplicated code logic.</li>\n</ol>\n\n<p><strike>Sun</strike> Oracle itself also recommends in the <a href=\"http://www.oracle.com/technetwork/articles/javase/code-convention-138726.html\">JSP coding conventions</a> to avoid use of <em>scriptlets</em> whenever the same functionality is possible by (tag) classes. Here are several cites of relevance:</p>\n\n<blockquote>\n  <p>From JSP 1.2 Specification, it is highly recommended that the JSP Standard Tag Library  (JSTL) be used in your web application to help <strong>reduce the need for JSP scriptlets</strong> in your pages. Pages that use JSTL are, in general, easier to read and maintain. </p>\n  \n  <p>...</p>\n  \n  <p>Where possible, <strong>avoid JSP scriptlets</strong> whenever tag libraries provide equivalent functionality. This makes pages easier to read and maintain, helps to separate business logic from presentation logic, and will make your pages easier to evolve into JSP 2.0-style pages (JSP 2.0 Specification supports but deemphasizes the use of scriptlets).</p>\n  \n  <p>...</p>\n  \n  <p>In the spirit of adopting the model-view-controller (MVC) design pattern to reduce coupling between the presentation tier from the business logic, <strong>JSP scriptlets should not be used</strong> for writing business logic. Rather, JSP scriptlets are used if necessary to transform data (also called \"value objects\") returned from processing the client's requests into a proper client-ready format. Even then, this would be better done with a front controller servlet or a custom tag.</p>\n</blockquote>\n\n<hr>\n\n<p><strong>How to replace <em>scriptlets</em> entirely depends on the sole purpose of the code/logic. More than often this code is to be placed in a fullworthy Java class:</strong></p>\n\n<ul>\n<li><p>If you want to invoke the <strong>same</strong> Java code on <em>every</em> request, less-or-more regardless of the requested page, e.g. checking if an user is logged in, then implement a <a href=\"http://stackoverflow.com/tags/servlet-filters/info\">filter</a> and write code accordingly in <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/Filter.html#doFilter%28javax.servlet.ServletRequest,%20javax.servlet.ServletResponse,%20javax.servlet.FilterChain%29\"><code>doFilter()</code></a> method. E.g.:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws ServletException, IOException {\n    if (((HttpServletRequest) request).getSession().getAttribute(\"user\") == null) {\n        ((HttpServletResponse) response).sendRedirect(\"login\"); // Not logged in, redirect to login page.\n    } else {\n        chain.doFilter(request, response); // Logged in, just continue request.\n    }\n}\n</code></pre>\n\n<p>When mapped on an appropriate <code>&lt;url-pattern&gt;</code> covering the JSP pages of interest, then you don't need to copypaste the same piece of code over all JSP pages.</p>\n\n<hr></li>\n<li><p>If you want to invoke some Java code to <strong>preprocess</strong> a request, e.g. preloading some list from a database to display in some table, if necessary based on some query parameters, then implement a <a href=\"http://stackoverflow.com/tags/servlets/info\">servlet</a> and write code accordingly in <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doGet%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doGet()</code></a> method. E.g.:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    try {\n        List&lt;Product&gt; products = productService.list(); // Obtain all products.\n        request.setAttribute(\"products\", products); // Store products in request scope.\n        request.getRequestDispatcher(\"/WEB-INF/products.jsp\").forward(request, response); // Forward to JSP page to display them in a HTML table.\n    } catch (SQLException e) {\n        throw new ServletException(\"Retrieving products failed!\", e);\n    }\n}\n</code></pre>\n\n<p>This way dealing with exceptions is easier. The DB is not accessed in the midst of JSP rendering, but far before the JSP is been displayed. You still have the possibility to change the response whenever the DB access throws an exception. In the above example, the default error 500 page will be displayed which you can anyway customize by an <code>&lt;error-page&gt;</code> in <code>web.xml</code>.</p>\n\n<hr></li>\n<li><p>If you want to invoke some Java code to <strong>postprocess</strong> a request, e.g. processing a form submit, then implement a <a href=\"http://stackoverflow.com/tags/servlets/info\">servlet</a> and write code accordingly in <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServlet.html#doPost%28javax.servlet.http.HttpServletRequest,%20javax.servlet.http.HttpServletResponse%29\"><code>doPost()</code></a> method. E.g.:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    String username = request.getParameter(\"username\");\n    String password = request.getParameter(\"password\");\n    User user = userService.find(username, password);\n\n    if (user != null) {\n        request.getSession().setAttribute(\"user\", user); // Login user.\n        response.sendRedirect(\"home\"); // Redirect to home page.\n    } else {\n        request.setAttribute(\"message\", \"Unknown username/password. Please retry.\"); // Store error message in request scope.\n        request.getRequestDispatcher(\"/WEB-INF/login.jsp\").forward(request, response); // Forward to JSP page to redisplay login form with error.\n    }\n}\n</code></pre>\n\n<p>This way dealing with different result page destinations is easier: redisplaying the form with validation errors in case of an error (in this particular example you can redisplay it using <code>${message}</code> in <a href=\"http://stackoverflow.com/tags/el/info\">EL</a>), or just taking to the desired target page in case of success.</p>\n\n<hr></li>\n<li><p>If you want to invoke some Java code to <strong>control</strong> the execution plan and/or the destination of the request and the response, then implement a <a href=\"http://stackoverflow.com/tags/servlets/info\">servlet</a> according the <a href=\"http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications/3542297#3542297\">MVC's Front Controller Pattern</a>. E.g.:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    try {\n        Action action = ActionFactory.getAction(request);\n        String view = action.execute(request, response);\n\n        if (view.equals(request.getPathInfo().substring(1)) {\n            request.getRequestDispatcher(\"/WEB-INF/\" + view + \".jsp\").forward(request, response);\n        } else {\n            response.sendRedirect(view);\n        }\n    } catch (Exception e) {\n        throw new ServletException(\"Executing action failed.\", e);\n    }\n}\n</code></pre>\n\n<p>Or just adopt a MVC framework like <a href=\"http://stackoverflow.com/tags/jsf/info\">JSF</a>, <a href=\"http://stackoverflow.com/tags/spring-mvc/info\">Spring MVC</a>, <a href=\"http://stackoverflow.com/tags/wicket/info\">Wicket</a>, etc so that you end up with just a JSP/Facelets page and a Javabean class without the need for a custom servlet.</p>\n\n<hr></li>\n<li><p>If you want to invoke some Java code to <strong>control the flow</strong> inside a JSP page, then you need to grab an (existing) flow control taglib like <a href=\"http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/c/tld-summary.html\">JSTL core</a>. E.g. displaying <code>List&lt;Product&gt;</code> in a table:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %&gt;\n...\n&lt;table&gt;\n    &lt;c:forEach items=\"${products}\" var=\"product\"&gt;\n        &lt;tr&gt;\n            &lt;td&gt;${product.name}&lt;/td&gt;\n            &lt;td&gt;${product.description}&lt;/td&gt;\n            &lt;td&gt;${product.price}&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/c:forEach&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>With XML-style tags which fits nicely among all that HTML, the code is better readable (and thus better maintainable) than a bunch of scriptlets with various opening and closing braces (<em>\"Where the heck does this closing brace belong to?\"</em>). An easy aid is to configure your web application to throw an exception whenever <em>scriptlets</em> are still been used by adding the following piece to <code>web.xml</code>:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;jsp-config&gt;\n    &lt;jsp-property-group&gt;\n        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;\n        &lt;scripting-invalid&gt;true&lt;/scripting-invalid&gt;\n    &lt;/jsp-property-group&gt;\n&lt;/jsp-config&gt;\n</code></pre>\n\n<p>In <a href=\"http://stackoverflow.com/tags/facelets/info\">Facelets</a>, the successor of JSP, which is part of the Java EE provided MVC framework <a href=\"http://stackoverflow.com/tags/jsf/info\">JSF</a>, it is already <strong>not</strong> possible to use <em>scriptlets</em>. This way you're automatically forced to do things \"the right way\".</p>\n\n<hr></li>\n<li><p>If you want to invoke some Java code to <strong>access and display</strong> \"backend\" data inside a JSP page, then you need to use EL (Expression Language), those <code>${}</code> things. E.g. redisplaying submitted input values:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;input type=\"text\" name=\"foo\" value=\"${param.foo}\" /&gt;\n</code></pre>\n\n<p>The <code>${param.foo}</code> displays the outcome of <code>request.getParameter(\"foo\")</code>.</p>\n\n<hr></li>\n<li><p>If you want to invoke some <strong>utility</strong> Java code directly in the JSP page (typically <code>public static</code> methods), then you need to define them as EL functions. There's a standard <a href=\"http://docs.oracle.com/javaee/5/jstl/1.1/docs/tlddocs/fn/tld-summary.html\">functions taglib</a> in JSTL, but <a href=\"http://docs.oracle.com/javaee/5/tutorial/doc/bnahq.html#bnaiq\">you can also easily create functions yourself</a>. Here's an example how JSTL <code>fn:escapeXml</code> is useful to prevent <a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\">XSS</a> <a href=\"http://ha.ckers.org/xss.html\">attacks</a>.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %&gt;\n...\n&lt;input type=\"text\" name=\"foo\" value=\"${fn:escapeXml(param.foo)}\" /&gt;\n</code></pre>\n\n<p>Note that the XSS sensitivity is in no way specifically related to Java/JSP/JSTL/EL/whatever, this problem needs to be taken into account in <strong>every</strong> webapplication you develop. The problem of <em>scriptlets</em> is that it provides no way of builtin preventions, at least not using the standard Java API. JSP's successor Facelets has already implicit HTML escaping, so you don't need to worry about XSS holes in Facelets.</p></li>\n</ul>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2095397/what-is-the-difference-between-jsf-servlet-and-jsp/2097732#2097732\">What's the difference between JSP, Servlet and JSF?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3106452/java-servlet-instantiation-and-session-variables/3106909#3106909\">How does Servlet, ServletContext, HttpSession and HttpServletRequest/Response work?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5003142/jsp-using-mvc-and-jdbc\">Basic MVC example with JSP, Servlet and JDBC</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications/\">Design patterns in Java web applications</a></li>\n<li><a href=\"http://balusc.blogspot.com/2010/01/hidden-features-of-jspservlet.html\">Hidden features of JSP/Servlet</a></li>\n</ul>\n    "},{"t":"In Java, how can I test if an Array contains a certain value?","l":"http://stackoverflow.com/questions/1128723/in-java-how-can-i-test-if-an-array-contains-a-certain-value","q":"\n\n<p>I have a <code>String[]</code> with values like so:</p>\n\n<pre><code>public static final String[] VALUES = new String[] {\"AB\",\"BC\",\"CD\",\"AE\"};\n</code></pre>\n\n<p>Given String s, is there a good way of testing whether <code>VALUES</code> contains <code>s</code>?</p>\n    ","a":"\n<pre><code>Arrays.asList(yourArray).contains(yourValue)\n</code></pre>\n    "},{"t":"Why is executing Java code in comments with certain Unicode characters allowed?","l":"http://stackoverflow.com/questions/30727515/why-is-executing-java-code-in-comments-with-certain-unicode-characters-allowed","q":"\n\n<p>The following code produces the output \"Hello World!\" (no really, try it).</p>\n\n<pre><code>public static void main(String... args) {\n\n   // The comment below is not a typo.\n   // \\u000d System.out.println(\"Hello World!\");\n}\n</code></pre>\n\n<p>The reason for this is that the Java compiler parses the Unicode character <code>\\u000d</code> as a new line and gets transformed into:</p>\n\n<pre><code>public static void main(String... args) {\n\n   // The comment below is not a typo.\n   //\n   System.out.println(\"Hello World!\");\n}\n</code></pre>\n\n<p>Thus resulting into a comment being \"executed\".</p>\n\n<p>Since this can be used to \"hide\" malicious code or whatever an evil programmer can conceive, <strong>why is it allowed in comments</strong>?</p>\n\n<p>Why is this allowed by the Java specification?</p>\n    ","a":"\n<p>Unicode decoding takes place before any other lexical translation. The key benefit of this is that it makes it trivial to go back and forth between ASCII and any other encoding. You don't even need to figure out where comments begin and end!</p>\n\n<p>As stated in <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-3.html#jls-3.3\">JLS Section 3.3</a> this allows any ASCII based tool to process the source files:</p>\n\n<blockquote>\n  <p>[...] The Java programming language specifies a standard way of transforming a program written in Unicode into ASCII that changes a program into a form that can be processed by ASCII-based tools. [...]</p>\n</blockquote>\n\n<p>This gives a fundamental guarantee for platform independence (independence of supported character sets) which has always been a key goal for the Java platform. </p>\n\n<p>Being able to write any Unicode character anywhere in the file is a neat feature, and especially important in comments, when documenting code in non-latin languages. The fact that it can interfere with the semantics in such subtle ways is just an (unfortunate) side-effect.</p>\n\n<p>There are many gotchas on this theme and <a href=\"http://www.javapuzzlers.com/\"><em>Java Puzzlers</em></a> by Joshua Bloch and Neal Gafter included the following variant:</p>\n\n<blockquote>\n  <p>Is this a legal Java program? If so, what does it print?</p>\n\n<pre><code>\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\\u0020\n\\u0063\\u006c\\u0061\\u0073\\u0073\\u0020\\u0055\\u0067\\u006c\\u0079\n\\u007b\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\n\\u0076\\u006f\\u0069\\u0064\\u0020\\u006d\\u0061\\u0069\\u006e\\u0028\n\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u005b\\u005d\\u0020\\u0020\n\\u0020\\u0020\\u0020\\u0020\\u0061\\u0072\\u0067\\u0073\\u0029\\u007b\n\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\\u006f\\u0075\\u0074\n\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0028\\u0020\n\\u0022\\u0048\\u0065\\u006c\\u006c\\u006f\\u0020\\u0077\\u0022\\u002b\n\\u0022\\u006f\\u0072\\u006c\\u0064\\u0022\\u0029\\u003b\\u007d\\u007d\n</code></pre>\n</blockquote>\n\n<p>(This program turns out to be a plain \"Hello World\" program.)</p>\n\n<p>In the solution to the puzzler, they point out the following:</p>\n\n<blockquote>\n  <p>More seriously, this puzzle serves to reinforce the lessons of the previous three: <strong>Unicode escapes are essential when you need to insert characters that can’t be represented in any other way into your program. Avoid them in all other cases.</strong></p>\n</blockquote>\n    "},{"t":"Dealing with “java.lang.OutOfMemoryError: PermGen space” error","l":"http://stackoverflow.com/questions/88235/dealing-with-java-lang-outofmemoryerror-permgen-space-error","q":"\n\n<p>Recently I ran into this error in my web application:</p>\n\n<blockquote>\n  <p>java.lang.OutOfMemoryError: PermGen space</p>\n</blockquote>\n\n<p>It's a typical Hibernate/JPA + IceFaces/JSF application running on Tomcat 6 and JDK 1.6.</p>\n\n<p>Apparently this can occur after redeploying an application a few times.</p>\n    ","a":"\n<p>The solution was to add these flags to JVM command line when Tomcat is started:</p>\n\n<pre><code>-XX:+CMSClassUnloadingEnabled -XX:+CMSPermGenSweepingEnabled\n</code></pre>\n\n<p>You can do that by shutting down the tomcat service, then going into the Tomcat/bin directory and running tomcat6w.exe. Under the \"Java\" tab, add the arguments to the \"Java Options\" box. Click \"OK\" and then restart the service.</p>\n\n<p>If you get an error <em>the specified service does not exist as an installed service</em> you should run:</p>\n\n<pre><code>tomcat6w //ES//servicename\n</code></pre>\n\n<p>where <strong><em>servicename</em></strong> is the name of the server as viewed in services.msc</p>\n\n<p>Source: orx's comment on <a href=\"http://www.jroller.com/agileanswers/entry/preventing_java_s_java_lang\">Eric's Agile Answers</a>.</p>\n    "},{"t":"“implements Runnable” vs. “extends Thread”","l":"http://stackoverflow.com/questions/541487/implements-runnable-vs-extends-thread","q":"\n\n<p>From what time I've spent with threads in Java, I've found these two ways to write threads:</p>\n\n<p>With <code>implements Runnable</code>:</p>\n\n<pre><code>public class ThreadA implements Runnable {\n    public void run() {\n        //Code\n    }\n}\n//Started with a \"new Thread(threadA).start()\" call\n</code></pre>\n\n<p>Or, with <code>extends Thread</code>:</p>\n\n<pre><code>public class ThreadB extends Thread {\n    public ThreadB() {\n        super(\"ThreadB\");\n    }\n    public void run() {\n        //Code\n    }\n}\n//Started with a \"threadB.start()\" call\n</code></pre>\n\n<p>Is there any significant difference in these two blocks of code ?</p>\n    ","a":"\n<p>Yes: implements <code>Runnable</code> is the preferred way to do it, IMO. You're not really specialising the thread's behaviour.  You're just giving it something to run. That means <a href=\"http://en.wikipedia.org/wiki/Object_composition\">composition</a> is the <em>philosophically</em> \"purer\" way to go.</p>\n\n<p>In <em>practical</em> terms, it means you can implement <code>Runnable</code> and extend from another class as well.</p>\n    "},{"t":"Does finally always execute in Java?","l":"http://stackoverflow.com/questions/65035/does-finally-always-execute-in-java","q":"\n\n<p>I have a try/catch block with returns inside it. Will the finally block be called?</p>\n\n<p>For example:</p>\n\n<pre><code>try {  \n    something();  \n    return success;  \n}  \ncatch (Exception e) {   \n    return failure;  \n}  \nfinally {  \n    System.out.println(\"i don't know if this will get printed out.\");\n}\n</code></pre>\n\n<p>I know I can just type this in an see what happens (which is what I'm about to do, actually) but when I googled for answers nothing came up, so I figured I'd throw this up as a question.</p>\n    ","a":"\n<p><code>finally</code> will be called.</p>\n\n<p>The only times <code>finally</code> won't be called are:</p>\n\n<ol>\n<li>if you call <code>System.exit()</code> <em>or</em></li>\n<li>another thread interrupts current one <em>or</em> </li>\n<li>if the JVM crashes first</li>\n</ol>\n    "},{"t":"Android SDK installation doesn't find JDK","l":"http://stackoverflow.com/questions/4382178/android-sdk-installation-doesnt-find-jdk","q":"\n\n<p>I'm trying to install the Android SDK on my Windows 7 x64 System. <code>jdk-6u23-windows-x64.exe</code> is installed, but the Android SDK setup refuses to proceed, because it doesn't find the JDK installation.</p>\n\n<p>Is this a known issue? And is there a solution?</p>\n\n<p><img src=\"http://i.stack.imgur.com/pZjuL.jpg\" alt=\"SDK Error\"></p>\n    ","a":"\n<p>Press <strong><em>Back</em></strong> when you get the notification and then <strong><em>Next</em></strong>. This time it will find the JDK. </p>\n    "},{"t":"Convert a String to an enum in Java","l":"http://stackoverflow.com/questions/604424/convert-a-string-to-an-enum-in-java","q":"\n\n<p>Say I have an enum which is just</p>\n\n<pre><code>public enum Blah {\n    A, B, C, D\n}\n</code></pre>\n\n<p>and I would like to find the enum value of a string, for example <code>\"A\"</code> which would be <code>Blah.A</code>. How would it be possible to do this?</p>\n\n<p>Is the <code>Enum.valueOf()</code> the method I need? If so, how would I use this?</p>\n    ","a":"\n<p>Yes, <code>Blah.valueOf(\"A\")</code> will give you <code>Blah.A</code>.</p>\n\n<p>The static methods <code>valueOf()</code> and <code>values()</code> are created at compile time and do not appear in source code. They do appear in Javadoc, though; for example, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/awt/Dialog.ModalityType.html\"><code>Dialog.ModalityType</code></a> shows both methods.</p>\n    "},{"t":"How do I call one constructor from another in Java?","l":"http://stackoverflow.com/questions/285177/how-do-i-call-one-constructor-from-another-in-java","q":"\n\n<p>Is it possible to call a constructor from another (within the same class, not from a subclass)? If yes how? And what could be the best way to call another constructor (if there are several ways to do it)?</p>\n    ","a":"\n<p>Yes, it is possible:</p>\n\n<pre><code>public class Foo\n{\n    private int x;\n\n    public Foo()\n    {\n        this(1);\n    }\n\n    public Foo(int x)\n    {\n        this.x = x;\n    }\n}\n</code></pre>\n\n<p>To chain to a particular superclass constructor instead of one in the same class, use <code>super</code> instead of <code>this</code>. Note that <strong>you can only chain to one constructor</strong>, and <strong>it has to be the first statement in your constructor body</strong>.</p>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/284896\">this related question</a>, which is about C# but where the same principles apply.</p>\n    "},{"t":"Breaking out of nested loops in Java","l":"http://stackoverflow.com/questions/886955/breaking-out-of-nested-loops-in-java","q":"\n\n<p>I've got a nested loop construct like this:</p>\n\n<pre><code>for (Type type : types) {\n    for (Type t : types2) {\n         if (some condition) {\n             // Do something and break...\n             break; // Breaks out of the inner loop\n         }\n    }\n}\n</code></pre>\n\n<p>Now how can I break out of both loops. I've looked at similar questions, but none concerns Java specifically. I couldn't apply these solutions because most used gotos.</p>\n\n<p>I don't want to put the inner loop in a different method.</p>\n\n<p>Update: I don't want to rerun the loops, when breaking I'm finished with the execution of the loop block.</p>\n    ","a":"\n<p>(EDIT: Like other answerers, I'd definitely <em>prefer</em> to put the inner loop in a different method. This answer just shows how the requirements in the question can be met.)</p>\n\n<p>You can use <code>break</code> with a label for the outer loop. For example:</p>\n\n<pre><code>public class Test {\n  public static void main(String[] args) {\n    outerloop:\n    for (int i=0; i &lt; 5; i++) {\n      for (int j=0; j &lt; 5; j++) {\n        if (i * j &gt; 6) {\n          System.out.println(\"Breaking\");\n          break outerloop;\n        }\n        System.out.println(i + \" \" + j);\n      }\n    }\n    System.out.println(\"Done\");\n  }\n}\n</code></pre>\n\n<p>This prints:</p>\n\n<pre><code>0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n2 2\n2 3\nBreaking\nDone\n</code></pre>\n    "},{"t":"Initialization of an ArrayList in one line","l":"http://stackoverflow.com/questions/1005073/initialization-of-an-arraylist-in-one-line","q":"\n\n<p>I want to create a list of options for testing purposes. At first, I did this:</p>\n\n<pre><code>ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;();\nplaces.add(\"Buenos Aires\");\nplaces.add(\"Córdoba\");\nplaces.add(\"La Plata\");\n</code></pre>\n\n<p>Then I refactored the code as follows:</p>\n\n<pre><code>ArrayList&lt;String&gt; places = new ArrayList&lt;String&gt;(\n    Arrays.asList(\"Buenos Aires\", \"Córdoba\", \"La Plata\"));\n</code></pre>\n\n<p>Is there a better way to do this?</p>\n    ","a":"\n<p>Actually, probably the \"best\" way to initialize the <code>ArrayList</code> is the method you wrote, as it does not need to create a new <code>List</code> in any way:</p>\n\n<pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();\nlist.add(\"A\");\nlist.add(\"B\");\nlist.add(\"C\");\n</code></pre>\n\n<p>The catch is that there is quite a bit of typing required to refer to that <code>list</code> instance.</p>\n\n<p>There are alternatives, such as making an anonymous inner class with an instance initializer (also known as an \"double brace initialization\"):</p>\n\n<pre><code>ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;() {{\n    add(\"A\");\n    add(\"B\");\n    add(\"C\");\n}};\n</code></pre>\n\n<p>However, I'm not too fond of that method because what you end up with is a subclass of <code>ArrayList</code> which has an instance initializer, and that class is created just to create one object -- that just seems like a little bit overkill to me.</p>\n\n<p>What would have been nice was if the <a href=\"http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html\">Collection Literals proposal</a> for <a href=\"http://openjdk.java.net/projects/coin\">Project Coin</a> was accepted (it was slated to be introduced in Java 7, but it's not likely to be part of Java 8 either.):</p>\n\n<pre><code>List&lt;String&gt; list = [\"A\", \"B\", \"C\"];\n</code></pre>\n\n<p>Unfortunately it won't help you here, as it will initialize an immutable <code>List</code> rather than an <code>ArrayList</code>, and furthermore, it's not available yet, if it ever will be.</p>\n    "},{"t":"'Must Override a Superclass Method' Errors after importing a project into Eclipse","l":"http://stackoverflow.com/questions/1678122/must-override-a-superclass-method-errors-after-importing-a-project-into-eclips","q":"\n\n<p>Anytime I have to re-import my projects into Eclipse (if I reinstalled Eclipse, or changed the location of the projects), <strong>almost all</strong> of my overridden methods are not formatted correctly, causing the error <code>The method must override a superclass method</code>.</p>\n\n<p>It may be noteworthy to mention this is with Android projects - for whatever reason, the method argument values are not always populated, so I have to manually populate them myself. For instance:</p>\n\n<pre><code>list.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {\n\n    //These arguments have their correct names\n    public void onCreateContextMenu(ContextMenu menu, View v, \n                                    ContextMenuInfo menuInfo) {                 \n    }\n\n});\n</code></pre>\n\n<p>will be initially populated like this:</p>\n\n<pre><code>list.setOnCreateContextMenuListener(new OnCreateContextMenuListener() {\n\n    //This methods arguments were not automatically provided    \n    public void onCreateContextMenu(ContextMenu arg1, View arg2,\n                                    ContextMenuInfo arg3) {\n    }\n\n});\n</code></pre>\n\n<p>The odd thing is, if I remove my code, and have Eclipse automatically recreate the method, it uses the same argument names I already had, so I don't really know where the problem is, other then it auto-formatting the method for me.</p>\n\n<p>This becomes quite a pain having to manually recreate ALL my overridden methods by hand. If anyone can explain why this happens or how to fix it .. I would be very happy.</p>\n\n<p>Maybe it is due to the way I am formatting the methods, which are inside an argument of another method?</p>\n    ","a":"\n<p>Eclipse is defaulting to Java 1.5 and you have classes implementing interface methods (which in Java 1.6 can be annotated with @Override, but in Java 1.5 can only be applied to methods overriding a superclass method).</p>\n\n<p>Go to your project/ide preferences and set the java compiler level to 1.6 and also make sure you select JRE 1.6 to execute your program from eclipse.</p>\n    "},{"t":"Java inner class and static nested class","l":"http://stackoverflow.com/questions/70324/java-inner-class-and-static-nested-class","q":"\n\n<p>What is the main difference between a inner class and a static nested class in Java? Does design /implementation play a role in choosing any of these?</p>\n    ","a":"\n<p>Nested classes are divided into two categories: static and non-static. Nested classes that are declared static are simply called static nested classes. Non-static nested classes are called inner classes. </p>\n\n<p>Static nested classes are accessed using the enclosing class name:</p>\n\n<pre><code>OuterClass.StaticNestedClass\n</code></pre>\n\n<p>For example, to create an object for the static nested class, use this syntax:</p>\n\n<pre><code>OuterClass.StaticNestedClass nestedObject = new OuterClass.StaticNestedClass();\n</code></pre>\n\n<p>Objects that are instances of an inner class exist within an instance of the outer class. Consider the following classes:</p>\n\n<pre><code>class OuterClass {\n    ...\n    class InnerClass {\n        ...\n    }\n}\n</code></pre>\n\n<p>An instance of InnerClass can exist only within an instance of OuterClass and has direct access to the methods and fields of its enclosing instance.</p>\n\n<p>To instantiate an inner class, you must first instantiate the outer class. Then, create the inner object within the outer object with this syntax:</p>\n\n<pre><code>OuterClass.InnerClass innerObject = outerObject.new InnerClass();\n</code></pre>\n\n<p>see: <a href=\"http://download.oracle.com/javase/tutorial/java/javaOO/nested.html\">Java Tutorial - Nested Classes</a></p>\n\n<p>For completeness note that there is also such a thing as an <a href=\"http://stackoverflow.com/questions/20468856/is-it-true-that-every-inner-class-requires-an-enclosing-instance\">inner class <em>without</em> an enclosing instance</a>:</p>\n\n<pre><code>class A {\n  int t() { return 1; }\n  static A a =  new A() { int t() { return 2; } };\n}\n</code></pre>\n\n<p>Here, <code>new A() { ... }</code> is an <em>inner class defined in a static context</em> and does not have an enclosing instance.</p>\n    "},{"t":"How do I compare strings in Java?","l":"http://stackoverflow.com/questions/513832/how-do-i-compare-strings-in-java","q":"\n\n<p>I've been using the <code>==</code> operator in my program to compare all my strings so far.\nHowever, I ran into a bug, changed one of them into <code>.equals()</code> instead, and it fixed the bug.</p>\n\n<p>Is <code>==</code> bad? When should it and should it not be used? What's the difference?</p>\n    ","a":"\n<p><code>==</code> tests for reference equality (whether they are the same object).</p>\n\n<p><code>.equals()</code> tests for value equality (whether they are logically \"equal\").</p>\n\n<p>Consequently, if you want to test whether two strings have the same value you should use <code>.equals()</code>.</p>\n\n<pre><code>// These two have the same value\nnew String(\"test\").equals(\"test\") // --&gt; true \n\n// ... but they are not the same object\nnew String(\"test\") == \"test\" // --&gt; false \n\n// ... neither are these\nnew String(\"test\") == new String(\"test\") // --&gt; false \n\n// ... but these are because literals are interned by \n// the compiler and thus refer to the same object\n\"test\" == \"test\" // --&gt; true \n</code></pre>\n\n<p>You almost <strong>always</strong> want to use<code>.equals()</code>. In the <strong>rare</strong> situation where you <strong>know</strong> you're dealing with <a href=\"https://docs.oracle.com/javase/8/docs/api/java/lang/String.html#intern--\">interned</a> strings, you <em>can</em> use <code>==</code>.</p>\n    "},{"t":"How to sort a Map<Key, Value> on the values in Java?","l":"http://stackoverflow.com/questions/109383/how-to-sort-a-mapkey-value-on-the-values-in-java","q":"\n\n<p>I am relatively new to Java, and often find that I need to sort a <code>Map&lt;Key, Value&gt;</code> on the values. Since the values are not unique, I find myself converting the <code>keySet</code> into an <code>array</code>, and sorting that array through <strong>array sort</strong> with a <strong>custom comparator</strong> that sorts on the value associated with the key. Is there an easier way?</p>\n    ","a":"\n<p><strong>Important added note:</strong> <em>if you intend to use the code provided, be sure to read the comments as well to be aware of the implications. For example, values can no longer be retrieved by their key. (<code>get</code> always returns <code>null</code>.)</em></p>\n\n<hr>\n\n<p>It seems much easier than all of the foregoing. Use a TreeMap as follows:</p>\n\n<pre><code>public class Testing {\n\n    public static void main(String[] args) {\n\n        HashMap&lt;String,Double&gt; map = new HashMap&lt;String,Double&gt;();\n        ValueComparator bvc =  new ValueComparator(map);\n        TreeMap&lt;String,Double&gt; sorted_map = new TreeMap&lt;String,Double&gt;(bvc);\n\n        map.put(\"A\",99.5);\n        map.put(\"B\",67.4);\n        map.put(\"C\",67.4);\n        map.put(\"D\",67.3);\n\n        System.out.println(\"unsorted map: \"+map);\n\n        sorted_map.putAll(map);\n\n        System.out.println(\"results: \"+sorted_map);\n    }\n}\n\nclass ValueComparator implements Comparator&lt;String&gt; {\n\n    Map&lt;String, Double&gt; base;\n    public ValueComparator(Map&lt;String, Double&gt; base) {\n        this.base = base;\n    }\n\n    // Note: this comparator imposes orderings that are inconsistent with equals.    \n    public int compare(String a, String b) {\n        if (base.get(a) &gt;= base.get(b)) {\n            return -1;\n        } else {\n            return 1;\n        } // returning 0 would merge keys\n    }\n}\n</code></pre>\n\n<p>Output:\n    </p><pre>    unsorted map: {D=67.3, A=99.5, B=67.4, C=67.4}\n    results: {D=67.3, B=67.4, C=67.4, A=99.5}\n    </pre><p></p>\n    "},{"t":"Fastest way to determine if an integer's square root is an integer","l":"http://stackoverflow.com/questions/295579/fastest-way-to-determine-if-an-integers-square-root-is-an-integer","q":"\n\n<p>I'm looking for the fastest way to determine if a <code>long</code> value is a perfect square (i.e. its square root is another integer).  I've done it the easy way, by using the built-in Math.sqrt() function, but I'm wondering if there is a way to do it faster by restricting yourself to integer-only domain.  Maintaining a lookup table is impratical (since there are about 2<sup>31.5</sup> integers whose square is less than 2<sup>63</sup>).</p>\n\n<p>Here is the very simple and straightforward way I'm doing it now:</p>\n\n<pre><code>public final static boolean isPerfectSquare(long n)\n{\n  if (n &lt; 0)\n    return false;\n\n  long tst = (long)(Math.sqrt(n) + 0.5);\n  return tst*tst == n;\n}\n</code></pre>\n\n<hr>\n\n<p><i>Notes: I'm using this function in many <a href=\"http://projecteuler.net/\">Project Euler</a> problems.  So no one else will ever have to maintain this code.  And this kind of micro-optimization could actually make a difference, since part of the challenge is to do every algorithm in less than a minute, and this function will need to be called millions of times in some problems.</i></p>\n\n<hr>\n\n<p><strong>Update 2</strong>:  A new solution posted by <a href=\"http://stackoverflow.com/users/3508/a-rex\">A. Rex</a> has proven to be even faster.  In a run over the first 1 billion integers, the solution only required 34% of the time that the original solution used.  While the John Carmack hack is a little better for small values of <em>n</em>, the benefit compared to this solution is pretty small.</p>\n\n<p>Here is the A. Rex solution, converted to Java:</p>\n\n<pre><code>private final static boolean isPerfectSquare(long n)\n{\n  // Quickfail\n  if( n &lt; 0 || ((n&amp;2) != 0) || ((n &amp; 7) == 5) || ((n &amp; 11) == 8) )\n    return false;\n  if( n == 0 )\n    return true;\n\n  // Check mod 255 = 3 * 5 * 17, for fun\n  long y = n;\n  y = (y &amp; 0xffffffffL) + (y &gt;&gt; 32);\n  y = (y &amp; 0xffffL) + (y &gt;&gt; 16);\n  y = (y &amp; 0xffL) + ((y &gt;&gt; 8) &amp; 0xffL) + (y &gt;&gt; 16);\n  if( bad255[(int)y] )\n      return false;\n\n  // Divide out powers of 4 using binary search\n  if((n &amp; 0xffffffffL) == 0)\n      n &gt;&gt;= 32;\n  if((n &amp; 0xffffL) == 0)\n      n &gt;&gt;= 16;\n  if((n &amp; 0xffL) == 0)\n      n &gt;&gt;= 8;\n  if((n &amp; 0xfL) == 0)\n      n &gt;&gt;= 4;\n  if((n &amp; 0x3L) == 0)\n      n &gt;&gt;= 2;\n\n  if((n &amp; 0x7L) != 1)\n      return false;\n\n  // Compute sqrt using something like Hensel's lemma\n  long r, t, z;\n  r = start[(int)((n &gt;&gt; 3) &amp; 0x3ffL)];\n  do {\n    z = n - r * r;\n    if( z == 0 )\n      return true;\n    if( z &lt; 0 )\n      return false;\n    t = z &amp; (-z);\n    r += (z &amp; t) &gt;&gt; 1;\n    if( r &gt; (t  &gt;&gt; 1) )\n    r = t - r;\n  } while( t &lt;= (1L &lt;&lt; 33) );\n  return false;\n}\n\nprivate static boolean[] bad255 =\n{\n   false,false,true ,true ,false,true ,true ,true ,true ,false,true ,true ,true ,\n   true ,true ,false,false,true ,true ,false,true ,false,true ,true ,true ,false,\n   true ,true ,true ,true ,false,true ,true ,true ,false,true ,false,true ,true ,\n   true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,false,true ,false,\n   true ,true ,true ,false,true ,true ,true ,true ,false,true ,true ,true ,false,\n   true ,false,true ,true ,false,false,true ,true ,true ,true ,true ,false,true ,\n   true ,true ,true ,false,true ,true ,false,false,true ,true ,true ,true ,true ,\n   true ,true ,true ,false,true ,true ,true ,true ,true ,false,true ,true ,true ,\n   true ,true ,false,true ,true ,true ,true ,false,true ,true ,true ,false,true ,\n   true ,true ,true ,false,false,true ,true ,true ,true ,true ,true ,true ,true ,\n   true ,true ,true ,true ,true ,false,false,true ,true ,true ,true ,true ,true ,\n   true ,false,false,true ,true ,true ,true ,true ,false,true ,true ,false,true ,\n   true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,false,true ,true ,\n   false,true ,false,true ,true ,false,true ,true ,true ,true ,true ,true ,true ,\n   true ,true ,true ,true ,false,true ,true ,false,true ,true ,true ,true ,true ,\n   false,false,true ,true ,true ,true ,true ,true ,true ,false,false,true ,true ,\n   true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,false,false,\n   true ,true ,true ,true ,false,true ,true ,true ,false,true ,true ,true ,true ,\n   false,true ,true ,true ,true ,true ,false,true ,true ,true ,true ,true ,false,\n   true ,true ,true ,true ,true ,true ,true ,true ,false,false,true ,true ,false,\n   true ,true ,true ,true ,false,true ,true ,true ,true ,true ,false,false,true ,\n   true ,false,true ,false,true ,true ,true ,false,true ,true ,true ,true ,false,\n   true ,true ,true ,false,true ,false,true ,true ,true ,true ,true ,true ,true ,\n   true ,true ,true ,true ,true ,false,true ,false,true ,true ,true ,false,true ,\n   true ,true ,true ,false,true ,true ,true ,false,true ,false,true ,true ,false,\n   false,true ,true ,true ,true ,true ,false,true ,true ,true ,true ,false,true ,\n   true ,false,false,true ,true ,true ,true ,true ,true ,true ,true ,false,true ,\n   true ,true ,true ,true ,false,true ,true ,true ,true ,true ,false,true ,true ,\n   true ,true ,false,true ,true ,true ,false,true ,true ,true ,true ,false,false,\n   true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,\n   false,false,true ,true ,true ,true ,true ,true ,true ,false,false,true ,true ,\n   true ,true ,true ,false,true ,true ,false,true ,true ,true ,true ,true ,true ,\n   true ,true ,true ,true ,true ,false,true ,true ,false,true ,false,true ,true ,\n   false,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,true ,false,\n   true ,true ,false,true ,true ,true ,true ,true ,false,false,true ,true ,true ,\n   true ,true ,true ,true ,false,false,true ,true ,true ,true ,true ,true ,true ,\n   true ,true ,true ,true ,true ,true ,false,false,true ,true ,true ,true ,false,\n   true ,true ,true ,false,true ,true ,true ,true ,false,true ,true ,true ,true ,\n   true ,false,true ,true ,true ,true ,true ,false,true ,true ,true ,true ,true ,\n   true ,true ,true ,false,false\n};\n\nprivate static int[] start =\n{\n  1,3,1769,5,1937,1741,7,1451,479,157,9,91,945,659,1817,11,\n  1983,707,1321,1211,1071,13,1479,405,415,1501,1609,741,15,339,1703,203,\n  129,1411,873,1669,17,1715,1145,1835,351,1251,887,1573,975,19,1127,395,\n  1855,1981,425,453,1105,653,327,21,287,93,713,1691,1935,301,551,587,\n  257,1277,23,763,1903,1075,1799,1877,223,1437,1783,859,1201,621,25,779,\n  1727,573,471,1979,815,1293,825,363,159,1315,183,27,241,941,601,971,\n  385,131,919,901,273,435,647,1493,95,29,1417,805,719,1261,1177,1163,\n  1599,835,1367,315,1361,1933,1977,747,31,1373,1079,1637,1679,1581,1753,1355,\n  513,1539,1815,1531,1647,205,505,1109,33,1379,521,1627,1457,1901,1767,1547,\n  1471,1853,1833,1349,559,1523,967,1131,97,35,1975,795,497,1875,1191,1739,\n  641,1149,1385,133,529,845,1657,725,161,1309,375,37,463,1555,615,1931,\n  1343,445,937,1083,1617,883,185,1515,225,1443,1225,869,1423,1235,39,1973,\n  769,259,489,1797,1391,1485,1287,341,289,99,1271,1701,1713,915,537,1781,\n  1215,963,41,581,303,243,1337,1899,353,1245,329,1563,753,595,1113,1589,\n  897,1667,407,635,785,1971,135,43,417,1507,1929,731,207,275,1689,1397,\n  1087,1725,855,1851,1873,397,1607,1813,481,163,567,101,1167,45,1831,1205,\n  1025,1021,1303,1029,1135,1331,1017,427,545,1181,1033,933,1969,365,1255,1013,\n  959,317,1751,187,47,1037,455,1429,609,1571,1463,1765,1009,685,679,821,\n  1153,387,1897,1403,1041,691,1927,811,673,227,137,1499,49,1005,103,629,\n  831,1091,1449,1477,1967,1677,697,1045,737,1117,1737,667,911,1325,473,437,\n  1281,1795,1001,261,879,51,775,1195,801,1635,759,165,1871,1645,1049,245,\n  703,1597,553,955,209,1779,1849,661,865,291,841,997,1265,1965,1625,53,\n  1409,893,105,1925,1297,589,377,1579,929,1053,1655,1829,305,1811,1895,139,\n  575,189,343,709,1711,1139,1095,277,993,1699,55,1435,655,1491,1319,331,\n  1537,515,791,507,623,1229,1529,1963,1057,355,1545,603,1615,1171,743,523,\n  447,1219,1239,1723,465,499,57,107,1121,989,951,229,1521,851,167,715,\n  1665,1923,1687,1157,1553,1869,1415,1749,1185,1763,649,1061,561,531,409,907,\n  319,1469,1961,59,1455,141,1209,491,1249,419,1847,1893,399,211,985,1099,\n  1793,765,1513,1275,367,1587,263,1365,1313,925,247,1371,1359,109,1561,1291,\n  191,61,1065,1605,721,781,1735,875,1377,1827,1353,539,1777,429,1959,1483,\n  1921,643,617,389,1809,947,889,981,1441,483,1143,293,817,749,1383,1675,\n  63,1347,169,827,1199,1421,583,1259,1505,861,457,1125,143,1069,807,1867,\n  2047,2045,279,2043,111,307,2041,597,1569,1891,2039,1957,1103,1389,231,2037,\n  65,1341,727,837,977,2035,569,1643,1633,547,439,1307,2033,1709,345,1845,\n  1919,637,1175,379,2031,333,903,213,1697,797,1161,475,1073,2029,921,1653,\n  193,67,1623,1595,943,1395,1721,2027,1761,1955,1335,357,113,1747,1497,1461,\n  1791,771,2025,1285,145,973,249,171,1825,611,265,1189,847,1427,2023,1269,\n  321,1475,1577,69,1233,755,1223,1685,1889,733,1865,2021,1807,1107,1447,1077,\n  1663,1917,1129,1147,1775,1613,1401,555,1953,2019,631,1243,1329,787,871,885,\n  449,1213,681,1733,687,115,71,1301,2017,675,969,411,369,467,295,693,\n  1535,509,233,517,401,1843,1543,939,2015,669,1527,421,591,147,281,501,\n  577,195,215,699,1489,525,1081,917,1951,2013,73,1253,1551,173,857,309,\n  1407,899,663,1915,1519,1203,391,1323,1887,739,1673,2011,1585,493,1433,117,\n  705,1603,1111,965,431,1165,1863,533,1823,605,823,1179,625,813,2009,75,\n  1279,1789,1559,251,657,563,761,1707,1759,1949,777,347,335,1133,1511,267,\n  833,1085,2007,1467,1745,1805,711,149,1695,803,1719,485,1295,1453,935,459,\n  1151,381,1641,1413,1263,77,1913,2005,1631,541,119,1317,1841,1773,359,651,\n  961,323,1193,197,175,1651,441,235,1567,1885,1481,1947,881,2003,217,843,\n  1023,1027,745,1019,913,717,1031,1621,1503,867,1015,1115,79,1683,793,1035,\n  1089,1731,297,1861,2001,1011,1593,619,1439,477,585,283,1039,1363,1369,1227,\n  895,1661,151,645,1007,1357,121,1237,1375,1821,1911,549,1999,1043,1945,1419,\n  1217,957,599,571,81,371,1351,1003,1311,931,311,1381,1137,723,1575,1611,\n  767,253,1047,1787,1169,1997,1273,853,1247,413,1289,1883,177,403,999,1803,\n  1345,451,1495,1093,1839,269,199,1387,1183,1757,1207,1051,783,83,423,1995,\n  639,1155,1943,123,751,1459,1671,469,1119,995,393,219,1743,237,153,1909,\n  1473,1859,1705,1339,337,909,953,1771,1055,349,1993,613,1393,557,729,1717,\n  511,1533,1257,1541,1425,819,519,85,991,1693,503,1445,433,877,1305,1525,\n  1601,829,809,325,1583,1549,1991,1941,927,1059,1097,1819,527,1197,1881,1333,\n  383,125,361,891,495,179,633,299,863,285,1399,987,1487,1517,1639,1141,\n  1729,579,87,1989,593,1907,839,1557,799,1629,201,155,1649,1837,1063,949,\n  255,1283,535,773,1681,461,1785,683,735,1123,1801,677,689,1939,487,757,\n  1857,1987,983,443,1327,1267,313,1173,671,221,695,1509,271,1619,89,565,\n  127,1405,1431,1659,239,1101,1159,1067,607,1565,905,1755,1231,1299,665,373,\n  1985,701,1879,1221,849,627,1465,789,543,1187,1591,923,1905,979,1241,181\n};\n</code></pre>\n\n<hr>\n\n<p><strong>Update</strong>:  I've tried the different solutions presented below.</p>\n\n<ul>\n<li>After exhaustive testing, I found that adding <code>0.5</code> to the result of Math.sqrt() is not necessary, at least not on my machine.</li>\n<li>The <a href=\"http://www.codemaestro.com/reviews/9\">John Carmack hack</a> was faster, but it gave incorrect results starting at n=410881.  However, as suggested by <a href=\"http://stackoverflow.com/users/38426/bobbyshaftoe\">BobbyShaftoe</a>, we can use the Carmack hack for n &lt; 410881.</li>\n<li>Newton's method was a good bit slower than <code>Math.sqrt()</code>.  This is probably because <code>Math.sqrt()</code> uses something similar to Newton's Method, but implemented in the hardware so it's much faster than in Java.  Also, Newton's Method still required use of doubles.</li>\n<li>A modified Newton's method, which used a few tricks so that only integer math was involved, required some hacks to avoid overflow (I want this function to work with all positive 64-bit signed integers), and it was still slower than <code>Math.sqrt()</code>.</li>\n<li>Binary chop was even slower.  This makes sense because the binary chop will on average require 16 passes to find the square root of a 64-bit number.</li>\n</ul>\n\n<p>The one suggestion which did show improvements was made by <a href=\"http://stackoverflow.com/users/25188/john-d-cook\">John D. Cook</a>.  You can observe that the last hex digit (i.e. the last 4 bits) of a perfect square must be 0, 1, 4, or 9.  This means that 75% of numbers can be immediately eliminated as possible squares.  Implementing this solution resulted in about a 50% reduction in runtime.</p>\n\n<p>Working from John's suggestion, I investigated properties of the last <em>n</em> bits of a perfect square.  By analyzing the last 6 bits, I found that only 12 out of 64 values are possible for the last 6 bits.  This means 81% of values can be eliminated without using any math.  Implementing this solution gave an additional 8% reduction in runtime (compared to my original algorithm).  Analyzing more than 6 bits results in a list of possible ending bits which is too large to be practical.</p>\n\n<p>Here is the code that I have used, which runs in 42% of the time required by the original algorithm (based on a run over the first 100 million integers).  For values of <em>n</em> less than 410881, it runs in only 29% of the time required by the original algorithm.</p>\n\n<pre><code>private final static boolean isPerfectSquare(long n)\n{\n  if (n &lt; 0)\n    return false;\n\n  switch((int)(n &amp; 0x3F))\n  {\n  case 0x00: case 0x01: case 0x04: case 0x09: case 0x10: case 0x11:\n  case 0x19: case 0x21: case 0x24: case 0x29: case 0x31: case 0x39:\n    long sqrt;\n    if(n &lt; 410881L)\n    {\n      //John Carmack hack, converted to Java.\n      // See: http://www.codemaestro.com/reviews/9\n      int i;\n      float x2, y;\n\n      x2 = n * 0.5F;\n      y  = n;\n      i  = Float.floatToRawIntBits(y);\n      i  = 0x5f3759df - ( i &gt;&gt; 1 );\n      y  = Float.intBitsToFloat(i);\n      y  = y * ( 1.5F - ( x2 * y * y ) );\n\n      sqrt = (long)(1.0F/y);\n    }\n    else\n    {\n      //Carmack hack gives incorrect answer for n &gt;= 410881.\n      sqrt = (long)Math.sqrt(n);\n    }\n    return sqrt*sqrt == n;\n\n  default:\n    return false;\n  }\n}\n</code></pre>\n\n<p><strong>Notes</strong>:</p>\n\n<ul>\n<li>According to John's tests, using <code>or</code> statements is faster in C++ than using a <code>switch</code>, but in Java and C# there appears to be no difference between <code>or</code> and <code>switch</code>.</li>\n<li>I also tried making a lookup table (as a private static array of 64 boolean values).  Then instead of either switch or <code>or</code> statement, I would just say <code>if(lookup[(int)(n&amp;0x3F)]) { test } else return false;</code>.  To my surprise, this was (just slightly) slower.  <del>I'm not sure why.</del>  This is because <a href=\"http://stackoverflow.com/questions/299079/why-is-this-code-with-several-or-statements-slightly-faster-than-using-a-lookup-t#299205\">array bounds are checked in Java</a>. </li>\n</ul>\n    ","a":"\n<p>I figured out a method that works ~35% faster than your 6bits+Carmack+sqrt code, at least with my CPU (x86) and programming language (C/C++).  Your results may vary, especially because I don't know how the Java factor will play out.</p>\n\n<p>My approach is threefold:</p>\n\n<ol>\n<li>First, filter out obvious answers.  This includes negative numbers and looking at the last 4 bits.  (I found looking at the last six didn't help.)  I also answer yes for 0.  (In reading the code below, note that my input is <code>int64 x</code>.)\n\n<pre><code>if( x &lt; 0 || (x&amp;2) || ((x &amp; 7) == 5) || ((x &amp; 11) == 8) )\n    return false;\nif( x == 0 )\n    return true;</code></pre>\n</li>\n<li>Next, check if it's a square modulo 255 = 3 * 5 * 17.  Because that's a product of three distinct primes, only about 1/8 of the residues mod 255 are squares.  However, in my experience, calling the modulo operator (%) costs more than the benefit one gets, so I use bit tricks involving 255 = 2^8-1 to compute the residue.  (For better or worse, I am not using the trick of reading individual bytes out of a word, only bitwise-and and shifts.)\n<pre><code>int64 y = x;\ny = (y &amp; 4294967295LL) + (y &gt;&gt; 32); \ny = (y &amp; 65535) + (y &gt;&gt; 16);\ny = (y &amp; 255) + ((y &gt;&gt; 8) &amp; 255) + (y &gt;&gt; 16);\n// At this point, y is between 0 and 511.  More code can reduce it farther.\n</code></pre>\nTo actually check if the residue is a square, I look up the answer in a precomputed table.\n<pre><code>if( bad255[y] )\n    return false;\n// However, I just use a table of size 512\n</code></pre>\n</li>\n<li>Finally, try to compute the square root using a method similar to <a href=\"http://en.wikipedia.org/wiki/Hensel%27s_lemma\">Hensel's lemma</a>.  (I don't think it's applicable directly, but it works with some modifications.)  Before doing that, I divide out all powers of 2 with a binary search:\n<pre><code>if((x &amp; 4294967295LL) == 0)\n    x &gt;&gt;= 32;\nif((x &amp; 65535) == 0)\n    x &gt;&gt;= 16;\nif((x &amp; 255) == 0)\n    x &gt;&gt;= 8;\nif((x &amp; 15) == 0)\n    x &gt;&gt;= 4;\nif((x &amp; 3) == 0)\n    x &gt;&gt;= 2;</code></pre>\nAt this point, for our number to be a square, it must be 1 mod 8.\n<pre><code>if((x &amp; 7) != 1)\n    return false;</code></pre>\nThe basic structure of Hensel's lemma is the following.  (Note: untested code; if it doesn't work, try t=2 or 8.)\n<pre><code>int64 t = 4, r = 1;\nt &lt;&lt;= 1; r += ((x - r * r) &amp; t) &gt;&gt; 1;\nt &lt;&lt;= 1; r += ((x - r * r) &amp; t) &gt;&gt; 1;\nt &lt;&lt;= 1; r += ((x - r * r) &amp; t) &gt;&gt; 1;\n// Repeat until t is 2^33 or so.  Use a loop if you want.</code></pre>\nThe idea is that at each iteration, you add one bit onto r, the \"current\" square root of x; each square root is accurate modulo a larger and larger power of 2, namely t/2.  At the end, r and t/2-r will be square roots of x modulo t/2.  (Note that if r is a square root of x, then so is -r.  This is true even modulo numbers, but beware, modulo some numbers, things can have even more than 2 square roots; notably, this includes powers of 2.)  Because our actual square root is less than 2^32, at that point we can actually just check if r or t/2-r are real square roots.  In my actual code, I use the following modified loop:\n<pre><code>int64 r, t, z;\nr = start[(x &gt;&gt; 3) &amp; 1023];\ndo {\n    z = x - r * r;\n    if( z == 0 )\n        return true;\n    if( z &lt; 0 )\n        return false;\n    t = z &amp; (-z);\n    r += (z &amp; t) &gt;&gt; 1;\n    if( r &gt; (t &gt;&gt; 1) )\n        r = t - r;\n} while( t &lt;= (1LL &lt;&lt; 33) );</code></pre>\nThe speedup here is obtained in three ways: precomputed start value (equivalent to ~10 iterations of the loop), earlier exit of the loop, and skipping some t values.  For the last part, I look at <code>z = r - x * x</code>, and set t to be the largest power of 2 dividing z with a bit trick.  This allows me to skip t values that wouldn't have affected the value of r anyway.  The precomputed start value in my case picks out the \"smallest positive\" square root modulo 8192.\n</li>\n</ol>\n\n<p>Even if this code doesn't work faster for you, I hope you enjoy some of the ideas it contains.  Complete, tested code follows, including the precomputed tables.</p>\n\n<pre><code>typedef signed long long int int64;\n\nint start[1024] =\n{1,3,1769,5,1937,1741,7,1451,479,157,9,91,945,659,1817,11,\n1983,707,1321,1211,1071,13,1479,405,415,1501,1609,741,15,339,1703,203,\n129,1411,873,1669,17,1715,1145,1835,351,1251,887,1573,975,19,1127,395,\n1855,1981,425,453,1105,653,327,21,287,93,713,1691,1935,301,551,587,\n257,1277,23,763,1903,1075,1799,1877,223,1437,1783,859,1201,621,25,779,\n1727,573,471,1979,815,1293,825,363,159,1315,183,27,241,941,601,971,\n385,131,919,901,273,435,647,1493,95,29,1417,805,719,1261,1177,1163,\n1599,835,1367,315,1361,1933,1977,747,31,1373,1079,1637,1679,1581,1753,1355,\n513,1539,1815,1531,1647,205,505,1109,33,1379,521,1627,1457,1901,1767,1547,\n1471,1853,1833,1349,559,1523,967,1131,97,35,1975,795,497,1875,1191,1739,\n641,1149,1385,133,529,845,1657,725,161,1309,375,37,463,1555,615,1931,\n1343,445,937,1083,1617,883,185,1515,225,1443,1225,869,1423,1235,39,1973,\n769,259,489,1797,1391,1485,1287,341,289,99,1271,1701,1713,915,537,1781,\n1215,963,41,581,303,243,1337,1899,353,1245,329,1563,753,595,1113,1589,\n897,1667,407,635,785,1971,135,43,417,1507,1929,731,207,275,1689,1397,\n1087,1725,855,1851,1873,397,1607,1813,481,163,567,101,1167,45,1831,1205,\n1025,1021,1303,1029,1135,1331,1017,427,545,1181,1033,933,1969,365,1255,1013,\n959,317,1751,187,47,1037,455,1429,609,1571,1463,1765,1009,685,679,821,\n1153,387,1897,1403,1041,691,1927,811,673,227,137,1499,49,1005,103,629,\n831,1091,1449,1477,1967,1677,697,1045,737,1117,1737,667,911,1325,473,437,\n1281,1795,1001,261,879,51,775,1195,801,1635,759,165,1871,1645,1049,245,\n703,1597,553,955,209,1779,1849,661,865,291,841,997,1265,1965,1625,53,\n1409,893,105,1925,1297,589,377,1579,929,1053,1655,1829,305,1811,1895,139,\n575,189,343,709,1711,1139,1095,277,993,1699,55,1435,655,1491,1319,331,\n1537,515,791,507,623,1229,1529,1963,1057,355,1545,603,1615,1171,743,523,\n447,1219,1239,1723,465,499,57,107,1121,989,951,229,1521,851,167,715,\n1665,1923,1687,1157,1553,1869,1415,1749,1185,1763,649,1061,561,531,409,907,\n319,1469,1961,59,1455,141,1209,491,1249,419,1847,1893,399,211,985,1099,\n1793,765,1513,1275,367,1587,263,1365,1313,925,247,1371,1359,109,1561,1291,\n191,61,1065,1605,721,781,1735,875,1377,1827,1353,539,1777,429,1959,1483,\n1921,643,617,389,1809,947,889,981,1441,483,1143,293,817,749,1383,1675,\n63,1347,169,827,1199,1421,583,1259,1505,861,457,1125,143,1069,807,1867,\n2047,2045,279,2043,111,307,2041,597,1569,1891,2039,1957,1103,1389,231,2037,\n65,1341,727,837,977,2035,569,1643,1633,547,439,1307,2033,1709,345,1845,\n1919,637,1175,379,2031,333,903,213,1697,797,1161,475,1073,2029,921,1653,\n193,67,1623,1595,943,1395,1721,2027,1761,1955,1335,357,113,1747,1497,1461,\n1791,771,2025,1285,145,973,249,171,1825,611,265,1189,847,1427,2023,1269,\n321,1475,1577,69,1233,755,1223,1685,1889,733,1865,2021,1807,1107,1447,1077,\n1663,1917,1129,1147,1775,1613,1401,555,1953,2019,631,1243,1329,787,871,885,\n449,1213,681,1733,687,115,71,1301,2017,675,969,411,369,467,295,693,\n1535,509,233,517,401,1843,1543,939,2015,669,1527,421,591,147,281,501,\n577,195,215,699,1489,525,1081,917,1951,2013,73,1253,1551,173,857,309,\n1407,899,663,1915,1519,1203,391,1323,1887,739,1673,2011,1585,493,1433,117,\n705,1603,1111,965,431,1165,1863,533,1823,605,823,1179,625,813,2009,75,\n1279,1789,1559,251,657,563,761,1707,1759,1949,777,347,335,1133,1511,267,\n833,1085,2007,1467,1745,1805,711,149,1695,803,1719,485,1295,1453,935,459,\n1151,381,1641,1413,1263,77,1913,2005,1631,541,119,1317,1841,1773,359,651,\n961,323,1193,197,175,1651,441,235,1567,1885,1481,1947,881,2003,217,843,\n1023,1027,745,1019,913,717,1031,1621,1503,867,1015,1115,79,1683,793,1035,\n1089,1731,297,1861,2001,1011,1593,619,1439,477,585,283,1039,1363,1369,1227,\n895,1661,151,645,1007,1357,121,1237,1375,1821,1911,549,1999,1043,1945,1419,\n1217,957,599,571,81,371,1351,1003,1311,931,311,1381,1137,723,1575,1611,\n767,253,1047,1787,1169,1997,1273,853,1247,413,1289,1883,177,403,999,1803,\n1345,451,1495,1093,1839,269,199,1387,1183,1757,1207,1051,783,83,423,1995,\n639,1155,1943,123,751,1459,1671,469,1119,995,393,219,1743,237,153,1909,\n1473,1859,1705,1339,337,909,953,1771,1055,349,1993,613,1393,557,729,1717,\n511,1533,1257,1541,1425,819,519,85,991,1693,503,1445,433,877,1305,1525,\n1601,829,809,325,1583,1549,1991,1941,927,1059,1097,1819,527,1197,1881,1333,\n383,125,361,891,495,179,633,299,863,285,1399,987,1487,1517,1639,1141,\n1729,579,87,1989,593,1907,839,1557,799,1629,201,155,1649,1837,1063,949,\n255,1283,535,773,1681,461,1785,683,735,1123,1801,677,689,1939,487,757,\n1857,1987,983,443,1327,1267,313,1173,671,221,695,1509,271,1619,89,565,\n127,1405,1431,1659,239,1101,1159,1067,607,1565,905,1755,1231,1299,665,373,\n1985,701,1879,1221,849,627,1465,789,543,1187,1591,923,1905,979,1241,181};\n\nbool bad255[512] =\n{0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,\n 1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,\n 0,1,0,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,\n 1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,\n 1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,\n 1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,\n 1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,\n 1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,\n 0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,\n 1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,0,1,1,1,\n 0,1,0,1,1,0,0,1,1,1,1,1,0,1,1,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,1,\n 1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,\n 1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,\n 1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,\n 1,1,1,0,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,\n 1,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,\n 0,0};\n\ninline bool square( int64 x ) {\n    // Quickfail\n    if( x &lt; 0 || (x&amp;2) || ((x &amp; 7) == 5) || ((x &amp; 11) == 8) )\n        return false;\n    if( x == 0 )\n        return true;\n\n    // Check mod 255 = 3 * 5 * 17, for fun\n    int64 y = x;\n    y = (y &amp; 4294967295LL) + (y &gt;&gt; 32);\n    y = (y &amp; 65535) + (y &gt;&gt; 16);\n    y = (y &amp; 255) + ((y &gt;&gt; 8) &amp; 255) + (y &gt;&gt; 16);\n    if( bad255[y] )\n        return false;\n\n    // Divide out powers of 4 using binary search\n    if((x &amp; 4294967295LL) == 0)\n        x &gt;&gt;= 32;\n    if((x &amp; 65535) == 0)\n        x &gt;&gt;= 16;\n    if((x &amp; 255) == 0)\n        x &gt;&gt;= 8;\n    if((x &amp; 15) == 0)\n        x &gt;&gt;= 4;\n    if((x &amp; 3) == 0)\n        x &gt;&gt;= 2;\n\n    if((x &amp; 7) != 1)\n        return false;\n\n    // Compute sqrt using something like Hensel's lemma\n    int64 r, t, z;\n    r = start[(x &gt;&gt; 3) &amp; 1023];\n    do {\n        z = x - r * r;\n        if( z == 0 )\n            return true;\n        if( z &lt; 0 )\n            return false;\n        t = z &amp; (-z);\n        r += (z &amp; t) &gt;&gt; 1;\n        if( r &gt; (t  &gt;&gt; 1) )\n            r = t - r;\n    } while( t &lt;= (1LL &lt;&lt; 33) );\n\n    return false;\n}</code></pre>\n    "},{"t":"How to fix: Unsupported major.minor version 51.0 error?","l":"http://stackoverflow.com/questions/10382929/how-to-fix-unsupported-major-minor-version-51-0-error","q":"\n\n<p>I am trying to use <a href=\"http://en.wikipedia.org/wiki/Notepad%2B%2B\">Notepad++</a> as my all-in-one tool edit, run, compile, etc.</p>\n\n<p>I have <a href=\"http://en.wikipedia.org/wiki/Java_Virtual_Machine#Execution_environment\">JRE</a> installed, and I have setup my path variable to the .../bin directory.</p>\n\n<p>When I run my \"Hello world\" in Notepad++, I get this message:</p>\n\n<pre><code>java.lang.UnsupportedClassVersionError: test_hello_world :\n Unsupported major.minor version 51.0\n    at java.lang.ClassLoader.defineClass1(Native Method)\n    at java.lang.ClassLoader.defineClassCond(Unknown Source)\n       .........................................\n</code></pre>\n\n<p>I think the problem here is about versions; some version of Java may be old or too new.</p>\n\n<ol>\n<li>How do I fix it?</li>\n<li>Should I install the JDK, and setup my path variable to the JDK instead of JRE?</li>\n<li>What is the difference between the <code>PATH</code> variable in JRE or JDK?</li>\n</ol>\n    ","a":"\n<p>The version number shown describes the version of the JRE the class file is compatible with.</p>\n\n<p>The reported major numbers are:</p>\n\n<pre><code>J2SE 8 = 52,\nJ2SE 7 = 51,\nJ2SE 6.0 = 50,\nJ2SE 5.0 = 49,\nJDK 1.4 = 48,\nJDK 1.3 = 47,\nJDK 1.2 = 46,\nJDK 1.1 = 45\n</code></pre>\n\n<p>(Source: <a href=\"http://en.wikipedia.org/wiki/Java_class_file\">http://en.wikipedia.org/wiki/Java_class_file</a>)</p>\n\n<p>To fix the actual problem you should try to either run the Java code with a newer version of Java JRE or specify the target parameter to the Java compiler to instruct the compiler to create code compatible with earlier Java versions. </p>\n\n<p>For example, in order to generate class files compatible with Java 1.4, use the following command line:</p>\n\n<pre><code>javac -target 1.4 HelloWorld.java\n</code></pre>\n\n<p>With newer versions of the Java compiler you are likely to get a warning about the bootstrap class path not being set. More information about this error is available in blog post <em><a href=\"https://blogs.oracle.com/darcy/entry/bootclasspath_older_source\">New javac warning for setting an older source without bootclasspath</a></em>.</p>\n    "},{"t":"Declare array in Java?","l":"http://stackoverflow.com/questions/1200621/declare-array-in-java","q":"\n\n<p>How do I declare an array in Java?</p>\n    ","a":"\n<p>You can either use array declaration or array literal (but only when you declare and affect the variable right away, array literals cannot be used for re-assigning an array). </p>\n\n<p>For primitive types: </p>\n\n<pre><code>int[] myIntArray = new int[3];\nint[] myIntArray = {1,2,3};\nint[] myIntArray = new int[]{1,2,3};\n</code></pre>\n\n<p>For classes, for example <code>String</code>, it's the same:</p>\n\n<pre><code>String[] myStringArray = new String[3];\nString[] myStringArray = {\"a\",\"b\",\"c\"};\nString[] myStringArray = new String[]{\"a\",\"b\",\"c\"};\n</code></pre>\n    "},{"t":"What is reflection and why is it useful?","l":"http://stackoverflow.com/questions/37628/what-is-reflection-and-why-is-it-useful","q":"\n\n<p>What is reflection, and why is it useful?</p>\n\n<p>I'm particularly interested in Java, but I assume the principles are the same in any language.</p>\n    ","a":"\n<p>The name reflection is used to describe code which is able to inspect other code in the same system (or itself).</p>\n\n<p>For example, say you have an object of an unknown type in Java, and you would like to call a 'doSomething' method on it if one exists. Java's static typing system isn't really designed to support this unless the object conforms to a known interface, but using reflection, your code can look at the object and find out if it has a method called 'doSomething' and then call it if you want to.</p>\n\n<p>So, to give you a code example of this in Java (imagine the object in question is foo) :</p>\n\n<pre><code>Method method = foo.getClass().getMethod(\"doSomething\", null);\nmethod.invoke(foo, null);\n</code></pre>\n\n<p>One very common use case in Java is the usage with annotations. JUnit 4, for example, will use reflection to look through your classes for methods tagged with the @Test annotation, and will then call them when running the unit test.</p>\n\n<p>There are some good reflection examples to get you started at <a href=\"http://docs.oracle.com/javase/tutorial/reflect/index.html\">http://docs.oracle.com/javase/tutorial/reflect/index.html</a></p>\n\n<p>And finally, yes, the concepts are pretty much similar in other statically types languages which support reflection (like C#). In dynamically typed languages, the use case described above is less necessary (since the compiler will allow any method to be called on any object, failing at runtime if it does not exist), but the second case of looking for methods which are marked or work in a certain way is still common.</p>\n    "},{"t":"How to generate a random alpha-numeric string?","l":"http://stackoverflow.com/questions/41107/how-to-generate-a-random-alpha-numeric-string","q":"\n\n<p>I've been looking for a <em>simple</em> Java algorithm to generate a pseudo-random alpha-numeric string.  In my situation it would be used as a unique session/key identifier that would \"likely\" be unique over 500K+ generation (my needs don't really require anything much more sophisticated).  Ideally, I would be able to specify a length depending on my uniqueness needs. For example, a generated string of length 12 might look something like <code>\"AEYGF7K0DM1X\"</code>.  </p>\n    ","a":"\n<p>Here is code for secure, easy, but a little bit more expensive session identifiers.</p>\n\n<pre><code>import java.security.SecureRandom;\n\npublic final class SessionIdentifierGenerator {\n  private SecureRandom random = new SecureRandom();\n\n  public String nextSessionId() {\n    return new BigInteger(130, random).toString(32);\n  }\n}\n</code></pre>\n\n<p>This works by choosing 130 bits from a cryptographically secure random bit generator, and encoding them in base-32. 128 bits is considered to be cryptographically <em>strong,</em> but each digit in a base 32 number can encode 5 bits, so 128 is rounded up to the next multiple of 5. This encoding is compact and efficient, with 5 random bits per character. Compare this to a random UUID, which only has 3.4 bits per character in standard layout, and only 122 random bits in total.</p>\n\n<p>If you allow session identifiers to be easily guessable (too short, flawed random number generator, etc.), attackers can hijack other's sessions. Note that <code>SecureRandom</code> objects are expensive to initialize, so you'll want to keep one around and reuse it.</p>\n\n<p>Here is alternative code for cheap, insecure random alpha-numeric strings. You can tweak the \"symbols\" if you want to use more characters.</p>\n\n<pre><code>public class RandomString {\n\n  private static final char[] symbols;\n\n  static {\n    StringBuilder tmp = new StringBuilder();\n    for (char ch = '0'; ch &lt;= '9'; ++ch)\n      tmp.append(ch);\n    for (char ch = 'a'; ch &lt;= 'z'; ++ch)\n      tmp.append(ch);\n    symbols = tmp.toString().toCharArray();\n  }   \n\n  private final Random random = new Random();\n\n  private final char[] buf;\n\n  public RandomString(int length) {\n    if (length &lt; 1)\n      throw new IllegalArgumentException(\"length &lt; 1: \" + length);\n    buf = new char[length];\n  }\n\n  public String nextString() {\n    for (int idx = 0; idx &lt; buf.length; ++idx) \n      buf[idx] = symbols[random.nextInt(symbols.length)];\n    return new String(buf);\n  }\n}\n</code></pre>\n    "},{"t":"Examples of GoF Design Patterns in Java's core libraries","l":"http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns-in-javas-core-libraries","q":"\n\n<p>I am learning GoF Java Design Patterns and I want to see some real life examples of them. What are some good examples of these Design Patterns in Java's core libraries?</p>\n    ","a":"\n<p>You can find an overview of a lot of design patterns in <a href=\"http://en.wikipedia.org/wiki/Design_pattern_%28computer_science%29#Classification_and_list\">Wikipedia</a>. It also mentions which patterns are mentioned by GoF. I'll sum them up here and try to assign as much as possible pattern implementations found in both the Java SE and Java EE API's.</p>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Creational_pattern\">Creational patterns</a></h2>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Abstract_factory_pattern\">Abstract factory</a> <sup><sub>(recognizeable by creational methods returning the factory itself which in turn can be used to create another abstract/interface type)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/parsers/DocumentBuilderFactory.html#newInstance%28%29\"><code>javax.xml.parsers.DocumentBuilderFactory#newInstance()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/transform/TransformerFactory.html#newInstance%28%29\"><code>javax.xml.transform.TransformerFactory#newInstance()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/xpath/XPathFactory.html#newInstance%28%29\"><code>javax.xml.xpath.XPathFactory#newInstance()</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Builder_pattern\">Builder</a> <sup><sub>(recognizeable by creational methods returning the instance itself)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuilder.html#append%28boolean%29\"><code>java.lang.StringBuilder#append()</code></a> (unsynchronized)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/StringBuffer.html#append%28boolean%29\"><code>java.lang.StringBuffer#append()</code></a> (synchronized)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/ByteBuffer.html#put%28byte%29\"><code>java.nio.ByteBuffer#put()</code></a> (also on <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/CharBuffer.html#put%28char%29\"><code>CharBuffer</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/ShortBuffer.html#put%28short%29\"><code>ShortBuffer</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/IntBuffer.html#put%28int%29\"><code>IntBuffer</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/LongBuffer.html#put%28long%29\"><code>LongBuffer</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/FloatBuffer.html#put%28float%29\"><code>FloatBuffer</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/DoubleBuffer.html#put%28double%29\"><code>DoubleBuffer</code></a>)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/swing/GroupLayout.Group.html#addComponent%28java.awt.Component%29\"><code>javax.swing.GroupLayout.Group#addComponent()</code></a></li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Appendable.html\"><code>java.lang.Appendable</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Factory_method_pattern\">Factory method</a> <sup><sub>(recognizeable by creational methods returning an implementation of an abstract/interface type)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Calendar.html#getInstance%28%29\"><code>java.util.Calendar#getInstance()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/ResourceBundle.html#getBundle%28java.lang.String%29\"><code>java.util.ResourceBundle#getBundle()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/text/NumberFormat.html#getInstance%28%29\"><code>java.text.NumberFormat#getInstance()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html#forName%28java.lang.String%29\"><code>java.nio.charset.Charset#forName()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/net/URLStreamHandlerFactory.html\"><code>java.net.URLStreamHandlerFactory#createURLStreamHandler(String)</code></a> (Returns singleton object per protocol)</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Prototype_pattern\">Prototype</a> <sup><sub>(recognizeable by creational methods returning a <em>different</em> instance of itself with the same properties)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#clone%28%29\"><code>java.lang.Object#clone()</code></a> (the class has to implement <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Cloneable.html\"><code>java.lang.Cloneable</code></a>)</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Singleton_pattern\">Singleton</a> <sup><sub>(recognizeable by creational methods returning the <em>same</em> instance (usually of itself) everytime)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Runtime.html#getRuntime%28%29\"><code>java.lang.Runtime#getRuntime()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/awt/Desktop.html#getDesktop%28%29\"><code>java.awt.Desktop#getDesktop()</code></a></li>\n</ul>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Structural_pattern\">Structural patterns</a></h2>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Adapter_pattern\">Adapter</a> <sup><sub>(recognizeable by creational methods taking an instance of <em>different</em> abstract/interface type and returning an implementation of own/another abstract/interface type which <em>decorates/overrides</em> the given instance)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Arrays.html#asList%28T...%29\"><code>java.util.Arrays#asList()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/InputStreamReader.html#InputStreamReader%28java.io.InputStream%29\"><code>java.io.InputStreamReader(InputStream)</code></a> (returns a <code>Reader</code>)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html#OutputStreamWriter%28java.io.OutputStream%29\"><code>java.io.OutputStreamWriter(OutputStream)</code></a> (returns a <code>Writer</code>)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/adapters/XmlAdapter.html#marshal%28BoundType%29\"><code>javax.xml.bind.annotation.adapters.XmlAdapter#marshal()</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/xml/bind/annotation/adapters/XmlAdapter.html#unmarshal%28ValueType%29\"><code>#unmarshal()</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Bridge_pattern\">Bridge</a> <sup><sub>(recognizeable by creational methods taking an instance of <em>different</em> abstract/interface type and returning an implementation of own abstract/interface type which <em>delegates/uses</em> the given instance)</sub></sup></h3>\n\n<ul>\n<li>None comes to mind yet. A fictive example would be <code>new LinkedHashMap(LinkedHashSet&lt;K&gt;, List&lt;V&gt;)</code> which returns an unmodifiable linked map which doesn't clone the items, but <em>uses</em> them. The <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#newSetFromMap%28java.util.Map%29\"><code>java.util.Collections#newSetFromMap()</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#singleton%28T%29\"><code>singletonXXX()</code></a> methods however comes close.</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Composite_pattern\">Composite</a> <sup><sub>(recognizeable by behavioral methods taking an instance of <em>same</em> abstract/interface type into a tree structure)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/awt/Container.html#add%28java.awt.Component%29\"><code>java.awt.Container#add(Component)</code></a> (practically all over Swing thus)</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/component/UIComponent.html#getChildren%28%29\"><code>javax.faces.component.UIComponent#getChildren()</code></a> (practically all over JSF UI thus)</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Decorator_pattern\">Decorator</a> <sup><sub>(recognizeable by creational methods taking an instance of <em>same</em> abstract/interface type which adds additional behaviour)</sub></sup></h3>\n\n<ul>\n<li>All subclasses of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html\"><code>java.io.InputStream</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/OutputStream.html\"><code>OutputStream</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/Reader.html\"><code>Reader</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/Writer.html\"><code>Writer</code></a> have a constructor taking an instance of same type.</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html\"><code>java.util.Collections</code></a>, the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29\"><code>checkedXXX()</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#synchronizedCollection%28java.util.Collection%29\"><code>synchronizedXXX()</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#unmodifiableCollection%28java.util.Collection%29\"><code>unmodifiableXXX()</code></a> methods.</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequestWrapper.html\"><code>javax.servlet.http.HttpServletRequestWrapper</code></a> and <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponseWrapper.html\"><code>HttpServletResponseWrapper</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Facade_pattern\">Facade</a> <sup><sub>(recognizeable by behavioral methods which internally uses instances of <em>different</em> independent abstract/interface types)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/context/FacesContext.html\"><code>javax.faces.context.FacesContext</code></a>, it internally uses among others the abstract/interface types <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/lifecycle/Lifecycle.html\"><code>LifeCycle</code></a>, <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/application/ViewHandler.html\"><code>ViewHandler</code></a>, <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/application/NavigationHandler.html\"><code>NavigationHandler</code></a> and many more without that the enduser has to worry about it (which are however overrideable by injection).</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/context/ExternalContext.html\"><code>javax.faces.context.ExternalContext</code></a>, which internally uses <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/ServletContext.html\"><code>ServletContext</code></a>, <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSession.html\"><code>HttpSession</code></a>, <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html\"><code>HttpServletRequest</code></a>, <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponse.html\"><code>HttpServletResponse</code></a>, etc.</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Flyweight_pattern\">Flyweight</a> <sup><sub>(recognizeable by creational methods returning a cached instance, a bit the \"multiton\" idea)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Integer.html#valueOf%28int%29\"><code>java.lang.Integer#valueOf(int)</code></a> (also on <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Boolean.html#valueOf%28boolean%29\"><code>Boolean</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Byte.html#valueOf%28byte%29\"><code>Byte</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Character.html#valueOf%28char%29\"><code>Character</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Short.html#valueOf%28short%29\"><code>Short</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Long.html#valueOf%28long%29\"><code>Long</code></a>)</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Proxy_pattern\">Proxy</a> <sup><sub>(recognizeable by creational methods which returns an implementation of given abstract/interface type which in turn <em>delegates/uses</em> a <em>different</em> implementation of given abstract/interface type)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/Proxy.html\"><code>java.lang.reflect.Proxy</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/rmi/package-summary.html\"><code>java.rmi.*</code></a>, the whole API actually.</li>\n</ul>\n\n<p><sup><sub>The Wikipedia example is IMHO a bit poor, lazy loading has actually completely nothing to do with the proxy pattern at all.</sub></sup></p>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Behavioral_pattern\">Behavioral patterns</a></h2>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Chain_of_responsibility_pattern\">Chain of responsibility</a> <sup><sub>(recognizeable by behavioral methods which (indirectly) invokes the same method in <em>another</em> implementation of <em>same</em> abstract/interface type in a queue)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/logging/Logger.html#log%28java.util.logging.Level,%20java.lang.String%29\"><code>java.util.logging.Logger#log()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/Filter.html#doFilter%28javax.servlet.ServletRequest,%20javax.servlet.ServletResponse,%20javax.servlet.FilterChain%29\"><code>javax.servlet.Filter#doFilter()</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Command_pattern\">Command</a> <sup><sub>(recognizeable by behavioral methods in an abstract/interface type which invokes a method in an implementation of a <em>different</em> abstract/interface type which has been <em>encapsulated</em> by the command implementation during its creation)</sub></sup></h3>\n\n<ul>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Runnable.html\"><code>java.lang.Runnable</code></a></li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/swing/Action.html\"><code>javax.swing.Action</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Interpreter_pattern\">Interpreter</a> <sup><sub>(recognizeable by behavioral methods returning a <em>structurally</em> different instance/type of the given instance/type; note that parsing/formatting is not part of the pattern, determining the pattern and how to apply it is)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html\"><code>java.util.Pattern</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/text/Normalizer.html\"><code>java.text.Normalizer</code></a></li>\n<li>All subclasses of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/text/Format.html\"><code>java.text.Format</code></a></li>\n<li>All subclasses of <a href=\"http://docs.oracle.com/javaee/6/api/javax/el/ELResolver.html\"><code>javax.el.ELResolver</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Iterator_pattern\">Iterator</a> <sup><sub>(recognizeable by behavioral methods sequentially returning instances of a <em>different</em> type from a queue)</sub></sup></h3>\n\n<ul>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Iterator.html\"><code>java.util.Iterator</code></a> (thus among others also <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Scanner.html\"><code>java.util.Scanner</code></a>!).</li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Enumeration.html\"><code>java.util.Enumeration</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Mediator_pattern\">Mediator</a> <sup><sub>(recognizeable by behavioral methods taking an instance of different abstract/interface type (usually using the command pattern) which delegates/uses the given instance)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Timer.html\"><code>java.util.Timer</code></a> (all <code>scheduleXXX()</code> methods)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/Executor.html#execute%28java.lang.Runnable%29\"><code>java.util.concurrent.Executor#execute()</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html\"><code>java.util.concurrent.ExecutorService</code></a> (the <code>invokeXXX()</code> and <code>submit()</code> methods)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ScheduledExecutorService.html\"><code>java.util.concurrent.ScheduledExecutorService</code></a> (all <code>scheduleXXX()</code> methods)</li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/reflect/Method.html#invoke%28java.lang.Object,%20java.lang.Object...%29\"><code>java.lang.reflect.Method#invoke()</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Memento_pattern\">Memento</a> <sup><sub>(recognizeable by behavioral methods which internally changes the state of the <em>whole</em> instance)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Date.html\"><code>java.util.Date</code></a> (the setter methods do that, <code>Date</code> is internally represented by a <code>long</code> value)</li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/Serializable.html\"><code>java.io.Serializable</code></a></li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/component/StateHolder.html\"><code>javax.faces.component.StateHolder</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Observer_pattern\">Observer (or Publish/Subscribe)</a> <sup><sub>(recognizeable by behavioral methods which invokes a method on an instance of <em>another</em> abstract/interface type, depending on own state)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Observer.html\"><code>java.util.Observer</code></a>/<a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Observable.html\"><code>java.util.Observable</code></a> (rarely used in real world though)</li>\n<li>All implementations of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/EventListener.html\"><code>java.util.EventListener</code></a> (practically all over Swing thus)</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionBindingListener.html\"><code>javax.servlet.http.HttpSessionBindingListener</code></a></li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpSessionAttributeListener.html\"><code>javax.servlet.http.HttpSessionAttributeListener</code></a></li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/event/PhaseListener.html\"><code>javax.faces.event.PhaseListener</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/State_pattern\">State</a> <sup><sub>(recognizeable by behavioral methods which changes its behaviour depending on the instance's state which can be controlled externally)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/lifecycle/Lifecycle.html#execute%28javax.faces.context.FacesContext%29\"><code>javax.faces.lifecycle.LifeCycle#execute()</code></a> (controlled by <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/webapp/FacesServlet.html\"><code>FacesServlet</code></a>, the behaviour is dependent on current phase (state) of JSF lifecycle)</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Strategy_pattern\">Strategy</a> <sup><sub>(recognizeable by behavioral methods in an abstract/interface type which invokes a method in an implementation of a <em>different</em> abstract/interface type which has been <em>passed-in</em> as method argument into the strategy implementation)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Comparator.html#compare%28T,%20T%29\"><code>java.util.Comparator#compare()</code></a>, executed by among others <code>Collections#sort()</code>.</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html\"><code>javax.servlet.http.HttpServlet</code></a>, the <code>service()</code> and all <code>doXXX()</code> methods take <code>HttpServletRequest</code> and <code>HttpServletResponse</code> and the implementor has to process them (and not to get hold of them as instance variables!).</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/Filter.html#doFilter%28javax.servlet.ServletRequest,%20javax.servlet.ServletResponse,%20javax.servlet.FilterChain%29\"><code>javax.servlet.Filter#doFilter()</code></a></li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Template_method_pattern\">Template method</a> <sup><sub>(recognizeable by behavioral methods which already have a \"default\" behaviour definied by an abstract type)</sub></sup></h3>\n\n<ul>\n<li>All non-abstract methods of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/InputStream.html\"><code>java.io.InputStream</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/OutputStream.html\"><code>java.io.OutputStream</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/Reader.html\"><code>java.io.Reader</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/io/Writer.html\"><code>java.io.Writer</code></a>.</li>\n<li>All non-abstract methods of <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/AbstractList.html\"><code>java.util.AbstractList</code></a>, <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/AbstractSet.html\"><code>java.util.AbstractSet</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/AbstractMap.html\"><code>java.util.AbstractMap</code></a>.</li>\n<li><a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html\"><code>javax.servlet.http.HttpServlet</code></a>, all the <code>doXXX()</code> methods by default sends a HTTP 405 \"Method Not Allowed\" error to the response. You're free to implement none or any of them.</li>\n</ul>\n\n<h3><a href=\"http://en.wikipedia.org/wiki/Visitor_pattern\">Visitor</a> <sup><sub>(recognizeable by two <em>different</em> abstract/interface types which has methods definied which takes each the <em>other</em> abstract/interface type; the one actually calls the method of the other and the other executes the desired strategy on it)</sub></sup></h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/element/AnnotationValue.html\"><code>javax.lang.model.element.AnnotationValue</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/element/AnnotationValueVisitor.html\"><code>AnnotationValueVisitor</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/element/Element.html\"><code>javax.lang.model.element.Element</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/element/ElementVisitor.html\"><code>ElementVisitor</code></a></li>\n<li><a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/type/TypeMirror.html\"><code>javax.lang.model.type.TypeMirror</code></a> and <a href=\"http://docs.oracle.com/javase/6/docs/api/javax/lang/model/type/TypeVisitor.html\"><code>TypeVisitor</code></a></li>\n</ul>\n    "},{"t":"Failed to load the JNI shared Library (JDK)","l":"http://stackoverflow.com/questions/7352493/failed-to-load-the-jni-shared-library-jdk","q":"\n\n<p>When I try opening <a href=\"http://www.eclipse.org/\">Eclipse</a>, a pop-up dialog states:</p>\n\n<blockquote>\n  <p>Failed to load the JNI shared library \"C:/JDK/bin/client/jvm.dll\"`.</p>\n</blockquote>\n\n<p>Following this, Eclipse force closes.</p>\n\n<p>Here's a few points I'd like to make:  </p>\n\n<ul>\n<li>I checked to see if anything exists at that path. It does exist.  </li>\n<li>My Eclipse and <a href=\"http://www.oracle.com/technetwork/java/javase/overview/index.html\">Java SE Development Kit</a> are both 64-bit. I checked my system, and it can handle 64-bit.  </li>\n<li>I've searched for this problem on Google and on Stack&nbsp;Overflow, and the only answer I found was to download the 32-bit versions of JDK and Eclipse.</li>\n</ul>\n\n<p>Downloading the 32-bit versions is something I only want to do as a very last resort.<br>\nWhat would be suggested to solve this issue?</p>\n    ","a":"\n<p>You need a 64-bit trio: </p>\n\n<ul>\n<li>64-bit OS</li>\n<li>64-bit Java </li>\n<li>64-bit Eclipse</li>\n</ul>\n    "},{"t":"Comparing Java enum members: == or equals()?","l":"http://stackoverflow.com/questions/1750435/comparing-java-enum-members-or-equals","q":"\n\n<p>I know that Java enums are compiled to classes with private constructors and a bunch of public static members. When comparing two members of a given enum, I've always used <code>.equals()</code>, e.g.</p>\n\n<pre><code>public useEnums(SomeEnum a)\n{\n    if(a.equals(SomeEnum.SOME_ENUM_VALUE))\n    {\n        ...\n    }\n    ...\n}\n</code></pre>\n\n<p>However, I just came across come code that uses the equals operator <code>==</code> instead:</p>\n\n<pre><code>public useEnums2(SomeEnum a)\n{\n    if(a == SomeEnum.SOME_ENUM_VALUE)\n    {\n        ...\n    }\n    ...\n}\n</code></pre>\n\n<p>I've been programming in Java for 5+ years, and I thought I understood difference between the two - but I'm still scratching my head at which one is more correct. Which operator is the one I should be using?</p>\n    ","a":"\n<p>Both are technically correct. If you look at the source code for <code>.equals()</code>, it simply defers to <code>==</code>.</p>\n\n<p>I use <code>==</code>, however, as that will be null safe.</p>\n    "},{"t":"Does Java support default parameter values?","l":"http://stackoverflow.com/questions/997482/does-java-support-default-parameter-values","q":"\n\n<p>I came across some Java code that had the following structure:</p>\n\n<pre><code>public MyParameterizedFunction(String param1, int param2)\n{\n    this(param1, param2, false);\n}\n\npublic MyParameterizedFunction(String param1, int param2, boolean param3)\n{\n    //use all three parameters here\n}\n</code></pre>\n\n<p>I know that in C++ I can assign a parameter a default value.  For example:</p>\n\n<pre><code>void MyParameterizedFunction(String param1, int param2, bool param3=false);\n</code></pre>\n\n<p>Does Java support this kind of syntax?  Are there any reasons why this two step syntax is preferable?</p>\n    ","a":"\n<p>No, the structure you found is how Java handles it (that is, with overloading instead of default parameters).</p>\n\n<p>For constructors, <em><a href=\"https://en.wikipedia.org/wiki/Joshua_Bloch#Bibliography\">See Effective Java: Programming Language Guide's</a></em> Item 1 tip (Consider static factory methods instead of constructors) if the overloading is getting complicated. For other methods, renaming some cases or using a parameter object can help. This is when you have enough complexity that differentiating is difficult. A definite case is where you have to differentiate using the order of parameters, not just number and type.</p>\n    "},{"t":"StringBuilder and StringBuffer","l":"http://stackoverflow.com/questions/355089/stringbuilder-and-stringbuffer","q":"\n\n<p>What is the main difference between StringBuffer and StringBuilder? Is there any performance issues when deciding on any one of these?</p>\n    ","a":"\n<p><a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html\"><code>StringBuffer</code></a> is synchronized, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuilder.html\"><code>StringBuilder</code></a> is not. </p>\n    "},{"t":"How to concatenate two arrays in Java?","l":"http://stackoverflow.com/questions/80476/how-to-concatenate-two-arrays-in-java","q":"\n\n<p>I need to concatenate two String arrays in Java.</p>\n\n<pre><code>void f(String[] first, String[] second) {\n    String[] both = ???\n}\n</code></pre>\n\n<p>What is the easiest way to do this?</p>\n    ","a":"\n<p>I found a one-line solution from the good old Apache Commons Lang library.<br> <a href=\"http://commons.apache.org/proper/commons-lang/javadocs/api-3.1/org/apache/commons/lang3/ArrayUtils.html#addAll%28T%5B%5D,%20T...%29\"><code>ArrayUtils.addAll(T[], T...)</code></a></p>\n\n<p>Code:</p>\n\n<pre><code>String[] both = ArrayUtils.addAll(first, second);\n</code></pre>\n    "},{"t":"What issues should be considered when overriding equals and hashCode in Java?","l":"http://stackoverflow.com/questions/27581/what-issues-should-be-considered-when-overriding-equals-and-hashcode-in-java","q":"\n\n<p>What issues / pitfalls must be considered when overriding <code>equals</code> and <code>hashCode</code>?</p>\n    ","a":"\n<h3>The theory (for the language lawyers and the mathematically inclined):</h3>\n\n<p><code>equals()</code> (<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)\" rel=\"nofollow\">javadoc</a>) must define an equivalence relation (it must be <em>reflexive</em>, <em>symmetric</em>, and <em>transitive</em>). In addition, it must be <em>consistent</em> (if the objects are not modified, then it must keep returning the same value). Furthermore, <code>o.equals(null)</code> must always return false.</p>\n\n<p><code>hashCode()</code> (<a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#hashCode()\" rel=\"nofollow\">javadoc</a>) must also be <em>consistent</em> (if the object is not modified in terms of <code>equals()</code>, it must keep returning the same value).</p>\n\n<p>The <strong>relation</strong> between the two methods is:</p>\n\n<blockquote>\n  <p><em>Whenever <code>a.equals(b)</code>, then <code>a.hashCode()</code> must be same as <code>b.hashCode()</code>.</em></p>\n</blockquote>\n\n<h3>In practice:</h3>\n\n<p>If you override one, then you should override the other.</p>\n\n<p>Use the same set of fields that you use to compute <code>equals()</code> to compute <code>hashCode()</code>.</p>\n\n<p>Use the excellent helper classes <a href=\"http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/EqualsBuilder.html\" rel=\"nofollow\">EqualsBuilder</a> and <a href=\"http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/HashCodeBuilder.html\" rel=\"nofollow\">HashCodeBuilder</a> from the <a href=\"http://commons.apache.org/lang/\" rel=\"nofollow\">Apache Commons Lang</a> library. An example:</p>\n\n<pre><code>public class Person {\n    private String name;\n    private int age;\n    // ...\n\n    @Override\n    public int hashCode() {\n        return new HashCodeBuilder(17, 31). // two randomly chosen prime numbers\n            // if deriving: appendSuper(super.hashCode()).\n            append(name).\n            append(age).\n            toHashCode();\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n       if (!(obj instanceof Person))\n            return false;\n        if (obj == this)\n            return true;\n\n        Person rhs = (Person) obj;\n        return new EqualsBuilder().\n            // if deriving: appendSuper(super.equals(obj)).\n            append(name, rhs.name).\n            append(age, rhs.age).\n            isEquals();\n    }\n}\n</code></pre>\n\n<h3>Also remember:</h3>\n\n<p>When using a hash-based <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/Collection.html\" rel=\"nofollow\">Collection</a> or <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/Map.html\" rel=\"nofollow\">Map</a> such as <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashSet.html\" rel=\"nofollow\">HashSet</a>, <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/LinkedHashSet.html\" rel=\"nofollow\">LinkedHashSet</a>, <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/HashMap.html\" rel=\"nofollow\">HashMap</a>, <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/Hashtable.html\" rel=\"nofollow\">Hashtable</a>, or <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/java/util/WeakHashMap.html\" rel=\"nofollow\">WeakHashMap</a>, make sure that the hashCode() of the key objects that you put into the collection never changes while the object is in the collection. The bulletproof way to ensure this is to make your keys immutable, <a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=29\" rel=\"nofollow\">which has also other benefits</a>.</p>\n    "},{"t":"Why can't I switch on a String?","l":"http://stackoverflow.com/questions/338206/why-cant-i-switch-on-a-string","q":"\n\n<p>Why can't I switch on a String?</p>\n\n<p>Is this functionality going to be put into a later Java version?</p>\n\n<p>Can someone point me to an article, or themselves explain <strong>why</strong> I can't do this, as in, the technical way Java's switch statement works?</p>\n    ","a":"\n<p>Switch statements with <code>String</code> cases have been implemented in <a href=\"http://openjdk.java.net/projects/jdk7/features/\">Java SE 7</a>, at least 16 years <a href=\"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=1223179\">after they were first requested.</a> A clear reason for the delay was not provided, but it likely had to do with performance.</p>\n\n<h2>Implementation in JDK 7</h2>\n\n<p>The <a href=\"http://docs.oracle.com/javase/tutorial/displayCode.html?code=http://docs.oracle.com/javase/tutorial/java/nutsandbolts/examples/StringSwitchDemo.java\">feature</a> has now been implemented in <code>javac</code> <a href=\"http://blogs.oracle.com/darcy/entry/project_coin_string_switch_anatomy\">with a \"de-sugaring\" process;</a> a clean, high-level syntax using <code>String</code> constants in <code>case</code> declarations is expanded at compile-time into more complex code following a pattern. The resulting code uses JVM instructions that have always existed.</p>\n\n<p>A <code>switch</code> with <code>String</code> cases is translated into two switches during compilation. The first maps each string to a unique integer—its position in the original switch. This is done by first switching on the hash code of the label. The corresponding case is an <code>if</code> statement that tests string equality; if there are collisions on the hash, the test is a cascading <code>if-else-if</code>. The second switch mirrors that in the original source code, but substitutes the case labels with their corresponding positions. This two-step process makes it easy to preserve the flow control of the original switch.</p>\n\n<h2>Switches in the JVM</h2>\n\n<p>For more technical depth on <code>switch</code>, you can refer to the JVM Specification, where the <a href=\"http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10\">compilation of switch statements</a> is described. In a nutshell, there are two different JVM instructions that can be used for a switch, depending on the sparsity of the constants used by the cases. Both depend on using integer constants for each case to execute efficiently. </p>\n\n<p>If the constants are dense, they are used as an index (after subtracting the lowest value) into a table of instruction pointers—the <code>tableswitch</code> instruction. </p>\n\n<p>If the constants are sparse, a binary search for the correct case is performed—the <code>lookupswitch</code> instruction. </p>\n\n<p>In de-sugaring a <code>switch</code> on <code>String</code> objects, both instructions are likely to be used. The <code>lookupswitch</code> is suitable for the first switch on hash codes to find the original position of the case. The resulting ordinal is a natural fit for a <code>tableswitch</code>.</p>\n\n<p>Both instructions require the integer constants assigned to each case to be sorted at compile time. At runtime, while the <code>O(1)</code> performance of <code>tableswitch</code> generally appears better than the <code>O(log(n))</code> performance of <code>lookupswitch</code>, it requires some analysis to determine whether the table is dense enough to justify the space–time tradeoff. Bill Venners wrote <a href=\"http://www.artima.com/underthehood/flowP.html\">a great article</a> that covers this in more detail, along with an under-the-hood look at other Java flow control instructions.</p>\n\n<h2>Before JDK 7</h2>\n\n<p>Prior to JDK 7, <code>enum</code> could approximate a <code>String</code>-based switch. This uses <a href=\"http://docs.oracle.com/javase/specs/jls/se5.0/html/classes.html#8.9\">the static <code>valueOf</code></a> method generated by the compiler on every <code>enum</code> type. For example:</p>\n\n<pre><code>Pill p = Pill.valueOf(str);\nswitch(p) {\n  case RED:  pop();  break;\n  case BLUE: push(); break;\n}\n</code></pre>\n    "},{"t":"What's the simplest way to print a Java array?","l":"http://stackoverflow.com/questions/409784/whats-the-simplest-way-to-print-a-java-array","q":"\n\n<p>In Java, arrays don't override <code>toString()</code>, so if you try to print one directly, you get weird output including the memory location:</p>\n\n<pre><code>int[] intArray = new int[] {1, 2, 3, 4, 5};\nSystem.out.println(intArray);     // prints something like '[I@3343c8b3'\n</code></pre>\n\n<p>But usually we'd actually want something more like <code>[1, 2, 3, 4, 5]</code>. What's the simplest way of doing that? Here are some example inputs and outputs:</p>\n\n<pre><code>// array of primitives:\nint[] intArray = new int[] {1, 2, 3, 4, 5};\n//output: [1, 2, 3, 4, 5]\n\n// array of object references:\nString[] strArray = new String[] {\"John\", \"Mary\", \"Bob\"};\n//output: [John, Mary, Bob]\n</code></pre>\n    ","a":"\n<p>In Java 5 <code>Arrays.toString(arr)</code> or <code>Arrays.deepToString(arr)</code> for arrays within arrays. Note that Object[] version calls <code>.toString()</code> of each object in array. If my memory serves me correct, the output is even decorated in the exact way you're asking.</p>\n\n<p>Edit: Don't forget to add <code>import java.util.Arrays;</code> like this:</p>\n\n<pre><code>package packageName;\nimport java.util.Arrays;\n...\n</code></pre>\n    "},{"t":"How to create a Java String from the contents of a file?","l":"http://stackoverflow.com/questions/326390/how-to-create-a-java-string-from-the-contents-of-a-file","q":"\n\n<p>I've been using this idiom for some time now. And it seems to be the most wide-spread, at least in the sites I've visited. </p>\n\n<p>Does anyone have a better/different way to read a file into a string in Java?</p>\n\n<pre><code>private String readFile( String file ) throws IOException {\n    BufferedReader reader = new BufferedReader( new FileReader (file));\n    String         line = null;\n    StringBuilder  stringBuilder = new StringBuilder();\n    String         ls = System.getProperty(\"line.separator\");\n\n    while( ( line = reader.readLine() ) != null ) {\n        stringBuilder.append( line );\n        stringBuilder.append( ls );\n    }\n\n    return stringBuilder.toString();\n}\n</code></pre>\n    ","a":"\n<h2>Read all text from a file</h2>\n\n<p>Here's a compact, robust idiom for Java 7, wrapped up in a utility method:</p>\n\n<pre><code>static String readFile(String path, Charset encoding) \n  throws IOException \n{\n  byte[] encoded = Files.readAllBytes(Paths.get(path));\n  return new String(encoded, encoding);\n}\n</code></pre>\n\n<h2>Read lines of text from a file</h2>\n\n<p>Java 7 added a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllLines%28java.nio.file.Path,%20java.nio.charset.Charset%29\">convenience method to read a file as lines of text,</a> represented as a <code>List&lt;String&gt;</code>. This approach is \"lossy\" because the line separators are stripped from the end of each line.</p>\n\n<pre><code>List&lt;String&gt; lines = Files.readAllLines(Paths.get(path), encoding);\n</code></pre>\n\n<h2>Memory utilization</h2>\n\n<p>The first method, that preserves line breaks, can temporarily require memory several times the size of the file, because for a short time the raw file contents (a byte array), and the decoded characters (each of which is 16 bits even if encoded as 8 bits in the file) reside in memory at once. It is safest to apply to files that you know to be small relative to the available memory.</p>\n\n<p>The second method, reading lines, is usually more memory efficient, because the input byte buffer for decoding doesn't need to contain the entire file. However, it's still not suitable for files that are very large relative to available memory.</p>\n\n<p>For reading large files, you need a different design for your program, one that reads a chunk of text from a stream, processes it, and then moves on to the next, reusing the same fixed-sized memory block. Here, \"large\" depends on the computer specs. Nowadays, this threshold might be many gigabytes of RAM.</p>\n\n<h2>Character encoding</h2>\n\n<p>One thing that is missing from the sample in the original post is the character encoding. There are some special cases where the platform default is what you want, but they are rare, and you should be able justify your choice.</p>\n\n<p>The <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/charset/StandardCharsets.html\"><code>StandardCharsets</code></a> class define some constants for the encodings required of all Java runtimes:</p>\n\n<pre><code>String content = readFile(\"test.txt\", StandardCharsets.UTF_8);\n</code></pre>\n\n<p>The platform default is available from <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html#defaultCharset%28%29\">the <code>Charset</code> class</a> itself:</p>\n\n<pre><code>String content = readFile(\"test.txt\", Charset.defaultCharset());\n</code></pre>\n\n<hr>\n\n<p>Note: This answer largely replaces my Java 6 version. The utility of Java 7 safely simplifies the code, and the old answer, which used a mapped byte buffer, prevented the file that was read from being deleted until the mapped buffer was garbage collected. You can view the old version via the \"edited\" link on this answer.</p>\n    "},{"t":"Why does Java have transient variables?","l":"http://stackoverflow.com/questions/910374/why-does-java-have-transient-variables","q":"\n\n<p>Why does Java have <strong>transient</strong> variables?</p>\n    ","a":"\n<p>The <code>transient</code> keyword in Java is used to indicate that a field should not be serialized.</p>\n\n<p>From the <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/index.html\">Java Language Specification, Java SE 7 Edition</a>, <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.3.1.3\">Section 8.3.1.3. <code>transient</code> Fields</a>:</p>\n\n<blockquote>\n  <p>Variables may be marked <code>transient</code> to\n  indicate that they are not part of the\n  persistent state of an object.</p>\n</blockquote>\n\n<p>For example, you may have fields that are derived from other fields, and should only be done so programmatically, rather than having the state be persisted via serialization. </p>\n\n<p>Here's a <code>GalleryImage</code> class which contains an image and a thumbnail derived from the image:</p>\n\n<pre><code>class GalleryImage implements Serializable\n{\n    private Image image;\n    private transient Image thumbnailImage;\n\n    private void generateThumbnail()\n    {\n        // Generate thumbnail.\n    }\n\n    private void readObject(ObjectInputStream inputStream)\n            throws IOException, ClassNotFoundException\n    {\n        inputStream.defaultReadObject();\n        generateThumbnail();\n    }    \n}\n</code></pre>\n\n<p>In this example, the <code>thumbnailImage</code> is a thumbnail image that is generated by invoking the <code>generateThumbnail</code> method.</p>\n\n<p>The <code>thumbnailImage</code> field is marked as <code>transient</code>, so only the original <code>image</code> is serialized rather than persisting both the original image and the thumbnail image. This means that less storage would be needed to save the serialized object. (Of course, this may or may not be desirable depending on the requirements of the system -- this is just an example.)</p>\n\n<p>At the time of deserialization, the <a href=\"http://java.sun.com/javase/6/docs/api/java/io/ObjectInputStream.html#readObject%28%29\"><code>readObject</code></a> method is called to perform any operations necessary to restore the state of the object back to the state at which the serialization occurred. Here, the thumbnail needs to be generated, so the <code>readObject</code> method is overridden so that the thumbnail will be generated by calling the <code>generateThumbnail</code> method.</p>\n\n<p>For additional information, the <a href=\"http://www.oracle.com/technetwork/articles/java/javaserial-1536170.html\">Discover the secrets of the Java Serialization API</a> article (which was originally available on the Sun Developer Network) has a section which discusses the use of and presents a scenario where the <code>transient</code> keyword is used to prevent serialization of certain fields.</p>\n    "},{"t":"How can I convert a stack trace to a string?","l":"http://stackoverflow.com/questions/1149703/how-can-i-convert-a-stack-trace-to-a-string","q":"\n\n<p>Easiest way to convert the result of <code>Throwable.getStackTrace()</code> to a string that depicts the stacktrace?</p>\n    ","a":"\n<p>One can use the following method to convert an Exception stack trace to String. This class is available in Apache commons-lang-2.2.jar</p>\n\n<p><strong><a href=\"http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/exception/ExceptionUtils.html#getStackTrace%28java.lang.Throwable%29\">org.apache.commons.lang.exception.ExceptionUtils.getStackTrace(Throwable)</a></strong></p>\n    "},{"t":"How do you assert that a certain exception is thrown in JUnit 4 tests?","l":"http://stackoverflow.com/questions/156503/how-do-you-assert-that-a-certain-exception-is-thrown-in-junit-4-tests","q":"\n\n<p>How can I use JUnit4 idiomatically to test that some code throws an exception?</p>\n\n<p>While I can certainly do something like this:</p>\n\n<pre><code>@Test\npublic void testFooThrowsIndexOutOfBoundsException() {\n  boolean thrown = false;\n\n  try {\n    foo.doStuff();\n  } catch (IndexOutOfBoundsException e) {\n    thrown = true;\n  }\n\n  assertTrue(thrown);\n}\n</code></pre>\n\n<p>I recall that there is an annotation or an Assert.xyz or <em>something</em> that is far less kludgy and far more in-the-spirit of JUnit for these sorts of situations.</p>\n    ","a":"\n<p>JUnit 4 has support for this:</p>\n\n<pre><code>@Test(expected=IndexOutOfBoundsException.class)\npublic void testIndexOutOfBoundsException() {\n    ArrayList emptyList = new ArrayList();\n    Object o = emptyList.get(0);\n}\n</code></pre>\n    "},{"t":"What is a JavaBean exactly?","l":"http://stackoverflow.com/questions/3295496/what-is-a-javabean-exactly","q":"\n\n<p>I understood, I think, that a \"Bean\" is a Java class with properties and getters/setters. As much as I understand, it is the equivalent of a C struct. Is that true?</p>\n\n<p>Also, is there a real <em>syntactic</em> difference between a bean and a regular class? Is there any special definition or an interface?</p>\n\n<p>Basically, why is there a term for this, it puzzles me... </p>\n\n<p><strong>Edit</strong>: If you can be so kind and add information regarding the <code>Serializable</code> interface, and what it means, to your answer, I'd be very grateful.</p>\n    ","a":"\n<p>A JavaBean is just a <a href=\"http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html\">standard</a></p>\n\n<ol>\n<li>All properties private (use <a href=\"http://en.wikipedia.org/wiki/Mutator_method\">getters/setters</a>)</li>\n<li>A public <a href=\"http://en.wikipedia.org/wiki/Nullary_constructor\">no-argument constructor</a></li>\n<li>Implements <a href=\"http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html\"><code>Serializable</code></a>.</li>\n</ol>\n\n<p>That's it. It's just a convention.  Lots of libraries depend on it though....</p>\n\n<p>With respect to <code>Serializable</code>, from the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html\">API documentation</a>:</p>\n\n<blockquote>\n  <p>Serializability of a class is enabled by the class implementing the\n  java.io.Serializable interface. Classes that do not implement this\n  interface will not have any of their state serialized or deserialized.\n  All subtypes of a serializable class are themselves serializable. The\n  serialization interface has no methods or fields and serves only to\n  identify the semantics of being serializable.</p>\n</blockquote>\n\n<p>In other words, serializable objects can be written to streams, and hence files, object databases, anything really.  </p>\n\n<p>Also, there is no syntactic difference between a JavaBean and another class -- a class defines a JavaBean if it follows the standards.</p>\n\n<p>There is a term for it because the standard allows libraries to programmatically do things with class instances you define in a predefined way. For example, if a library wants to stream any object you pass into it, it knows it can because your object is serializable (assuming the lib requires your objects be proper JavaBeans). </p>\n    "},{"t":"Get current stack trace in Java","l":"http://stackoverflow.com/questions/1069066/get-current-stack-trace-in-java","q":"\n\n<p>How do I get the current stack trace in Java, like how in <a href=\"http://en.wikipedia.org/wiki/.NET_Framework\">.NET</a> you can do <a href=\"http://msdn.microsoft.com/en-us/library/system.environment.stacktrace.aspx?ppud=4\"><code>Environment.StackTrace</code></a>?</p>\n\n<p>BTW, <code>Thread.dumpStack()</code> is not what I want - I want to get the <a href=\"http://en.wikipedia.org/wiki/Stack_trace\">stack trace</a> back, not print it out.</p>\n    ","a":"\n<p>You can use <code><a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Thread.html\">Thread</a>.currentThread().getStackTrace()</code>.</p>\n\n<p>That returns an array of <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/StackTraceElement.html\"><code>StackTraceElement</code></a>s that represent the current stack trace of a program.</p>\n    "},{"t":"What exactly is Apache Camel?","l":"http://stackoverflow.com/questions/8845186/what-exactly-is-apache-camel","q":"\n\n<p>I don't understand what exactly <a href=\"http://camel.apache.org/index.html\">Camel</a> does.</p>\n\n<p>If you could give in 101 words an introduction to Camel:</p>\n\n<ul>\n<li>What exactly is it? </li>\n<li>How does it interact with an application written in Java? </li>\n<li>Is it something that goes together with the server? </li>\n<li>Is it an independent program? </li>\n</ul>\n\n<p><strong>Please explain what Camel is.</strong></p>\n    ","a":"\n<p>If you have 5 to 10 minutes, I generally recommend people to read this <a href=\"http://java.dzone.com/articles/open-source-integration-apache\">Integration with Apache Camel</a> by Jonathan Anstey. It's a well written piece which gives a brief introduction to and overview of some of Camel's concepts, and it implements a use case with code samples. In it, Jonathan writes:</p>\n\n<p>\"Apache Camel is an open source Java framework that focuses on making integration easier and more accessible to developers. It does this by providing:</p>\n\n<ul>\n<li>concrete implementations of all the widely used <a href=\"http://www.enterpriseintegrationpatterns.com/\">Enterprise Integration Patterns</a> (EIPs)</li>\n<li>connectivity to a great variety of transports and APIs</li>\n<li>easy to use Domain Specific Languages (DSLs) to wire EIPs and transports together\"</li>\n</ul>\n\n<p>There is also a free chapter of <a href=\"http://manning.com/ibsen/\">Camel in Action</a> which introduces Camel in the first chapter. Jonathan is a co-author on that book with me.</p>\n    "},{"t":"How do servlets work? Instantiation, shared variables and multithreading","l":"http://stackoverflow.com/questions/3106452/how-do-servlets-work-instantiation-shared-variables-and-multithreading","q":"\n\n<p>Suppose, I have a webserver which holds numerous <code>Servlets</code>. For information passing among those <code>Servlets</code> I am getting the <code>Servlets</code> context and setting session variables. </p>\n\n<p>Now, if 2 or more users send request to this server then what happens to the session variables? Will they all be common for all the users or they will be different for each user. If they are different, then how was the server able to differentiate between different users?</p>\n\n<p>One more similar question, if there are <code>*n*</code> users accessing a particular <code>Servlets</code>, then this <code>Servlets</code> gets instantiated only the first time the first user accessed it or does it get instantiated for all the users separately?</p>\n    ","a":"\n<h2>ServletContext</h2>\n\n<p>When the servletcontainer (like <a href=\"http://tomcat.apache.org\">Apache Tomcat</a>) starts up, it will deploy and load all webapplications. When a webapplication get loaded, the servletcontainer will create the <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/ServletContext.html\"><code>ServletContext</code></a> once and keep in server's memory. The webapp's <code>web.xml</code> will be parsed and every <code>&lt;servlet&gt;</code>, <code>&lt;filter&gt;</code> and <code>&lt;listener&gt;</code> found in <code>web.xml</code>, or annotated with respectively <code>@WebServlet</code>, <code>@WebFilter</code> and <code>@WebListener</code>, will be created once and kept in server's memory as well. For all filters, the <code>init()</code> method will also be invoked immediately. When the servletcontainer shuts down, it will unload all webapplications, invoke the <code>destroy()</code> of all initialized servlets and filters, and finally the <code>ServletContext</code> and all <code>Servlet</code>, <code>Filter</code> and <code>Listener</code> instances will be trashed.</p>\n\n<p>When the <code>Servlet</code> in question has a <code>&lt;servlet&gt;&lt;load-on-startup&gt;</code> or <code>@WebServlet(loadOnStartup)</code> value greater than <code>0</code>, then its <code>init()</code> method will also immediately be invoked during startup. Those servlets are initialized in the same order as \"load-on-startup\" value represents, or if they are the same, then the order in the <code>web.xml</code> or <code>@WebServlet</code> classloading. Or, if the \"load-on-startup\" value is absent, then the <code>init()</code> method will only be invoked on very first HTTP request hitting the servlet in question. </p>\n\n<h2>HttpServletRequest and HttpServletResponse</h2>\n\n<p>The servletcontainer is attached to a webserver which listens on HTTP requests on a certain port number, which is usually 8080 in development and 80 in production. When a client (user with a webbrowser) sends a HTTP request, the servletcontainer will create new <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletRequest.html\"><code>HttpServletRequest</code></a> and <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpServletResponse.html\"><code>HttpServletResponse</code></a> objects and pass it through the methods of the already-created <code>Filter</code> and <code>Servlet</code> instances whose <code>url-pattern</code> matches the request URL, all in the same thread. </p>\n\n<p>The request object provides access to all information of the HTTP request, such as the request headers and the request body. The response object provides facility to control and send the HTTP response the way you want, such as setting headers and the body (usually with HTML content from a JSP file). When the HTTP response is committed and finished, then both the request and response objects will be trashed.</p>\n\n<h2>HttpSession</h2>\n\n<p>When a client visits the webapp for the first time and/or the <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/HttpSession.html\"><code>HttpSession</code></a> is to be obtained for the first time by <code>request.getSession()</code>, then the servletcontainer will create it, generate a long and unique ID (which you can get by <code>session.getId()</code>) and store it in server's memory. The servletcontainer will also set a <a href=\"http://docs.oracle.com/javaee/7/api/javax/servlet/http/Cookie.html\"><code>Cookie</code></a> in the <code>Set-Cookie</code> header of the HTTP response with <code>JSESSIONID</code> as cookie name and the unique session ID as cookie value. </p>\n\n<p>As per the <a href=\"http://www.faqs.org/rfcs/rfc2965.html\">HTTP cookie specification</a> (a contract a decent webbrowser and webserver has to adhere), the client (the webbrowser) is required to send this cookie back in the subsequent requests in the <code>Cookie</code> header as long as the cookie is valid. Using browser builtin HTTP traffic monitor you can check them (press F12 in Chrome / Firefox23+ / IE9+ and check <em>Net/Network</em> tab). The servletcontainer will determine the <code>Cookie</code> header of every incoming HTTP request for the presence of the cookie with the name <code>JSESSIONID</code> and use its value (the session ID) to get the associated <code>HttpSession</code> from server's memory.</p>\n\n<p>The <code>HttpSession</code> lives until it has not been used for more than the <code>&lt;session-timeout&gt;</code> time, a setting you can specify in <code>web.xml</code>, which defaults to 30 minutes. So when the client doesn't visit the webapp anymore for over 30 minutes, then the servletcontainer will trash the session. Every subsequent request, even though with the cookie specified, will not have access to the same session anymore. The servletcontainer will create a new one. </p>\n\n<p>On the other hand, the session cookie on the client side has a default lifetime which is as long as the browser instance is running. So when the client closes the browser instance (all tabs/windows), then the session will be trashed at the client side. In a new browser instance the cookie associated with the session won't be sent anymore. A new <code>request.getSession()</code> would return a brand new <code>HttpSession</code> and set a cookie with a brand new session ID.</p>\n\n<h2>In a nutshell</h2>\n\n<ul>\n<li>The <code>ServletContext</code> lives as long as the webapp lives. It's been shared among <em>all</em> requests in <em>all</em> sessions.</li>\n<li>The <code>HttpSession</code> lives as long as the client is interacting with the webapp with the same browser instance and the session hasn't timed out at the server side yet. It's been shared among <em>all</em> requests in the <em>same</em> session.</li>\n<li>The <code>HttpServletRequest</code> and <code>HttpServletResponse</code> lives as long as the client has sent it until the complete response (the webpage) is arrived. It is <em>not</em> being shared elsewhere.</li>\n<li>Any <code>Servlet</code>, <code>Filter</code> and <code>Listener</code> lives as long as the webapp lives. They are being shared among <em>all</em> requests in <em>all</em> sessions.</li>\n<li>Any <code>attribute</code> which you set in <code>ServletContext</code>, <code>HttpServletRequest</code> and <code>HttpSession</code> will live as long as the object in question lives.</li>\n</ul>\n\n<h2>Threadsafety</h2>\n\n<p>That said, your major concern is possibly <em>threadsafety</em>. You should now have learnt that Servlets and filters are shared among all requests. That's the nice thing of Java, it's multithreaded and different threads (read: HTTP requests) can make use of the same instance. It would otherwise have been too expensive to recreate it on every request.</p>\n\n<p>But you should also realize that you should <strong>never</strong> assign any request or session scoped data as an <em>instance</em> variable of a servlet or filter. It will be shared among all other requests in other sessions. That's <em>threadunsafe</em>! The below example illustrates that:</p>\n\n<pre><code>public class ExampleServlet extends HttpServlet {\n\n    private Object thisIsNOTThreadSafe;\n\n    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n        Object thisIsThreadSafe;\n\n        thisIsNOTThreadSafe = request.getParameter(\"foo\"); // BAD!! Shared among all requests!\n        thisIsThreadSafe = request.getParameter(\"foo\"); // OK, this is thread safe.\n    } \n}\n</code></pre>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2183974/difference-each-instance-of-servlet-and-each-thread-of-servlet-in-servlets\">Servlets and Multithreading</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2095397/what-is-the-difference-between-jsf-servlet-and-jsp\">Difference between JSP and Servlet</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1700390/best-option-for-session-management-in-java\">Session management in Java</a></li>\n</ul>\n    "},{"t":"Access restriction on class due to restriction on required library rt.jar?","l":"http://stackoverflow.com/questions/860187/access-restriction-on-class-due-to-restriction-on-required-library-rt-jar","q":"\n\n<p>I'm attempting to compile Java 1.4 code that was created by IBM's WSDL2Java on Java5 without recreating the stubs and saw this error in Eclipse. I'm under the assumption that the stubs created should just compile as long as the runtime jars are available (they are).</p>\n\n<p><code>Access restriction: The type QName is not accessible due to restriction on required library C:\\Program Files\\Java\\jdk1.5.0_16\\jre\\lib\\rt.jar</code></p>\n\n<p>The full classname is <code>javax.xml.namespace.QName</code></p>\n\n<p>What exactly is going on here? </p>\n\n<p>Is this a case where I am trying to refactor a pig from sausage? Am I better off recreating the stubs?</p>\n    ","a":"\n<p>There's another solution that also works. I found it on <a href=\"http://forums.dzone.com/eclipse/384-access-restriction-problems.html\">this forum</a>: </p>\n\n<ol>\n<li>Go to the <em>Build Path</em> settings in the project properties.</li>\n<li>Remove the <em>JRE System Library</em></li>\n<li>Add it back; Select <em>\"Add Library\"</em> and select the <em>JRE System Library</em>. The default worked for me.</li>\n</ol>\n\n<p>This works because you have multiple classes in different jar files. Removing and re-adding the JRE lib will make the right classes be first.\nIf you want a fundamental solution make sure you exclude the jar files with the same classes.</p>\n\n<p>For me I have: <code>javax.xml.soap.SOAPPart</code> in three different jars: <code>axis-saaj-1.4.jar</code>, <code>saaj-api-1.3.jar</code> and the <code>rt.jar</code></p>\n    "},{"t":"How can I permanently have line numbers in IntelliJ?","l":"http://stackoverflow.com/questions/13751/how-can-i-permanently-have-line-numbers-in-intellij","q":"\n\n<p>How can I permanently have line numbers in IntelliJ?</p>\n    ","a":"\n<h2>IntelliJ 8.1.2 - 13.X</h2>\n\n<p>From IntelliJ 8.1.2 onwards, this option is in <strong>File | Settings</strong><sup>1</sup>. Within the <strong>IDE Settings</strong> section of that dialog, you'll find it under <strong>Editor | Appearance.</strong></p>\n\n<ol>\n<li>On a Mac, these are named <strong>IntelliJ IDEA | Preferences...</strong></li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/JVZlJ.jpg\" alt=\"enter image description here\"></p>\n\n<h2>IntelliJ 14.X</h2>\n\n<p>From version 14.0 onwards, the path to the setting dialog is slightly different, a <strong>General</strong> submenu has been added between <strong>Editor</strong> and <strong>Appearance</strong> as shown below</p>\n\n<p><img src=\"http://i.stack.imgur.com/9DL9q.png\" alt=\"enter image description here\"></p>\n    "},{"t":"How do I discover memory usage of my application in Android?","l":"http://stackoverflow.com/questions/2298208/how-do-i-discover-memory-usage-of-my-application-in-android","q":"\n\n<p>How can I find the memory used on my Android application, programmatically?</p>\n\n<p>I hope there is a way to do it. Plus, how do I get the free memory of the phone too?</p>\n    ","a":"\n<p>Note that memory usage on modern operating systems like Linux is an <em>extremely</em> complicated and difficult to understand area.  In fact the chances of you actually correctly interpreting whatever numbers you get is extremely low.  (Pretty much every time I look at memory usage numbers with other engineers, there is always a long discussion about what they actually mean that only results in a vague conclusion.)</p>\n\n<p><strong>Note: we now have much more extensive documentation on <a href=\"http://developer.android.com/training/articles/memory.html\">Managing Your App's Memory</a> that covers much of the material here and is more up-to-date with the state of Android.</strong></p>\n\n<p>First thing is to probably read the last part of this article which has some discussion of how memory is managed on Android:</p>\n\n<p><a href=\"http://android-developers.blogspot.com/2010/02/service-api-changes-starting-with.html\">http://android-developers.blogspot.com/2010/02/service-api-changes-starting-with.html</a></p>\n\n<p>Now ActivityManager.getMemoryInfo() is our highest-level API for looking at overall memory usage.  This is mostly there to help an application gauge how close the system is coming to having no more memory for background processes, thus needing to start killing needed processes like services.  For pure Java applications, this should be of little use, since the Java heap limit is there in part to avoid one app from being able to stress the system to this point.</p>\n\n<p>Going lower-level, you can use the Debug API to get raw kernel-level information about memory usage: <a href=\"http://developer.android.com/intl/de/reference/android/os/Debug.html#getMemoryInfo(android.os.Debug.MemoryInfo)\">http://developer.android.com/intl/de/reference/android/os/Debug.html#getMemoryInfo(android.os.Debug.MemoryInfo)</a></p>\n\n<p>Note starting with 2.0 there is also an API, ActivityManager.getProcessMemoryInfo, to get this information about another process: <a href=\"http://developer.android.com/intl/de/reference/android/app/ActivityManager.html#getProcessMemoryInfo%28int%5B%5D%29\">http://developer.android.com/intl/de/reference/android/app/ActivityManager.html#getProcessMemoryInfo(int[])</a></p>\n\n<p>This returns a low-level MemoryInfo structure with all of this data:</p>\n\n<pre><code>    /** The proportional set size for dalvik. */\n    public int dalvikPss;\n    /** The private dirty pages used by dalvik. */\n    public int dalvikPrivateDirty;\n    /** The shared dirty pages used by dalvik. */\n    public int dalvikSharedDirty;\n\n    /** The proportional set size for the native heap. */\n    public int nativePss;\n    /** The private dirty pages used by the native heap. */\n    public int nativePrivateDirty;\n    /** The shared dirty pages used by the native heap. */\n    public int nativeSharedDirty;\n\n    /** The proportional set size for everything else. */\n    public int otherPss;\n    /** The private dirty pages used by everything else. */\n    public int otherPrivateDirty;\n    /** The shared dirty pages used by everything else. */\n    public int otherSharedDirty;\n</code></pre>\n\n<p>But as to what the difference is between \"Pss\", \"PrivateDirty\", and \"SharedDirty\"...  well now the fun begins.</p>\n\n<p>A lot of memory in Android (and Linux systems in general) is actually shared across multiple processes.  So how much memory a processes uses is really not clear.  Add on top of that paging out to disk (let alone swap which we don't use on Android) and it is even less clear.</p>\n\n<p>Thus if you were to take all of the physical RAM actually mapped in to each process, and add up all of the processes, you would probably end up with a number much greater than the actual total RAM.</p>\n\n<p>The Pss number is a metric the kernel computes that takes into account memory sharing -- basically each page of RAM in a process is scaled by a ratio of the number of other processes also using that page.  This way you can (in theory) add up the pss across all processes to see the total RAM they are using, and compare pss between processes to get a rough idea of their relative weight.</p>\n\n<p>The other interesting metric here is PrivateDirty, which is basically the amount of RAM inside the process that can not be paged to disk (it is not backed by the same data on disk), and is not shared with any other processes.  Another way to look at this is the RAM that will become available to the system when that process goes away (and probably quickly subsumed into caches and other uses of it).</p>\n\n<p>That is pretty much the SDK APIs for this.  However there is more you can do as a developer with your device.</p>\n\n<p>Using adb, there is a lot of information you can get about the memory use of a running system.  A common one is the command \"adb shell dumpsys meminfo\" which will spit out a bunch of information about the memory use of each Java process, containing the above info as well as a variety of other things.  You can also tack on the name or pid of a single process to see, for example \"adb shell dumpsys meminfo system\" give me the system process:</p>\n\n<pre>** MEMINFO in pid 890 [system] **\n                    native   dalvik    other    total\n            size:    10940     7047      N/A    17987\n       allocated:     8943     5516      N/A    14459\n            free:      336     1531      N/A     1867\n           (Pss):     4585     9282    11916    25783\n  (shared dirty):     2184     3596      916     6696\n    (priv dirty):     4504     5956     7456    17916\n\n Objects\n           Views:      149        ViewRoots:        4\n     AppContexts:       13       Activities:        0\n          Assets:        4    AssetManagers:        4\n   Local Binders:      141    Proxy Binders:      158\nDeath Recipients:       49\n OpenSSL Sockets:        0\n\n SQL\n            heap:      205          dbFiles:        0\n       numPagers:        0   inactivePageKB:        0\n    activePageKB:        0\n</pre>\n\n<p>The top section is the main one, where \"size\" is the total size in address space of a particular heap, \"allocated\" is the kb of actual allocations that heap thinks it has, \"free\" is the remaining kb free the heap has for additional allocations, and \"pss\" and \"priv dirty\" are the same as discussed before specific to pages associated with each of the heaps.</p>\n\n<p>If you just want to look at memory usage across all processes, you can use the command \"adb shell procrank\".  Output of this on the same system looks like:</p>\n\n<pre>  PID      Vss      Rss      Pss      Uss  cmdline\n  890   84456K   48668K   25850K   21284K  system_server\n 1231   50748K   39088K   17587K   13792K  com.android.launcher2\n  947   34488K   28528K   10834K    9308K  com.android.wallpaper\n  987   26964K   26956K    8751K    7308K  com.google.process.gapps\n  954   24300K   24296K    6249K    4824K  com.android.phone\n  948   23020K   23016K    5864K    4748K  com.android.inputmethod.latin\n  888   25728K   25724K    5774K    3668K  zygote\n  977   24100K   24096K    5667K    4340K  android.process.acore\n...\n   59     336K     332K      99K      92K  /system/bin/installd\n   60     396K     392K      93K      84K  /system/bin/keystore\n   51     280K     276K      74K      68K  /system/bin/servicemanager\n   54     256K     252K      69K      64K  /system/bin/debuggerd\n</pre>\n\n<p>Here the Vss and Rss columns are basically noise (these are the straight-forward address space and RAM usage of a process, where if you add up the RAM usage across processes you get an ridiculously large number).</p>\n\n<p>Pss is as we've seen before, and Uss is Priv Dirty.</p>\n\n<p>Interesting thing to note here: Pss and Uss are slightly (or more than slightly) different than what we saw in meminfo.  Why is that?  Well procrank uses a different kernel mechanism to collect its data than meminfo does, and they give slightly different results.  Why is that?  Honestly I haven't a clue.  I believe procrank may be the more accurate one...  but really, this just leave the point: \"take any memory info you get with a grain of salt; often a very large grain.\"</p>\n\n<p>Finally there is the command \"adb shell cat /proc/meminfo\" that gives a summary of the overall memory usage of the system.  There is a lot of data here, only the first few numbers worth discussing (and the remaining ones understood by few people, and my questions of those few people about them often resulting in conflicting explanations):</p>\n\n<pre>MemTotal:         395144 kB\nMemFree:          184936 kB\nBuffers:             880 kB\nCached:            84104 kB\nSwapCached:            0 kB\n</pre>\n\n<p>MemTotal is the total amount of memory available to the kernel and user space (often less than the actual physical RAM of the device, since some of that RAM is needed for the radio, DMA buffers, etc).</p>\n\n<p>MemFree is the amount of RAM that is not being used at all.  The number you see here is very high; typically on an Android system this would be only a few MB, since we try to use available memory to keep processes running</p>\n\n<p>Cached is the RAM being used for filesystem caches and other such things.  Typical systems will need to have 20MB or so for this to avoid getting into bad paging states; the Android out of memory killer is tuned for a particular system to make sure that background processes are killed before the cached RAM is consumed too much by them to result in such paging.</p>\n    "},{"t":"How can I Initialize a static Map?","l":"http://stackoverflow.com/questions/507602/how-can-i-initialize-a-static-map","q":"\n\n<p>How would you initialise a static Map in Java?</p>\n\n<p>Method one: Static initializer <br>\nMethod two: instance initialiser (anonymous subclass)\nor\nsome other method?</p>\n\n<p>What are the pros and cons of each?</p>\n\n<p>Here is an example illustrating two methods:</p>\n\n<pre><code>import java.util.HashMap;\nimport java.util.Map;\n\npublic class Test {\n    private static final Map&lt;Integer, String&gt; myMap = new HashMap&lt;Integer, String&gt;();\n    static {\n        myMap.put(1, \"one\");\n        myMap.put(2, \"two\");\n    }\n\n    private static final Map&lt;Integer, String&gt; myMap2 = new HashMap&lt;Integer, String&gt;(){\n        {\n            put(1, \"one\");\n            put(2, \"two\");\n        }\n    };\n}\n</code></pre>\n    ","a":"\n<p>The instance initialiser is just syntactic sugar in this case, right? I don't see why you need an extra anonymous class just to initialize. And it won't work if the class being created is final.</p>\n\n<p>You can create an immutable map using a static initialiser too:</p>\n\n<pre><code>public class Test {\n    private static final Map&lt;Integer, String&gt; myMap;\n    static {\n        Map&lt;Integer, String&gt; aMap = ....;\n        aMap.put(1, \"one\");\n        aMap.put(2, \"two\");\n        myMap = Collections.unmodifiableMap(aMap);\n    }\n}\n</code></pre>\n    "},{"t":"Uncatchable ChuckNorrisException","l":"http://stackoverflow.com/questions/13883166/uncatchable-chucknorrisexception","q":"\n\n<p>Is it possible to construct a snippet of code in <a href=\"http://en.wikipedia.org/wiki/Java_%28programming_language%29\">Java</a> that would make a hypothetical <code>java.lang.ChuckNorrisException</code> uncatchable?</p>\n\n<p>Thoughts that came to mind are using for example interceptors or <a href=\"http://en.wikipedia.org/wiki/Aspect-oriented_programming\">aspect-oriented programming</a>.</p>\n    ","a":"\n<p>I haven't tried this, so I don't know if the <a href=\"http://en.wikipedia.org/wiki/Java_virtual_machine\">JVM</a> would restrict something like this, but maybe you could compile code which throws <code>ChuckNorrisException</code>, but at runtime provide a class definition of <code>ChuckNorrisException</code> which <em>does not extend Throwable</em>.</p>\n\n<p>UPDATE:</p>\n\n<p>It doesn't work. It generates a verifier error:</p>\n\n<pre><code>Exception in thread \"main\" java.lang.VerifyError: (class: TestThrow, method: ma\\\nin signature: ([Ljava/lang/String;)V) Can only throw Throwable objects\nCould not find the main class: TestThrow.  Program will exit.\n</code></pre>\n\n<p>UPDATE 2:</p>\n\n<p>Actually, you can get this to work if you disable the byte code verifier! (<code>-Xverify:none</code>)</p>\n\n<p>UPDATE 3:</p>\n\n<p>For those following from home, here is the full script:</p>\n\n<p>Create the following classes:</p>\n\n<pre><code>public class ChuckNorrisException\n    extends RuntimeException // &lt;- Comment out this line on second compilation\n{\n    public ChuckNorrisException() { }\n}\n\npublic class TestVillain {\n    public static void main(String[] args) {\n        try {\n            throw new ChuckNorrisException();\n        }\n        catch(Throwable t) {\n            System.out.println(\"Gotcha!\");\n        }\n        finally {\n            System.out.println(\"The end.\");\n        }\n    }\n}\n</code></pre>\n\n<p>Compile classes:</p>\n\n<pre><code>javac -cp . TestVillain.java ChuckNorrisException.java\n</code></pre>\n\n<p>Run:</p>\n\n<pre><code>java -cp . TestVillain\nGotcha!\nThe end.\n</code></pre>\n\n<p>Comment out \"extends RuntimeException\" and <em>recompile <code>ChuckNorrisException.java</code> only</em> :</p>\n\n<pre><code>javac -cp . ChuckNorrisException.java\n</code></pre>\n\n<p>Run:</p>\n\n<pre><code>java -cp . TestVillain\nException in thread \"main\" java.lang.VerifyError: (class: TestVillain, method: main signature: ([Ljava/lang/String;)V) Can only throw Throwable objects\nCould not find the main class: TestVillain.  Program will exit.\n</code></pre>\n\n<p>Run without verification:</p>\n\n<pre><code>java -Xverify:none -cp . TestVillain\nThe end.\nException in thread \"main\"\n</code></pre>\n    "},{"t":"How can I generate an MD5 hash?","l":"http://stackoverflow.com/questions/415953/how-can-i-generate-an-md5-hash","q":"\n\n<p>Is there any method to generate MD5 hash of a string in Java?</p>\n    ","a":"\n<p><a href=\"http://download.oracle.com/javase/6/docs/api/java/security/MessageDigest.html\">MessageDigest</a> is your friend. Call <a href=\"http://download.oracle.com/javase/6/docs/api/java/security/MessageDigest.html#getInstance%28java.lang.String%29\">getInstance(\"MD5\")</a> to get an MD5 message digest you can use.</p>\n    "},{"t":"Can I add jars to maven 2 build classpath without installing them?","l":"http://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them","q":"\n\n<p>Maven2 is driving me crazy during the experimentation / quick and dirty mock-up phase of development.  </p>\n\n<p>I have a <code>pom.xml</code> file that defines the dependencies for the web-app framework I want to use, and I can quickly generate starter projects from that file. However, sometimes I want to link to a 3rd party library that doesn't already have a <code>pom.xml</code> file defined, so rather than create the <code>pom.xml</code> file for the 3rd party lib by hand and install it, and add the dependency to my <code>pom.xml</code>, I would just like to tell Maven: \"In addition to my defined dependencies, include any jars that are in <code>/lib</code> too.\"  </p>\n\n<p>It seems like this ought to be simple, but if it is, I am missing something.</p>\n\n<p>Any pointers on how to do this are greatly appreciated. Short of that, if there is a simple way to point maven to a <code>/lib</code> directory and easily create a <code>pom.xml</code> with all the enclosed jars mapped to a single dependency which I could then name / install and link to in one fell swoop would also suffice.</p>\n    ","a":"\n<h1>Problems of popular approaches</h1>\n\n<p>Most of the answers you'll find around the internet will suggest you to either install the dependency to your local repository or specify a \"system\" scope in the <code>pom</code> and distribute the dependency with the source of your project. But both of these solutions are actually flawed.</p>\n\n<h2>Why you shouldn't apply the \"Install to Local Repo\" approach</h2>\n\n<p>When you install a dependency to your local repository it remains there. Your distribution artifact will do fine as long as it has access to this repository. The problem is in most cases this repository will reside on your local machine, so there'll be no way to resolve this dependency on any other machine. Clearly making your artifact depend on a specific machine is not a way to handle things. Otherwise this dependency will have to be locally installed on every machine working with that project which is not any better.</p>\n\n<h2>Why you shouldn't apply the \"System Scope\" approach</h2>\n\n<p>The jars you depend on with the \"System Scope\" approach neither get installed to any repository or attached to your target packages. That's why your distribution package won't have a way to resolve that dependency when used. That I believe was the reason why the use of system scope even got deprecated. Anyway you don't want to rely on a deprecated feature.</p>\n\n<h1>The static in-project repository solution</h1>\n\n<p>After putting this in your <code>pom</code>:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;repository&gt;\n    &lt;id&gt;repo&lt;/id&gt;\n    &lt;releases&gt;\n        &lt;enabled&gt;true&lt;/enabled&gt;\n        &lt;checksumPolicy&gt;ignore&lt;/checksumPolicy&gt;\n    &lt;/releases&gt;\n    &lt;snapshots&gt;\n        &lt;enabled&gt;false&lt;/enabled&gt;\n    &lt;/snapshots&gt;\n    &lt;url&gt;file://${project.basedir}/repo&lt;/url&gt;\n&lt;/repository&gt;\n</code></pre>\n\n<p>for each artifact with a group id of form <code>x.y.z</code> Maven will include the following location inside your project dir in its search for artifacts:</p>\n\n<pre><code>repo/\n| - x/\n|   | - y/\n|   |   | - z/\n|   |   |   | - ${artifactId}/\n|   |   |   |   | - ${version}/\n|   |   |   |   |   | - ${artifactId}-${version}.jar\n</code></pre>\n\n<p>To elaborate more on this you can read <a href=\"http://blog.dub.podval.org/2010/01/maven-in-project-repository.html\">this blog post</a>.</p>\n\n<h2>Use Maven to install to project repo</h2>\n\n<p>Instead of creating this structure by hand I recommend to use a Maven plugin to install your jars as artifacts. So, to install an artifact to an in-project repository under <code>repo</code> folder execute:</p>\n\n<pre><code>mvn install:install-file -DlocalRepositoryPath=repo -DcreateChecksum=true -Dpackaging=jar -Dfile=[your-jar] -DgroupId=[...] -DartifactId=[...] -Dversion=[...]\n</code></pre>\n\n<p>If you'll choose this approach you'll be able to simplify the repository declaration in <code>pom</code> to:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;repository&gt;\n    &lt;id&gt;repo&lt;/id&gt;\n    &lt;url&gt;file://${project.basedir}/repo&lt;/url&gt;\n&lt;/repository&gt;\n</code></pre>\n\n<h2>A helper script</h2>\n\n<p>Since executing installation command for each lib is kinda annoying and definitely error prone, I've created a <a href=\"https://github.com/nikita-volkov/install-to-project-repo\">utility script</a> which automatically installs all the jars from a <code>lib</code> folder to a project repository, while automatically resolving all metadata (groupId, artifactId and etc.) from names of files. The script also prints out the dependencies xml for you to copy-paste in your <code>pom</code>.</p>\n\n<h2>Include the dependencies in your target package</h2>\n\n<p>When you'll have your in-project repository created you'll have solved a problem of distributing the dependencies of the project with its source, but since then your project's target artifact will depend on non-published jars, so when you'll install it to a repository it will have unresolvable dependencies. </p>\n\n<p>To beat this problem I suggest to include these dependencies in your target package. This you can do with either the <a href=\"http://stackoverflow.com/a/1729094/485115\">Assembly Plugin</a> or better with the <a href=\"http://code.google.com/p/onejar-maven-plugin/\">OneJar Plugin</a>. The official documentaion on OneJar is easy to grasp.</p>\n    "},{"t":"Download a file with Android, and showing the progress in a ProgressDialog","l":"http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog","q":"\n\n<p>I am trying to write a simple application that gets updated. For this I need a simple function that can download a file and <em>show the current progress</em> in a <code>ProgressDialog</code>. I know how to do the <code>ProgressDialog</code>, but I'm not sure how to display the current progress and how to download the file in the first place.</p>\n    ","a":"\n<p>There are many ways to download files. Following I will post most common ways; it is up to you to decide which method is better for your app.</p>\n\n<h1>1. Use <code>AsyncTask</code> and show the download progress in a dialog</h1>\n\n<p>This method will allow you to execute some background processes and update the UI at the same time (in this case, we'll update a progress bar).</p>\n\n<p>This is an example code:</p>\n\n<pre><code>// declare the dialog as a member field of your activity\nProgressDialog mProgressDialog;\n\n// instantiate it within the onCreate method\nmProgressDialog = new ProgressDialog(YourActivity.this);\nmProgressDialog.setMessage(\"A message\");\nmProgressDialog.setIndeterminate(true);\nmProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\nmProgressDialog.setCancelable(true);\n\n// execute this when the downloader must be fired\nfinal DownloadTask downloadTask = new DownloadTask(YourActivity.this);\ndownloadTask.execute(\"the url to the file you want to download\");\n\nmProgressDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {\n    @Override\n    public void onCancel(DialogInterface dialog) {\n        downloadTask.cancel(true);\n    }\n});\n</code></pre>\n\n<p>The <code>AsyncTask</code> will look like this:</p>\n\n<pre><code>// usually, subclasses of AsyncTask are declared inside the activity class.\n// that way, you can easily modify the UI thread from here\nprivate class DownloadTask extends AsyncTask&lt;String, Integer, String&gt; {\n\n    private Context context;\n    private PowerManager.WakeLock mWakeLock;\n\n    public DownloadTask(Context context) {\n        this.context = context;\n    }\n\n    @Override\n    protected String doInBackground(String... sUrl) {\n        InputStream input = null;\n        OutputStream output = null;\n        HttpURLConnection connection = null;\n        try {\n            URL url = new URL(sUrl[0]);\n            connection = (HttpURLConnection) url.openConnection();\n            connection.connect();\n\n            // expect HTTP 200 OK, so we don't mistakenly save error report\n            // instead of the file\n            if (connection.getResponseCode() != HttpURLConnection.HTTP_OK) {\n                return \"Server returned HTTP \" + connection.getResponseCode()\n                        + \" \" + connection.getResponseMessage();\n            }\n\n            // this will be useful to display download percentage\n            // might be -1: server did not report the length\n            int fileLength = connection.getContentLength();\n\n            // download the file\n            input = connection.getInputStream();\n            output = new FileOutputStream(\"/sdcard/file_name.extension\");\n\n            byte data[] = new byte[4096];\n            long total = 0;\n            int count;\n            while ((count = input.read(data)) != -1) {\n                // allow canceling with back button\n                if (isCancelled()) {\n                    input.close();\n                    return null;\n                }\n                total += count;\n                // publishing the progress....\n                if (fileLength &gt; 0) // only if total length is known\n                    publishProgress((int) (total * 100 / fileLength));\n                output.write(data, 0, count);\n            }\n        } catch (Exception e) {\n            return e.toString();\n        } finally {\n            try {\n                if (output != null)\n                    output.close();\n                if (input != null)\n                    input.close();\n            } catch (IOException ignored) {\n            }\n\n            if (connection != null)\n                connection.disconnect();\n        }\n        return null;\n    }\n</code></pre>\n\n<p>The method above (<code>doInBackground</code>) runs always on a background thread. You shouldn't do any UI tasks there. On the other hand, the <code>onProgressUpdate</code> and <code>onPreExecute</code> run on the UI thread, so there you can change the progress bar:</p>\n\n<pre><code>    @Override\n    protected void onPreExecute() {\n        super.onPreExecute();\n        // take CPU lock to prevent CPU from going off if the user \n        // presses the power button during download\n        PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);\n        mWakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,\n             getClass().getName());\n        mWakeLock.acquire();\n        mProgressDialog.show();\n    }\n\n    @Override\n    protected void onProgressUpdate(Integer... progress) {\n        super.onProgressUpdate(progress);\n        // if we get here, length is known, now set indeterminate to false\n        mProgressDialog.setIndeterminate(false);\n        mProgressDialog.setMax(100);\n        mProgressDialog.setProgress(progress[0]);\n    }\n\n    @Override\n    protected void onPostExecute(String result) {\n        mWakeLock.release();\n        mProgressDialog.dismiss();\n        if (result != null)\n            Toast.makeText(context,\"Download error: \"+result, Toast.LENGTH_LONG).show();\n        else\n            Toast.makeText(context,\"File downloaded\", Toast.LENGTH_SHORT).show();\n    }\n</code></pre>\n\n<p>For this to run, you need the WAKE_LOCK permission.</p>\n\n<pre><code>&lt;uses-permission android:name=\"android.permission.WAKE_LOCK\" /&gt;\n</code></pre>\n\n<h1>2. Download from Service</h1>\n\n<p>The big question here is: <em>how do I update my activity from a service?</em>. In the next example we are going to use two classes you may not be aware of: <code>ResultReceiver</code> and <code>IntentService</code>. <code>ResultReceiver</code> is the one that will allow us to update our thread from a service; <code>IntentService</code> is a subclass of <code>Service</code> which spawns a thread to do background work from there (you should know that a <code>Service</code> runs actually in the same thread of your app; when you extends <code>Service</code>, you must manually spawn new threads to run CPU blocking operations).</p>\n\n<p>Download service can look like this:</p>\n\n<pre><code>public class DownloadService extends IntentService {\n    public static final int UPDATE_PROGRESS = 8344;\n    public DownloadService() {\n        super(\"DownloadService\");\n    }\n    @Override\n    protected void onHandleIntent(Intent intent) {\n        String urlToDownload = intent.getStringExtra(\"url\");\n        ResultReceiver receiver = (ResultReceiver) intent.getParcelableExtra(\"receiver\");\n        try {\n            URL url = new URL(urlToDownload);\n            URLConnection connection = url.openConnection();\n            connection.connect();\n            // this will be useful so that you can show a typical 0-100% progress bar\n            int fileLength = connection.getContentLength();\n\n            // download the file\n            InputStream input = new BufferedInputStream(connection.getInputStream());\n            OutputStream output = new FileOutputStream(\"/sdcard/BarcodeScanner-debug.apk\");\n\n            byte data[] = new byte[1024];\n            long total = 0;\n            int count;\n            while ((count = input.read(data)) != -1) {\n                total += count;\n                // publishing the progress....\n                Bundle resultData = new Bundle();\n                resultData.putInt(\"progress\" ,(int) (total * 100 / fileLength));\n                receiver.send(UPDATE_PROGRESS, resultData);\n                output.write(data, 0, count);\n            }\n\n            output.flush();\n            output.close();\n            input.close();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        Bundle resultData = new Bundle();\n        resultData.putInt(\"progress\" ,100);\n        receiver.send(UPDATE_PROGRESS, resultData);\n    }\n}\n</code></pre>\n\n<p>Add the service to your manifest:</p>\n\n<pre><code>&lt;service android:name=\".DownloadService\"/&gt;\n</code></pre>\n\n<p>And the activity will look like this:</p>\n\n<pre><code>// initialize the progress dialog like in the first example\n\n// this is how you fire the downloader\nmProgressDialog.show();\nIntent intent = new Intent(this, DownloadService.class);\nintent.putExtra(\"url\", \"url of the file to download\");\nintent.putExtra(\"receiver\", new DownloadReceiver(new Handler()));\nstartService(intent);\n</code></pre>\n\n<p>Here is were <code>ResultReceiver</code> comes to play:</p>\n\n<pre><code>private class DownloadReceiver extends ResultReceiver{\n    public DownloadReceiver(Handler handler) {\n        super(handler);\n    }\n\n    @Override\n    protected void onReceiveResult(int resultCode, Bundle resultData) {\n        super.onReceiveResult(resultCode, resultData);\n        if (resultCode == DownloadService.UPDATE_PROGRESS) {\n            int progress = resultData.getInt(\"progress\");\n            mProgressDialog.setProgress(progress);\n            if (progress == 100) {\n                mProgressDialog.dismiss();\n            }\n        }\n    }\n}\n</code></pre>\n\n<h2>2.1 Use Groundy library</h2>\n\n<p><a href=\"http://casidiablo.github.com/groundy\"><strong>Groundy</strong></a> is a library that basically helps you run pieces of code in a background service, and it is based on the <code>ResultReceiver</code> concept shown above. This library is <strong>deprecated</strong> at the moment. This is how the <strong>whole</strong> code would look like:</p>\n\n<p>The activity where you are showing the dialog...</p>\n\n<pre><code>public class MainActivity extends Activity {\n\n    private ProgressDialog mProgressDialog;\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n\n        findViewById(R.id.btn_download).setOnClickListener(new View.OnClickListener() {\n            public void onClick(View view) {\n                String url = ((EditText) findViewById(R.id.edit_url)).getText().toString().trim();\n                Bundle extras = new Bundler().add(DownloadTask.PARAM_URL, url).build();\n                Groundy.create(DownloadExample.this, DownloadTask.class)\n                        .receiver(mReceiver)\n                        .params(extras)\n                        .queue();\n\n                mProgressDialog = new ProgressDialog(MainActivity.this);\n                mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n                mProgressDialog.setCancelable(false);\n                mProgressDialog.show();\n            }\n        });\n    }\n\n    private ResultReceiver mReceiver = new ResultReceiver(new Handler()) {\n        @Override\n        protected void onReceiveResult(int resultCode, Bundle resultData) {\n            super.onReceiveResult(resultCode, resultData);\n            switch (resultCode) {\n                case Groundy.STATUS_PROGRESS:\n                    mProgressDialog.setProgress(resultData.getInt(Groundy.KEY_PROGRESS));\n                    break;\n                case Groundy.STATUS_FINISHED:\n                    Toast.makeText(DownloadExample.this, R.string.file_downloaded, Toast.LENGTH_LONG);\n                    mProgressDialog.dismiss();\n                    break;\n                case Groundy.STATUS_ERROR:\n                    Toast.makeText(DownloadExample.this, resultData.getString(Groundy.KEY_ERROR), Toast.LENGTH_LONG).show();\n                    mProgressDialog.dismiss();\n                    break;\n            }\n        }\n    };\n}\n</code></pre>\n\n<p>A <code>GroundyTask</code> implementation used by <strong>Groundy</strong> to download the file and show the progress:</p>\n\n<pre><code>public class DownloadTask extends GroundyTask {    \n    public static final String PARAM_URL = \"com.groundy.sample.param.url\";\n\n    @Override\n    protected boolean doInBackground() {\n        try {\n            String url = getParameters().getString(PARAM_URL);\n            File dest = new File(getContext().getFilesDir(), new File(url).getName());\n            DownloadUtils.downloadFile(getContext(), url, dest, DownloadUtils.getDownloadListenerForTask(this));\n            return true;\n        } catch (Exception pokemon) {\n            return false;\n        }\n    }\n}\n</code></pre>\n\n<p>And just add this to the manifest:</p>\n\n<pre><code>&lt;service android:name=\"com.codeslap.groundy.GroundyService\"/&gt;\n</code></pre>\n\n<p>It couldn't be easier I think. Just grab the latest jar <a href=\"https://github.com/casidiablo/groundy/downloads\">from Github</a> and you are ready to go. Keep in mind that <strong>Groundy</strong>'s main purpose is to make calls to external REST apis in a background service and post results to the UI with easily. If you are doing something like that in your app, it could be really useful.</p>\n\n<h2>2.2 Use <a href=\"https://github.com/koush/ion\">https://github.com/koush/ion</a></h2>\n\n<h1>3. Use <code>DownloadManager</code> class (<code>GingerBread</code> and newer only)</h1>\n\n<p>This method is awesome, you do not have to worry about downloading the file manually, handle threads, streams, etc. GingerBread brought a new feature: <code>DownloadManager</code> which allows you to download files easily and delegate the hard work to the system.</p>\n\n<p>First, let's see a utility method:</p>\n\n<pre><code>/**\n * @param context used to check the device version and DownloadManager information\n * @return true if the download manager is available\n */\npublic static boolean isDownloadManagerAvailable(Context context) {\n\n    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.GINGERBREAD) {\n        return true;\n    }\n    return false;\n}\n</code></pre>\n\n<p>Method's name explains it all. Once you are sure <code>DownloadManager</code> is available, you can do something like this:</p>\n\n<pre><code>String url = \"url you want to download\";\nDownloadManager.Request request = new DownloadManager.Request(Uri.parse(url));\nrequest.setDescription(\"Some descrition\");\nrequest.setTitle(\"Some title\");\n// in order for this if to run, you must use the android 3.2 to compile your app\nif (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) {\n    request.allowScanningByMediaScanner();\n    request.setNotificationVisibility(DownloadManager.Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED);\n}\nrequest.setDestinationInExternalPublicDir(Environment.DIRECTORY_DOWNLOADS, \"name-of-the-file.ext\");\n\n// get download service and enqueue file\nDownloadManager manager = (DownloadManager) getSystemService(Context.DOWNLOAD_SERVICE);\nmanager.enqueue(request);\n</code></pre>\n\n<p>Download progress will be showing in the notification bar.</p>\n\n<h1>Final thoughts</h1>\n\n<p>First and second methods are just the tip of the iceberg. There are lots of things you have to keep in mind if you want your app to be robust. Here is a brief list:</p>\n\n<ul>\n<li>You must check whether user has an internet connection available</li>\n<li>Make sure you have the right permissions (<code>INTERNET</code> and <code>WRITE_EXTERNAL_STORAGE</code>); also <code>ACCESS_NETWORK_STATE</code> if you want to check internet availability.</li>\n<li>Make sure the directory were you are going to download files exist and has write permissions.</li>\n<li>If download is too big you may want to implement a way to resume the download if previous attempts failed.</li>\n<li>Users will be grateful if you allow them to interrupt the download.</li>\n</ul>\n\n<p>Unless you want to have full control over the download process, I highly recommend using <code>DownloadManager</code> which already handles most of the items listed above.</p>\n    "},{"t":"Update Eclipse with Android development tools v. 23","l":"http://stackoverflow.com/questions/24437564/update-eclipse-with-android-development-tools-v-23","q":"\n\n<p>I updated Eclipse with the new SDK tools (rev 23) but now when Eclipse starts I receive the error:</p>\n\n<blockquote>\n  <p>This Android SDK requires Android Developer Toolkit version 23.0.0 or above. Current version is 22.6.3.v201404151837-1123206. Please update ADT to the latest version.</p>\n</blockquote>\n\n<p>No updates were found with <strong>\"Check for updates\"</strong>. If I try <strong>\"Install new software\"</strong>, I can see the version 23, but I can't upgrade due to the following error:</p>\n\n<pre><code>Cannot complete the install because of a conflicting dependency.\nSoftware being installed: Android Development Tools 23.0.0.1245622 (com.android.ide.eclipse.adt.feature.feature.group 23.0.0.1245622)\nSoftware currently installed: Android Developer Tools 22.2.1.v201309180102-833290 (com.android.ide.eclipse.adt.package.product 22.2.1.v201309180102-833290)\nOnly one of the following can be installed at once: \n    ADT Package 22.6.3.v201404151837-1123206 (com.android.ide.eclipse.adt.package 22.6.3.v201404151837-1123206)\n    ADT Package 23.0.0.1245622 (com.android.ide.eclipse.adt.package 23.0.0.1245622)\nCannot satisfy dependency:\n    From: Android Development Tools 23.0.0.1245622 (com.android.ide.eclipse.adt.feature.feature.group 23.0.0.1245622)\n    To: com.android.ide.eclipse.adt.package [23.0.0.1245622]\nCannot satisfy dependency:\n    From: Android Development Tools 22.6.3.v201404151837-1123206 (com.android.ide.eclipse.adt.feature.group 22.6.3.v201404151837-1123206)\n    To: com.android.ide.eclipse.adt.package [22.6.3.v201404151837-1123206]\nCannot satisfy dependency:\n    From: ADT Package 22.2.1.v201309180102-833290 (com.android.ide.eclipse.adt.package.feature.group 22.2.1.v201309180102-833290)\n    To: com.android.ide.eclipse.adt.feature.group 22.2.0\nCannot satisfy dependency:\n    From: Android Developer Tools 22.2.1.v201309180102-833290 (com.android.ide.eclipse.adt.package.product 22.2.1.v201309180102-833290)\n    To: com.android.ide.eclipse.adt.package.feature.group [22.2.1.v201309180102-833290]\n</code></pre>\n\n<p>After download of the last ADT from the web site, it seems there's another problem.\nWith SDK Tools rev. 23 proguard is not installed, the folder SDK <code>dir/tools/proguard</code> is missing and other tools are missing. This version contains several bugs.</p>\n    ","a":"\n<p><a href=\"http://code.google.com/p/android/issues/detail?id=72419\">Google response</a>:</p>\n\n<p><strong>This is a packaging bug. The entire proguard file is missing. We'll have an update asap, but until then just copy it over from a previous version of the tools:</strong></p>\n\n<ul>\n<li><a href=\"http://dl.google.com/android/android-sdk_r22.6.2-linux.tgz\">http://dl.google.com/android/android-sdk_r22.6.2-linux.tgz</a></li>\n<li><a href=\"http://dl.google.com/android/android-sdk_r22.6.2-windows.zip\">http://dl.google.com/android/android-sdk_r22.6.2-windows.zip</a></li>\n<li><a href=\"http://dl.google.com/android/android-sdk_r22.6.2-macosx.zip\">http://dl.google.com/android/android-sdk_r22.6.2-macosx.zip</a></li>\n</ul>\n\n<p>and copy over the following files:</p>\n\n<ul>\n<li>tools/hprof-conv </li>\n<li>tools/support/annotations.jar </li>\n<li>tools/proguard</li>\n</ul>\n\n<p>So at the end if you started from a new ADT copy by hand the files :)</p>\n\n<p><strong>Edit:</strong> with the latest ADT release, the bundle should now work with auto-update, so <strong>install these new versions</strong>:</p>\n\n<ul>\n<li>linux 64 bit vm: <a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip\">http://dl.google.com/android/adt/adt-bundle-linux-x86_64-20140702.zip</a></li>\n<li>linux 32 bit vm: <a href=\"http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip\">http://dl.google.com/android/adt/adt-bundle-linux-x86-20140702.zip</a></li>\n<li>mac: <a href=\"http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip\">http://dl.google.com/android/adt/adt-bundle-mac-x86_64-20140702.zip</a></li>\n<li>win32: <a href=\"http://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip\">http://dl.google.com/android/adt/adt-bundle-windows-x86-20140702.zip</a></li>\n<li>win64: <a href=\"http://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip\">http://dl.google.com/android/adt/adt-bundle-windows-x86_64-20140702.zip</a></li>\n</ul>\n\n<p><strong>Don't try to upgrade from previous version</strong> because it doesn’t work at all.\nIf you have got problems with zipalign, it's now under build-tools and no more under tools/ so you can do a symbolic link or just copy it into the expected folder.</p>\n    "},{"t":"Difference between wait() and sleep()","l":"http://stackoverflow.com/questions/1036754/difference-between-wait-and-sleep","q":"\n\n<p>What is the difference between a <code>wait()</code> and <code>sleep()</code> in Threads?</p>\n\n<p>Is my understanding that a <code>wait()</code>-ing Thread is still in running mode and uses CPU cycles but a <code>sleep()</code>-ing does not consume any CPU cycles correct?</p>\n\n<p>Why do we have <em>both</em> <code>wait()</code> and <code>sleep()</code>: how does their implementation vary at a lower level?</p>\n    ","a":"\n<p>A <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#wait%28%29\"><code>wait</code></a> can be \"woken up\" by another process calling <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#notify%28%29\"><code>notify</code></a> on the monitor which is being waited on whereas a <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html#sleep%28long%29\"><code>sleep</code></a> cannot. Also a <code>wait</code> (and <code>notify</code>) must happen in a block <code>synchronized</code> on the monitor object whereas <code>sleep</code> does not:</p>\n\n<pre><code>Object mon = ...;\nsynchronized (mon) {\n    mon.wait();\n} \n</code></pre>\n\n<p>At this point the currently executing thread waits <em>and releases the monitor</em>. Another thread may do</p>\n\n<pre><code>synchronized (mon) { mon.notify(); }\n</code></pre>\n\n<p>(On the same <code>mon</code> object) and the first thread (assuming it is the only thread waiting on the monitor) will wake up. </p>\n\n<p>You can also call <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html#notifyAll%28%29\"><code>notifyAll</code></a> if more than one thread is waiting on the monitor - this will wake <em>all of them up</em>. However, only one of the threads will be able to grab the monitor (remember that the <code>wait</code> is in a <code>synchronized</code> block) and carry on - the others will then be blocked until they can acquire the monitor's lock.</p>\n\n<p>Another point is that you call <code>wait</code> on <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Object.html\"><code>Object</code></a> itself (i.e. you wait on an object's monitor) whereas you call <code>sleep</code> on <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Thread.html\"><code>Thread</code></a>.</p>\n\n<p>Yet another point is that you can get <em>spurious wakeups</em> from <code>wait</code> (i.e. the thread which is waiting resumes for no apparent reason). You should <strong>always <code>wait</code> whilst spinning on some condition</strong> as follows:  </p>\n\n<pre><code>synchronized {\n    while (!condition) { mon.wait(); }\n}\n</code></pre>\n    "},{"t":"Setting multiple jars in java classpath","l":"http://stackoverflow.com/questions/219585/setting-multiple-jars-in-java-classpath","q":"\n\n<p>Is there a way to include all the jar files within a directory in the classpath?</p>\n\n<p>I'm trying <code>java -classpath lib/*.jar:. my.package.Program</code> and it is not able to find class files that are certainly in those jars.  Do I need to add each jar file to the classpath separately? </p>\n    ","a":"\n<p>Using Java 6 or later, the classpath option supports wildcards. Note the following:</p>\n\n<ul>\n<li>Use straight quotes (<code>\"</code>)</li>\n<li>Use <code>*</code>, not <code>*.jar</code></li>\n</ul>\n\n<p><strong>Windows</strong></p>\n\n<blockquote>\n  <p><code>java -cp \"Test.jar;lib/*\" my.package.MainClass</code></p>\n</blockquote>\n\n<p><strong>Unix</strong></p>\n\n<blockquote>\n  <p><code>java -cp \"Test.jar:lib/*\" my.package.MainClass</code></p>\n</blockquote>\n\n<p>This is similar to Windows, but uses <code>:</code> instead of <code>;</code>. If you cannot use wildcards, <code>bash</code> allows the following syntax (where <code>lib</code> is the directory containing all the Java archive files):</p>\n\n<blockquote>\n  <p><code>java -cp $(echo lib/*.jar | tr ' ' ':')</code></p>\n</blockquote>\n\n<p>(Note that using a classpath is incompatible with the <code>-jar</code> option. See also: <a href=\"http://stackoverflow.com/questions/13018100/execute-jar-file-with-multiple-classpath-libraries-from-command-prompt\">Execute jar file with multiple classpath libraries from command prompt</a>)</p>\n\n<p><strong>Understanding Wildcards</strong></p>\n\n<p>From the <a href=\"http://java.sun.com/javase/6/docs/technotes/tools/windows/classpath.html\">Classpath</a> document:</p>\n\n<blockquote>\n  <p>Class path entries can contain the basename wildcard character <code>*</code>, which is considered equivalent to specifying a list of all the files\n  in the directory with the extension <code>.jar</code> or <code>.JAR</code>. For example, the\n  class path entry <code>foo/*</code> specifies all JAR files in the directory named\n  foo. A classpath entry consisting simply of <code>*</code> expands to a list of all\n  the jar files in the current directory.</p>\n  \n  <p>A class path entry that contains <code>*</code> will not match class files. To\n  match both classes and JAR files in a single directory foo, use either\n  <code>foo;foo/*</code> or <code>foo/*;foo</code>. The order chosen determines whether the\n  classes and resources in <code>foo</code> are loaded before JAR files in <code>foo</code>, or\n  vice versa.</p>\n  \n  <p>Subdirectories are not searched recursively. For example, <code>foo/*</code> looks\n  for JAR files only in <code>foo</code>, not in <code>foo/bar</code>, <code>foo/baz</code>, etc.</p>\n  \n  <p>The order in which the JAR files in a directory are enumerated in the\n  expanded class path is not specified and may vary from platform to\n  platform and even from moment to moment on the same machine. A\n  well-constructed application should not depend upon any particular\n  order. If a specific order is required then the JAR files can be\n  enumerated explicitly in the class path.</p>\n  \n  <p>Expansion of wildcards is done early, prior to the invocation of a\n  program's main method, rather than late, during the class-loading\n  process itself. Each element of the input class path containing a\n  wildcard is replaced by the (possibly empty) sequence of elements\n  generated by enumerating the JAR files in the named directory. For\n  example, if the directory <code>foo</code> contains <code>a.jar</code>, <code>b.jar</code>, and <code>c.jar</code>, then\n  the class path <code>foo/*</code> is expanded into <code>foo/a.jar;foo/b.jar;foo/c.jar</code>,\n  and that string would be the value of the system property\n  <code>java.class.path</code>.</p>\n  \n  <p>The <code>CLASSPATH</code> environment variable is not treated any differently from\n  the <code>-classpath</code> (or <code>-cp</code>) command-line option. That is, wildcards are\n  honored in all these cases. However, class path wildcards are not\n  honored in the <code>Class-Path jar-manifest</code> header.</p>\n</blockquote>\n    "},{"t":"Is null check needed before calling instanceof","l":"http://stackoverflow.com/questions/2950319/is-null-check-needed-before-calling-instanceof","q":"\n\n<p>Will <code>null instanceof SomeClass</code> return <code>false</code> or throw a <code>NullPointerException</code></p>\n    ","a":"\n<p>No, a null check is not needed before using instanceof. </p>\n\n<p>The expression <code>x instanceof SomeClass</code> is <code>false</code> if x is null.</p>\n\n<p>From the Java Language Specification, at <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.20.2\">http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.20.2</a></p>\n\n<blockquote>\n  <p>\"At run time, the result of the\n  instanceof operator is true  if the\n  value of the RelationalExpression is\n  not null  and the reference could be\n  cast (§15.16)  to the ReferenceType\n  without raising a ClassCastException.\n  Otherwise the result is false.\"</p>\n</blockquote>\n\n<p>So if the operand is null, the result is false.</p>\n    "},{"t":"Iterating through a list, avoiding ConcurrentModificationException when removing in loop","l":"http://stackoverflow.com/questions/223918/iterating-through-a-list-avoiding-concurrentmodificationexception-when-removing","q":"\n\n<p>We all know you can't do this:</p>\n\n<pre><code>for (Object i : l) {\n    if (condition(i))\n        l.remove(i);\n}\n</code></pre>\n\n<p><code>ConcurrentModificationException</code> etc... this apparently works sometimes, but not always. Here's some specific code:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>public static void main(String[] args) {\n    Collection&lt;Integer&gt; l = new ArrayList&lt;Integer&gt;();\n\n    for (int i=0; i &lt; 10; ++i) {\n        l.add(new Integer(4));\n        l.add(new Integer(5));\n        l.add(new Integer(6));\n    }\n\n    for (Integer i : l) {\n        if (i.intValue() == 5)\n            l.remove(i);\n    }\n\n    System.out.println(l);\n}\n</code></pre>\n\n<p>This, of course, results in:</p>\n\n<pre><code>Exception in thread \"main\" java.util.ConcurrentModificationException\n</code></pre>\n\n<p>... even though multiple threads aren't doing it... Anyway.</p>\n\n<p>What's the best solution to this problem? How can I remove an item from the collection in a loop without throwing this exception?</p>\n\n<p>I'm also using an arbitrary <code>Collection</code> here, not necessarily an <code>ArrayList</code>, so you can't rely on <code>get</code>.</p>\n    ","a":"\n<p><code>Iterator.remove()</code> is safe, you can use it like this:</p>\n\n<pre><code>List&lt;String&gt; list = new ArrayList&lt;&gt;();\n\n// This is a clever way to create the iterator and call iterator.hasNext() like\n// you would do in a while-loop. It would be the same as doing:\n//     Iterator&lt;String&gt; iterator = list.iterator();\n//     while (iterator.hasNext()) {\nfor (Iterator&lt;String&gt; iterator = list.iterator(); iterator.hasNext();) {\n    String string = iterator.next();\n    if (string.isEmpty()) {\n        // Remove the current element from the iterator and the list.\n        iterator.remove();\n    }\n}\n</code></pre>\n\n<p>Note that <code>Iterator.remove</code> is the only safe way to modify a collection during iteration; the behavior is unspecified if the underlying collection is modified in any other way while the iteration is in progress.</p>\n\n<p>Source:</p>\n\n<p><a href=\"http://docs.oracle.com/javase/tutorial/collections/interfaces/collection.html\">http://docs.oracle.com/javase/tutorial/collections/interfaces/collection.html</a></p>\n\n<hr>\n\n<p>And similarly, if you have a <code>ListIterator</code> and want to <em>add</em> items, you can use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/ListIterator.html#add-E-\"><code>ListIterator#add</code></a>, for the same reason you can use <code>Iterator#remove</code>&nbsp;— it's designed to allow it.</p>\n    "},{"t":"How does the Java for each loop work?","l":"http://stackoverflow.com/questions/85190/how-does-the-java-for-each-loop-work","q":"\n\n<pre><code>List&lt;String&gt; someList = new ArrayList&lt;String&gt;();\n// add \"monkey\", \"donkey\", \"skeleton key\" to someList\n</code></pre>\n\n\n\n<pre><code>for (String item : someList) {\n    System.out.println(item);\n}\n</code></pre>\n\n<p>What would the equivalent for loop look like without using the for each syntax?</p>\n    ","a":"\n<pre><code>for(Iterator&lt;String&gt; i = someList.iterator(); i.hasNext(); ) {\n    String item = i.next();\n    System.out.println(item);\n}\n</code></pre>\n\n<p>Note that if you need to use <code>i.remove();</code> in your loop, or access the actual <code>iterator</code> in some way, you cannot use the <code>for( : )</code> idiom, since the actual <code>Iterator</code> is merely inferred.</p>\n\n<p>As was noted by Denis Bueno, this code works for any object that <code>implements</code> the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html\"><code>Iterable interface</code></a>.</p>\n\n<p>Also, if the right-hand side of the <code>for(:)</code> idiom is an <code>array</code> rather than an <code>Iterable</code> object, the internal code uses an int index counter and checks against array.length instead. See the <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-14.html#jls-14.14.2\">Java Language Specification</a>.</p>\n    "},{"t":"What is the Java equivalent for LINQ?","l":"http://stackoverflow.com/questions/1217228/what-is-the-java-equivalent-for-linq","q":"\n\n<p>What is Java equivalent for LINQ?</p>\n    ","a":"\n<p>There is nothing like LINQ for Java.</p>\n    "},{"t":"Hibernate hbm2ddl.auto possible values and what they do?","l":"http://stackoverflow.com/questions/438146/hibernate-hbm2ddl-auto-possible-values-and-what-they-do","q":"\n\n<p>I really want to know more about the update, export and the values that could be given to <code>hibernate.hbm2ddl.auto</code><br>\nI need to know when to use the update and when not? And what is the alternative?</p>\n\n<p>These are changes that could happen over DB:</p>\n\n<ul>\n<li>New tables</li>\n<li>new columns in old tables</li>\n<li>columns deleted</li>\n<li>data type of a column changed</li>\n<li>a type of a column changed it attributes</li>\n<li>tables have been dropped</li>\n<li>values of a column has changed </li>\n</ul>\n\n<p>In each case what is the best solution?</p>\n    ","a":"\n<p>From the <a href=\"http://docs.jboss.org/hibernate/core/3.3/reference/en/html/session-configuration.html#configuration-optional\">community documentation</a>:</p>\n\n<blockquote>\n  <p>hibernate.hbm2ddl.auto    Automatically validates or exports schema DDL to the database when the SessionFactory is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly.</p>\n  \n  <p>e.g. validate | update | create | create-drop </p>\n</blockquote>\n\n<p>So the list of possible options are,</p>\n\n<ul>\n<li><em>validate</em>: validate the schema, makes no changes to the database.</li>\n<li><em>update</em>: update the schema.</li>\n<li><em>create</em>: creates the schema, destroying previous data.</li>\n<li><em>create-drop</em>: drop the schema at the end of the session.</li>\n</ul>\n\n<p>These options seem intended to be developers tools and not to facilitate any production level databases, you may want to have a look at the following question; <a href=\"http://stackoverflow.com/questions/221379/hibernate-hbm2ddl-autoupdate-in-production\">Hibernate: hbm2ddl.auto=update in production?</a></p>\n    "},{"t":"Check if at least two out of three booleans are true","l":"http://stackoverflow.com/questions/3076078/check-if-at-least-two-out-of-three-booleans-are-true","q":"\n\n<p>An interviewer recently asked me this question: given three boolean variables, a, b, and c, return true if at least two out of the three are true.</p>\n\n<p>My solution follows:</p>\n\n<pre><code>boolean atLeastTwo(boolean a, boolean b, boolean c) {\n    if ((a &amp;&amp; b) || (b &amp;&amp; c) || (a &amp;&amp; c)) {\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n</code></pre>\n\n<p>He said that this can be improved further, but how?</p>\n    ","a":"\n<p>Rather than writing:</p>\n\n<pre><code>    if (someExpression) {\n        return true;\n    } else {\n        return false;\n    }\n</code></pre>\n\n<p>Write:</p>\n\n<pre><code>    return someExpression;\n</code></pre>\n\n<hr>\n\n<p>As for the expression itself, something like this:</p>\n\n<pre><code>boolean atLeastTwo(boolean a, boolean b, boolean c) {\n    return a ? (b || c) : (b &amp;&amp; c);\n}\n</code></pre>\n\n<p>or this (whichever you find easier to grasp):</p>\n\n<pre><code>boolean atLeastTwo(boolean a, boolean b, boolean c) {\n    return a &amp;&amp; (b || c) || (b &amp;&amp; c);\n}\n</code></pre>\n\n<p>It tests <code>a</code> and <code>b</code> exactly once, and <code>c</code> at most once.</p>\n\n<h3>References</h3>\n\n<ul>\n<li><a href=\"http://java.sun.com/docs/books/jls/third_edition/html/expressions.html#15.25\">JLS 15.25 Conditional Operator ? :</a></li>\n</ul>\n    "},{"t":"How can I pad an integers with zeros on the left?","l":"http://stackoverflow.com/questions/473282/how-can-i-pad-an-integers-with-zeros-on-the-left","q":"\n\n<p>How do you left pad an int with zeros in java when converting to a string?</p>\n\n<p>I'm basically looking to pad out integers up to 9999 with the leading zeros (e.g. 1 = \"0001\").</p>\n    ","a":"\n<pre><code>String.format(\"%05d\", yournumber);\n</code></pre>\n\n<p>for zero-padding with length=5.</p>\n\n<p><a href=\"http://download.oracle.com/javase/7/docs/api/java/util/Formatter.html\">http://download.oracle.com/javase/7/docs/api/java/util/Formatter.html</a></p>\n    "},{"t":"How to round a number to n decimal places in Java","l":"http://stackoverflow.com/questions/153724/how-to-round-a-number-to-n-decimal-places-in-java","q":"\n\n<p>What I'd like is a method to convert a double to a string which rounds using the half-up method. I.e. if the decimal to be rounded is a 5, it always rounds up the previous number. This is the standard method of rounding most people expect in most situations.</p>\n\n<p>I also would like only significant digits to be displayed. That is there should not be any trailing zeroes.</p>\n\n<p>I know one method of doing this is to use the String.format method:</p>\n\n<pre><code>String.format(\"%.5g%n\", 0.912385);\n</code></pre>\n\n<p>returns:</p>\n\n<pre><code>0.91239\n</code></pre>\n\n<p>which is great, however it always displays numbers with 5 decimal places even if they are not significant: </p>\n\n<pre><code>String.format(\"%.5g%n\", 0.912300);\n</code></pre>\n\n<p>returns:</p>\n\n<pre><code>0.91230\n</code></pre>\n\n<p>Another method is to use the DecimalFormatter:</p>\n\n<pre><code>DecimalFormat df = new DecimalFormat(\"#.#####\");\ndf.format(0.912385);\n</code></pre>\n\n<p>returns:</p>\n\n<pre><code>0.91238\n</code></pre>\n\n<p>However as you can see this uses half-even rounding. That is it will round down if the previous digit is even. What I'd like is this:</p>\n\n<pre><code>0.912385 -&gt; 0.91239\n0.912300 -&gt; 0.9123\n</code></pre>\n\n<p>What is the best way to achieve this in Java?</p>\n    ","a":"\n<p>Use <a href=\"http://docs.oracle.com/javase/6/docs/api/java/text/DecimalFormat.html#setRoundingMode%28java.math.RoundingMode%29\"><code>setRoundingMode</code></a>, see linked Javadoc, set the <a href=\"http://docs.oracle.com/javase/6/docs/api/java/math/RoundingMode.html\"><code>RoundingMode</code></a> explicitly to handle your issue with the half-even round, then use the format pattern for your required output.</p>\n    "},{"t":"Sort ArrayList of custom Objects by property","l":"http://stackoverflow.com/questions/2784514/sort-arraylist-of-custom-objects-by-property","q":"\n\n<p>I read about sorting ArrayLists using a Comparator but in all of the examples people used <code>compareTo</code> which according to some research is a method for Strings.</p>\n\n<p>I wanted to sort an ArrayList of custom objects by one of their properties: a Date object\n(<code>getStartDay()</code>). Normally I compare them by <code>item1.getStartDate().before(item2.getStartDate())</code> so I was wondering whether I could write something like:</p>\n\n<pre><code>public class customComparator {\n    public boolean compare(Object object1, Object object2) {\n        return object1.getStartDate().before(object2.getStartDate());\n    }\n}\n\npublic class randomName {\n    ...\n    Collections.sort(Database.arrayList, new customComparator);\n    ...\n}\n</code></pre>\n    ","a":"\n<p>Since <a href=\"http://docs.oracle.com/javase/6/docs/api/java/util/Date.html\">Date</a> implements <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Comparable.html\">Comparable</a>, it has a <code>compareTo</code> method just like <code>String</code> does.</p>\n\n<p>So your custom comparator could look like this:</p>\n\n<pre><code>public class CustomComparator implements Comparator&lt;MyObject&gt; {\n    @Override\n    public int compare(MyObject o1, MyObject o2) {\n        return o1.getStartDate().compareTo(o2.getStartDate());\n    }\n}\n</code></pre>\n\n<p>(The <code>compare()</code> method must return an <code>int</code>, so you couldn't directly return a <code>boolean</code> like you were planning to anyway.)</p>\n\n<p>Your sorting code would be just about like you wrote:</p>\n\n<pre><code>Collections.sort(Database.arrayList, new CustomComparator());\n</code></pre>\n\n<p>&nbsp;<br>\nA couple of smaller points which are not directly related to the question:</p>\n\n<ol>\n<li>By convention, classes start with an upper-case letter while methods and variables start with a lower-case letter. That's why I changed the name of the comparator to <code>CustomComparator</code>.</li>\n<li>Use the <a href=\"http://docs.oracle.com/javase/6/docs/api/index.html\">Javadocs</a>. They will be invaluable if you keep working with Java.</li>\n</ol>\n    "},{"t":"Why is Java Vector class considered obsolete or deprecated?","l":"http://stackoverflow.com/questions/1386275/why-is-java-vector-class-considered-obsolete-or-deprecated","q":"\n\n<p>Why is Java Vector considered a legacy class, obsolete or deprecated?</p>\n\n<p>Isn't its use valid when working with concurrency?</p>\n\n<p>And if I don't want to manually synchronize objects and just want to use a thread-safe collection without needing to make fresh copies of the underlying array (as <code>CopyOnWriteArrayList</code> does), then is it fine to use <code>Vector</code>?</p>\n\n<p>What about <code>Stack</code>, which is a subclass of <code>Vector</code>, what should I use instead of it?</p>\n    ","a":"\n<p><code>Vector</code> synchronizes on each individual operation. That's almost never what you want to do.</p>\n\n<p>Generally you want to synchronize a <em>whole sequence</em> of operations. Synchronizing individual operations is both less safe (if you iterate over a <code>Vector</code>, for instance, you still need to take out a lock to avoid anyone else changing the collection at the same time, which would cause a <code>ConcurrentModificationException</code> in the iterating thread) but also slower (why take out a lock repeatedly when once will be enough)?</p>\n\n<p>Of course, it also has the overhead of locking even when you don't need to.</p>\n\n<p>Basically, it's a very flawed approach to synchronization in most situations. As MrSpandex pointed out, you can decorate a collection using the calls such as <a href=\"http://java.sun.com/javase/6/docs/api/java/util/Collections.html#synchronizedList%28java.util.List%29\"><code>Collections.synchronizedList</code></a> - the fact that <code>Vector</code> combines both the \"resized array\" collection implementation with the \"synchronize every operation\" bit is another example of poor design; the decoration approach gives cleaner separation of concerns.</p>\n\n<p>As for a <code>Stack</code> equivalent - I'd look at <code>Deque</code>/<code>ArrayDeque</code> to start with.</p>\n    "},{"t":"Why does this go into an infinite loop?","l":"http://stackoverflow.com/questions/3831341/why-does-this-go-into-an-infinite-loop","q":"\n\n<p>I'm a teacher, and yesterday a student wrote the following code:</p>\n\n<pre><code>public class Tests {\n    public static void main(String[] args) throws Exception {\n        int x = 0;\n        while(x&lt;3) {\n            x = x++;\n            System.out.println(x);\n        }\n    }\n}\n</code></pre>\n\n<p>We know he should have writen just <code>x++</code> or <code>x=x+1</code>, but on <code>x = x++;</code> it should first attribute x to itself, and later increment x. Why does x continue with 0 as value?</p>\n\n<p><strong>--update</strong></p>\n\n<p>Here's the bytecode:</p>\n\n<pre><code>public class Tests extends java.lang.Object{\npublic Tests();\n  Code:\n   0:   aload_0\n   1:   invokespecial   #1; //Method java/lang/Object.\"&lt;init&gt;\":()V\n   4:   return\n\npublic static void main(java.lang.String[])   throws java.lang.Exception;\n  Code:\n   0:   iconst_0\n   1:   istore_1\n   2:   iload_1\n   3:   iconst_3\n   4:   if_icmpge   22\n   7:   iload_1\n   8:   iinc    1, 1\n   11:  istore_1\n   12:  getstatic   #2; //Field java/lang/System.out:Ljava/io/PrintStream;\n   15:  iload_1\n   16:  invokevirtual   #3; //Method java/io/PrintStream.println:(I)V\n   19:  goto    2\n   22:  return\n\n}\n</code></pre>\n\n<p>I'll read about the <a href=\"http://en.wikipedia.org/wiki/Java_bytecode_instruction_listings\">instructions</a> to try to understand...</p>\n    ","a":"\n<p><strong>Note</strong>: Originally I posted C# code in this answer for purposes of illustration, since C# allows you to pass <code>int</code> parameters by reference with the <code>ref</code> keyword. I've decided to update it with actual legal Java code using the first <a href=\"http://commons.apache.org/lang/api-2.4/org/apache/commons/lang/mutable/MutableInt.html\"><code>MutableInt</code></a> class I found on Google to sort of approximate what <code>ref</code> does in C#. I can't really tell if that helps or hurts the answer. I will say that I personally haven't done all that much Java development; so for all I know there could be much more idiomatic ways to illustrate this point.</p>\n\n<hr>\n\n<p>Perhaps if we write out a method to do the equivalent of what <code>x++</code> does it will make this clearer.</p>\n\n<pre><code>public MutableInt postIncrement(MutableInt x) {\n    int valueBeforeIncrement = x.intValue();\n    x.add(1);\n    return new MutableInt(valueBeforeIncrement);\n}\n</code></pre>\n\n<p>Right? Increment the value passed and return the original value: that's the definition of the postincrement operator.</p>\n\n<p>Now, let's see how this behavior plays out in your example code:</p>\n\n<pre><code>MutableInt x = new MutableInt();\nx = postIncrement(x);\n</code></pre>\n\n<p><code>postIncrement(x)</code> does what? Increments <code>x</code>, yes. And then <strong>returns what <code>x</code> <em>was</em> before the increment</strong>. This return value then gets assigned to <code>x</code>.</p>\n\n<p>So the order of values assigned to <code>x</code> is 0, then 1, then 0.</p>\n\n<p>This might be clearer still if we re-write the above:</p>\n\n<pre><code>MutableInt x = new MutableInt();    // x is 0.\nMutableInt temp = postIncrement(x); // Now x is 1, and temp is 0.\nx = temp;                           // Now x is 0 again.\n</code></pre>\n\n<p>Your fixation on the fact that when you replace <code>x</code> on the left side of the above assignment with <code>y</code>, \"you can see that it first increments x, and later attributes it to y\" strikes me as confused. It is not <code>x</code> that is being assigned to <code>y</code>; it is <strong>the value formerly assigned to <code>x</code></strong>. Really, injecting <code>y</code> makes things no different from the scenario above; we've simply got:</p>\n\n<pre><code>MutableInt x = new MutableInt();    // x is 0.\nMutableInt y = new MutableInt();    // y is 0.\nMutableInt temp = postIncrement(x); // Now x is 1, and temp is 0.\ny = temp;                           // y is still 0.\n</code></pre>\n\n<p>So it's clear: <code>x = x++</code> effectively does not change the value of x. It always causes x to have the values x<sub>0</sub>, then x<sub>0</sub> + 1, and then x<sub>0</sub> again.</p>\n\n<hr>\n\n<p><strong>Update</strong>: Incidentally, lest you doubt that <code>x</code> ever gets assigned to 1 \"between\" the increment operation and the assignment in the example above, I've thrown together a quick demo to illustrate that this intermediate value does indeed \"exist,\" though it will never be \"seen\" on the executing thread.</p>\n\n<p>The demo calls <code>x = x++;</code> in a loop while a separate thread continuously prints the value of <code>x</code> to the console.</p>\n\n<pre><code>public class Main {\n    public static volatile int x = 0;\n\n    public static void main(String[] args) {\n        LoopingThread t = new LoopingThread();\n        System.out.println(\"Starting background thread...\");\n        t.start();\n\n        while (true) {\n            x = x++;\n        }\n    }\n}\n\nclass LoopingThread extends Thread {\n    public @Override void run() {\n        while (true) {\n            System.out.println(Main.x);\n        }\n    }\n}\n</code></pre>\n\n<p>Below is an excerpt of the above program's output. Notice the irregular occurrence of both 1s and 0s.</p>\n\n<pre>Starting background thread...\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n</pre>\n    "},{"t":"Efficiency of Java “Double Brace Initialization”?","l":"http://stackoverflow.com/questions/924285/efficiency-of-java-double-brace-initialization","q":"\n\n<p>In <a href=\"http://stackoverflow.com/questions/15496/hidden-features-of-java\">Hidden Features of Java</a> the top answer mentions <a href=\"http://www.c2.com/cgi/wiki?DoubleBraceInitialization\">Double Brace Initialization</a>, with a <em>very</em> enticing syntax:</p>\n\n<pre><code>Set&lt;String&gt; flavors = new HashSet&lt;String&gt;() {{\n    add(\"vanilla\");\n    add(\"strawberry\");\n    add(\"chocolate\");\n    add(\"butter pecan\");\n}};\n</code></pre>\n\n<p>This idiom creates an anonymous inner class with just an instance initializer in it, which \"can use any [...] methods in the containing scope\".  </p>\n\n<p>Main question: Is this as <strong>inefficient</strong> as it sounds?  Should its use be limited to one-off initializations?  (And of course showing off!)</p>\n\n<p>Second question: The new HashSet must be the \"this\" used in the instance initializer ... can anyone shed light on the mechanism?  </p>\n\n<p>Third question: Is this idiom too <strong>obscure</strong> to use in production code?</p>\n\n<p><strong>Summary:</strong> Very, very nice answers, thanks everyone. On question (3), people felt the syntax should be clear (though I'd recommend an occasional comment, especially if your code will pass on to developers who may not be familiar with it).  </p>\n\n<p>On question (1), the generated code should run quickly. The extra .class files do cause jar file clutter, and slow program startup slightly (thanks to @coobird for measuring that). @Thilo pointed out that garbage collection can be affected, and the memory cost for the extra loaded classes may be a factor in some cases.  </p>\n\n<p>Question (2) turned out to be most interesting to me. If I understand the answers, what's happening in DBI is that the anonymous inner class extends the class of the object being constructed by the new operator, and hence has a \"this\" value referencing the instance being constructed. Very neat.</p>\n\n<p>Overall, DBI strikes me as something of an intellectual curiousity.  Coobird and others point out you can achieve the same effect with Arrays.asList, varargs methods, Google Collections, and the proposed Java 7 Collection literals.  Newer JVM languages like Scala, JRuby, and Groovy also offer concise notations for list construction, and interoperate well with Java.  Given that DBI clutters up the classpath, slows down class loading a bit, and makes the code a tad more obscure, I'd probably shy away from it. However, I plan to spring this on a friend who's just gotten his SCJP and loves good natured jousts about Java semantics!  ;-)  Thanks everyone!</p>\n    ","a":"\n<p>Here's the problem when I get too carried away with anonymous inner classes:</p>\n\n<pre><code>2009/05/27  16:35             1,602 DemoApp2$1.class\n2009/05/27  16:35             1,976 DemoApp2$10.class\n2009/05/27  16:35             1,919 DemoApp2$11.class\n2009/05/27  16:35             2,404 DemoApp2$12.class\n2009/05/27  16:35             1,197 DemoApp2$13.class\n\n/* snip */\n\n2009/05/27  16:35             1,953 DemoApp2$30.class\n2009/05/27  16:35             1,910 DemoApp2$31.class\n2009/05/27  16:35             2,007 DemoApp2$32.class\n2009/05/27  16:35               926 DemoApp2$33$1$1.class\n2009/05/27  16:35             4,104 DemoApp2$33$1.class\n2009/05/27  16:35             2,849 DemoApp2$33.class\n2009/05/27  16:35               926 DemoApp2$34$1$1.class\n2009/05/27  16:35             4,234 DemoApp2$34$1.class\n2009/05/27  16:35             2,849 DemoApp2$34.class\n\n/* snip */\n\n2009/05/27  16:35               614 DemoApp2$40.class\n2009/05/27  16:35             2,344 DemoApp2$5.class\n2009/05/27  16:35             1,551 DemoApp2$6.class\n2009/05/27  16:35             1,604 DemoApp2$7.class\n2009/05/27  16:35             1,809 DemoApp2$8.class\n2009/05/27  16:35             2,022 DemoApp2$9.class\n</code></pre>\n\n<p>These are all classes which were generated when I was making a simple application, and used copious amounts of anonymous inner classes -- each class will be compiled into a separate <code>class</code> file.</p>\n\n<p>The \"double brace initialization\", as already mentioned, is an anonymous inner class with a instance initialization block, which means that a new class is created for each \"initialization\", all for the purpose of usually making a single object.</p>\n\n<p>Considering that the Java Virtual Machine will need to read all those classes when using them, that can lead to some time in the <a href=\"http://java.sun.com/docs/books/jvms/second_edition/html/ClassFile.doc.html#88597\">bytecode verfication</a> process and such. Not to mention the increase in the needed disk space in order to store all those <code>class</code> files.</p>\n\n<p>It seems as if there is a bit of overhead when utilizing double-brace initialization, so it's probably not such a good idea to go too overboard with it. But as Eddie has noted in the comments, it's not possible to be absolutely sure of the impact.</p>\n\n<hr>\n\n<p>Just for reference, double brace initialization is the following:</p>\n\n<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;() {{\n    add(\"Hello\");\n    add(\"World!\");\n}};\n</code></pre>\n\n<p>It looks like a \"hidden\" feature of Java, but it is just a rewrite of:</p>\n\n<pre><code>List&lt;String&gt; list = new ArrayList&lt;String&gt;() {\n\n    // Instance initialization block\n    {\n        add(\"Hello\");\n        add(\"World!\");\n    }\n};\n</code></pre>\n\n<p>So it's basically a <a href=\"http://java.sun.com/docs/books/tutorial/java/javaOO/initial.html\">instance initialization block</a> that is part of an <a href=\"http://java.sun.com/docs/books/tutorial/java/javaOO/innerclasses.html\">anonymous inner class</a>.</p>\n\n<hr>\n\n<p>Joshua Bloch's <a href=\"http://mail.openjdk.java.net/pipermail/coin-dev/2009-March/001193.html\">Collection Literals proposal</a> for <a href=\"http://openjdk.java.net/projects/coin/\">Project Coin</a> was along the lines of:</p>\n\n<pre><code>List&lt;Integer&gt; intList = [1, 2, 3, 4];\n\nSet&lt;String&gt; strSet = {\"Apple\", \"Banana\", \"Cactus\"};\n\nMap&lt;String, Integer&gt; truthMap = { \"answer\" : 42 };\n</code></pre>\n\n<p>Sadly, it <a href=\"http://mail.openjdk.java.net/pipermail/lambda-dev/2014-March/011938.html\">didn't make its way</a> into neither Java 7 nor 8 and was shelved indefinitely.</p>\n\n<hr>\n\n<p><strong>Experiment</strong></p>\n\n<p>Here's the simple experiment I've tested -- make 1000 <code>ArrayList</code>s with the elements <code>\"Hello\"</code> and <code>\"World!\"</code> added to them via the <code>add</code> method, using the two methods:</p>\n\n<p><em>Method 1: Double Brace Initialization</em></p>\n\n<pre><code>List&lt;String&gt; l = new ArrayList&lt;String&gt;() {{\n  add(\"Hello\");\n  add(\"World!\");\n}};\n</code></pre>\n\n<p><em>Method 2: Instantiate an <code>ArrayList</code> and <code>add</code></em></p>\n\n<pre><code>List&lt;String&gt; l = new ArrayList&lt;String&gt;();\nl.add(\"Hello\");\nl.add(\"World!\");\n</code></pre>\n\n<p>I created a simple program to write out a Java source file to perform 1000 initializations using the two methods:</p>\n\n<p><em>Test 1:</em></p>\n\n<pre><code>class Test1 {\n  public static void main(String[] s) {\n    long st = System.currentTimeMillis();\n\n    List&lt;String&gt; l0 = new ArrayList&lt;String&gt;() {{\n      add(\"Hello\");\n      add(\"World!\");\n    }};\n\n    List&lt;String&gt; l1 = new ArrayList&lt;String&gt;() {{\n      add(\"Hello\");\n      add(\"World!\");\n    }};\n\n    /* snip */\n\n    List&lt;String&gt; l999 = new ArrayList&lt;String&gt;() {{\n      add(\"Hello\");\n      add(\"World!\");\n    }};\n\n    System.out.println(System.currentTimeMillis() - st);\n  }\n}\n</code></pre>\n\n<p><em>Test 2:</em></p>\n\n<pre><code>class Test2 {\n  public static void main(String[] s) {\n    long st = System.currentTimeMillis();\n\n    List&lt;String&gt; l0 = new ArrayList&lt;String&gt;();\n    l0.add(\"Hello\");\n    l0.add(\"World!\");\n\n    List&lt;String&gt; l1 = new ArrayList&lt;String&gt;();\n    l1.add(\"Hello\");\n    l1.add(\"World!\");\n\n    /* snip */\n\n    List&lt;String&gt; l999 = new ArrayList&lt;String&gt;();\n    l999.add(\"Hello\");\n    l999.add(\"World!\");\n\n    System.out.println(System.currentTimeMillis() - st);\n  }\n}\n</code></pre>\n\n<p>Please note, that the elapsed time to initialize the 1000 <code>ArrayList</code>s and the 1000 anonymous inner classes extending <code>ArrayList</code> is checked using the <code>System.currentTimeMillis</code>, so the timer does not have a very high resolution. On my Windows system, the resolution is around 15-16 milliseconds.</p>\n\n<p>The results for 10 runs of the two tests were the following:</p>\n\n<pre><code>Test1 Times (ms)           Test2 Times (ms)\n----------------           ----------------\n           187                          0\n           203                          0\n           203                          0\n           188                          0\n           188                          0\n           187                          0\n           203                          0\n           188                          0\n           188                          0\n           203                          0\n</code></pre>\n\n<p>As can be seen, the double brace initialization has a noticeable execution time of around 190 ms.</p>\n\n<p>Meanwhile, the <code>ArrayList</code> initialization execution time came out to be 0 ms. Of course, the timer resolution should be taken into account, but it is likely to be under 15 ms seconds.</p>\n\n<p>So, there seems to be a noticeable difference in the execution time of the two methods. It does appear that there is indeed some overhead in the two initialization methods.</p>\n\n<p>And yes, there were 1000 <code>.class</code> files generated by compiling the <code>Test1</code> double brace initialization test program.</p>\n    "},{"t":"What's the difference between @Component, @Repository & @Service annotations in Spring?","l":"http://stackoverflow.com/questions/6827752/whats-the-difference-between-component-repository-service-annotations-in","q":"\n\n<p>Can <code>@Component</code>, <code>@Repository</code> &amp; <code>@Service</code> annotations be used interchangeably in Spring or do they provide any particular functionality besides acting as a notation device?</p>\n\n<p>In other words, if I have a Service class and I change the annotation from <code>@Service</code> to <code>@Component</code>, will it still behave the same way? </p>\n\n<p>Or does the annotation also influence the behavior and functionality of the class?</p>\n    ","a":"\n<p>From <a href=\"http://docs.spring.io/spring-framework/docs/current/spring-framework-reference/html/beans.html#beans-stereotype-annotations\">Spring Documentation</a>:</p>\n\n<blockquote>\n  <p>In Spring 2.0 and later, the @Repository annotation is a marker for\n  any class that fulfills the role or stereotype (also known as Data\n  Access Object or DAO) of a repository. Among the uses of this marker\n  is the automatic translation of exceptions.</p>\n  \n  <p>Spring 2.5 introduces further stereotype annotations: @Component,\n  @Service, and @Controller. @Component is a generic stereotype for any\n  Spring-managed component. @Repository, @Service, and @Controller are\n  specializations of @Component for more specific use cases, for\n  example, in the persistence, service, and presentation layers,\n  respectively.</p>\n  \n  <p>Therefore, you can annotate your component classes with @Component,\n  but by annotating them with @Repository, @Service, or @Controller\n  instead, your classes are more properly suited for processing by tools\n  or associating with aspects. For example, these stereotype annotations\n  make ideal targets for pointcuts.</p>\n  \n  <p>Thus, if you are choosing between using @Component or @Service for\n  your service layer, @Service is clearly the better choice. Similarly,\n  as stated above, @Repository is already supported as a marker for\n  automatic exception translation in your persistence layer.</p>\n</blockquote>\n\n<pre><code>| Annotation | Meaning                                             |\n+------------+-----------------------------------------------------+\n| @Component | generic stereotype for any Spring-managed component |\n| @Repository| stereotype for persistence layer                    |\n| @Service   | stereotype for service layer                        |\n| @Controller| stereotype for presentation layer (spring-mvc)      |\n</code></pre>\n    "},{"t":"Why does Math.round(0.49999999999999994) return 1","l":"http://stackoverflow.com/questions/9902968/why-does-math-round0-49999999999999994-return-1","q":"\n\n<p>In the following program you can see that for each value slightly less that .5 is rounded down, except for 0.5.</p>\n\n<pre><code>for (int i = 10; i &gt;= 0; i--) {\n    long l = Double.doubleToLongBits(i + 0.5);\n    double x;\n    do {\n        x = Double.longBitsToDouble(l);\n        System.out.println(x + \" rounded is \" + Math.round(x));\n        l--;\n    } while (Math.round(x) &gt; i);\n}\n</code></pre>\n\n<p>prints</p>\n\n<pre><code>10.5 rounded is 11\n10.499999999999998 rounded is 10\n9.5 rounded is 10\n9.499999999999998 rounded is 9\n8.5 rounded is 9\n8.499999999999998 rounded is 8\n7.5 rounded is 8\n7.499999999999999 rounded is 7\n6.5 rounded is 7\n6.499999999999999 rounded is 6\n5.5 rounded is 6\n5.499999999999999 rounded is 5\n4.5 rounded is 5\n4.499999999999999 rounded is 4\n3.5 rounded is 4\n3.4999999999999996 rounded is 3\n2.5 rounded is 3\n2.4999999999999996 rounded is 2\n1.5 rounded is 2\n1.4999999999999998 rounded is 1\n0.5 rounded is 1\n0.49999999999999994 rounded is 1\n0.4999999999999999 rounded is 0\n</code></pre>\n\n<p>I am using Java 6 update 31.</p>\n    ","a":"\n<p><strong>Summary</strong></p>\n\n<p>In Java 6 (and presumably earlier), <code>round(x)</code> is implemented as <code>floor(x+0.5)</code>.<sup>1</sup>   This is a specification bug, for precisely this one pathological case.<sup>2</sup>  Java 7 no longer mandates this broken implementation.<sup>3</sup></p>\n\n<p><strong>The problem</strong></p>\n\n<p>0.5+0.49999999999999994 is exactly 1 in double precision:</p>\n\n<pre><code>static void print(double d) {\n    System.out.printf(\"%016x\\n\", Double.doubleToLongBits(d));\n}\n\npublic static void main(String args[]) {\n    double a = 0.5;\n    double b = 0.49999999999999994;\n\n    print(a);      // 3fe0000000000000\n    print(b);      // 3fdfffffffffffff\n    print(a+b);    // 3ff0000000000000\n    print(1.0);    // 3ff0000000000000\n}\n</code></pre>\n\n<p>This is because 0.49999999999999994 has a smaller exponent than 0.5, so when they're added, its mantissa is shifted, and the ULP gets bigger.</p>\n\n<p><strong>The solution</strong></p>\n\n<p>Since Java 7, OpenJDK (for example) implements it thus:<sup>4</sup></p>\n\n<pre><code>public static long round(double a) {\n    if (a != 0x1.fffffffffffffp-2) // greatest double value less than 0.5\n        return (long)floor(a + 0.5d);\n    else\n        return 0;\n}\n</code></pre>\n\n<hr>\n\n<p><sub>\n1. <a href=\"http://docs.oracle.com/javase/6/docs/api/java/lang/Math.html#round%28double%29\">http://docs.oracle.com/javase/6/docs/api/java/lang/Math.html#round%28double%29</a>\n</sub></p>\n\n<p><sub>\n2. <a href=\"http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6430675\">http://bugs.java.com/bugdatabase/view_bug.do?bug_id=6430675</a> (credits to @SimonNickerson for finding this)\n</sub></p>\n\n<p><sub>\n3. <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#round%28double%29\">http://docs.oracle.com/javase/7/docs/api/java/lang/Math.html#round%28double%29</a>\n</sub></p>\n\n<p><sub>\n4. <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/java/lang/Math.java#Math.round%28double%29\">http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/7u40-b43/java/lang/Math.java#Math.round%28double%29</a>\n</sub></p>\n    "},{"t":"When and how should I use a ThreadLocal variable?","l":"http://stackoverflow.com/questions/817856/when-and-how-should-i-use-a-threadlocal-variable","q":"\n\n<p>When should I use a <code>ThreadLocal</code> variable?</p>\n\n<p>How is it used?</p>\n    ","a":"\n<p>One possible (and common) use is when you have some object that is not thread-safe, but you want to avoid synchronizing access to that object (I'm looking at you, <a href=\"http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat</a>).  Instead, give each thread its own instance of the object.</p>\n\n<p>For example:</p>\n\n<pre><code>public class Foo\n{\n    // SimpleDateFormat is not thread-safe, so give one to each thread\n    private static final ThreadLocal&lt;SimpleDateFormat&gt; formatter = new ThreadLocal&lt;SimpleDateFormat&gt;(){\n        @Override\n        protected SimpleDateFormat initialValue()\n        {\n            return new SimpleDateFormat(\"yyyyMMdd HHmm\");\n        }\n    };\n\n    public String formatIt(Date date)\n    {\n        return formatter.get().format(date);\n    }\n}\n</code></pre>\n    "},{"t":"How to create a generic array in Java?","l":"http://stackoverflow.com/questions/529085/how-to-create-a-generic-array-in-java","q":"\n\n<p>Due to the implementation of Java generics, you can't have code like this: </p>\n\n<pre><code>public class GenSet&lt;E&gt; {\n    private E a[];\n\n    public GenSet() {\n        a = new E[INITIAL_ARRAY_LENGTH]; // error: generic array creation\n    }\n}\n</code></pre>\n\n<p>How can I implement this while maintaining type safety?</p>\n\n<p>I saw a solution on the Java forums that goes like this:</p>\n\n<pre><code>import java.lang.reflect.Array;\n\nclass Stack&lt;T&gt; {\n    public Stack(Class&lt;T&gt; clazz, int capacity) {\n        array = (T[])Array.newInstance(clazz, capacity);\n    }\n\n    private final T[] array;\n}\n</code></pre>\n\n<p>But I really don't get what's going on. Can anyone help?</p>\n    ","a":"\n<p>I have to ask a question in return: is your <code>GenSet</code> \"checked\" or \"unchecked\"?\nWhat does that mean?</p>\n\n<ul>\n<li><p><strong>Checked</strong>: <em>strong typing</em>. <code>GenSet</code> knows explicitly what type of objects it contains (i.e. its constructor was explicitly called with a <code>Class&lt;E&gt;</code> argument, and methods will throw an exception when they are passed arguments that are not of type <code>E</code>. See <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#checkedCollection%28java.util.Collection,%20java.lang.Class%29\"><code>Collections.checkedCollection</code></a>.</p>\n\n<p>-&gt; in that case, you should write:</p>\n\n<pre><code>public class GenSet&lt;E&gt; {\n\n    private E[] a;\n\n    public GenSet(Class&lt;E&gt; c, int s) {\n        // Use Array native method to create array\n        // of a type only known at run time\n        @SuppressWarnings(\"unchecked\")\n        final E[] a = (E[]) Array.newInstance(c, s);\n        this.a = a;\n    }\n\n    E get(int i) {\n        return a[i];\n    }\n}\n</code></pre></li>\n<li><p><strong>Unchecked</strong>: <em>weak typing</em>. No type checking is actually done on any of the objects passed as argument.</p>\n\n<p>-&gt; in that case, you should write</p>\n\n<pre><code>public class GenSet&lt;E&gt; {\n\n    private Object[] a;\n\n    public GenSet(int s) {\n        a = new Object[s];\n    }\n\n    E get(int i) {\n        @SuppressWarnings(\"unchecked\")\n        final E e = (E) a[i];\n        return e;\n    }\n}\n</code></pre>\n\n<p>Note that the component type of the array should be the <a href=\"http://docs.oracle.com/javase/tutorial/java/generics/erasure.html\"><em>erasure</em></a> of the type parameter:</p>\n\n<pre><code>public class GenSet&lt;E extends Foo&gt; { // E has an upper bound of Foo\n\n    private Foo[] a; // E erases to Foo, so use Foo[]\n\n    public GenSet(int s) {\n        a = new Foo[s];\n    }\n\n    ...\n}\n</code></pre></li>\n</ul>\n\n<p>All of this results from a known, and deliberate, weakness of generics in Java: it was implemented using erasure, so \"generic\" classes don't know what type argument they were created with at run time, and therefore can not provide type-safety unless some explicit mechanism (type-checking) is implemented.</p>\n    "},{"t":"decompiling DEX into Java sourcecode","l":"http://stackoverflow.com/questions/1249973/decompiling-dex-into-java-sourcecode","q":"\n\n<p>How can one decompile Android DEX (VM bytecode) files into corresponding Java sourcecode?</p>\n    ","a":"\n<h1>It's easy</h1>\n\n<p>Get these tools:</p>\n\n<p>1) <a href=\"http://code.google.com/p/dex2jar/\">dex2jar</a>, which is made by a Chinese student. It will translate dex files to jar files</p>\n\n<p>2) <a href=\"http://jd.benow.ca/\">jd-gui</a> to view the java files in the jar</p>\n\n<p>The source code is quite readable as dex2jar makes some optimizations. </p>\n\n<h2>Procedure:</h2>\n\n<p>And here's the procedure on how to decompile:</p>\n\n<h2>Step 1:</h2>\n\n<p>Convert classes.dex in test_apk-debug.apk to test_apk-debug_dex2jar.jar</p>\n\n<pre><code>d2j-dex2jar.sh -f -o output_jar.jar apk_to_decompile.apk\n</code></pre>\n\n<blockquote>\n  <p><strong>Note:</strong> In the Windows machines all the <code>.sh</code> scripts are replaced by <code>.bat</code> scripts</p>\n</blockquote>\n\n<p><a href=\"http://code.google.com/p/dex2jar/wiki/ModifyApkWithDexTool\">dex2jar documentation</a></p>\n\n<h2>Step 2:</h2>\n\n<p>Open the jar in JD-GUI</p>\n\n<p><a href=\"http://i.stack.imgur.com/PWJIX.png\"><img src=\"http://i.stack.imgur.com/PWJIX.png\" alt=\"The decompiled source\"></a></p>\n    "},{"t":"Eclipse: Set maximum line length for auto formatting?","l":"http://stackoverflow.com/questions/3697287/eclipse-set-maximum-line-length-for-auto-formatting","q":"\n\n<p>I am working with Java. If I hit <kbd>Ctrl</kbd>+<kbd>Shift</kbd>+<kbd>F</kbd> in Eclipse Helios, it will auto format my code. At a certain point, it wraps lines. I would like to increase the maximum line length. How can I do this?</p>\n    ","a":"\n<p>In preferences <strong>Java -&gt; Code Style -&gt; Formatter</strong>, edit the profile. Under the Line Wrapping tab is the option for line width (Maximum line width:). you will need to make your own profile.</p>\n    "},{"t":"What is the equivalent of the C++ Pair<L,R> in Java?","l":"http://stackoverflow.com/questions/156275/what-is-the-equivalent-of-the-c-pairl-r-in-java","q":"\n\n<p>Is there a good reason why there is no Pair in Java? What would be the equivalent of this C++ construct? I would rather avoid reimplementing my own.</p>\n\n<p>It seems that 1.6 is providing something similar (AbstractMap.SimpleEntry), but this looks quite convoluted.</p>\n    ","a":"\n<p>In <a href=\"http://groups.google.com/group/comp.lang.java.help/browse_thread/thread/f8b63fc645c1b487/1d94be050cfc249b\">a thread on <code>comp.lang.java.help</code></a>, Hunter Gratzner gives some arguments against the presence of a <code>Pair</code> construct in Java. The main argument is that a class <code>Pair</code> doesn't convey any semantics about the relationship between the two values (how do you know what \"first\" and \"second\" mean ?).</p>\n\n<p>A better practice is to write a very simple class, like the one Mike proposed, for each application you would have made of the <code>Pair</code> class. <code>Map.Entry</code> is an example of a pair that carry its meaning in its name.</p>\n\n<p>To sum up, in my opinion it is better to have a class <code>Position(x,y)</code>, a class <code>Range(begin,end)</code> and a class <code>Entry(key,value)</code> rather than a generic <code>Pair(first,second)</code> that doesn't tell me anything about what it's supposed to do.</p>\n    "},{"t":"What is the difference between a soft reference and a weak reference in Java?","l":"http://stackoverflow.com/questions/299659/what-is-the-difference-between-a-soft-reference-and-a-weak-reference-in-java","q":"\n\n<p>The title pretty much sums it.</p>\n    ","a":"\n<p>From <a href=\"http://weblogs.java.net/blog/enicholas/archive/2006/05/understanding_w.html\">Understanding Weak References</a>, by Ethan Nicholas:</p>\n\n<blockquote>\n  <p><strong>Weak references</strong></p>\n  \n  <p>A <em>weak reference</em>, simply put, is a\n  reference that isn't strong enough to\n  force an object to remain in memory.\n  Weak references allow you to leverage\n  the garbage collector's ability to\n  determine reachability for you, so you\n  don't have to do it yourself. You\n  create a weak reference like this:</p>\n\n<pre><code>WeakReference weakWidget = new WeakReference(widget);\n</code></pre>\n  \n  <p>and then\n  elsewhere in the code you can use\n  <code>weakWidget.get()</code> to get the actual\n  <code>Widget</code> object. Of course the weak\n  reference isn't strong enough to\n  prevent garbage collection, so you may\n  find (if there are no strong\n  references to the widget) that\n  <code>weakWidget.get()</code> suddenly starts\n  returning <code>null</code>.</p>\n  \n  <p>...</p>\n  \n  <p><strong>Soft references</strong></p>\n  \n  <p>A <em>soft reference</em> is exactly like a\n  weak reference, except that it is less\n  eager to throw away the object to\n  which it refers. An object which is\n  only weakly reachable (the strongest\n  references to it are <code>WeakReferences</code>)\n  will be discarded at the next garbage\n  collection cycle, but an object which\n  is softly reachable will generally\n  stick around for a while.</p>\n  \n  <p><code>SoftReferences</code> aren't <em>required</em> to\n  behave any differently than\n  <code>WeakReferences</code>, but in practice softly\n  reachable objects are generally\n  retained as long as memory is in\n  plentiful supply. This makes them an\n  excellent foundation for a cache, such\n  as the image cache described above,\n  since you can let the garbage\n  collector worry about both how\n  reachable the objects are (a strongly\n  reachable object will <em>never</em> be removed\n  from the cache) and how badly it needs\n  the memory they are consuming.</p>\n</blockquote>\n\n<p>And <a href=\"http://weblogs.java.net/blog/peterkessler/\">Peter Kessler</a> added in a comment:</p>\n\n<blockquote>\n  <p>The Sun JRE does treat SoftReferences differently from WeakReferences. We attempt to hold on to object referenced by a SoftReference if there isn't pressure on the available memory. One detail: the policy for the \"-client\" and \"-server\" JRE's are different: the -client JRE tries to keep your footprint small by preferring to clear SoftReferences rather than expand the heap, whereas the -server JRE tries to keep your performance high by preferring to expand the heap (if possible) rather than clear SoftReferences. One size does not fit all.</p>\n</blockquote>\n    "},{"t":"How do I “decompile” Java class files?","l":"http://stackoverflow.com/questions/272535/how-do-i-decompile-java-class-files","q":"\n\n<p>What program can I use to decompile a class file? Will I actually get Java code, or is it just JVM assembly code?</p>\n\n<p>On Java performance questions on this site I often see responses from people who have \"decompiled\" the Java class file to see how the compiler optimizes certain things.</p>\n    ","a":"\n<ul>\n<li>The final release of JSR 176, defining the major features of J2SE 5.0 (Java SE 5), has been published on September 30, 2004.</li>\n<li>The lastest Java version supported by JAD, the famous Java decompiler written by Mr. Pavel Kouznetsov, is <strong><a href=\"http://varaneckas.com/jad/\">JDK 1.3</a></strong>.</li>\n<li>Most of the Java decompilers downloadable today from the Internet, such as “DJ Java Decompiler” or “Cavaj Java Decompiler”, are powered by JAD: they can not display Java 5 sources.</li>\n</ul>\n\n<p><a href=\"http://jd.benow.ca/\">Java Decompiler</a> (Yet another Fast Java decompiler) has:</p>\n\n<ul>\n<li>Explicit support for decompiling and analyzing <strong>Java 5+</strong> “.class” files.</li>\n<li>A nice GUI:</li>\n</ul>\n\n<p><img src=\"http://i.stack.imgur.com/jH9Pd.png\" alt=\"screenshot\"></p>\n\n<p>It works with compilers from JDK 1.1.8 up to JDK 1.7.0, and others (<a href=\"https://en.wikipedia.org/wiki/Jikes\">Jikes</a>, <a href=\"https://en.wikipedia.org/wiki/JRockit\">JRockit</a>, etc.). </p>\n\n<p>It features an online <a href=\"http://jd.benow.ca/#jd-online\">live demo version</a> that is actually fully functional! You can just drop a jar file on the page and see the decompiled source code without installing anything.</p>\n    "},{"t":"How to create a file and write to a file in Java?","l":"http://stackoverflow.com/questions/2885173/how-to-create-a-file-and-write-to-a-file-in-java","q":"\n\n<p>What's the simplest way to create and write to a (text) file in Java?</p>\n    ","a":"\n<p>Creating a text file (note that this will overwrite the file if it already exists):</p>\n\n<pre><code>PrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\");\nwriter.println(\"The first line\");\nwriter.println(\"The second line\");\nwriter.close();\n</code></pre>\n\n<p>Creating a binary file (will also overwrite the file):</p>\n\n<pre><code>byte dataToWrite[] = //...\nFileOutputStream out = new FileOutputStream(\"the-file-name\");\nout.write(dataToWrite);\nout.close();\n</code></pre>\n    "},{"t":"What is the difference between JSF, Servlet and JSP?","l":"http://stackoverflow.com/questions/2095397/what-is-the-difference-between-jsf-servlet-and-jsp","q":"\n\n<p>How are JSP and Servlet related to each other? Is JSP some kind of Servlet? How are JSP and JSF related to each other? Is JSF some kind of prebuild UI based JSP like ASP.NET-MVC?</p>\n    ","a":"\n<h3><a href=\"http://stackoverflow.com/tags/jsp/info\">JSP (JavaServer Pages)</a></h3>\n\n<p>JSP is a <strong>Java view technology</strong> running on the server machine which allows you to write template text in (the client side languages like HTML, CSS, JavaScript and so on). JSP supports <a href=\"http://docs.oracle.com/javaee/5/tutorial/doc/bnann.html\">taglibs</a>, which are backed by pieces of Java code that let you control the page flow or output dynamically. A well known taglib is <a href=\"http://stackoverflow.com/tags/jstl/info\">JSTL</a>. JSP also supports <a href=\"http://stackoverflow.com/tags/el/info\">Expression Language</a>, which can be used to access backend data (via attributes available in page, request, session and application scopes), mostly in combination with taglibs.</p>\n\n<p>When a JSP is requested for the first time or when the webapp starts up, the servlet container will compile it into a class extending <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html\"><code>HttpServlet</code></a> and use it during the webapp's lifetime. You can find the generated source code in the server's work directory. In for example <a href=\"http://tomcat.apache.org\">Tomcat</a>, it's the <code>/work</code> directory. On a JSP request, the servlet container will execute the compiled JSP class and send the generated output (usually just HTML/CSS/JS) through the webserver over network to the client side, which in turn displays it in the web browser.</p>\n\n<h3><a href=\"http://stackoverflow.com/tags/servlets/info\">Servlets</a></h3>\n\n<p>Servlet is an <strong>Java application programming interface (API)</strong> running on the server machine, which intercepts requests made by the client and generates/sends a response. A well known example is the <code>HttpServlet</code> which provides methods to hook on <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616.html\">HTTP</a> requests using the popular <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html\">HTTP methods</a> such as <code>GET</code> and <code>POST</code>. You can configure <code>HttpServlet</code>s to listen on a certain HTTP URL pattern, which is configurable in <code>web.xml</code>, or more recently with <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/bnafd.html\">Java EE 6</a>, with <code>@WebServlet</code> annotation.</p>\n\n<p>When a Servlet is first requested or during webapp startup, the servlet container will create an instance of it and keep it in memory during the webapp's lifetime. The same instance will be reused for every incoming request whose URL matches the servlet's URL pattern. You can access the request data by <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html\"><code>HttpServletRequest</code></a> and handle the response by <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletResponse.html\"><code>HttpServletResponse</code></a>. Both objects are available as method arguments inside any of the overridden methods of <code>HttpServlet</code>, such as <code>doGet()</code> and <code>doPost()</code>.</p>\n\n<h3><a href=\"http://stackoverflow.com/tags/jsf/info\">JSF (JavaServer Faces)</a></h3>\n\n<p>JSF is a <strong>component based MVC framework</strong> which is built on top of the Servlet API, and provides <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/bnarf.html\">components</a> via taglibs which can be used in JSP or any other Java based view technology such as <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/giepx.html\">Facelets</a>. Facelets is much more suited to JSF than JSP. It namely provides great <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/giqxp.html\">templating capabilities</a> such as <a href=\"http://docs.oracle.com/javaee/6/tutorial/doc/giqzr.html\">composite components</a>, while JSP basically only offers the <a href=\"http://java.sun.com/products/jsp/syntax/2.0/syntaxref2020.html#8828\"><code>&lt;jsp:include&gt;</code></a> for templating, so that you're forced to create custom components with raw Java code (which is a bit opaque and a lot of tedious work in JSF) when you want to replace a repeated group of components with a single component. Since JSF 2.0, JSP has been deprecated as view technology in favor of Facelets.</p>\n\n<p>As being a MVC (<a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\">Model-View-Controller</a>) framework, JSF provides the <a href=\"http://docs.oracle.com/javaee/6/api/javax/faces/webapp/FacesServlet.html\"><code>FacesServlet</code></a> as the sole request-response <em>Controller</em>. It takes all the standard and tedious HTTP request/response work from your hands, such as gathering user input, validating/converting them, putting them in model objects, invoking actions and rendering the response. This way you end up with basically a JSP or Facelets (XHTML) page for <em>View</em> and a Javabean class as <em>Model</em>. The JSF components are been used to bind the view with the model (such as your ASP.NET web control does) and the <code>FacesServlet</code> uses the <em>JSF component tree</em> to do all the work.</p>\n\n<h3>Related questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2556553/what-is-the-main-stream-java-alternative-to-asp-net-php\">What is the main-stream Java alternative to ASP.NET / PHP?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1958808/java-web-development-what-skills-do-i-need\">Java EE web development, what skills do I need?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3106452/java-servlet-instantiation-and-session-variables\">How do servlets work? Instantiation, session variables and multithreading</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1727603/places-where-java-beans-used\">What is a Javabean and where are they used?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/3177733/howto-avoid-java-code-in-jsp-files\">How to avoid Java code in JSP files?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/5104094/what-components-are-mvc-in-jsf-mvc-framework\">What components are MVC in JSF MVC framework?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/4421839/what-is-the-need-of-jsf-when-ui-can-be-achieved-from-css-html-javascript-jquery/\">What is the need of JSF. When UI can be achieved from css html javascript jQuery?</a></li>\n</ul>\n    "},{"t":"Useful Eclipse Java Code Templates [closed]","l":"http://stackoverflow.com/questions/1028858/useful-eclipse-java-code-templates","q":"\n\n<p>You can create various Java code templates in Eclipse via the </p>\n\n<pre><code>Window-&gt;Preferences-&gt;Java -&gt; Editor -&gt; Templates\n</code></pre>\n\n<p>e.g.</p>\n\n<p><code>sysout</code> is expanded to:</p>\n\n<pre><code>System.out.println(${word_selection}${});${cursor}\n</code></pre>\n\n<p>You can activate this by typing <code>sysout</code> followed by <code>CTRL+SPACE</code></p>\n\n<p>What useful Java code templates do you currently use?<br>\nInclude the name and description of it and why it's awesome.</p>\n\n<p>There's an open bounty on this for an original/novel use of a template rather than a built-in existing feature.</p>\n\n<ul>\n<li>Create Log4J logger</li>\n<li>Get swt color from display</li>\n<li>Syncexec - Eclipse Framework</li>\n<li>Singleton Pattern/Enum Singleton Generation</li>\n<li>Readfile</li>\n<li>Const</li>\n<li>Traceout</li>\n<li>Format String</li>\n<li>Comment Code Review</li>\n<li>String format</li>\n<li>Try Finally Lock</li>\n<li>Message Format i18n and log</li>\n<li>Equalsbuilder</li>\n<li>Hashcodebuilder</li>\n<li>Spring Object Injection</li>\n<li>Create FileOutputStream</li>\n</ul>\n    ","a":"\n<p><em>Create Log4J logger</em>:</p>\n\n<pre><code>${:import(org.apache.log4j.Logger)}\nprivate static final Logger LOGGER = Logger.getLogger(${enclosing_type}.class);\n</code></pre>\n\n<p>It both creates the Logger with a proper category <em>and</em> imports it.</p>\n\n<p><em>For those using SLF4J</em>:</p>\n\n<pre><code>${:import(org.slf4j.Logger,org.slf4j.LoggerFactory)}\nprivate static final Logger LOGGER = LoggerFactory.getLogger(${enclosing_type}.class);\n</code></pre>\n\n<p><a href=\"http://matthew.mceachen.us/blog/simple-log4j-eclipse-template-346.html\">Source</a>.</p>\n    "},{"t":"What is an efficient way to implement a singleton pattern in Java?","l":"http://stackoverflow.com/questions/70689/what-is-an-efficient-way-to-implement-a-singleton-pattern-in-java","q":"\n\n<p>What is an efficient way to implement a singleton pattern in Java?</p>\n    ","a":"\n<p>Use an enum:</p>\n\n<pre><code>public enum Foo {\n    INSTANCE;\n}\n</code></pre>\n\n<p>Joshua Bloch explained this approach in his <a href=\"http://sites.google.com/site/io/effective-java-reloaded\">Effective Java Reloaded</a> talk at Google I/O 2008: <a href=\"http://www.youtube.com/watch?v=pi_I7oD_uGI#t=28m50s\">link to video</a>. Also see slides 30-32 of his presentation (<a href=\"https://14b1424d-a-62cb3a1a-s-sites.googlegroups.com/site/io/effective-java-reloaded/effective_java_reloaded.pdf?attachauth=ANoY7crKCOet2NEUGW7RV1XfM-Jn4z8YJhs0qJM11OhLRnFW_JbExkJtvJ3UJvTE40dhAciyWcRIeGJ-n3FLGnMOapHShHINh8IY05YViOJoZWzaohMtM-s4HCi5kjREagi8awWtcYD0_6G7GhKr2BndToeqLk5sBhZcQfcYIyAE5A4lGNosDCjODcBAkJn8EuO6572t2wU1LMSEUgjvqcf4I-Fp6VDhDvih_XUEmL9nuVJQynd2DRpxyuNH1SpJspEIdbLw-WWZ&amp;attredirects=0\">effective_java_reloaded.pdf</a>):</p>\n\n<blockquote>\n  <h3>The Right Way to Implement a Serializable Singleton</h3>\n\n<pre><code>public enum Elvis {\n    INSTANCE;\n    private final String[] favoriteSongs =\n        { \"Hound Dog\", \"Heartbreak Hotel\" };\n    public void printFavorites() {\n        System.out.println(Arrays.toString(favoriteSongs));\n    }\n}\n</code></pre>\n</blockquote>\n\n<p><strong>Edit:</strong> An <a href=\"http://www.ddj.com/java/208403883?pgno=3\">online portion of \"Effective Java\"</a> says: </p>\n\n<blockquote>\n  <p>\"This approach is functionally equivalent to the public field approach, except that it is more concise, provides the serialization machinery for free, and provides an ironclad guarantee against multiple instantiation, even in the face of sophisticated serialization or reflection attacks. While this approach has yet to be widely adopted, <strong>a single-element enum type is the best way to implement a singleton</strong>.\"</p>\n</blockquote>\n    "},{"t":"How to split a string in Java","l":"http://stackoverflow.com/questions/3481828/how-to-split-a-string-in-java","q":"\n\n<p>I have a string, <code>\"004-034556\"</code>, that I want to split into two strings:</p>\n\n<pre><code>string1=004\nstring2=034556\n</code></pre>\n\n<p>That means the first string will contain the characters before <code>'-'</code>, and the second string will contain the characters after <code>'-'</code>. I also want to check if the string has <code>'-'</code> in it. If not, I will throw an exception. How can I do this?</p>\n    ","a":"\n<p>Just use the appropriate method: <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#split-java.lang.String-\"><code>String#split()</code></a>.</p>\n\n<pre><code>String string = \"004-034556\";\nString[] parts = string.split(\"-\");\nString part1 = parts[0]; // 004\nString part2 = parts[1]; // 034556\n</code></pre>\n\n<p>Note that this takes a <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#sum\">regular expression</a>, so remember to escape special characters if necessary, e.g. if you want to split on period <code>.</code> which means \"any character\" in regex, use either <code>split(\"\\\\.\")</code> or <code>split(Pattern.quote(\".\"))</code>.</p>\n\n<p>To test beforehand if the string contains a <code>-</code>, just use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#contains-java.lang.CharSequence-\"><code>String#contains()</code></a>.</p>\n\n<pre><code>if (string.contains(\"-\")) {\n    // Split it.\n} else {\n    throw new IllegalArgumentException(\"String \" + string + \" does not contain -\");\n}\n</code></pre>\n\n<p>No, this does not take a regular expression.</p>\n    "},{"t":"Which @NotNull Java annotation should I use?","l":"http://stackoverflow.com/questions/4963300/which-notnull-java-annotation-should-i-use","q":"\n\n<p>I'm looking to make my code more readable as well as use tooling like IDE code inspection and/or static code analysis (FindBugs and Sonar) to avoid NullPointerExceptions.  Many of the tools seem incompatible with each others' <code>@NotNull</code>/<code>@NonNull</code>/<code>@Nonnull</code> annotation and listing all of them in my code would be terrible to read.  Any suggestions of which one is the 'best'?  Here is the list of equivalent annotations I've found:</p>\n\n<ul>\n<li><p><strong><code>javax.validation.constraints.NotNull</code></strong><br>\n<em>Created for runtime validation, not static analysis.</em><br>\n<a href=\"http://download.oracle.com/javaee/6/api/javax/validation/constraints/NotNull.html\">documentation</a></p></li>\n<li><p><strong><code>edu.umd.cs.findbugs.annotations.NonNull</code></strong><br>\n<em>Used by Findbugs static analysis and therefore Sonar</em><br>\n<a href=\"http://findbugs.sourceforge.net/manual/annotations.html\">documentation</a></p></li>\n<li><p><strong><code>javax.annotation.Nonnull</code></strong><br>\n<em>This might work with Findbugs too, but JSR-305 is inactive.</em><br>\n<a href=\"http://code.google.com/p/jsr-305/source/browse/trunk/ri/src/main/java/javax/annotation/Nonnull.java\">source</a></p></li>\n<li><p><strong><code>com.intellij.annotations.NotNull</code></strong><br>\n<em>Used by IntelliJ IDEA IDE for static analysis.</em><br>\n<a href=\"http://www.jetbrains.com/idea/webhelp/nullable-and-notnull-annotations.html\">documentation</a></p></li>\n<li><p><strong><code>lombok.NonNull</code></strong><br>\n<em>Used to control code generation in Project Lombok.</em><br>\n<em>Placeholder annotation since there is no standard.</em><br>\n<a href=\"https://github.com/rzwitserloot/lombok/blob/master/src/core/lombok/NonNull.java\">source</a>, \n<a href=\"http://projectlombok.org/features/GetterSetter.html\">documentation</a></p></li>\n</ul>\n    ","a":"\n<p>I would only use things under the <code>javax</code> namespace (even though I love what Lombok and IntelliJ are doing). Otherwise, you might be creating a dependency on something other than what the run-time gives you for something that is pretty much <em>semantics</em>. Maybe for some projects, that's ok, but that'd be a deal-breaker for me.</p>\n\n<p>I would use <code>javax.validation.constraints.NotNull</code> because that's already here with Java EE 6. </p>\n\n<p>The <code>javax.annotation.NonNull</code> might not be here until Java 8 (as Stephen pointed out). And the others are not standard annotations.</p>\n\n<p>It would have been nice if annotations were extensible. That way you could define your own <code>non-null</code> annotation inheriting/extending from anything. Then when standards get ironed out, all you would have to do would be to redefine your own custom annotation.</p>\n\n<p>Unfortunately that's not the case.</p>\n    "},{"t":"How to call SOAP web service in Android","l":"http://stackoverflow.com/questions/297586/how-to-call-soap-web-service-in-android","q":"\n\n<p>I am having a lot of trouble finding good information on how to call a standard SOAP/WSDL web service with Android. All I've been able to find are either very convoluted documents and references to \"kSoap2\" and then some bit about parsing it all manually with <a href=\"http://en.wikipedia.org/wiki/Simple_API_for_XML\">SAX</a>. OK, that's fine, but it's 2008 so I figured there should be some good library for calling standard web services.</p>\n\n<p>The web service is just basically one created in <a href=\"http://en.wikipedia.org/wiki/NetBeans\">NetBeans</a>. I would like to have IDE support for generating the plumbing classes. I just need the easiest/most-elegant way to contact a <a href=\"http://en.wikipedia.org/wiki/Web_Services_Description_Language\">WSDL</a> based web service from an Android based phone.</p>\n    ","a":"\n<p>Android does not provide any sort of SOAP library. You can either write your own, or use something like <a href=\"http://ksoap2.sourceforge.net/\">kSOAP 2</a>. As you note, others have been able to compile and use kSOAP2 in their own projects, but I haven't had to.</p>\n\n<p>Google has shown, to date, little interest in adding a SOAP library to Android. My suspicion for this is that they'd rather support the current trends in Web Services toward REST-based services, and using JSON as a data encapsulation format. Or, using XMPP for messaging. But that is just conjecture.</p>\n\n<p>XML-based web services are a slightly non-trivial task on Android at this time. Not knowing NetBeans, I can't speak to the tools available there, but I agree that a better library should be available. It is possible that the XmlPullParser will save you from using SAX, but I don't know much about that.</p>\n    "},{"t":"for loop to iterate over enum in Java?","l":"http://stackoverflow.com/questions/1104975/for-loop-to-iterate-over-enum-in-java","q":"\n\n<p>I have an <code>enum</code> in Java for the cardinal &amp; intermediate directions:</p>\n\n<pre><code>public enum Direction {\n   NORTH,\n   NORTHEAST,\n   EAST,\n   SOUTHEAST,\n   SOUTH,\n   SOUTHWEST,\n   WEST,\n   NORTHWEST\n}\n</code></pre>\n\n<p>How can I write a <code>for</code> loop that iterates through each of these <code>enum</code> values?</p>\n    ","a":"\n<h1><code>.values()</code></h1>\n\n<p>You can call the <code>values()</code> method on your enum.</p>\n\n<pre><code>for (Direction dir : Direction.values()) {\n  // do what you want\n}\n</code></pre>\n\n<p>This <code>values()</code> method is <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.9.3\">implicitly declared by the compiler</a>. So it is not listed on <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Enum.html\"><code>Enum</code></a> doc. </p>\n    "},{"t":"How do I tell Maven to use the latest version of a dependency?","l":"http://stackoverflow.com/questions/30571/how-do-i-tell-maven-to-use-the-latest-version-of-a-dependency","q":"\n\n<p>In Maven, dependencies are usually set up like this:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;dependency&gt;\n  &lt;groupId&gt;wonderful-inc&lt;/groupId&gt;\n  &lt;artifactId&gt;dream-library&lt;/artifactId&gt;\n  &lt;version&gt;1.2.3&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p>Now, if you are working with libraries that have frequent releases, constantly updating the &lt;version&gt; tag can be somewhat annoying. Is there any way to tell Maven to always use the latest available version (from the repository)? </p>\n    ","a":"\n<p>If you  always want to use the newest version, Maven has two keywords you can use as an alternative to version ranges. You should use these options with care as you are no longer in control of the plugins/dependencies you are using.</p>\n\n<blockquote>\n  <p>When you depend on a plugin or a dependency, you can use the a version value of LATEST or RELEASE. LATEST refers to the latest released or snapshot version of a particular artifact, the most recently deployed artifact in a particular repository. RELEASE refers to the last non-snapshot release in the repository. In general, it is not a best practice to design software which depends on a non-specific version of an artifact. If you are developing software, you might want to use RELEASE or LATEST as a convenience so that you don't have to update version numbers when a new release of a third-party library is released. When you release software, you should always make sure that your project depends on specific versions to reduce the chances of your build or your project being affected by a software release not under your control. Use LATEST and RELEASE with caution, if at all.</p>\n</blockquote>\n\n<p>See the <a href=\"http://www.sonatype.com/books/maven-book/reference/pom-relationships-sect-pom-syntax.html#pom-relationships-sect-latest-release\">POM Syntax section of the Maven book</a> for more details. Or see this doc on <a href=\"http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution#DependencyMediationandConflictResolution-DependencyVersionRanges\">Dependency Version Ranges</a>, where: </p>\n\n<ul>\n<li>A square bracket ( <code>[</code> &amp; <code>]</code> ) means \"closed\" (inclusive).</li>\n<li>A parenthesis ( <code>(</code> &amp; <code>)</code> ) means \"open\" (exclusive).</li>\n</ul>\n\n<p>Here's an example illustrating the various options. In the Maven repository, com.foo:my-foo has the following metadata:</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;metadata&gt;\n  &lt;groupId&gt;com.foo&lt;/groupId&gt;\n  &lt;artifactId&gt;my-foo&lt;/artifactId&gt;\n  &lt;version&gt;2.0.0&lt;/version&gt;\n  &lt;versioning&gt;\n    &lt;release&gt;1.1.1&lt;/release&gt;\n    &lt;versions&gt;\n      &lt;version&gt;1.0&lt;/version&gt;\n      &lt;version&gt;1.0.1&lt;/version&gt;\n      &lt;version&gt;1.1&lt;/version&gt;\n      &lt;version&gt;1.1.1&lt;/version&gt;\n      &lt;version&gt;2.0.0&lt;/version&gt;\n    &lt;/versions&gt;\n    &lt;lastUpdated&gt;20090722140000&lt;/lastUpdated&gt;\n  &lt;/versioning&gt;\n&lt;/metadata&gt;\n</code></pre>\n\n<p>If a dependency on that artifact is required, you have the following options (other <a href=\"http://docs.codehaus.org/display/MAVEN/Dependency+Mediation+and+Conflict+Resolution#DependencyMediationandConflictResolution-DependencyVersionRanges\">version ranges</a> can be specified of course, just showing the relevant ones here):</p>\n\n<p>Declare an exact version (will always resolve to 1.0.1):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;[1.0.1]&lt;/version&gt;\n</code></pre>\n\n<p>Declare an explicit version (will always resolve to 1.0.1 unless a collision occurs, when Maven will select a matching version):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;1.0.1&lt;/version&gt;\n</code></pre>\n\n<p>Declare a version range for all 1.x (will currently resolve to 1.1.1):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;[1.0.0,2.0.0)&lt;/version&gt;\n</code></pre>\n\n<p>Declare an open-ended version range (will resolve to 2.0.0):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;[1.0.0,)&lt;/version&gt;\n</code></pre>\n\n<p>Declare the version as LATEST (will resolve to 2.0.0):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;LATEST&lt;/version&gt;\n</code></pre>\n\n<p>Declare the version as RELEASE (will resolve to 1.1.1):</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;version&gt;RELEASE&lt;/version&gt;\n</code></pre>\n\n<p>Note that by default your own deployments will update the \"latest\" entry in the Maven metadata, but to update the \"release\" entry, you need to activate the \"release-profile\" from the <a href=\"http://maven.apache.org/guides/introduction/introduction-to-the-pom.html\">Maven super POM</a>. You can do this with either \"-Prelease-profile\" or \"-DperformRelease=true\"</p>\n\n<hr>\n\n<p>It's worth emphasising that any approach that allows Maven to pick the dependency versions (LATEST, RELEASE, and version ranges) can leave you open to build time issues, as later versions can have different behaviour (for example the dependency plugin has previously switched a default value from true to false, with confusing results).</p>\n\n<p>It is therefore generally a good idea to define exact versions in releases. As <a href=\"http://stackoverflow.com/questions/30571/how-do-i-tell-maven-to-use-the-latest-version-of-a-dependency/1172805#1172805\">Tim's answer</a> points out, the <a href=\"http://mojo.codehaus.org/versions-maven-plugin/\">maven-versions-plugin</a> is a handy tool for updating dependency versions, particularly the <a href=\"http://mojo.codehaus.org/versions-maven-plugin/use-latest-versions-mojo.html\">versions:use-latest-versions</a> and <a href=\"http://mojo.codehaus.org/versions-maven-plugin/use-latest-releases-mojo.html\">versions:use-latest-releases</a> goals.</p>\n    "},{"t":"Eclipse/Java code completion not working","l":"http://stackoverflow.com/questions/908489/eclipse-java-code-completion-not-working","q":"\n\n<p>I've downloaded, unzipped and setup Eclipse 3.4.2 with some plugins (noteable, EPIC, Clearcase, QuantumDB, MisterQ). </p>\n\n<p>Now I find when I'm editing Java projects the code completion is not working.  If I type <code>String.</code> and press <kbd>ctrl</kbd>+<kbd>space</kbd> a popup shows \"No Default Proposals\" and the status bar at the bottom shows \"No completions available\".</p>\n\n<p>Any ideas?</p>\n    ","a":"\n<p>Try <strong>restoring the default options</strong> in '<code>Windows &gt; Preferences &gt; Java &gt; Editor &gt; Content Assist &gt; Advanced</code>'</p>\n\n<p>An example of the kind of data you see in this preference screen, however not necessarily what you currently have.</p>\n\n<p><img src=\"http://i.stack.imgur.com/bkZLv.jpg\" alt=\"eclipse content assist setting\"></p>\n\n<p>(From <a href=\"http://www.berezniker.com/users/vadim\">Vadim</a> in this <a href=\"http://www.berezniker.com/content/pages/java/content-assist-duplicates-eclipse-mylyn\">blog post \" Content Assist Duplicates in Eclipse (Mylyn)\"</a>:<br>\nif have duplicate Mylyn entries, uncheck the duplicate entries that do not contain \"<code>(Mylyn)</code>\" in their name)</p>\n\n<p>The <a href=\"http://help.eclipse.org/helios/index.jsp?topic=/org.eclipse.jdt.doc.user/reference/preferences/java/editor/ref-preferences-content-assist-advanced.htm\">Eclipse help page</a> defines the default list to restore:</p>\n\n<blockquote>\n  <p>Select the proposal kinds contained in the <strong>'default' content assist list</strong>:</p>\n  \n  <ul>\n  <li>Other Java Proposals, </li>\n  <li>SWT Template Proposals, </li>\n  <li>Template Proposals, </li>\n  <li>Type Proposals</li>\n  </ul>\n</blockquote>\n    "},{"t":"Best way to read a text file in Java?","l":"http://stackoverflow.com/questions/4716503/best-way-to-read-a-text-file-in-java","q":"\n\n<p>It seems there are a few different ways to read and write data using files.</p>\n\n<p>I am trying to read ASCII data from a file. What are the differences so that I can decide what the best way is?</p>\n    ","a":"\n<p>ASCII is a TEXT file so you would use <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/Reader.html\">Readers</a> for reading. Java also supports reading from a binary file using <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html\">InputStreams</a>. If the files being read are huge then you would want to use a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/BufferedReader.html\">BufferedReader</a> on top of a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/io/FileReader.html\">FileReader</a> to improve read performance.</p>\n\n<p>Go through <a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=42\">this article</a> on how to use a Reader</p>\n\n<p>I'd also recommend you download and read this wonderful (yet free) book called <a href=\"http://www.mindviewinc.com/Books/downloads.html\"><strong>Thinking In Java</strong></a></p>\n\n<p><strong>In Java 7</strong></p>\n\n<p><a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllBytes%28java.nio.file.Path%29\">new String(Files.readAllBytes(...))</a> or <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/file/Files.html#readAllLines%28java.nio.file.Path,%20java.nio.charset.Charset%29\">Files.readAllLines(...)</a></p>\n\n<p><strong>In Java 8</strong></p>\n\n<p><a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#lines-java.nio.file.Path-\">Files.lines(..).forEach(...)</a></p>\n    "},{"t":"Convert ArrayList<String> to String [] [duplicate]","l":"http://stackoverflow.com/questions/5374311/convert-arrayliststring-to-string","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/4042434/convert-arraylist-containing-strings-to-an-array-of-strings-in-java\" dir=\"ltr\">Convert ArrayList containing Strings to an array of Strings in Java?</a>\n                <span class=\"question-originals-answer-count\">\n                    6 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I'm working in the android environment and have tried the following code, but it doesn't seem to be working.</p>\n\n<pre><code>String [] stockArr = (String[]) stock_list.toArray();\n</code></pre>\n\n<p>If I define as follows:</p>\n\n<pre><code>String [] stockArr = {\"hello\", \"world\"};\n</code></pre>\n\n<p>it works. Is there something that I'm missing?</p>\n    ","a":"\n<p>Use like this.</p>\n\n<pre><code>List&lt;String&gt; stockList = new ArrayList&lt;String&gt;();\nstockList.add(\"stock1\");\nstockList.add(\"stock2\");\n\nString[] stockArr = new String[stockList.size()];\nstockArr = stockList.toArray(stockArr);\n\nfor(String s : stockArr)\n    System.out.println(s);\n</code></pre>\n    "},{"t":"StringBuilder vs String concatenation in toString() in Java","l":"http://stackoverflow.com/questions/1532461/stringbuilder-vs-string-concatenation-in-tostring-in-java","q":"\n\n<p>Given the 2 <code>toString()</code> implementations below, which one is prefered:</p>\n\n<pre><code>public String toString(){\n    return \"{a:\"+ a + \", b:\" + b + \", c: \" + c +\"}\";\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>public String toString(){\n    StringBuilder sb = new StringBuilder(100);\n    return sb.append(\"{a:\").append(a)\n          .append(\", b:\").append(b)\n          .append(\", c:\").append(c)\n          .append(\"}\")\n          .toString();\n}\n</code></pre>\n\n<p>?</p>\n\n<p>More importantly - given we have only 3 properties it might not make a difference, but at what point would you switch from <code>+</code> concat to StringBuilder?</p>\n    ","a":"\n<p>Version 1 is preferable because it is shorter and <a href=\"http://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.18.1\">the compiler will in fact turn it into version 2</a> - no performance difference whatsoever.</p>\n\n<blockquote>\n  <p>More importantly given we have only 3\n  properties it might not make a\n  difference, but at what point do you\n  switch from concat to builder?</p>\n</blockquote>\n\n<p>At the point where you're concatenating in a loop - that's usually when the compiler can't substitute StringBuilder by itself.</p>\n    "},{"t":"java.util.Date to XMLGregorianCalendar","l":"http://stackoverflow.com/questions/835889/java-util-date-to-xmlgregoriancalendar","q":"\n\n<p>Isn't there a convenient way of getting from a java.util.Date to a XMLGregorianCalendar?</p>\n    ","a":"\n<pre><code>GregorianCalendar c = new GregorianCalendar();\nc.setTime(yourDate);\nXMLGregorianCalendar date2 = DatatypeFactory.newInstance().newXMLGregorianCalendar(c);\n</code></pre>\n    "},{"t":"How to generate UML diagrams (especially sequence diagrams) from Java code","l":"http://stackoverflow.com/questions/51786/how-to-generate-uml-diagrams-especially-sequence-diagrams-from-java-code","q":"\n\n<p>How can I generate UML diagrams (especially sequence diagrams) from existing Java code?</p>\n    ","a":"\n<h1><a href=\"http://www.objectaid.com/home\">ObjectAid UML Explorer</a></h1>\n\n<p>Is what I used. It is easily <strong><a href=\"http://www.objectaid.com/installation\">installed</a></strong> from the repository:</p>\n\n<pre><code>Name:     ObjectAid UML Explorer\nLocation: http://www.objectaid.com/update\n</code></pre>\n\n<p>And produces quite nice UML diagrams:</p>\n\n<p><img src=\"http://i.stack.imgur.com/QPnZD.png\" alt=\"Screenshot\"></p>\n\n<h2>Description from the website:</h2>\n\n<blockquote>\n  <p>The ObjectAid UML Explorer is different from other UML tools. It uses\n  the UML notation to show a graphical representation of existing code\n  that is as accurate and up-to-date as your text editor, while being\n  very easy to use. Several unique features make this possible:</p>\n  \n  <ul>\n  <li>Your source code and libraries are the model that is displayed, they are not reverse engineered into a different format.</li>\n  <li>If you update your code in Eclipse, your diagram is updated as well; there is no need to reverse engineer source code.</li>\n  <li>Refactoring updates your diagram as well as your source code. When you rename a field or move a class, your diagram simply reflects the\n  changes without going out of sync.</li>\n  <li>All diagrams in your Eclipse workspace are updated with refactoring changes as appropriate. If necessary, they are checked out of your\n  version control system.</li>\n  <li>Diagrams are fully integrated into the Eclipse IDE. You can drag Java classes from any other view onto the diagram, and diagram-related\n  information is shown in other views wherever applicable.</li>\n  </ul>\n</blockquote>\n    "},{"t":"Difference between <context:annotation-config> vs <context:component-scan>","l":"http://stackoverflow.com/questions/7414794/difference-between-contextannotation-config-vs-contextcomponent-scan","q":"\n\n<p>I'm learning Spring 3 and I don't seem to grasp the functionality behind <code>&lt;context:annotation-config&gt;</code> and <code>&lt;context:component-scan&gt;</code>.</p>\n\n<p>From what I've read they seem to handle different annotations (@Required, @Autowired etc vs @Component, @Repository, @Service etc) but also from what I've read they register the same bean post processor classes.</p>\n\n<p>To confuse me even more, there is an <code>annotation-config</code> attribute on <code>&lt;context:component-scan&gt;</code>.</p>\n\n<p>Can someone shed some light on these tags? What's similar, what's different, is one superseded by the other, they complete each other, do I need one of them, both?</p>\n    ","a":"\n<p><code>&lt;context:annotation-config&gt;</code> is used to activate annotations in beans already registered in the application context (no matter if they were defined with XML or by package scanning).</p>\n\n<p><code>&lt;context:component-scan&gt;</code> can also do what <code>&lt;context:annotation-config&gt;</code> does but <code>&lt;context:component-scan&gt;</code> also scans packages to find and register beans within the application context.</p>\n\n<p>I'll use some examples to show the differences/similarities. </p>\n\n<p>Lets start with a basic setup of three beans of type <code>A</code>, <code>B</code> and <code>C</code>, with <code>B</code> and <code>C</code> being injected into <code>A</code>.</p>\n\n<pre><code>package com.xxx;\npublic class B {\n  public B() {\n    System.out.println(\"creating bean B: \" + this);\n  }\n}\n\npackage com.xxx;\npublic class C {\n  public C() {\n    System.out.println(\"creating bean C: \" + this);\n  }\n}\n\npackage com.yyy;\nimport com.xxx.B;\nimport com.xxx.C;\npublic class A { \n  private B bbb;\n  private C ccc;\n  public A() {\n    System.out.println(\"creating bean A: \" + this);\n  }\n  public void setBbb(B bbb) {\n    System.out.println(\"setting A.bbb with \" + bbb);\n    this.bbb = bbb;\n  }\n  public void setCcc(C ccc) {\n    System.out.println(\"setting A.ccc with \" + ccc);\n    this.ccc = ccc; \n  }\n}\n</code></pre>\n\n<p>With the following XML configuration :</p>\n\n<pre><code>&lt;bean id=\"bBean\" class=\"com.xxx.B\" /&gt;\n&lt;bean id=\"cBean\" class=\"com.xxx.C\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\"&gt;\n  &lt;property name=\"bbb\" ref=\"bBean\" /&gt;\n  &lt;property name=\"ccc\" ref=\"cBean\" /&gt;\n&lt;/bean&gt;\n</code></pre>\n\n<p>Loading the context produces the following output:</p>\n\n<pre><code>creating bean B: com.xxx.B@c2ff5\ncreating bean C: com.xxx.C@1e8a1f6\ncreating bean A: com.yyy.A@1e152c5\nsetting A.bbb with com.xxx.B@c2ff5\nsetting A.ccc with com.xxx.C@1e8a1f6\n</code></pre>\n\n<p>OK, this is the expected output. But this is \"old style\" Spring. Now we have annotations so lets use those to simplify the XML.</p>\n\n<p>First, lets autowire the <code>bbb</code> and <code>ccc</code> properties on bean <code>A</code> like so:</p>\n\n<pre><code>package com.yyy;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport com.xxx.B;\nimport com.xxx.C;\npublic class A { \n  private B bbb;\n  private C ccc;\n  public A() {\n    System.out.println(\"creating bean A: \" + this);\n  }\n  @Autowired\n  public void setBbb(B bbb) {\n    System.out.println(\"setting A.bbb with \" + bbb);\n    this.bbb = bbb;\n  }\n  @Autowired\n  public void setCcc(C ccc) {\n    System.out.println(\"setting A.ccc with \" + ccc);\n    this.ccc = ccc;\n  }\n}\n</code></pre>\n\n<p>This allows me to remove the following rows from the XML:</p>\n\n<pre><code>&lt;property name=\"bbb\" ref=\"bBean\" /&gt;\n&lt;property name=\"ccc\" ref=\"cBean\" /&gt;\n</code></pre>\n\n<p>My XML is now simplified to this:</p>\n\n<pre><code>&lt;bean id=\"bBean\" class=\"com.xxx.B\" /&gt;\n&lt;bean id=\"cBean\" class=\"com.xxx.C\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\" /&gt;\n</code></pre>\n\n<p>When I load the context I get the following output:</p>\n\n<pre><code>creating bean B: com.xxx.B@5e5a50\ncreating bean C: com.xxx.C@54a328\ncreating bean A: com.yyy.A@a3d4cf\n</code></pre>\n\n<p>OK, this is wrong! What happened? Why aren't my properties autowired?</p>\n\n<p>Well, annotations are a nice feature but by themselves they do nothing whatsoever. They just annotate stuff. You need a processing tool to find the annotations and do something with them. </p>\n\n<p><code>&lt;context:annotation-config&gt;</code> to the rescue. This activates the actions for the annotations that it finds on the beans defined in the same application context where itself is defined.</p>\n\n<p>If I change my XML to this:</p>\n\n<pre><code>&lt;context:annotation-config /&gt;\n&lt;bean id=\"bBean\" class=\"com.xxx.B\" /&gt;\n&lt;bean id=\"cBean\" class=\"com.xxx.C\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\" /&gt;\n</code></pre>\n\n<p>when I load the application context I get the proper result:</p>\n\n<pre><code>creating bean B: com.xxx.B@15663a2\ncreating bean C: com.xxx.C@cd5f8b\ncreating bean A: com.yyy.A@157aa53\nsetting A.bbb with com.xxx.B@15663a2\nsetting A.ccc with com.xxx.C@cd5f8b\n</code></pre>\n\n<p>OK, this is nice, but I've removed two rows from the XML and added one. That's not a very big difference. The idea with annotations is that it's supposed to remove the XML.</p>\n\n<p>So let's remove the XML definitions and replace them all with annotations:</p>\n\n<pre><code>package com.xxx;\nimport org.springframework.stereotype.Component;\n@Component\npublic class B {\n  public B() {\n    System.out.println(\"creating bean B: \" + this);\n  }\n}\n\npackage com.xxx;\nimport org.springframework.stereotype.Component;\n@Component\npublic class C {\n  public C() {\n    System.out.println(\"creating bean C: \" + this);\n  }\n}\n\npackage com.yyy;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\nimport com.xxx.B;\nimport com.xxx.C;\n@Component\npublic class A { \n  private B bbb;\n  private C ccc;\n  public A() {\n    System.out.println(\"creating bean A: \" + this);\n  }\n  @Autowired\n  public void setBbb(B bbb) {\n    System.out.println(\"setting A.bbb with \" + bbb);\n    this.bbb = bbb;\n  }\n  @Autowired\n  public void setCcc(C ccc) {\n    System.out.println(\"setting A.ccc with \" + ccc);\n    this.ccc = ccc;\n  }\n}\n</code></pre>\n\n<p>While in the XML we only keep this:</p>\n\n<pre><code>&lt;context:annotation-config /&gt;\n</code></pre>\n\n<p>We load the context and the result is... Nothing. No beans are created, no beans are autowired. Nothing!</p>\n\n<p>That's because, as I said in the first paragraph, the <code>&lt;context:annotation-config /&gt;</code> only works on beans registered within the application context. Because I removed the XML configuration for the three beans there is no bean created and <code>&lt;context:annotation-config /&gt;</code> has no \"targets\" to work on.</p>\n\n<p>But that won't be a problem for <code>&lt;context:component-scan&gt;</code> which can scan a package for \"targets\" to work on. Let's change the content of the XML config into the following entry:</p>\n\n<pre><code>&lt;context:component-scan base-package=\"com.xxx\" /&gt;\n</code></pre>\n\n<p>When I load the context I get the following output:</p>\n\n<pre><code>creating bean B: com.xxx.B@1be0f0a\ncreating bean C: com.xxx.C@80d1ff\n</code></pre>\n\n<p>Hmmmm... something is missing. Why? </p>\n\n<p>If you look closelly at the classes, class <code>A</code> has package <code>com.yyy</code> but I've specified in the <code>&lt;context:component-scan&gt;</code> to use package <code>com.xxx</code> so this completely missed my <code>A</code> class and only picked up <code>B</code> and <code>C</code> which are on the <code>com.xxx</code> package.</p>\n\n<p>To fix this, I add this other package also:</p>\n\n<pre><code>&lt;context:component-scan base-package=\"com.xxx,com.yyy\" /&gt;\n</code></pre>\n\n<p>and now we get the expected result:</p>\n\n<pre><code>creating bean B: com.xxx.B@cd5f8b\ncreating bean C: com.xxx.C@15ac3c9\ncreating bean A: com.yyy.A@ec4a87\nsetting A.bbb with com.xxx.B@cd5f8b\nsetting A.ccc with com.xxx.C@15ac3c9\n</code></pre>\n\n<p>And that's it! Now you don't have XML definitions anymore, you have annotations.</p>\n\n<p>As a final example, keeping the annotated classes <code>A</code>, <code>B</code> and <code>C</code> and adding the following to the XML, what will we get after loading the context?</p>\n\n<pre><code>&lt;context:component-scan base-package=\"com.xxx\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\" /&gt;\n</code></pre>\n\n<p>We still get the correct result:</p>\n\n<pre><code>creating bean B: com.xxx.B@157aa53\ncreating bean C: com.xxx.C@ec4a87\ncreating bean A: com.yyy.A@1d64c37\nsetting A.bbb with com.xxx.B@157aa53\nsetting A.ccc with com.xxx.C@ec4a87\n</code></pre>\n\n<p>Even if the bean for class <code>A</code> isn't obtained by scanning, the processing tools are still applied by <code>&lt;context:component-scan&gt;</code> on all beans registered\nin the application context, even for <code>A</code> which was manually registered in the XML.</p>\n\n<p>But what if we have the following XML, will we get duplicated beans because we've specified both <code>&lt;context:annotation-config /&gt;</code> and <code>&lt;context:component-scan&gt;</code>?</p>\n\n<pre><code>&lt;context:annotation-config /&gt;\n&lt;context:component-scan base-package=\"com.xxx\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\" /&gt;\n</code></pre>\n\n<p>No, no duplications, We again get the expected result:</p>\n\n<pre><code>creating bean B: com.xxx.B@157aa53\ncreating bean C: com.xxx.C@ec4a87\ncreating bean A: com.yyy.A@1d64c37\nsetting A.bbb with com.xxx.B@157aa53\nsetting A.ccc with com.xxx.C@ec4a87\n</code></pre>\n\n<p>That's because both tags register the same processing tools (<code>&lt;context:annotation-config /&gt;</code> can be omitted if <code>&lt;context:component-scan&gt;</code> is specified) but Spring takes care of running them only once.</p>\n\n<p>Even if you register the processing tools yourself multiple times, Spring will still make sure they do their magic only once; this XML:</p>\n\n<pre><code>&lt;context:annotation-config /&gt;\n&lt;context:component-scan base-package=\"com.xxx\" /&gt;\n&lt;bean id=\"aBean\" class=\"com.yyy.A\" /&gt;\n&lt;bean id=\"bla\" class=\"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor\" /&gt;\n&lt;bean id=\"bla1\" class=\"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor\" /&gt;\n&lt;bean id=\"bla2\" class=\"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor\" /&gt;\n&lt;bean id=\"bla3\" class=\"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor\" /&gt;\n</code></pre>\n\n<p>will still generate the following result:</p>\n\n<pre><code>creating bean B: com.xxx.B@157aa53\ncreating bean C: com.xxx.C@ec4a87\ncreating bean A: com.yyy.A@25d2b2\nsetting A.bbb with com.xxx.B@157aa53\nsetting A.ccc with com.xxx.C@ec4a87\n</code></pre>\n\n<p>OK, that about raps it up. </p>\n\n<p>I hope this information along with the responses from @Tomasz Nurkiewicz and @Sean Patrick Floyd are all you need to understand how \n<code>&lt;context:annotation-config&gt;</code> and <code>&lt;context:component-scan&gt;</code> work.</p>\n    "},{"t":"Why are you not able to declare a class as static in Java?","l":"http://stackoverflow.com/questions/3584113/why-are-you-not-able-to-declare-a-class-as-static-in-java","q":"\n\n<p>Why are you not able to declare a class as static in Java?</p>\n    ","a":"\n<p>Only nested classes can be static. By doing so you can use the nested class without having an instance of the outer class.</p>\n\n<pre><code>class OuterClass{\n    public static class StaticNestedClass{\n    }\n\n    public class InnerClass{\n    }\n\n    public InnerClass getAnInnerClass(){\n        return new InnerClass();\n    }\n\n    //This method doesn't work\n    public static InnerClass getAnInnerClassStatically(){\n        return new InnerClass();\n    }\n}\n\nclass OtherClass{\n    //Use of a static nested class:\n    private OuterClass.StaticNestedClass staticNestedClass = new OuterClass.StaticNestedClass();\n\n    //Doesn't work\n    private OuterClass.InnerClass innerClass = new OuterClass.InnerClass();\n\n    //Use of an inner class:\n    private OuterClass outerclass= new OuterClass();\n    private OuterClass.InnerClass innerClass2 = outerclass.getAnInnerClass();\n    private OuterClass.InnerClass innerClass3 = outerclass.new InnerClass();\n}\n</code></pre>\n\n<p><strong>Sources :</strong></p>\n\n<ul>\n<li><a href=\"http://download.oracle.com/javase/tutorial/java/javaOO/nested.html\">Oracle tutorial on nested classes</a></li>\n</ul>\n\n<p><strong>On the same topic :</strong></p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1353309/java-static-vs-non-static-inner-class\">Java: Static vs non static inner class</a></li>\n<li><a href=\"http://stackoverflow.com/questions/70324/java-inner-class-and-static-nested-class\">Java inner class and static nested class</a></li>\n</ul>\n    "},{"t":"Navigation Drawer (Google+ vs. YouTube)","l":"http://stackoverflow.com/questions/11377472/navigation-drawer-google-vs-youtube","q":"\n\n<p>Does anyone know how to implement a sliding menu like some of the top apps of today? </p>\n\n<p>Other Stack Overflow <a href=\"http://stackoverflow.com/questions/11328895/facebook-lide-slideout-menu-not-using-that-library\">questions</a> haven't had any answers on how to do this, so I'm trying to gather as much info to help out others. All the applications I mention below do a great job of implementing the slide menu.</p>\n\n<h2>1. Google Plus (as of 7/7/12)</h2>\n\n<p><img src=\"http://i.stack.imgur.com/Ue0LS.png\" alt=\"Google+ slide out menu screenshot\"></p>\n\n<p>You can only go from the first screen to the second screen by clicking the G+ logo in the upper left hand corner. Notice that the entire screen moves from it's position and get's nudged to the right side of the screen (including the action bar). To get back to the first screen you can either slide the right side back into focus or you can click the G+ icon again.</p>\n\n<h2>2. YouTube (as of 7/7/12)</h2>\n\n<p><img src=\"http://i.stack.imgur.com/rkGFB.png\" alt=\"YouTube slide out menu screenshot\"></p>\n\n<p>You can go from the first screen to second screen using two methods. Either click the YouTube logo in the upper left, or you can use a swipe gesture to move it to the right. This is already different from the G+ app. Secondly, you can see that the action bar stays put (Unlike G+). Lastly, to get the original screen back it works just like G+.</p>\n\n<h2>Apps</h2>\n\n<p>If you would like to experience what a beautiful slide menu looks and feels like download:</p>\n\n<ol>\n<li><a href=\"https://play.google.com/store/apps/details?id=fr.epicdream.beamy&amp;feature=nav_result#?t=W251bGwsMSwxLDMsImZyLmVwaWNkcmVhbS5iZWFteSJd\">Prixing</a></li>\n<li><a href=\"https://play.google.com/store/apps/details?id=com.evernote&amp;feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5ldmVybm90ZSJd\">Evernote</a></li>\n<li><a href=\"https://play.google.com/store/apps/details?id=com.spotify.mobile.android.ui&amp;feature=search_result#?t=W251bGwsMSwxLDEsImNvbS5zcG90aWZ5Lm1vYmlsZS5hbmRyb2lkLnVpIl0.\">Spotify</a></li>\n</ol>\n    ","a":"\n<h2>Edit #3:</h2>\n\n<p>The Navigation Drawer pattern is officially described in the Android documentation!</p>\n\n<p><img src=\"http://i.stack.imgur.com/Zz5EX.png\" alt=\"enter image description here\">\nCheck out the following links:</p>\n\n<ul>\n<li><em>Design docs</em> can be found <strong><a href=\"http://developer.android.com/design/patterns/navigation-drawer.html\">here</a></strong>.</li>\n<li><em>Developer docs</em> can be found <strong><a href=\"http://developer.android.com/training/implementing-navigation/nav-drawer.html\">here</a></strong>.</li>\n</ul>\n\n<hr>\n\n<h2>Edit #2:</h2>\n\n<p>Roman Nurik (an Android design engineer at Google) has confirmed that the recommended behavior is to not move the Action Bar when opening the drawer (like the YouTube app). See this <a href=\"https://plus.google.com/u/0/108238734975008671651/posts/6SPfDiML7MJ\">Google+ post</a>.</p>\n\n<hr>\n\n<h2>Edit #1:</h2>\n\n<p>I answered this question a while ago, but I'm back to re-emphasize that <strong>Prixing has the best fly-out menu out there... by far</strong>. It's absolutely beautiful, perfectly smooth, and it puts Facebook, Google+, and YouTube to shame. EverNote is pretty good too... but still not as perfect as Prixing. Check out <a href=\"http://android.cyrilmottier.com/?p=658\"><strong>this series of posts</strong></a> on how the flyout menu was implemented (from none other than the head developer at Prixing himself!).</p>\n\n<hr>\n\n<h2>Original Answer:</h2>\n\n<p>Adam Powell and Richard Fulcher talk about this at <a href=\"http://youtu.be/XwGHJJYBs0Q?t=49m47s\">49:47 - 52:50</a> in the Google I/O talk titled \"Navigation in Android\".</p>\n\n<p>To summarize their answer, as of the date of this posting the slide out navigation menu is <em>not</em> officially part of the Android application design standard. As you have probably discovered, there's currently no native support for this feature, but there was talk about making this an addition to an upcoming revision of the support package.</p>\n\n<p>With regards to the YouTube and G+ apps, it does seem odd that they behave differently. My best guess is that the reason the YouTube app fixes the position of the action bar is,</p>\n\n<ol>\n<li><p>One of the most important navigational options for users using the YouTube app is search, which is performed in the <code>SearchView</code> in the action bar. It would make sense to make the action bar static in this regard, since it would allow the user to <em>always</em> have the option to search for new videos.</p></li>\n<li><p>The G+ app uses a <code>ViewPager</code> to display its content, so making the pull out menu specific to the layout content (i.e. everything under the action bar) wouldn't make much sense. Swiping is supposed to provide a means of navigating between pages, not a means of global navigation. This might be why they decided to do it differently in the G+ app than they did in the YouTube app. </p>\n\n<p>On another note, check out the Google Play app for another version of the \"pull out menu\" (when you are at the left most page, swipe left and a pull out, \"half-page\" menu will appear).</p></li>\n</ol>\n\n<p>You're right in that this isn't very consistent behavior, but it doesn't seem like there is a 100% consensus within the Android team on how this behavior should be implemented yet. I wouldn't be surprised if in the future the apps are updated so that the navigation in both apps are identical (they seemed very keen on making navigation consistent across all Google-made apps in the talk).</p>\n    "},{"t":"Difference between HashMap, LinkedHashMap and TreeMap","l":"http://stackoverflow.com/questions/2889777/difference-between-hashmap-linkedhashmap-and-treemap","q":"\n\n<p>What is the difference between <code>HashMap</code>, <code>LinkedHashMap</code> and <code>TreeMap</code> in Java? \nI don't see any difference in the output as all the three has <code>keySet</code> and <code>values</code>. What are <code>Hashtable</code>s?</p>\n\n<pre><code>Map m1 = new HashMap();\nm1.put(\"map\", \"HashMap\");\nm1.put(\"schildt\", \"java2\");\nm1.put(\"mathew\", \"Hyden\");\nm1.put(\"schildt\", \"java2s\");\nprint(m1.keySet()); \nprint(m1.values()); \n\nSortedMap sm = new TreeMap();\nsm.put(\"map\", \"TreeMap\");\nsm.put(\"schildt\", \"java2\");\nsm.put(\"mathew\", \"Hyden\");\nsm.put(\"schildt\", \"java2s\");\nprint(sm.keySet()); \nprint(sm.values());\n\nLinkedHashMap lm = new LinkedHashMap();\nlm.put(\"map\", \"LinkedHashMap\");\nlm.put(\"schildt\", \"java2\");\nlm.put(\"mathew\", \"Hyden\");\nlm.put(\"schildt\", \"java2s\");\nprint(lm.keySet()); \nprint(lm.values());\n</code></pre>\n    ","a":"\n<p>All three classes implement the <code>Map</code> interface and offer mostly the same functionality. The most important difference is the order in which iteration through the entries will happen:</p>\n\n<ul>\n<li><code>HashMap</code> makes absolutely no guarantees about the iteration order. It can (and will) even change completely when new elements are added.</li>\n<li><code>TreeMap</code> will iterate according to the \"natural ordering\" of the keys according to their <code>compareTo()</code> method (or an externally supplied <code>Comparator</code>). Additionally, it implements the <a href=\"http://java.sun.com/javase/6/docs/api/java/util/SortedMap.html\"><code>SortedMap</code></a> interface, which contains methods that depend on this sort order.</li>\n<li><code>LinkedHashMap</code> will iterate in the order in which the entries were put into the map</li>\n</ul>\n\n<p><a href=\"http://en.wikipedia.org/wiki/Hashtable\">\"Hashtable\"</a> is the generic name for hash-based maps. In the context of the Java API,\n<code>Hashtable</code> is an obsolete class from the days of Java 1.1 before the collections framework existed. It should not be used anymore, because its API is cluttered with obsolete methods that duplicate functionality, and its methods are synchronized (which can decrease performance and is generally useless). Use <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html\">ConcurrrentHashMap</a> instead of Hashtable. </p>\n    "},{"t":"What's the best mock framework for Java? [closed]","l":"http://stackoverflow.com/questions/22697/whats-the-best-mock-framework-for-java","q":"\n\n<p>What's the best framework for creating mock objects in Java? Why? What are the pros and cons of each framework?</p>\n    ","a":"\n<p>I've had good success using <a href=\"https://github.com/mockito/mockito\">Mockito</a>.</p>\n\n<p>When I tried learning about JMock and EasyMock, I found the learning curve to be a bit steep (though maybe that's just me).</p>\n\n<p>I like Mockito because of its simple and clean syntax that I was able to grasp pretty quickly. The minimal syntax is designed to support the common cases very well, although the few times I needed to do something more complicated I found what I wanted was supported and easy to grasp.</p>\n\n<p>Here's an (abridged) example from the Mockito homepage:</p>\n\n<pre><code>import static org.mockito.Mockito.*;\n\nList mockedList = mock(List.class);\nmockedList.clear();\nverify(mockedList).clear();\n</code></pre>\n\n<p>It doesn't get much simpler than that.</p>\n\n<p>The only major downside I can think of is that it won't mock static methods.</p>\n    "},{"t":"How to check if a String is a numeric type in Java","l":"http://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-a-numeric-type-in-java","q":"\n\n<p>How would you check if a String was a number before parsing it?</p>\n    ","a":"\n<p>This is generally done with a simple user-defined function (i.e. Roll-your-own \"isNumeric\" function).</p>\n\n<p>Something like:</p>\n\n<pre><code>public static boolean isNumeric(String str)  \n{  \n  try  \n  {  \n    double d = Double.parseDouble(str);  \n  }  \n  catch(NumberFormatException nfe)  \n  {  \n    return false;  \n  }  \n  return true;  \n}\n</code></pre>\n\n<p>However, if you're calling this function a lot, and you expect many of the checks to fail due to not being a number then performance of this mechanism will not be great, since you're relying upon exceptions being thrown for each failure, which is a fairly expensive operation.</p>\n\n<p>An alternative approach may be to use a regular expression to check for validity of being a number:</p>\n\n<pre><code>public static boolean isNumeric(String str)\n{\n  return str.matches(\"-?\\\\d+(\\\\.\\\\d+)?\");  //match a number with optional '-' and decimal.\n}\n</code></pre>\n\n<p>Be careful with the above RegEx mechanism, though, as it'll fail if your using non-latin (i.e. 0 to 9) digits.  For example, arabic digits.  This is because the \"\\d\" part of the RegEx will only match [0-9] and effectively isn't internationally numerically aware.  (Thanks to OregonGhost for pointing this out!)</p>\n\n<p>Or even another alternative is to use Java's built-in java.text.NumberFormat object to see if, after parsing the string the parser position is at the end of the string.  If it is, we can assume the entire string is numeric:</p>\n\n<pre><code>public static boolean isNumeric(String str)\n{\n  NumberFormat formatter = NumberFormat.getInstance();\n  ParsePosition pos = new ParsePosition(0);\n  formatter.parse(str, pos);\n  return str.length() == pos.getIndex();\n}\n</code></pre>\n    "},{"t":"How do I write a correct micro-benchmark in Java?","l":"http://stackoverflow.com/questions/504103/how-do-i-write-a-correct-micro-benchmark-in-java","q":"\n\n<p>How do you write (and run) a correct micro-benchmark in Java?</p>\n\n<p>I'm looking here for code samples and comments illustrating various things to think about.</p>\n\n<p>Example: Should the benchmark measure time/iteration or iterations/time, and why?</p>\n\n<p>Related: <a href=\"http://stackoverflow.com/questions/410437/is-stopwatch-benchmarking-acceptable\">Is stopwatch benchmarking acceptable?</a></p>\n    ","a":"\n<p>Tips about writing micro benchmarks <a href=\"http://wikis.oracle.com/display/HotSpotInternals/Home\">from the creators of Java HotSpot</a>:</p>\n\n<p>Rule 0: Read a reputable paper on JVMs and micro-benchmarking. A good one is <a href=\"http://www.ibm.com/developerworks/java/library/j-jtp02225\">Brian Goetz, 2005</a>. Do not expect too much from micro-benchmarks; they measure only a limited range of JVM performance characteristics.</p>\n\n<p>Rule 1: Always include a warmup phase which runs your test kernel all the way through, enough to trigger all initializations and compilations before timing phase(s). (Fewer iterations is OK on the warmup phase. The rule of thumb is several tens of thousands of inner loop iterations.)</p>\n\n<p>Rule 2: Always run with <code>-XX:+PrintCompilation</code>, <code>-verbose:gc</code>, etc., so you can verify that the compiler and other parts of the JVM are not doing unexpected work during your timing phase.</p>\n\n<p>Rule 2.1: Print messages at the beginning and end of timing and warmup phases, so you can verify that there is no output from Rule 2 during the timing phase.</p>\n\n<p>Rule 3: Be aware of the difference between -client and -server, and OSR and regular compilations. The <code>-XX:+PrintCompilation</code> flag reports OSR compilations with an at-sign to denote the non-initial entry point, for example: <code>Trouble$1::run @ 2 (41 bytes)</code>. Prefer server to client, and regular to OSR, if you are after best performance.</p>\n\n<p>Rule 4: Be aware of initialization effects. Do not print for the first time during your timing phase, since printing loads and initializes classes. Do not load new classes outside of the warmup phase (or final reporting phase), unless you are testing class loading specifically (and in that case load only the test classes). Rule 2 is your first line of defense against such effects.</p>\n\n<p>Rule 5: Be aware of deoptimization and recompilation effects. Do not take any code path for the first time in the timing phase, because the compiler may junk and recompile the code, based on an earlier optimistic assumption that the path was not going to be used at all. Rule 2 is your first line of defense against such effects.</p>\n\n<p>Rule 6: Use appropriate tools to read the compiler's mind, and expect to be surprised by the code it produces. Inspect the code yourself before forming theories about what makes something faster or slower.</p>\n\n<p>Rule 7: Reduce noise in your measurements. Run your benchmark on a quiet machine, and run it several times, discarding outliers. Use <code>-Xbatch</code> to serialize the compiler with the application, and consider setting <code>-XX:CICompilerCount=1</code> to prevent the compiler from running in parallel with itself.</p>\n\n<p>Rule 8: Use a library for your benchmark as it is probably more efficient and was already debugged for this sole purpose. Such as <a href=\"http://openjdk.java.net/projects/code-tools/jmh/\">JMH</a>, <a href=\"https://code.google.com/p/caliper/\">Caliper</a> or <a href=\"http://cseweb.ucsd.edu/users/wgg/JavaProf/javaprof.html\">Bill and Paul's Excellent UCSD Benchmarks for Java</a>.  </p>\n    "},{"t":"Dealing with “Xerces hell” in Java/Maven?","l":"http://stackoverflow.com/questions/11677572/dealing-with-xerces-hell-in-java-maven","q":"\n\n<p>In my office, the mere mention of the word Xerces is enough to incite murderous rage from developers. A cursory glance at the other Xerces questions on SO seem to indicate that almost all Maven users are \"touched\" by this problem at some point.  Unfortunately, understanding the problem requires a bit of knowledge about the history of Xerces...</p>\n\n<h1>History</h1>\n\n<ul>\n<li><p>Xerces is the most widely used XML parser in the Java ecosystem.  Almost every library or framework written in Java uses Xerces in some capacity (transitively, if not directly).</p></li>\n<li><p>The Xerces jars included in the <a href=\"http://xerces.apache.org/mirrors.cgi#binary\">official binaries</a> are, to this day, not versioned.  For example, the Xerces 2.11.0 implementation jar is named <code>xercesImpl.jar</code> and not <code>xercesImpl-2.11.0.jar</code>.</p></li>\n<li><p>The Xerces team <a href=\"https://issues.apache.org/jira/browse/XERCESJ-1454?focusedCommentId=12881865&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3acomment-tabpanel#comment-12881865\">does not use Maven</a>, which means they do not\nupload an official release to <a href=\"http://search.maven.org/\">Maven Central</a>.</p></li>\n<li><p>Xerces used to be <a href=\"http://xerces.apache.org/xerces2-j/faq-general.html#faq-3\">released as a single jar</a> (<code>xerces.jar</code>), but was split into two jars, one containing the API (<code>xml-apis.jar</code>) and one containing the implementations of those APIs (<code>xercesImpl.jar</code>).  Many older Maven POMs still declare a dependency on <code>xerces.jar</code>.  At some point in the past, Xerces was also released as <code>xmlParserAPIs.jar</code>, which some older POMs also depend on.</p></li>\n<li><p>The versions assigned to the xml-apis and xercesImpl jars by those who deploy their jars to Maven repositories are often different.  For example, xml-apis might be given version 1.3.03 and xercesImpl might be given version 2.8.0, even though both are from Xerces 2.8.0.  This is because people often tag the xml-apis jar with the version of the specifications that it implements.  There is a very nice, but incomplete breakdown of this <a href=\"http://swordsystems.com/2011/06/29/xerces-and-xml-api-dependency-hell/\">here</a>.</p></li>\n<li><p>To complicate matters, Xerces is the XML parser used in the reference implementation of the Java API for XML Processing (JAXP), included in the JRE. The implementation classes are repackaged under the <code>com.sun.*</code> namespace, which makes it dangerous to access them directly, as they may not be available in some JREs.  However, not all of the Xerces functionality is exposed via the <code>java.*</code> and <code>javax.*</code> APIs; for example, there is no API that exposes Xerces serialization. </p></li>\n<li><p>Adding to the confusing mess, almost all servlet containers (JBoss, Jetty, Glassfish, Tomcat, etc.), ship with Xerces in one or more of their <code>/lib</code> folders.</p></li>\n</ul>\n\n<h1>Problems</h1>\n\n<h3>Conflict Resolution</h3>\n\n<p>For some -- or perhaps all -- of the reasons above, many\norganizations publish and consume custom builds of Xerces in their\nPOMs.  This is not really a problem if you have a small application and are only using Maven Central, but it quickly becomes an issue for enterprise software where Artifactory or Nexus is proxying multiple repositories (JBoss, Hibernate, etc.):\n<img src=\"http://i.stack.imgur.com/Fe9Xa.png\" alt=\"xml-apis proxied by Artifactory\"> </p>\n\n<p>For example, organization A might publish xml-apis as:  </p>\n\n<p><code>&lt;groupId&gt;org.apache.xerces&lt;/groupId&gt;</code><br>\n<code>&lt;artifactId&gt;xml-apis&lt;/artifactId&gt;</code><br>\n<code>&lt;version&gt;2.9.1&lt;/version&gt;</code></p>\n\n<p>Meanwhile, organization B might publish the same jar as:</p>\n\n<p><code>&lt;groupId&gt;xml-apis&lt;/groupId&gt;</code><br>\n<code>&lt;artifactId&gt;xml-apis&lt;/artifactId&gt;</code><br>\n<code>&lt;version&gt;1.3.04&lt;/version&gt;</code></p>\n\n<p>Although B's jar is a lower version than A's jar, Maven does not know\nthat they are the same artifact because they have different\n<code>groupId</code>s.  Thus, it cannot perform conflict resolution and both\njars will be included as resolved dependencies:</p>\n\n<p><img src=\"http://i.stack.imgur.com/4X1ts.png\" alt=\"resolved dependencies with multiple xml-apis\"></p>\n\n<h3>Classloader Hell</h3>\n\n<p>As mentioned above, the JRE ships with Xerces in the JAXP RI.  While it would be nice to mark all Xerces Maven dependencies as <code>&lt;exclusion&gt;</code>s or as <code>&lt;provided&gt;</code>, the third-party code you depend on may or may not work with the version provided in JAXP of the JDK you're using.  In addition, you have the Xerces jars shipped in your servlet container to contend with. This leaves you with a number of choices: Do you delete the servlet version and hope that your container runs on the JAXP version? Is it better to leave the servlet version, and hope that your application frameworks run on the servlet version? If one or two of the unresolved conflicts outlined above manage to slip into your product (easy to happen in a large organization), you quickly find yourself in classloader hell, wondering which version of Xerces the classloader is picking at runtime and whether or not it will pick the same jar in Windows and Linux (probably not).</p>\n\n<h1>Solutions?</h1>\n\n<p>We've tried marking all Xerces Maven dependencies as <code>&lt;provided&gt;</code> or as an <code>&lt;exclusion&gt;</code>, but this is difficult to enforce (especially with a large team) given that the artifacts have so many aliases (xml-apis, xerces, xercesImpl, xmlParserAPIs, etc.).  Additionally, our third party libs/frameworks may not run on the JAXP version or the version provided by a servlet container.</p>\n\n<p><strong>How can we best address this problem with Maven?  Do we have to exercise such fine-grained control over our dependencies, and then rely on tiered classloading?  Is there some way to globally exclude all Xerces dependencies, and force all of our frameworks/libs to use the JAXP version?</strong></p>\n\n<hr>\n\n<p><strong>UPDATE</strong>: Joshua Spiewak has uploaded a patched version of the Xerces build scripts to <a href=\"https://issues.apache.org/jira/browse/XERCESJ-1454\">XERCESJ-1454</a> that allows for upload to Maven Central.  Vote/watch/contribute to this issue and let's fix this problem once and for all.</p>\n    ","a":"\n<p>There are 2.11.0 JARs <strong>(and source JARs!)</strong> of xerces in Maven Central since 20th February 2013! See <a href=\"http://search.maven.org/#artifactdetails|xerces|xercesImpl|2.11.0|jar\">Xerces in Maven Central</a>. I wonder why they haven't resolved <a href=\"https://issues.apache.org/jira/browse/XERCESJ-1454\">https://issues.apache.org/jira/browse/XERCESJ-1454</a>...</p>\n\n<p>I've used:</p>\n\n<pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;xerces&lt;/groupId&gt;\n    &lt;artifactId&gt;xercesImpl&lt;/artifactId&gt;\n    &lt;version&gt;2.11.0&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre>\n\n<p>and all dependencies have resolved fine - even proper <code>xml-apis-1.4.01</code>!</p>\n\n<p>And what's most important (and what wasn't obvious in the past) - the JAR in Maven Central is <strong>the same JAR as in the official <code>Xerces-J-bin.2.11.0.zip</code> distribution</strong>.</p>\n\n<p>I couldn't however find <code>xml-schema-1.1-beta</code> version - it can't be a Maven <code>classifier</code>-ed version because of additional dependencies.</p>\n    "},{"t":"Interview: Can we instantiate abstract class?","l":"http://stackoverflow.com/questions/13670991/interview-can-we-instantiate-abstract-class","q":"\n\n<p>The interviewer asked - Can we instantiate an abstract class? I said, No. He told me - Wrong, we can. </p>\n\n<p>I argued a bit on this. Then he told me to try this yourself at your home. </p>\n\n<pre><code>abstract class my {\n    public void mymethod() {\n        System.out.print(\"Abstract\");\n    }\n}\n\nclass poly {\n    public static void main(String a[]) {\n        my m = new my() {};\n        m.mymethod();\n    }\n}\n</code></pre>\n\n<p>Here, I'm creating instance of my class and calling method of abstract class. Can anyone please explain this to me? Was I really wrong during my interview?</p>\n    ","a":"\n<blockquote>\n  <p>Here, i'm creating instance of my class</p>\n</blockquote>\n\n<p>No, you are not creating the instance of your abstract class here. Rather you are creating an instance of an <em>anonymous subclass</em> of your abstract class. And then you are invoking the method on your <em>abstract class</em> reference pointing to <em>subclass object</em>.</p>\n\n<p>This behaviour is clearly listed in <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.9\">JLS - Section # 15.9.1</a>: -</p>\n\n<blockquote>\n  <p>If the class instance creation expression ends in a class body, then\n  the class being instantiated is an anonymous class. Then: </p>\n  \n  <ul>\n  <li>If T denotes a class, then an anonymous direct subclass of the class    named by T is declared. It is a compile-time error if the\n  class    denoted by T is a final class.</li>\n  <li>If T denotes an interface, then an anonymous direct subclass of    Object that implements the interface named by T is declared.</li>\n  <li>In either case, the body of the subclass is the ClassBody given in    the class instance creation expression.</li>\n  <li><strong>The class being instantiated is the anonymous subclass.</strong></li>\n  </ul>\n</blockquote>\n\n<p>Emphasis mine.</p>\n\n<p>Also, in <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-12.html#jls-12.5\">JLS - Section # 12.5</a>, you can read about the <em>Object Creation Process</em>. I'll quote one statement from that here: -</p>\n\n<blockquote>\n  <p>Whenever a new class instance is created, memory space is allocated\n  for it with room for all the instance variables declared in the class\n  type and all the instance variables declared in each superclass of the\n  class type, including all the instance variables that may be hidden.</p>\n  \n  <p>Just before a reference to the newly created object is returned as the\n  result, the indicated constructor is processed to initialize the new\n  object using the following procedure:</p>\n</blockquote>\n\n<p>You can read about the complete procedure on the link I provided.</p>\n\n<hr>\n\n<p>To practically see that the class being instantiated is an <em>Anonymous SubClass</em>, you just need to compile both your classes. Suppose you put those classes in two different files:</p>\n\n<p><strong>My.java:</strong></p>\n\n<pre><code>abstract class My {\n    public void myMethod() {\n        System.out.print(\"Abstract\");\n    }\n}\n</code></pre>\n\n<p><strong>Poly.java:</strong></p>\n\n<pre><code>class Poly extends My {\n    public static void main(String a[]) {\n        My m = new My() {};\n        m.myMethod();\n    }\n}\n</code></pre>\n\n<p>Now, compile both your source files:</p>\n\n<pre><code>javac My.java Poly.java\n</code></pre>\n\n<p>Now in the directory where you compiled the source code, you will see the following class files:</p>\n\n<pre><code>My.class\nPoly$1.class  // Class file corresponding to anonymous subclass\nPoly.class\n</code></pre>\n\n<p>See that class - <code>Poly$1.class</code>. It's the class file created by the compiler corresponding to the anonymous subclass you instantiated using the below code:</p>\n\n<pre><code>new My() {};\n</code></pre>\n\n<p>So, it's clear that there is a different class being instantiated. It's just that, that class is given a name only after compilation by the compiler.</p>\n\n<p>In general, all the anonymous subclasses in your class will be named in this fashion:</p>\n\n<pre><code>Poly$1.class, Poly$2.class, Poly$3.class, ... so on\n</code></pre>\n\n<p>Those numbers denote the order in which those anonymous classes appear in the enclosing class.</p>\n    "},{"t":"How do I copy an object in Java?","l":"http://stackoverflow.com/questions/869033/how-do-i-copy-an-object-in-java","q":"\n\n<p>Consider the below code:</p>\n\n<pre><code>DummyBean dum = new DummyBean();\ndum.setDummy(\"foo\");\nSystem.out.println(dum.getDummy()); // prints 'foo'\n\nDummyBean dumtwo = dum;\nSystem.out.println(dumtwo.getDummy()); // prints 'foo'\n\ndum.setDummy(\"bar\");\nSystem.out.println(dumtwo.getDummy()); // prints 'bar' but it should print 'foo'\n</code></pre>\n\n<p>So, I want to copy the 'dum' to dumtwo' and I want to change 'dum' without affecting the 'dumtwo'. But the above code is not doing that. When I change something in 'dum', the same change is happening in 'dumtwo' also.</p>\n\n<p>I guess, when I say dumtwo = dum, Java copies the reference only. So, is there any way to create a fresh copy of 'dum' and assign it to 'dumtwo' ?</p>\n    ","a":"\n<p>Create a copy constructor:</p>\n\n<pre><code>class DummyBean {\n  private String dummy;\n\n  public DummyBean(DummyBean another) {\n    this.dummy = another.dummy; // you can access  \n  }\n}\n</code></pre>\n\n<p>Every object has also a clone method which can be used to copy the object, but don't use it. It's way too easy to create a class and do improper clone method. If you are going to do that, read at least what Joshua Bloch has to say about it in <em><a href=\"http://books.google.com/books?id=ka2VUBqHiWkC&amp;pg=PA55&amp;lpg=PA55&amp;dq=effective%2Bjava%2Bclone&amp;source=bl&amp;ots=yXGhLnv4O4&amp;sig=zvEip5tp5KGgwqO1sCWgtGyJ1Ns&amp;hl=en&amp;ei=CYANSqygK8jktgfM-JGcCA&amp;sa=X&amp;oi=book%5Fresult&amp;ct=result&amp;resnum=3#PPA54,M1\">Effective Java</a></em>.</p>\n    "},{"t":"Good use case for Akka [closed]","l":"http://stackoverflow.com/questions/4493001/good-use-case-for-akka","q":"\n\n<p>I have heard lots of raving about <a href=\"http://akka.io/\">Akka</a> framework (Java/Scala service platform), but so far have not seen many actual examples of use cases it would be good for. So I would be interested in hearing about things developers have used it succesfully.</p>\n\n<p>Only one limitation: please do not include case of writing a chat server. :-)\n(why? since this has been overused as an example for lots of similar things)</p>\n\n<p><strong>EDIT</strong>: Since there are many good answers, my choice of accepted answer is bit arbitrary; I thought highest voted one seems like a reasonable choice. Thank you everyone for good answers!</p>\n    ","a":"\n<p>I have used it so far in two real projects very successfully. both are in the near real-time traffic information field (traffic as in cars on highways), distributed over several nodes, integrating messages between several parties, reliable backend systems. I'm not at liberty to give specifics on clients yet, when I do get the OK maybe it can be added as a reference. </p>\n\n<p>Akka has really pulled through on those projects, even though we started when it was on version 0.7. (we are using scala by the way)</p>\n\n<p>One of the big advantages is the ease at which you can compose a system out of actors and messages with almost no boilerplating, it scales extremely well without all the complexities of hand-rolled threading and you get asynchronous message passing between objects almost for free.</p>\n\n<p>It is very good in modeling any type of asynchronous message handling. I would prefer to write any type of (web) services system in this style than any other style. (Have you ever tried to write an asynchronous web service (server side) with JAX-WS? that's a lot of plumbing). So I would say any system that does not want to hang on one of its components because everything is implicitly called using synchronous methods, and that one component is locking on something. It is very stable and the let-it-crash + supervisor solution to failure really works well. Everything is easy to setup programmatically and not hard to unit test.</p>\n\n<p>Then there are the excellent add-on modules.\nThe Camel module really plugs in well into Akka and enables such easy development of asynchronous services with configurable endpoints. </p>\n\n<p>I'm very happy with the framework and it is becoming a defacto standard for the connected systems that we build.</p>\n    "},{"t":"Convert InputStream to byte array in Java","l":"http://stackoverflow.com/questions/1264709/convert-inputstream-to-byte-array-in-java","q":"\n\n<p>How do I read an entire <code>InputStream</code> into a byte array?</p>\n    ","a":"\n<p>You can use Apache <a href=\"http://commons.apache.org/io/\">commons-io</a> to handle this and similar tasks.</p>\n\n<p>The IOUtils type has a static method to read an InputStream and return a byte[].</p>\n\n<pre><code>InputStream is;\nbyte[] bytes = IOUtils.toByteArray(is);\n</code></pre>\n\n<p>Internally this creates a ByteArrayOutputStream and copies the bytes to the output, then calls to ByteArray(). It handles large files by copying the bytes in blocks of 4MB.</p>\n    "},{"t":"Why can't static methods be abstract in Java","l":"http://stackoverflow.com/questions/370962/why-cant-static-methods-be-abstract-in-java","q":"\n\n<p>The question is in Java why can't I define an abstract static method? for example</p>\n\n<pre><code>abstract class foo {\n    abstract void bar( ); // &lt;-- this is ok\n    abstract static void bar2(); //&lt;-- this isn't why?\n}\n</code></pre>\n    ","a":"\n<p>Because \"abstract\" means: \"Implements no functionality\", and \"static\" means: \"There is functionality even if you don't have an object instance\". And that's a logical contradiction.</p>\n    "},{"t":"Why not use Double or Float to represent currency?","l":"http://stackoverflow.com/questions/3730019/why-not-use-double-or-float-to-represent-currency","q":"\n\n<p>I've always been told <em>never</em> to represent money with <code>double</code> or <code>float</code> types, and this time I pose the question to you: why? </p>\n\n<p>I'm sure there is a very good reason, I simply do not know what it is.</p>\n    ","a":"\n<p>Because floats and doubles cannot accurately represent the base 10 multiples we use for money. This issue isn't just for Java, it's for any programming language that uses native floating-point types, as it stems from how computers handle floating-point numbers by default.</p>\n\n<p>This is how an <a href=\"http://en.wikipedia.org/wiki/IEEE_floating_point\">IEEE-754</a> floating-point number works: it dedicates a bit for the sign, a few bits to store an exponent for the base, and the rest for a multiple of that elevated base. This leads to numbers like 10.25 being represented in a form similar to <code>1025 * 10^-2</code>; except that instead of the base being 10, for <code>float</code>s and <code>double</code>s, it's two (so that would be <code>164 * 2^-4</code>).</p>\n\n<p>Even in base 10, this notation cannot accurately represent most simple fractions. For instance, you can't represent 1/3 as a multiple of a power of 10: you would need to store an infinite amount of 3's and an infinitely large negative exponent, and you simply can't do that. However, for the purpose of money, in most scenarios all you need is to be able to store multiples of 10<sup>-2</sup>, so it's not too bad.</p>\n\n<p>Just as some fractions can't be represented exactly as a multiples of a power of 10, some of them can't be represented exactly as a multiple of a power of 2, either. In fact, the only fractions of a hundred between 0/100 and 100/100 (which are significant when dealing with money because they're integer cents) that can be represented exactly as an IEEE-754 binary floating-point number are 0, 0.25, 0.5, 0.75 and 1. All the others are off by a small amount.</p>\n\n<p>Representing money as a <code>double</code> or <code>float</code> will probably look good at first as the software rounds off the tiny errors, but as you perform more additions, subtractions, multiplications and divisions on inexact numbers, you'll lose more and more precision as the errors add up. This makes floats and doubles inadequate for dealing with money, where perfect accuracy for multiples of base 10 powers is required.</p>\n\n<p>A solution that works in just about any language is to use integers instead, and count cents. For instance, 1025 would be $10.25. Several languages also have built-in types to deal with money. Among others, Java  has the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/math/BigDecimal.html\"><code>BigDecimal</code></a> class, and C# has the <a href=\"http://msdn.microsoft.com/en-us/library/364x0z75.aspx\"><code>decimal</code></a> type.</p>\n    "},{"t":"How can I convert my Java program to an .exe file? [closed]","l":"http://stackoverflow.com/questions/147181/how-can-i-convert-my-java-program-to-an-exe-file","q":"\n\n<p>If I have a Java source file (*.java) or a class file (*.class), how can I convert it to a .exe file?</p>\n\n<p>I also need an installer for my program.</p>\n\n<p>Is there an open source program that can do that?</p>\n    ","a":"\n<p>Some options: </p>\n\n<h3><a href=\"http://csdl.ics.hawaii.edu/~johnson/613f99/modules/04/jar-files.html\">Executable Jar File</a></h3>\n\n<p>See also <a href=\"http://www.cs.princeton.edu/introcs/85application/jar/jar.html\">Distributing your Application as an executable JAR file</a> and the <a href=\"http://docs.oracle.com/javase/tutorial/deployment/jar/index.html\">Oracle docs</a> on how to create a jar file that can be executed with a double-click on Windows.</p>\n\n<h3><a href=\"http://jsmooth.sourceforge.net/\">JSmooth</a></h3>\n\n<p><em>(EDIT: Last release was in 2007)</em></p>\n\n<p>JSmooth is a Java Executable Wrapper. It creates native Windows launchers (standard .exe) for your java applications. It makes java deployment much smoother and user-friendly, as it is able to find any installed Java VM by itself.</p>\n\n<h3><a href=\"http://www.duckware.com/jexepack/index.html\">JexePack</a></h3>\n\n<p><em>(EDIT: Shareware: Last updated in 2012)</em></p>\n\n<p>JexePack is a command line tool (great for automated scripting) that allows you to package your Java application (class files), optionally along with its resources (like GIF/JPG/TXT/etc), into a single compressed 32-bit Windows EXE, which runs using Sun's Java Runtime Environment. Both console and windowed applications are supported.</p>\n\n<h3><a href=\"http://www.zerog.com/iamanual/usermanual_ia55/WebHelp/launchanywhere/abo12e.htm\">LaunchAnywhere</a></h3>\n\n<p><em>(EDIT: Commercial with Free Trial, Last version is from 2012)</em></p>\n\n<p>A LAX Executable is an executable file that is used to launch a Java application on any LaunchAnywhere-compatible platform. Currently, InstallAnywhere creates LaunchAnywheres on Windows 95/98/NT/2000/Me, Solaris, Linux, and Mac OS X. LaunchAnywhere enables end-users to double-click on an icon (Windows or Mac OS X) or type a single command (UNIX) to start a Java application.</p>\n\n<p>See also for reference <a href=\"http://www.excelsior-usa.com/articles/java-to-exe.html\">Convert Java to EXE: Why, When, When Not and How</a></p>\n    "},{"t":"How do I check if a file exists in Java?","l":"http://stackoverflow.com/questions/1816673/how-do-i-check-if-a-file-exists-in-java","q":"\n\n<p>How can I check whether a file exists, before opening it for reading in Java? (equivalent of Perl's <code>-e $filename</code>).  </p>\n\n<p>The only <a href=\"http://stackoverflow.com/questions/1237235/check-file-exists-java\">similar question on SO</a> deals with writing the file and was thus answered using FileWriter which is obviously not applicable here.</p>\n\n<p>If possible I'd prefer a real API call returning true/false as opposed to some \"Call API to open a file and catch when it throws an exception which you check for 'no file' in text\", but I can live with the latter.</p>\n    ","a":"\n<p>Using <strong>java.io.File</strong></p>\n\n<pre><code>File f = new File(filePathString);\nif(f.exists() &amp;&amp; !f.isDirectory()) { /* do something */ }\n</code></pre>\n    "},{"t":"How to convert from int to String?","l":"http://stackoverflow.com/questions/4105331/how-to-convert-from-int-to-string","q":"\n\n<p>I'm working on a project where all conversions from <code>int</code> to <code>String</code> are done like this:</p>\n\n<pre><code>int i = 5;\nString strI = \"\" + i;\n</code></pre>\n\n<p>I'm not familiar with Java. Is this usual practice or is something wrong, as I suppose?</p>\n    ","a":"\n<p>Normal ways would be <code>Integer.toString(i)</code> or <code>String.valueOf(i)</code>.</p>\n\n<p>The concatenation will work, but is unconventional and could be a bad smell as it suggests the author doesn't know about the two methods above (what else might they not know?).</p>\n\n<p>Java has special support for the + operator when used with strings (see <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/String.html\">docs</a>) which translates the code you posted into:</p>\n\n<pre><code>StringBuilder sb = new StringBuilder();\nsb.append(\"\");\nsb.append(i);\nString strI = sb.toString();\n</code></pre>\n\n<p>at compile-time. It's slightly less efficient (<code>sb.append()</code> ends up calling <code>Integer.getChars()</code>, which is what <code>Integer.toString()</code> would've done anyway), but it works.</p>\n\n<p><strong>Edit to answer Grodriguez's comment -</strong> no, the compiler <em>doesn't</em> optimise out the empty string in this case - look:</p>\n\n<pre><code>simon@lucifer:~$ cat TestClass.java \npublic class TestClass {\n  public static void main(String[] args) {\n    int i = 5;\n    String strI = \"\" + i;\n  }\n}\nsimon@lucifer:~$ javac TestClass.java &amp;&amp; javap -c TestClass\nCompiled from \"TestClass.java\"\npublic class TestClass extends java.lang.Object{\npublic TestClass();\n  Code:\n   0:   aload_0\n   1:   invokespecial   #1; //Method java/lang/Object.\"&lt;init&gt;\":()V\n   4:   return\n\npublic static void main(java.lang.String[]);\n  Code:\n   0:   iconst_5\n   1:   istore_1\n</code></pre>\n\n<p>Initialise the StringBuilder:</p>\n\n<pre><code>   2:   new #2; //class java/lang/StringBuilder\n   5:   dup\n   6:   invokespecial   #3; //Method java/lang/StringBuilder.\"&lt;init&gt;\":()V\n</code></pre>\n\n<p>Append the empty string:</p>\n\n<pre><code>   9:   ldc #4; //String \n   11:  invokevirtual   #5; //Method java/lang/StringBuilder.append:\n(Ljava/lang/String;)Ljava/lang/StringBuilder;\n</code></pre>\n\n<p>Append the integer:</p>\n\n<pre><code>   14:  iload_1\n   15:  invokevirtual   #6; //Method java/lang/StringBuilder.append:\n(I)Ljava/lang/StringBuilder;\n</code></pre>\n\n<p>Extract the final string:</p>\n\n<pre><code>   18:  invokevirtual   #7; //Method java/lang/StringBuilder.toString:\n()Ljava/lang/String;\n   21:  astore_2\n   22:  return\n}\n</code></pre>\n    "},{"t":"What's the difference between ConcurrentHashMap and Collections.synchronizedMap(Map)?","l":"http://stackoverflow.com/questions/510632/whats-the-difference-between-concurrenthashmap-and-collections-synchronizedmap","q":"\n\n<p>I have a Map which is to be modified by several threads concurrently. </p>\n\n<p>There seem to be three different synchronized Map implementations in the Java API:</p>\n\n<ul>\n<li><code>Hashtable</code></li>\n<li><code>Collections.synchronizedMap(Map)</code></li>\n<li><code>ConcurrentHashMap</code></li>\n</ul>\n\n<p>From what I understand, <code>Hashtable</code> is an old implementation (extending the obsolete <code>Dictionary</code> class), which has been adapted later to fit the <code>Map</code> interface. While it <em>is</em> synchronized, it seems to have serious <a href=\"http://www.ibm.com/developerworks/java/library/j-jtp07233.html\">scalability issues</a> and is discouraged for new projects.</p>\n\n<p>But what about the other two? What are the differences between Maps returned by <code>Collections.synchronizedMap(Map)</code> and <code>ConcurrentHashMap</code>s? Which one fits which situation?</p>\n    ","a":"\n<p>For your needs, use <code>ConcurrentHashMap</code>. It allows concurrent modification of the Map from several threads without the need to block them. <code>Collections.synchronizedMap(map)</code> creates a blocking Map which will degrade performance, albeit ensure consistency (if used properly).</p>\n\n<p>Use the second option if you need to ensure data consistency, and each thread needs to have an up-to-date view of the map. Use the first if performance is critical, and each thread only inserts data to the map, with reads happening less frequently.</p>\n    "},{"t":"How to convert a char to a string in Java?","l":"http://stackoverflow.com/questions/8172420/how-to-convert-a-char-to-a-string-in-java","q":"\n\n<p>I have a <code>char</code> and I need a <code>String</code>. How do I convert from one to the other?</p>\n    ","a":"\n<p>You can use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/Character.html#toString-char-\"><code>Character.toString(char)</code></a>. Note that this method simply returns a call to <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#valueOf-char-\"><code>String.valueOf(char)</code></a>, which also works.</p>\n\n<p>As others have noted, string concatenation works as a shortcut as well:</p>\n\n<pre><code>String s = \"\" + 's';\n</code></pre>\n\n<p>But this compiles down to:</p>\n\n<pre><code>String s = new StringBuilder().append(\"\").append('s').toString();\n</code></pre>\n\n<p>which is less efficient because the <code>StringBuilder</code> is backed by a <code>char[]</code> (over-allocated by <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/lang/StringBuilder.java#StringBuilder.%3Cinit%3E%28%29\"><code>StringBuilder()</code></a> to <code>16</code>), only for that array to be defensively copied by the resulting <code>String</code>.</p>\n\n<p><code>String.valueOf(char)</code> \"gets in the back door\" by wrapping the <code>char</code> in a single-element array and passing it to the package private constructor <a href=\"http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/lang/String.java#String.%3Cinit%3E%28char%5B%5D%2Cboolean%29\"><code>String(char[], boolean)</code></a>, which avoids the array copy.</p>\n    "},{"t":"How to make a new List in Java","l":"http://stackoverflow.com/questions/858572/how-to-make-a-new-list-in-java","q":"\n\n<p>We create a <code>Set</code> as:</p>\n\n<pre><code>Set myset = new HashSet()\n</code></pre>\n\n<p>How do we create a <code>List</code> in Java?</p>\n    ","a":"\n<pre><code>List myList = new ArrayList();\n</code></pre>\n\n<p>or with generics</p>\n\n<pre><code>List&lt;MyType&gt; myList = new ArrayList&lt;MyType&gt;();\n</code></pre>\n    "},{"t":"Getting the Current Working Directory in Java","l":"http://stackoverflow.com/questions/4871051/getting-the-current-working-directory-in-java","q":"\n\n<p>I want to access my current working directory using </p>\n\n<pre><code> String current = new java.io.File( \".\" ).getCanonicalPath();\n        System.out.println(\"Current dir:\"+current);\n String currentDir = System.getProperty(\"user.dir\");\n        System.out.println(\"Current dir using System:\" +currentDir);\n</code></pre>\n\n<p>OutPut:  </p>\n\n<pre><code>Current dir: C:\\WINDOWS\\system32\nCurrent dir using System: C:\\WINDOWS\\system32\n</code></pre>\n\n<p>My output is not correct because C drive is not my current directory.\nNeed help in this regard.</p>\n    ","a":"\n<pre><code>public class JavaApplication1 {\n  public static void main(String[] args) {\n       System.out.println(\"Working Directory = \" +\n              System.getProperty(\"user.dir\"));\n  }\n}\n</code></pre>\n\n<p>This will print a <strong>complete absolute path from where your application was initialized.</strong></p>\n    "},{"t":"Standard concise way to copy a file in Java?","l":"http://stackoverflow.com/questions/106770/standard-concise-way-to-copy-a-file-in-java","q":"\n\n<p>It has always bothered me that the only way to copy a file in Java involves opening streams, declaring a buffer, reading in one file, looping through it, and writing it out to the other steam.  The web is littered with similar, yet still slightly different implementations of this type of solution.</p>\n\n<p>Is there a better way that stays within the bounds of the Java language (meaning does not involve exec-ing OS specific commands)?  Perhaps in some reliable open source utility package, that would at least obscure this underlying implementation and provide a one line solution?</p>\n    ","a":"\n<p>As toolkit mentions above, Apache Commons IO is the way to go, specifically <a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html\">FileUtils</a>.<a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/FileUtils.html#copyFile%28java.io.File,%20java.io.File%29\">copyFile()</a>; it handles all the heavy lifting for you.</p>\n\n<p>And as a postscript, note that recent versions of FileUtils (such as the 2.0.1 release) have added the use of NIO for copying files; <a href=\"http://www.javalobby.org/java/forums/t17036.html\">NIO can significantly increase file-copying performance</a>, in a large part because the NIO routines defer copying directly to the OS/filesystem rather than handle it by reading and writing bytes through the Java layer.  So if you're looking for performance, it might be worth checking that you are using a recent version of FileUtils.</p>\n    "},{"t":"What is the best way to filter a Java Collection?","l":"http://stackoverflow.com/questions/122105/what-is-the-best-way-to-filter-a-java-collection","q":"\n\n<p>I want to filter a <code>java.util.Collection</code> based on a predicate.</p>\n    ","a":"\n<p>lambdaj allows to filter collections without writing loops or inner classes as in the following example:</p>\n\n<pre><code>List&lt;Person&gt; beerDrinkers = select(persons, having(on(Person.class).getAge(),\n    greaterThan(16)));\n</code></pre>\n\n<p>Can you imagine something more readable? You can find it here:</p>\n\n<p><a href=\"http://code.google.com/p/lambdaj/\">http://code.google.com/p/lambdaj/</a></p>\n\n<p><strong>Update:</strong></p>\n\n<p>With Java 8 update (<a href=\"https://blogs.oracle.com/thejavatutorials/entry/jdk_8_is_released\">2014</a>) comes streams and lambdas, solving this problem with a simple one-liner:</p>\n\n<pre><code>List&lt;Person&gt; beerDrinkers = persons.stream()\n    .filter(p -&gt; p.getAge() &gt; 16).collect(Collectors.toList());\n</code></pre>\n\n<p>Some <a href=\"http://zeroturnaround.com/rebellabs/java-8-explained-applying-lambdas-to-java-collections/\">tutorial</a>.</p>\n\n<p><strong>Disclaimer:</strong> I am a contributor on lambdaj</p>\n    "},{"t":"How to get the build/version number of your Android application?","l":"http://stackoverflow.com/questions/6593592/get-application-version-programatically-in-android","q":"\n\n<p>I need to figure out how to get or make a build number for my Android application. I need the build number to display in the UI. </p>\n\n<p>Do I have to do something with <code>AndroidManifest.xml</code>?</p>\n    ","a":"\n<p>Use:</p>\n\n<pre><code>PackageInfo pInfo = getPackageManager().getPackageInfo(getPackageName(), 0);\nversion = pInfo.versionName;\n</code></pre>\n    "},{"t":"Java: How do I get a platform-independent new line character?","l":"http://stackoverflow.com/questions/207947/java-how-do-i-get-a-platform-independent-new-line-character","q":"\n\n<p>How do I get a platform-independent newline in Java? I can’t use <code>\"\\n\"</code> everywhere.</p>\n    ","a":"\n<p>In addition to the line.separator property, if you are using java 1.5 or later and the <strong>String.format</strong> (or other <strong>formatting</strong> methods) you can use <code>%n</code> as in</p>\n\n<pre><code>Calendar c = ...;\nString s = String.format(\"Duke's Birthday: %1$tm %1$te,%1$tY%n\", c); \n//Note `%n` at end of line                                    ^^\n\nString s2 = String.format(\"Use %%n as a platform independent newline.%n\"); \n//         %% becomes %        ^^\n//                                        and %n becomes newline     ^^\n</code></pre>\n\n<p>See the <a href=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/Formatter.html#syntax\" rel=\"nofollow\">Java 1.5 API for Formatter</a> for more details.</p>\n    "},{"t":"How do I time a method's execution in Java?","l":"http://stackoverflow.com/questions/180158/how-do-i-time-a-methods-execution-in-java","q":"\n\n<p>How do I get a method's execution time?  Is there a Timer utility class for things like timing how long a task takes, etc?  </p>\n\n<p>Most of the searches on Google return results for timers that schedule threads and tasks, which is not what I want.</p>\n    ","a":"\n<p>There is always the old-fashioned way:</p>\n\n<pre><code>long startTime = System.nanoTime();\nmethodToTime();\nlong endTime = System.nanoTime();\n\nlong duration = (endTime - startTime);  //divide by 1000000 to get milliseconds.\n</code></pre>\n    "},{"t":"Java string to date conversion","l":"http://stackoverflow.com/questions/4216745/java-string-to-date-conversion","q":"\n\n<p>Can somebody recommend the best way to convert a string in the format 'January 2, 2010' to a date in java?  Ultimately, I want to break out the month, the day, and the year as integers so that I can use:</p>\n\n<pre><code>Date date = new Date();\ndate.setMonth()..\ndate.setYear()..\ndate.setDay()..\ndate.setlong currentTime = date.getTime();\n</code></pre>\n\n<p>to convert the date into time.</p>\n    ","a":"\n<p>Don't do it, that's the hard way.  Moreover, those setter methods of <code>java.util.Date</code> are deprecated since Java 1.1 (1997). Just use <a href=\"http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html\"><code>SimpleDateFormat</code></a> (click the link to see all available format patterns).</p>\n\n<pre><code>String string = \"January 2, 2010\";\nDateFormat format = new SimpleDateFormat(\"MMMM d, yyyy\", Locale.ENGLISH);\nDate date = format.parse(string);\nSystem.out.println(date); // Sat Jan 02 00:00:00 GMT 2010\n</code></pre>\n\n<p>Note the importance of explicit <code>Locale</code> argument. If you omit it, then it will use the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/Locale.html#getDefault()\">default locale</a> which is not necessarily English as used in the month name of the string.</p>\n\n<p>Here's an extract of relevance from <a href=\"http://docs.oracle.com/javase/8/docs/api/java/text/SimpleDateFormat.html\">the javadoc</a>, listing all available format patterns:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Letter  Date or Time Component  Presentation        Examples\n------  ----------------------  ------------------  -------------------------------------\nG       Era designator          Text                AD\ny       Year                    Year                1996; 96\nM       Month in year           Month               July; Jul; 07\nw       Week in year            Number              27\nW       Week in month           Number              2\nD       Day in year             Number              189\nd       Day in month            Number              10\nF       Day of week in month    Number              2\nE       Day in week             Text                Tuesday; Tue\nu       Day number of week      Number              1\na       Am/pm marker            Text                PM\nH       Hour in day (0-23)      Number              0\nk       Hour in day (1-24)      Number              24\nK       Hour in am/pm (0-11)    Number              0\nh       Hour in am/pm (1-12)    Number              12\nm       Minute in hour          Number              30\ns       Second in minute        Number              55\nS       Millisecond             Number              978\nz       Time zone               General time zone   Pacific Standard Time; PST; GMT-08:00\nZ       Time zone               RFC 822 time zone   -0800\nX       Time zone               ISO 8601 time zone  -08; -0800; -08:00\n</code></pre>\n\n<hr>\n\n<h3>Java 8 update</h3>\n\n<p>If you happen to be on Java 8 already, then use <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html\"><code>DateTimeFormatter</code></a> (also here, click the link to see all predefined formatters and available format patterns; <a href=\"https://docs.oracle.com/javase/tutorial/datetime/iso/format.html\">the tutorial is available here</a>). This new API is inspired by <a href=\"http://www.joda.org/joda-time/\">JodaTime</a>.</p>\n\n<pre><code>String string = \"January 2, 2010\";\nDateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"MMMM d, yyyy\", Locale.ENGLISH);\nLocalDate date = LocalDate.parse(string, formatter);\nSystem.out.println(date); // 2010-01-02\n</code></pre>\n\n<p>Note: if your date string happens to contain the time part as well, then use <code>LocalDateTime#parse()</code> instead.</p>\n\n<p>Here's an extract of relevance from <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/format/DateTimeFormatter.html\">the javadoc</a>, listing all available format patterns:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Symbol  Meaning                     Presentation  Examples\n------  --------------------------  ------------  ----------------------------------------------\nG       era                         text          AD; Anno Domini; A\nu       year                        year          2004; 04\ny       year-of-era                 year          2004; 04\nD       day-of-year                 number        189\nM/L     month-of-year               number/text   7; 07; Jul; July; J\nd       day-of-month                number        10\n\nQ/q     quarter-of-year             number/text   3; 03; Q3; 3rd quarter\nY       week-based-year             year          1996; 96\nw       week-of-week-based-year     number        27\nW       week-of-month               number        4\nE       day-of-week                 text          Tue; Tuesday; T\ne/c     localized day-of-week       number/text   2; 02; Tue; Tuesday; T\nF       week-of-month               number        3\n\na       am-pm-of-day                text          PM\nh       clock-hour-of-am-pm (1-12)  number        12\nK       hour-of-am-pm (0-11)        number        0\nk       clock-hour-of-am-pm (1-24)  number        0\n\nH       hour-of-day (0-23)          number        0\nm       minute-of-hour              number        30\ns       second-of-minute            number        55\nS       fraction-of-second          fraction      978\nA       milli-of-day                number        1234\nn       nano-of-second              number        987654321\nN       nano-of-day                 number        1234000000\n\nV       time-zone ID                zone-id       America/Los_Angeles; Z; -08:30\nz       time-zone name              zone-name     Pacific Standard Time; PST\nO       localized zone-offset       offset-O      GMT+8; GMT+08:00; UTC-08:00;\nX       zone-offset 'Z' for zero    offset-X      Z; -08; -0830; -08:30; -083015; -08:30:15;\nx       zone-offset                 offset-x      +0000; -08; -0830; -08:30; -083015; -08:30:15;\nZ       zone-offset                 offset-Z      +0000; -0800; -08:00;\n</code></pre>\n    "},{"t":"Get an OutputStream into a String","l":"http://stackoverflow.com/questions/216894/get-an-outputstream-into-a-string","q":"\n\n<p>What's the best way to pipe the output from an java.io.OutputStream to a String in Java?</p>\n\n<p>Say I have the method:</p>\n\n<pre><code>  writeToStream(Object o, OutputStream out)\n</code></pre>\n\n<p>Which writes certain data from the object to the given stream. However, I want to get this output into a String as easily as possible.</p>\n\n<p>I'm considering writing a class like this (untested):</p>\n\n<pre><code>class StringOutputStream extends OutputStream {\n\n  StringBuilder mBuf;\n\n  public void write(int byte) throws IOException {\n    mBuf.append((char) byte);\n  }\n\n  public String getString() {\n    return mBuf.toString();\n  }\n}\n</code></pre>\n\n<p>But is there a better way? I only want to run a test!</p>\n    ","a":"\n<p>I would use a <code>ByteArrayOutputStream</code>. And on finish you can call:</p>\n\n<pre><code>new String( baos.toByteArray(), codepage );\n</code></pre>\n\n<p>or better</p>\n\n<pre><code>baos.toString( codepage );\n</code></pre>\n\n<p>For the String constructor the <code>codepage</code> can be a String or an instance of <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/charset/Charset.html\">java.nio.charset.Charset</a>. A possible value is <a href=\"http://docs.oracle.com/javase/7/docs/api/java/nio/charset/StandardCharsets.html#UTF_8\">java.nio.charset.StandardCharsets.UTF_8</a>.</p>\n\n<p>The method toString accept only a String as <code>codepage</code> parameter (stand Java 8).</p>\n    "},{"t":"How to upload files to server using JSP/Servlet?","l":"http://stackoverflow.com/questions/2422468/how-to-upload-files-to-server-using-jsp-servlet","q":"\n\n<p>How can I upload files to server using JSP/Servlet? I tried this:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form action=\"upload\" method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"description\" /&gt;\n    &lt;input type=\"file\" name=\"file\" /&gt;\n    &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>However, I only get the file name, not the file content. When I add  <code>enctype=\"multipart/form-data\"</code> to the <code>&lt;form&gt;</code>, then <code>request.getParameter()</code> returns <code>null</code>. </p>\n\n<p>During research I stumbled upon <a href=\"http://commons.apache.org/fileupload\">Apache Common FileUpload</a>. I tried this:</p>\n\n<pre><code>FileItemFactory factory = new DiskFileItemFactory();\nServletFileUpload upload = new ServletFileUpload(factory);\nList items = upload.parseRequest(request); // This line is where it died.\n</code></pre>\n\n<p>Unfortunately, the servlet threw an exception without a clear message and cause. Here is the stacktrace:</p>\n\n<pre><code>SEVERE: Servlet.service() for servlet UploadServlet threw exception\njavax.servlet.ServletException: Servlet execution threw an exception\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:313)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)\n    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:852)\n    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)\n    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n    at java.lang.Thread.run(Thread.java:637)\n</code></pre>\n    ","a":"\n<h2>Introduction</h2>\n\n<p>To browse and select a file for upload you need a HTML <code>&lt;input type=\"file\"&gt;</code> field in the form. As stated in the <a href=\"http://www.w3.org/TR/html4/interact/forms.html\">HTML specification</a> you have to use the <code>POST</code> method and the <code>enctype</code> attribute of the form has to be set to <code>\"multipart/form-data\"</code>.</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;form action=\"upload\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n    &lt;input type=\"text\" name=\"description\" /&gt;\n    &lt;input type=\"file\" name=\"file\" /&gt;\n    &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>After submitting such a form, the binary multipart form data is available in the request body in <a href=\"http://stackoverflow.com/questions/12156068/params-not-getting-passed-to-backing-bean-for-hcommandlink-under-richpopuppane/12159693#12159693\">a different format</a> than when the <code>enctype</code> isn't set.</p>\n\n<p>Before Servlet 3.0, the Servlet API didn't natively support <code>multipart/form-data</code>. It supports only the default form enctype of <code>application/x-www-form-urlencoded</code>. The <code>request.getParameter()</code> and consorts would all return <code>null</code> when using multipart form data. This is where the well known <a href=\"http://commons.apache.org/fileupload\">Apache Commons FileUpload</a> came into the picture.</p>\n\n<h2>Don't manually parse it!</h2>\n\n<p>You can in theory parse the request body yourself based on <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/ServletRequest.html#getInputStream%28%29\"><code>ServletRequest#getInputStream()</code></a>. However, this is a precise and tedious work which requires precise knowledge of <a href=\"http://www.faqs.org/rfcs/rfc2388.html\">RFC2388</a>. You shouldn't try to do this on your own or copypaste some homegrown library-less code found elsewhere on the Internet. Many online sources have failed hard in this, such as roseindia.net. See also <a href=\"http://stackoverflow.com/questions/5038798/uploading-of-pdf-file\">uploading of pdf file</a>. You should rather use a real library which is used (and implicitly tested!) by millions of users for years. Such a library has proven its robustness.</p>\n\n<h2>When you're already on Servlet 3.0 or newer, use native API</h2>\n\n<p>If you're using at least Servlet 3.0 (Tomcat 7, JBoss AS 6, GlassFish 3, etc), then you can just use standard API provided <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getParts()\"><code>HttpServletRequest#getPart()</code></a> to collect the individual multipart form data items (most Servlet 3.0 implementations actually use Apache Commons FileUpload under the covers for this!). This is a bit less convenienced than when using pure Apache Commons FileUpload (a custom utility method is needed to get the filename, this is fixed in the newer Servlet 3.1, see later), but it is workable and easier to use if you already know the input field names beforehand like as you would do with <code>getParameter()</code>. Also, normal form fields are since Servlet 3.0 available by <code>getParameter()</code> the usual way. </p>\n\n<p>First annotate your servlet with <a href=\"http://docs.oracle.com/javaee/6/api/javax/servlet/annotation/MultipartConfig.html\"><code>@MultipartConfig</code></a> in order to let it recognize and support <code>multipart/form-data</code> requests and thus get <code>getPart()</code> to work:</p>\n\n<pre><code>@WebServlet(\"/upload\")\n@MultipartConfig\npublic class UploadServlet extends HttpServlet {\n    // ...\n}\n</code></pre>\n\n<p>Then, implement its <code>doPost()</code> as follows:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    String description = request.getParameter(\"description\"); // Retrieves &lt;input type=\"text\" name=\"description\"&gt;\n    Part filePart = request.getPart(\"file\"); // Retrieves &lt;input type=\"file\" name=\"file\"&gt;\n    String fileName = getFileName(filePart);\n    InputStream fileContent = filePart.getInputStream();\n    // ... (do your job here)\n}\n\nprivate static String getFileName(Part part) {\n    for (String cd : part.getHeader(\"content-disposition\").split(\";\")) {\n        if (cd.trim().startsWith(\"filename\")) {\n            String fileName = cd.substring(cd.indexOf('=') + 1).trim().replace(\"\\\"\", \"\");\n            return fileName.substring(fileName.lastIndexOf('/') + 1).substring(fileName.lastIndexOf('\\\\') + 1); // MSIE fix.\n        }\n    }\n    return null;\n}\n</code></pre>\n\n<p>Note the MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</p>\n\n<h2>When you're already on Servlet 3.1 or newer</h2>\n\n<p>Since Servlet 3.1 (Tomcat 8, WildFly 8, GlassFish 4, etc), the <code>Part</code> interface finally got a new method <a href=\"https://docs.oracle.com/javaee/7/api/javax/servlet/http/Part.html#getSubmittedFileName()\"><code>getSubmittedFileName()</code></a> which returns the submitted filename, so the custom utility method isn't needed anymore.</p>\n\n<pre><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    String description = request.getParameter(\"description\"); // Retrieves &lt;input type=\"text\" name=\"description\"&gt;\n    Part filePart = request.getPart(\"file\"); // Retrieves &lt;input type=\"file\" name=\"file\"&gt;\n    String fileName = filePart.getSubmittedFileName();\n    InputStream fileContent = filePart.getInputStream();\n    // ... (do your job here)\n}\n</code></pre>\n\n<h2>When you're not on Servlet 3.0 yet, use Apache Commons FileUpload</h2>\n\n<p>If you're not on Servlet 3.0 yet (isn't it about time to upgrade?), the common practice is to make use of <a href=\"http://commons.apache.org/fileupload\">Apache Commons FileUpload</a> to parse the multpart form data requests. It has an excellent <a href=\"http://commons.apache.org/fileupload/using.html\">User Guide</a> and <a href=\"http://commons.apache.org/fileupload/faq.html\">FAQ</a> (carefully go through both). There's also the O'Reilly (\"<a href=\"http://www.servlets.com/cos/\">cos</a>\") <code>MultipartRequest</code>, but it has some (minor) bugs and isn't actively maintained anymore for years. I wouldn't recommend using it. Apache Commons FileUpload is still actively maintained and currently very mature.</p>\n\n<p>In order to use Apache Commons FileUpload, you need to have at least the following files in your webapp's <code>/WEB-INF/lib</code>: </p>\n\n<ul>\n<li><a href=\"http://commons.apache.org/proper/commons-fileupload/download_fileupload.cgi\"><code>commons-fileupload.jar</code></a> </li>\n<li><a href=\"http://commons.apache.org/proper/commons-io/download_io.cgi\"><code>commons-io.jar</code></a> </li>\n</ul>\n\n<p>Your initial attempt failed most likely because you forgot the commons IO. </p>\n\n<p>Here's a kickoff example how the <code>doPost()</code> of your <code>UploadServlet</code> may look like when using Apache Commons FileUpload:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    try {\n        List&lt;FileItem&gt; items = new ServletFileUpload(new DiskFileItemFactory()).parseRequest(request);\n        for (FileItem item : items) {\n            if (item.isFormField()) {\n                // Process regular form field (input type=\"text|radio|checkbox|etc\", select, etc).\n                String fieldName = item.getFieldName();\n                String fieldValue = item.getString();\n                // ... (do your job here)\n            } else {\n                // Process form file field (input type=\"file\").\n                String fieldName = item.getFieldName();\n                String fileName = FilenameUtils.getName(item.getName());\n                InputStream fileContent = item.getInputStream();\n                // ... (do your job here)\n            }\n        }\n    } catch (FileUploadException e) {\n        throw new ServletException(\"Cannot parse multipart request.\", e);\n    }\n\n    // ...\n}\n</code></pre>\n\n<p>Note the <code>FilenameUtils#getName()</code>. This is a MSIE fix as to obtaining the file name. This browser incorrectly sends the full file path along the name instead of only the file name.</p>\n\n<p>Alternatively you can also wrap this all in a <code>Filter</code> which parses it all automagically and put the stuff back in the parametermap of the request so that you can continue using <code>request.getParameter()</code> the usual way and retrieve the uploaded file by <code>request.getAttribute()</code>. <a href=\"http://balusc.blogspot.com/2007/11/multipartfilter.html\">You can find an example in this blog article</a>.</p>\n\n<h2>Workaround for GlassFish3 bug of <code>getParameter()</code> still returning <code>null</code></h2>\n\n<p>Note that Glassfish versions older than 3.1.2 had <a href=\"http://java.net/jira/browse/GLASSFISH-16740\">a bug</a> wherein the <code>getParameter()</code> still returns <code>null</code>. If you are targeting such a container and can't upgrade it, then you need to extract the value from <code>getPart()</code> as follows instead:</p>\n\n<pre><code>    String description = getValue(request.getPart(\"description\")); // Retrieves &lt;input type=\"text\" name=\"description\"&gt;\n</code></pre>\n\n<p>With this utility method:</p>\n\n<pre><code>private static String getValue(Part part) throws IOException {\n    BufferedReader reader = new BufferedReader(new InputStreamReader(part.getInputStream(), \"UTF-8\"));\n    StringBuilder value = new StringBuilder();\n    char[] buffer = new char[1024];\n    for (int length = 0; (length = reader.read(buffer)) &gt; 0;) {\n        value.append(buffer, 0, length);\n    }\n    return value.toString();\n}\n</code></pre>\n\n<h2>Saving uploaded file (don't ever use <code>getRealPath()</code>!)</h2>\n\n<p>Head to the following answers for detail on properly saving the obtained <code>InputStream</code> (the <code>fileContent</code> variable as shown in the above code snippets) to disk or database:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/18664579/recommended-way-to-save-files-uploaded-to-a-tomcat-servlet/18664715#18664715\">Recommended way to save uploaded files in a servlet application</a></li>\n<li><a href=\"http://stackoverflow.com/questions/8516387/how-i-save-and-retrieve-an-image-on-my-server-in-a-java-webapp/8521981#8521981\">How I save and retrieve an image on my server in a java webapp</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7033676/how-to-upload-an-image-and-save-it-in-database/7033945#7033945\">How to upload an image and save it in database?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/19138706/how-to-convert-part-to-blob-so-i-can-store-it-in-mysql/19139125#19139125\">How to convert Part to Blob, so I can store it in MySQL?</a></li>\n</ul>\n\n<h2>Serving uploaded file</h2>\n\n<p>Head to the following answers for detail on properly serving the saved file from disk or database back to the client:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/4543936/load-images-from-outside-of-webapps-webcontext-deploy-folder-using-hgraphi/4543951#4543951\">Load images from outside of webapps / webcontext / deploy folder using &lt;h:graphicImage&gt; or &lt;img&gt; tag</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2340406/how-to-retrieve-and-display-images-from-a-database-in-a-jsp-page/2341322#2341322\">How to retrieve and display images from a database in a JSP page?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/1812244/simplest-way-to-serve-static-data-from-outside-the-application-server-in-a-java/1812356#1812356\">Simplest way to serve static data from outside the application server in a Java web application</a></li>\n<li><a href=\"http://stackoverflow.com/questions/132052/servlet-for-serving-static-content/29991447#29991447\">Abstract template for static resource servlet supporting HTTP caching</a></li>\n</ul>\n\n<h2>Ajaxifying the form</h2>\n\n<p>Head to the following answers how to upload using Ajax (and jQuery). Do note that the servlet code to collect the form data does not need to be changed for this! Only the way how you respond may be changed, but this is rather trivial (i.e. instead of forwarding to JSP, just print some JSON or XML or even plain text depending on whatever the script responsible for the Ajax call is expecting).</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6914152/how-to-upload-files-to-server-using-jsp-servlet-and-ajax\">How to upload files to server using JSP/Servlet and Ajax?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/9395911/sending-a-file-as-multipart-through-xmlhttprequest\">sending a file as multipart through xmlHttpRequest</a></li>\n<li><a href=\"http://stackoverflow.com/questions/7114087/html5-file-upload-to-java-servlet\">HTML5 File Upload to Java Servlet</a></li>\n</ul>\n\n<hr>\n\n<p>Hope this all helps :)</p>\n    "},{"t":"How do I split a string with any whitespace chars as delimiters?","l":"http://stackoverflow.com/questions/225337/how-do-i-split-a-string-with-any-whitespace-chars-as-delimiters","q":"\n\n<p>What regex pattern would need I to pass to the <code>java.lang.String.split()</code> method to split a String into an Array of substrings using all whitespace characters (' ', '\\t', '\\n', etc.) as delimiters?</p>\n    ","a":"\n<p>Something in the lines of</p>\n\n<pre><code>myString.split(\"\\\\s+\");\n</code></pre>\n\n<p>This groups all white spaces as a delimiter. </p>\n\n<p>So if I have the string:</p>\n\n<p><code>\"Hello[space][tab]World\"</code></p>\n\n<p>This should yield the strings <code>\"Hello\"</code> and <code>\"World\"</code> and omit the empty space between the <code>[space]</code> and the <code>[tab]</code>.</p>\n\n<p>As VonC pointed out, the backslash should be escaped, because Java would first try to escape the string to a special character, and send <em>that</em> to be parsed. What you want, is the literal <code>\"\\s\"</code>, which means, you need to pass <code>\"\\\\s\"</code>. It can get a bit confusing.</p>\n\n<p>The <code>\\\\s</code> is equivalent to <code>[ \\\\t\\\\n\\\\x0B\\\\f\\\\r]</code></p>\n    "},{"t":"In Java, what is the best way to determine the size of an object?","l":"http://stackoverflow.com/questions/52353/in-java-what-is-the-best-way-to-determine-the-size-of-an-object","q":"\n\n<p>For example, let's say I have an application that can read in a CSV file with piles of data rows.  I give the user a summary of the number of rows based on types of data, but I want to make sure that I don't read in too many rows of data and cause <code>OutOfMemoryError</code>s.  Each row translates into an object.  Is there an easy way to find out the size of that object programmatically?  Is there a reference that defines how large primitive types and object references are for a <code>VM</code>?</p>\n\n<p>Right now, I have code that says read up to <strong>32,000 rows</strong>, but I'd also like to have code that says read as many rows as possible until I've used <strong>32MB</strong> of memory.  Maybe that is a different question, but I'd still like to know. </p>\n    ","a":"\n<p>You can use the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/instrument/Instrumentation.html\">java.lang.instrument package</a></p>\n\n<p>Compile and put this class in a JAR:</p>\n\n<pre><code>import java.lang.instrument.Instrumentation;\n\npublic class ObjectSizeFetcher {\n    private static Instrumentation instrumentation;\n\n    public static void premain(String args, Instrumentation inst) {\n        instrumentation = inst;\n    }\n\n    public static long getObjectSize(Object o) {\n        return instrumentation.getObjectSize(o);\n    }\n}\n</code></pre>\n\n<p>Add the following to your <code>MANIFEST.MF</code>:</p>\n\n<pre><code>Premain-Class: ObjectSizeFetcher\n</code></pre>\n\n<p>Use getObjectSize:</p>\n\n<pre><code>public class C {\n    private int x;\n    private int y;\n\n    public static void main(String [] args) {\n        System.out.println(ObjectSizeFetcher.getObjectSize(new C()));\n    }\n}\n</code></pre>\n\n<p>Invoke with:</p>\n\n<pre><code>java -javaagent:ObjectSizeFetcherAgent.jar C\n</code></pre>\n    "},{"t":"How can I tell if I'm running in 64-bit JVM or 32-bit JVM (from within a program)?","l":"http://stackoverflow.com/questions/2062020/how-can-i-tell-if-im-running-in-64-bit-jvm-or-32-bit-jvm-from-within-a-program","q":"\n\n<p>How can I tell if the JVM my application runs in is 32 bit or 64-bit?  Specifically, what function or  preference do I access to detect this within the program?</p>\n    ","a":"\n<p>Sun has a Java System property to determine the bitness of the JVM: 32 or 64:</p>\n\n<pre><code>sun.arch.data.model=32 // 32 bit JVM\nsun.arch.data.model=64 // 64 bit JVM\n</code></pre>\n\n<p>You can use</p>\n\n<pre><code>System.getProperty(\"sun.arch.data.model\") \n</code></pre>\n\n<p>to determine if its 32/64 from the program.</p>\n\n<p>From the <a href=\"http://www.oracle.com/technetwork/java/hotspotfaq-138619.html#64bit_detection\">sun.docs</a>:</p>\n\n<blockquote>\n  <p>When writing Java code, how do I\n  distinguish between 32 and 64-bit\n  operation?</p>\n  \n  <p>There's no public API that allows you\n  to distinguish between 32 and 64-bit\n  operation. Think of 64-bit as just\n  another platform in the write once,\n  run anywhere tradition. However, if\n  you'd like to write code which is\n  platform specific (shame on you), the\n  system property sun.arch.data.model\n  has the value \"32\", \"64\", or\n  \"unknown\".</p>\n</blockquote>\n\n<p>The only good reason is if your java\n code is dependent upon native libraries\n and your code needs to determine which\n version (32 or 64bit) to load on startup.</p>\n    "},{"t":"How to append text to an existing file in Java","l":"http://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","q":"\n\n<p>I need to append text repeatedly to an existing file in Java. How do I do that?</p>\n    ","a":"\n<p>Are you doing this for logging purposes?  If so there are <a href=\"http://en.wikipedia.org/wiki/Java_logging_framework\">several libraries for this</a>. Two of the most popular are <a href=\"http://logging.apache.org/log4j/\">Log4j</a> and <a href=\"http://logback.qos.ch/\">Logback</a>.</p>\n\n<p>If you just want something simple, this will work:</p>\n\n<h3>Java 7</h3>\n\n<pre><code>try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"myfile.txt\", true)))) {\n    out.println(\"the text\");\n}catch (IOException e) {\n    //exception handling left as an exercise for the reader\n}\n</code></pre>\n\n<h3>Older Java</h3>\n\n<pre><code>try {\n    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"myfile.txt\", true)));\n    out.println(\"the text\");\n    out.close();\n} catch (IOException e) {\n    //exception handling left as an exercise for the reader\n}\n</code></pre>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n<li>The second parameter to the <code>FileWriter</code> constructor will tell it to append to the file (as opposed to writing a new file).</li>\n<li>Using a <code>BufferedWriter</code> is recommended for an expensive writer (such as <code>FileWriter</code>).</li>\n<li>Using a <code>PrintWriter</code> gives you access to <code>println</code> syntax that you're probably used to from <code>System.out</code>.</li>\n<li>But the <code>BufferedWriter</code> and <code>PrintWriter</code> wrappers are not strictly necessary.</li>\n</ul>\n    "},{"t":"Is there anything like .NET's NotImplementedException in Java?","l":"http://stackoverflow.com/questions/2329358/is-there-anything-like-nets-notimplementedexception-in-java","q":"\n\n<p>Is there anything like .NET's <code>NotImplementedException</code> in Java?</p>\n    ","a":"\n<p><a href=\"http://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/NotImplementedException.html\">Commons Lang</a> has it. Or you could throw an <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/UnsupportedOperationException.html\">UnsupportedOperationException</a>.</p>\n    "},{"t":"Calling remove in foreach loop in Java [duplicate]","l":"http://stackoverflow.com/questions/1196586/calling-remove-in-foreach-loop-in-java","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/223918/iterating-through-a-list-avoiding-concurrentmodificationexception-when-removing\" dir=\"ltr\">Iterating through a list, avoiding ConcurrentModificationException when removing in loop</a>\n                <span class=\"question-originals-answer-count\">\n                    14 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>In Java, is it legal to call remove on a collection when iterating through the collection using a foreach loop?  For instance:</p>\n\n<pre><code>List&lt;String&gt; names = ....\nfor (String name : names) {\n   // Do something\n   names.remove(name).\n}\n</code></pre>\n\n<p>As an addendum, is it legal to remove items that have not been iterated over yet? For instance, </p>\n\n<pre><code>//Assume that the names list as duplicate entries\nList&lt;String&gt; names = ....\nfor (String name : names) {\n    // Do something\n    while (names.remove(name));\n}\n</code></pre>\n    ","a":"\n<p>To safely remove from a collection while iterating over it you should use an Iterator.</p>\n\n<p>For example:</p>\n\n<pre><code>List&lt;String&gt; names = ....\nIterator&lt;String&gt; i = names.iterator();\nwhile (i.hasNext()) {\n   String s = i.next(); // must be called before you can call i.remove()\n   // Do something\n   i.remove();\n}\n</code></pre>\n\n<p>From the <a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html\">Java Documentation</a> :</p>\n\n<blockquote>\n  <p>The iterators returned by this class's iterator and listIterator\n  methods are fail-fast: if the list is structurally modified at any\n  time after the iterator is created, in any way except through the\n  iterator's own remove or add methods, the iterator will throw a\n  ConcurrentModificationException. Thus, in the face of concurrent\n  modification, the iterator fails quickly and cleanly, rather than\n  risking arbitrary, non-deterministic behavior at an undetermined time\n  in the future.</p>\n</blockquote>\n\n<p>Perhaps what is unclear to many novices is the fact that iterating over a list using the for/foreach constructs implicitly creates an iterator which is necessarily inaccessible. This info can be found <a href=\"http://docs.oracle.com/javase/1.5.0/docs/guide/language/foreach.html\">here</a></p>\n    "},{"t":"Can't start Eclipse - Java was started but returned exit code=13","l":"http://stackoverflow.com/questions/11461607/cant-start-eclipse-java-was-started-but-returned-exit-code-13","q":"\n\n<p>I am trying to get my first taste of Android development using Eclipse. I ran into this problem when trying to run Eclipse, having installed version 4.2 only minutes ago.</p>\n\n<p>After first trying to start Eclipse without any parameters to specify the Java VM, I got an error message saying it couldn't find a Java VM called javaw.exe inside the Eclipse folder, so I found where Java was installed and specified that location as the parameter in the shortcut's target. Now I get a different error, \"Java was started but returned exit code=13\".</p>\n\n<p>Similar questions seem to indicate that it's a 32-bit/64-bit conflict, but I'm 99% positive that I downloaded 64-bit versions of both Eclipse and Java (RE 7u5), which I chose because I have 64-bit Windows 7. </p>\n\n<ul>\n<li>If anyone knows how to confirm that my Eclipse and Java are 64-bit,\nthat'd be appreciated.</li>\n<li>If you think my problem is a different one, please help!</li>\n<li>Please speak as plainly as you can, as I am totally new to Eclipse\nand Java.</li>\n</ul>\n\n<p>Shortcut Target: \"C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\eclipse.exe\" -vm \"C:\\Program Files (x86)\\Java\\jre7\\bin\\javaw.exe\"</p>\n\n<p>Full error code:</p>\n\n<pre><code>Java was started but returned exit code=13\nC:\\Program Files (x86)\\Java\\jre7\\bin\\javaw.exe\n-Xms40m\n-Xmx512m\n-XX:MaxPermSize=256m\n-jar C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\\\plugins/org.eclipse.equinox.launcher_1.30v20120522-1813.jar\n-os win32\n-ws win32\n-arch x86_64\n-showsplash C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\\\plugins\\org.eclipse.platform_4.2.0.v201206081400\\splash.bmp\n-launcher C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\eclipse.exe\n-name Eclipse\n--launcher.library C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\\\plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.v201205221813\\eclipse_1503.dll\n-startup C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\\\plugins/org.eclipse.equinox.launcher_1.30v20120522-1813.jar\n--launcher.overrideVmargs\n-exitdata 1e30_5c\n-vm C:\\Program Files (x86)\\Java\\jre7\\bin\\javaw.exe\n-vmargs\n-Xms40m\n-Xmx512m\n-XX:MaxPermSize=256m\n-jar C:\\Program Files\\Eclipse-SDK-4.2-win32-x86_64\\eclipse\\\\plugins/org.eclipse.equinox.launcher_1.30v20120522-1813.jar\n</code></pre>\n    ","a":"\n<p>Your version of Eclipse looks OK, based on the filename.</p>\n\n<p>To check your version of Java, run </p>\n\n<pre>  java -version \n</pre>\n\n<p>in a console (command prompt). On Windows 7 with 64-bit Java 6 I get:</p>\n\n<pre>  java version \"1.6.0_27\"\n  Java(TM) SE Runtime Environment (build 1.6.0_27-b07)\n  Java HotSpot(TM) 64-Bit Server VM (build 20.2-b06, mixed mode)\n</pre>\n\n<p>Note the 3rd line, which shows that this is a 64-bit version. </p>\n\n<p>On a 32-bit version you'll get something like:</p>\n\n<pre>  Java HotSpot(TM) Client VM (build 20.1-b02, mixed mode, sharing) \n</pre>\n\n<p>Check that this is the version being used by Eclipse, as shown in your error code. If not, call that version explicitly, by running the following command in a console (command prompt):</p>\n\n<pre>  \"C:\\Program Files (x86)\\Java\\jre7\\bin\\java.exe\" -version\n</pre>\n\n<p>(using the correct path to <code>java.exe</code> as shown in your error message, not necessarily the path shown in my example above!)</p>\n    "},{"t":"Converting ISO 8601-compliant String to java.util.Date","l":"http://stackoverflow.com/questions/2201925/converting-iso-8601-compliant-string-to-java-util-date","q":"\n\n<p>I am trying to convert an <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> formatted String to a java.util.Date. </p>\n\n<p>I found the pattern \"yyyy-MM-dd'T'HH:mm:ssZ\" to be ISO8601-compliant if used with a Locale (compare sample).\nHowever, using the java.text.SimpleDateFormat, I cannot convert the correctly formatted String \"2010-01-01T12:00:00+01:00\". I have to convert it first to \"2010-01-01T12:00:00+0100\", without the colon. \nSo, the current solution is</p>\n\n<pre><code>SimpleDateFormat ISO8601DATEFORMAT = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ssZ\", Locale.GERMANY);\nString date = \"2010-01-01T12:00:00+01:00\".replaceAll(\"\\\\+0([0-9]){1}\\\\:00\", \"+0$100\");\nSystem.out.println(ISO8601DATEFORMAT.parse(date));\n</code></pre>\n\n<p>which obviously isn't that nice. Am I missing something or is there a better solution?</p>\n\n<p><strong>answer</strong></p>\n\n<p>Thanks to JuanZe's comment, I found the <a href=\"http://www.joda.org/joda-time/\">Joda-Time</a> magic, it is also <a href=\"http://johannburkard.de/blog/programming/java/date-time-parsing-formatting-joda-time.html\">described here</a>.\nSo, the solution is</p>\n\n<pre><code>DateTimeFormatter parser2 = ISODateTimeFormat.dateTimeNoMillis();\nString jtdate = \"2010-01-01T12:00:00+01:00\";\nSystem.out.println(parser2.parseDateTime(jtdate));\n</code></pre>\n\n<p>Or more simply, use the default parser via the constructor:</p>\n\n<pre><code>DateTime dt = new DateTime( \"2010-01-01T12:00:00+01:00\" ) ;\n</code></pre>\n\n<p>To me, this is nice.</p>\n    ","a":"\n<p>Unfortunately, the time zone formats available to <a href=\"http://docs.oracle.com/javase/7/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat</a> (Java 6 and earlier) are not <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> compliant. SimpleDateFormat understands time zone strings like \"GMT+01:00\" or \"+0100\", the latter according to <a href=\"http://www.ietf.org/rfc/rfc0822.txt\">RFC # 822</a>.</p>\n\n<p>Even if Java 7 added support for time zone descriptors according to ISO 8601, SimpleDateFormat is still not able to properly parse a complete date string, as it has no support for optional parts.</p>\n\n<p>Reformatting your input string using regexp is certainly one possibility, but the replacement rules are not as simple as in your question:</p>\n\n<ul>\n<li>Some time zones are not full hours off <a href=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\">UTC</a>, so the string does not necessarily end with \":00\".</li>\n<li>ISO8601 allows only the number of hours to be included in the time zone, so \"+01\" is equivalent to \"+01:00\"</li>\n<li>ISO8601 allows the usage of \"Z\" to indicate UTC instead of \"+00:00\".</li>\n</ul>\n\n<p>The easier solution is possibly to use the data type converter in JAXB, since JAXB must be able to parse ISO8601 date string according to the XML Schema specification. <code>javax.xml.bind.DatatypeConverter.parseDateTime(\"2010-01-01T12:00:00Z\")</code> will give you a <code>Calendar</code> object and you can simply use getTime() on it, if you need a <code>Date</code> object.</p>\n\n<p>You could probably use <a href=\"http://www.joda.org/joda-time/\">Joda-Time</a> as well, but I don't know why you should bother with that.</p>\n    "},{"t":"How do I invoke a Java method when given the method name as a string?","l":"http://stackoverflow.com/questions/160970/how-do-i-invoke-a-java-method-when-given-the-method-name-as-a-string","q":"\n\n<p>If I have two variables:</p>\n\n<pre><code>Object obj;\nString methodName = \"getName\";\n</code></pre>\n\n<p>Without knowing the class of <code>obj</code>, how can I call the method identified by <code>methodName</code> on it?</p>\n\n<p>The method being called has no parameters, and a <code>String</code> return value. It's <em>a getter for a Java bean</em>.</p>\n    ","a":"\n<p>Coding from the hip, it would be something like:</p>\n\n<pre><code>java.lang.reflect.Method method;\ntry {\n  method = obj.getClass().getMethod(methodName, param1.class, param2.class, ..);\n} catch (SecurityException e) {\n  // ...\n} catch (NoSuchMethodException e) {\n  // ...\n}\n</code></pre>\n\n<p>The parameters identify the very specific method you need (if there are several overloaded available, if the method has no arguments, only give methodName).</p>\n\n<p>Then you invoke that method by calling</p>\n\n<pre><code>try {\n  method.invoke(obj, arg1, arg2,...);\n} catch (IllegalArgumentException e) {\n} catch (IllegalAccessException e) {\n} catch (InvocationTargetException e) {\n</code></pre>\n\n<p>Again, leave out the arguments in .invoke, if you don't have any. But yeah. Read about <a href=\"http://java.sun.com/docs/books/tutorial/reflect/index.html\">Java Reflection</a></p>\n    "},{"t":"ant warning: “'includeantruntime' was not set”","l":"http://stackoverflow.com/questions/5103384/ant-warning-includeantruntime-was-not-set","q":"\n\n<p>I receive the following warning:</p>\n\n<pre><code>[javac] build.xml:9: warning: 'includeantruntime' was not set, \ndefaulting to build.sysclasspath=last; set to false for repeatable builds\n</code></pre>\n\n<p>What does this mean?</p>\n    ","a":"\n<h1>Ant Runtime</h1>\n\n<p>Simply set <code>includeantruntime=\"false\"</code>:</p>\n\n<pre><code>&lt;javac includeantruntime=\"false\" ...&gt;...&lt;/javac&gt;\n</code></pre>\n\n<p>If you have to use the <code>javac</code>-task multiple times you might want to consider using <a href=\"http://ant.apache.org/manual/Tasks/presetdef.html\"><code>PreSetDef</code></a> to define your own <code>javac</code>-task that always sets <code>includeantruntime=\"false\"</code>.</p>\n\n<h1>Additional Details</h1>\n\n<p>From <a href=\"http://www.coderanch.com/t/503097/tools/warning-includeantruntime-was-not-set\">http://www.coderanch.com/t/503097/tools/warning-includeantruntime-was-not-set</a>:</p>\n\n<blockquote>\n  <p>That's caused by a misfeature\n  introduced in Ant 1.8. Just add an\n  attribute of that name to the javac\n  task, set it to false, and forget it\n  ever happened.</p>\n</blockquote>\n\n<p>From <a href=\"http://ant.apache.org/manual/Tasks/javac.html\">http://ant.apache.org/manual/Tasks/javac.html</a>:</p>\n\n<blockquote>\n  <p>Whether to include the Ant run-time\n  libraries in the classpath; defaults\n  to yes, unless build.sysclasspath is\n  set. It is usually best to set this to\n  false so the script's behavior is not\n  sensitive to the environment in which\n  it is run.</p>\n</blockquote>\n    "},{"t":"Why doesn't JUnit provide assertNotEquals methods?","l":"http://stackoverflow.com/questions/1096650/why-doesnt-junit-provide-assertnotequals-methods","q":"\n\n<p>Does anybody know why JUnit 4 provides <code>assertEquals(foo,bar)</code> but not <code>assertNotEqual(foo,bar)</code> methods? </p>\n\n<p>It provides <code>assertNotSame</code> (corresponding to <code>assertSame</code>) and <code>assertFalse</code> (corresponding to <code>assertTrue</code>), so it seems strange that they didn't bother including <code>assertNotEqual</code>.</p>\n\n<p>By the way, I know that JUnit-addons provides the methods I'm looking for. I'm just asking out of curiosity.</p>\n    ","a":"\n<p>I'd suggest you use the newer <a href=\"http://junit.sourceforge.net/doc/ReleaseNotes4.4.html\"><code>assertThat()</code></a> style asserts, which can easily describe all kinds of negations and automatically build a description of what you expected and what you got if the assertion fails:</p>\n\n<pre><code>assertThat(objectUnderTest, is(not(someOtherObject)));\nassertThat(objectUnderTest, not(someOtherObject));\nassertThat(objectUnderTest, not(equalTo(someOtherObject)));\n</code></pre>\n\n<p>All three options are equivalent, choose the one you find most readable.</p>\n\n<p>To use the simple names of the methods (and allow this tense syntax to work), you need these imports:</p>\n\n<pre><code>import static org.junit.Assert.*;\nimport static org.hamcrest.CoreMatchers.*;\n</code></pre>\n    "},{"t":"Is a Java string really immutable?","l":"http://stackoverflow.com/questions/20945049/is-a-java-string-really-immutable","q":"\n\n<p>We all know that <code>String</code> is immutable in Java, but check the following code:</p>\n\n<pre><code>String s1 = \"Hello World\";  \nString s2 = \"Hello World\";  \nString s3 = s1.substring(6);  \nSystem.out.println(s1); // Hello World  \nSystem.out.println(s2); // Hello World  \nSystem.out.println(s3); // World  \n\nField field = String.class.getDeclaredField(\"value\");  \nfield.setAccessible(true);  \nchar[] value = (char[])field.get(s1);  \nvalue[6] = 'J';  \nvalue[7] = 'a';  \nvalue[8] = 'v';  \nvalue[9] = 'a';  \nvalue[10] = '!';  \n\nSystem.out.println(s1); // Hello Java!  \nSystem.out.println(s2); // Hello Java!  \nSystem.out.println(s3); // World  \n</code></pre>\n\n<p>Why does this program operate like this? And why is the value of <code>s1</code> and <code>s2</code> changed, but not <code>s3</code>?</p>\n    ","a":"\n<p><code>String</code> is immutable* but this only means you cannot change it using its public API. </p>\n\n<p>What you are doing here is circumventing the normal API, using reflection. The same way, you can change the values of enums, change the lookup table used in Integer autoboxing etc.</p>\n\n<p>Now, the reason <code>s1</code> and <code>s2</code> change value, is that they both refer to the same interned string. The compiler does this (as mentioned by other answers). </p>\n\n<p>The reason <code>s3</code> does <em>not</em> was actually a bit surprising to me, as I thought it would share the <code>value</code> array (<a href=\"http://java-performance.info/changes-to-string-java-1-7-0_06/\">it did in earlier version of Java</a>, before Java 7u6). However, looking at the source code of <code>String</code>, we can see that the <code>value</code> character array for a substring is actually copied (using <code>Arrays.copyOfRange(..)</code>). This is why it goes unchanged.</p>\n\n<p>You can install a <code>SecurityManager</code>, to avoid malicious code to do such things. But keep in mind that some libraries depend on using these kind of reflection tricks (typically ORM tools, AOP libraries etc).</p>\n\n<p>*) I initially wrote that <code>String</code>s aren't really immutable, just \"effective immutable\". This might be misleading in the current implementation of <code>String</code>, where the <code>value</code> array is indeed marked <code>private final</code>. It's still worth noting, though, that there is no way to declare an array in Java as immutable, so care must be taken not to expose it outside its class, even with the proper access modifiers.</p>\n\n<hr>\n\n<p>As this topic seems overwhelmingly popular, here's some suggested further reading: <a href=\"http://www.javaspecialists.eu/talks/oslo09/ReflectionMadness.pdf\">Heinz Kabutz's Reflection Madness talk</a> from JavaZone 2009, which covers a lot of the issues in the OP, along with other reflection... well... madness. </p>\n\n<p>It covers why this is sometimes useful. And why, most of the time, you should avoid it. :-)</p>\n    "},{"t":"Java optional parameters","l":"http://stackoverflow.com/questions/965690/java-optional-parameters","q":"\n\n<p>How do I use optional parameters in Java?  What specification supports optional parameters?</p>\n    ","a":"\n<p>varargs could do that (in a way). Other than that, all variables in the declaration of the method must be supplied. If you want a variable to be optional, you can overload the method using a signature which doesn't require the parameter.</p>\n\n<pre><code>private boolean defaultOptionalFlagValue = true;\n\npublic void doSomething(boolean optionalFlag) {\n    ...\n}\n\npublic void doSomething() {\n    doSomething(defaultOptionalFlagValue);\n}\n</code></pre>\n    "},{"t":"Java: when to use static methods","l":"http://stackoverflow.com/questions/2671496/java-when-to-use-static-methods","q":"\n\n<p>I am wondering when to use static methods? Say If i have a class with a few getters and setters, a method or two, and i want those methods only to be invokable on an instance object of the class. Does this mean i should use a static method?</p>\n\n<p>e.g</p>\n\n<pre><code>Obj x = new Obj();\nx.someMethod\n</code></pre>\n\n<p>or</p>\n\n<pre><code>Obj.someMethod\n</code></pre>\n\n<p>(is this the static way?)</p>\n\n<p>I'm rather confused!</p>\n    ","a":"\n<p>One rule-of-thumb: ask yourself \"does it make sense to call this method, even if no Obj has been constructed yet?\"  If so, it should definitely be static.</p>\n\n<p>So in a class <code>Car</code> you might have a method <code>double convertMpgToKpl(double mpg)</code> which would be static, because one might want to know what 35mpg converts to, even if nobody has ever built a Car.  But <code>void setMileage(double mpg)</code> (which sets the efficiency of one particular Car) can't be static since it's inconceivable to call the method before any Car has been constructed.</p>\n\n<p>(Btw, the converse isn't always true: you might sometimes have a method which involves two <code>Car</code> objects, and still want it to be static.  E.g. <code>Car theMoreEfficientOf( Car c1, Car c2 )</code>.  Although this could be converted to a non-static version, some would argue that since there isn't a \"privileged\" choice of which Car is more important, you shouldn't force a caller to choose one Car as the object you'll invoke the method on.  This situation accounts for a fairly small fraction of all static methods, though.)</p>\n    "},{"t":"Where is JAVA_HOME on OSX Yosemite (10.10), Mavericks (10.9), Mountain Lion (10.8) or OSX Lion (10.7)?","l":"http://stackoverflow.com/questions/6588390/where-is-java-home-on-osx-yosemite-10-10-mavericks-10-9-mountain-lion-10","q":"\n\n<p>Java is an optional package on the latest versions of OSX.  </p>\n\n<p>Yet once installed it appears like the <strong>JAVA_HOME</strong> environment variable is <strong>not set properly</strong>.</p>\n    ","a":"\n<p>With the Java optional package or Oracle JDK installed,\n  adding one of the following lines to your <strong>~/.bash_profile</strong> file will set the environment variable accordingly.</p>\n\n<pre><code>export JAVA_HOME=\"$(/usr/libexec/java_home -v 1.6)\"\nor\nexport JAVA_HOME=\"$(/usr/libexec/java_home -v 1.7)\"\nor\nexport JAVA_HOME=\"$(/usr/libexec/java_home -v 1.8)\"\n</code></pre>\n\n<p>Update: added <strong>-v</strong> flag based on <em>Jilles van Gurp</em> response.</p>\n    "},{"t":"What is Daemon thread in java","l":"http://stackoverflow.com/questions/2213340/what-is-daemon-thread-in-java","q":"\n\n<p>Can anybody tell me what daemon threads are in Java?</p>\n    ","a":"\n<p>A daemon thread is a thread, that does not prevent the JVM from exiting when the program finishes but the thread is still running. An example for a daemon thread is the garbage collection.</p>\n\n<p>You can use the <code>setDaemon()</code> method to change the <code>Thread</code> daemon properties.</p>\n    "},{"t":"Hashset vs Treeset","l":"http://stackoverflow.com/questions/1463284/hashset-vs-treeset","q":"\n\n<p>I've always loved trees, that nice O(n*lg(n)) and the tidiness of them. However, every software engineer I've ever known has asked me pointedly why I would use a <code>TreeSet</code>. From a CS background, I don't think it matters all that much which you use, and I don't care to mess around with hash functions and buckets (in the case of Java).</p>\n\n<p>In which cases should I use a <code>HashSet</code> over a <code>TreeSet</code>?</p>\n    ","a":"\n<p><strong>HashSet is much faster than TreeSet (constant-time versus log-time for most operations like add, remove and contains) but offers no ordering guarantees like TreeSet.</strong></p>\n\n<h2><a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/HashSet.html\">HashSet</a></h2>\n\n<ul>\n<li>class offers constant time performance for the basic operations (add, remove, contains and size). </li>\n<li>it does not guarantee that the order of elements will remain constant over time</li>\n<li>iteration performance depends on the <em>initial capacity</em> and the <em>load factor</em> of the HashSet.\n\n<ul>\n<li>It's quite safe to accept default load factor but you may want to specify an initial capacity that's about twice the size to which you expect the set to grow.</li>\n</ul></li>\n</ul>\n\n<h2><a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html\">TreeSet</a></h2>\n\n<ul>\n<li>guarantees log(n) time cost for the basic operations (add, remove and contains)</li>\n<li>guarantees that elements of set will be sorted (ascending, natural, or the one specified by you via its constructor) (implements <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/SortedSet.html\"><code>SortedSet</code></a>)</li>\n<li>doesn't offer any tuning parameters for iteration performance</li>\n<li>offers a few handy methods to deal with the ordered set like <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html#first--\"><code>first()</code></a>, <code>last()</code>, <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html#headSet-E-\"><code>headSet()</code></a>, and <a href=\"http://docs.oracle.com/javase/8/docs/api/java/util/TreeSet.html#tailSet-E-\"><code>tailSet()</code></a> etc</li>\n</ul>\n\n<h2>Important points:</h2>\n\n<ul>\n<li>Both guarantee duplicate-free collection of elements</li>\n<li>It is generally faster to add elements to the HashSet and then convert the collection to a TreeSet for a duplicate-free sorted traversal.</li>\n<li>None of these implementation are synchronized. That is if multiple threads access a set concurrently, and at least one of the threads modifies the set, it must be synchronized externally.</li>\n<li><strong>LinkedHashSet</strong> is in some sense intermediate between <code>HashSet</code> and <code>TreeSet</code>. Implemented as a hash table with a linked list running through it, however <strong>it provides insertion-ordered iteration which is not same as sorted traversal guaranteed by TreeSet</strong>.</li>\n</ul>\n\n<p>So choice of usage depends entirely on your needs but I feel that even if you need an ordered collection then you should still prefer HashSet to create the Set and then convert it into TreeSet.</p>\n\n<ul>\n<li>e.g. <code>SortedSet&lt;String&gt; s = new TreeSet&lt;String&gt;(hashSet);</code></li>\n</ul>\n    "},{"t":"Why are static variables considered evil?","l":"http://stackoverflow.com/questions/7026507/why-are-static-variables-considered-evil","q":"\n\n<p>I am a Java programmer who is new to the corporate world. Recently I've developed an application using <a href=\"http://en.wikipedia.org/wiki/Groovy_%28programming_language%29\">Groovy</a> and Java. All through the code I've used quite a good number of statics. I was asked by the senior technical lot to cut down on the number of statics used. I've googled about the same, and I find that many programmers are fairly against using static variables.</p>\n\n<p>I find static variables more convenient to use. And I presume that they are efficient too (please correct me if I am wrong), because if I had to make 10,000 calls to a function within a class, I would be glad to make the method static and use a straightforward <code>class.methodCall()</code> on it instead of cluttering the memory with 10,000 instances of the class, right?</p>\n\n<p>Moreover statics reduce the inter-dependencies on the other parts of the code. They can act as perfect state holders. Adding to this I find that statics are widely implemented in some languages like Smalltalk and <a href=\"http://en.wikipedia.org/wiki/Scala_%28programming_language%29\">Scala</a>. So why is this oppression for statics prevalent among programmers (especially in the world of Java)?</p>\n\n<p>PS: please do correct me if my assumptions about statics are wrong.</p>\n    ","a":"\n<p>Static variables represent global state. That's hard to reason about and hard to test: if I create a new instance of an object, I can reason about its new state within tests. If I use code which is using static variables, it could be in any state - and anything could be modifying it.</p>\n\n<p>I could go on for quite a while, but the bigger concept to think about is that the tighter the scope of something, the easier it is to reason about. We're good at thinking about small things, but it's hard to reason about the state of a million line system if there's no modularity. This applies to all sorts of things, by the way - not just static variables.</p>\n    "},{"t":"Java, 3 dots in parameters","l":"http://stackoverflow.com/questions/3158730/java-3-dots-in-parameters","q":"\n\n<p>What do the 3 dots in the following method mean?</p>\n\n<pre><code>public void myMethod(String... strings){\n    // method body\n}\n</code></pre>\n    ","a":"\n<p>It means that zero or more String objects (or an array of them) may be passed as the parameter(s) for that function.</p>\n\n<p>See the \"Arbitrary Number of Arguments\" section here: <a href=\"http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs\">http://java.sun.com/docs/books/tutorial/java/javaOO/arguments.html#varargs</a></p>\n\n<p>In your example, you could call it as any of the following:</p>\n\n<pre><code>myMethod(); // Likely useless, but possible\nmyMethod(\"one\", \"two\", \"three\");\nmyMethod(\"solo\");\nmyMethod(new String[]{\"a\", \"b\", \"c\"});\n</code></pre>\n\n<p><strong>Important Note:</strong> The parameter(s) passed in this way is always an array - even if there's just one. Make sure you treat it that way in the method body.</p>\n\n<p><strong>Important Note 2:</strong> The parameter that gets the <code>...</code> must be the last in the method signature. So, <code>myMethod(int i, String... strings)</code> is okay, but <code>myMethod(String... strings, int i)</code> is not okay.</p>\n\n<p>Thanks to Vash for the clarifications in his comment.</p>\n    "},{"t":"Create instance of generic type in Java?","l":"http://stackoverflow.com/questions/75175/create-instance-of-generic-type-in-java","q":"\n\n<p>Is it possible to create an instance of a generic type in Java? I'm thinking based on what I've seen that the answer is <code>no</code> (<em>due to type erasure</em>), but I'd be interested if anyone can see something I'm missing:</p>\n\n<pre><code>class SomeContainer&lt;E&gt;\n{\n    E createContents()\n    {\n        return what???\n    }\n}\n</code></pre>\n\n<p>EDIT: It turns out that <a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=208860\">Super Type Tokens</a> could be used to resolve my issue, but it requires a lot of reflection-based code, as some of the answers below have indicated.</p>\n\n<p>I'll leave this open for a little while to see if anyone comes up with anything dramatically different than Ian Robertson's <a href=\"http://www.artima.com/weblogs/viewpost.jsp?thread=208860\">Artima Article</a>.</p>\n    ","a":"\n<p>You are correct.  You can't do \"new E\".  But you can change it to</p>\n\n<pre><code>private static class SomeContainer&lt;E&gt;\n{\n    E createContents(Class&lt;E&gt; clazz)\n    {\n        return clazz.newInstance();\n    }\n}\n</code></pre>\n\n<p>It's a pain.  But it works.  Wrapping it in the factory pattern makes it a little more tolerable.</p>\n    "},{"t":"How do I convert a String to an InputStream in Java?","l":"http://stackoverflow.com/questions/782178/how-do-i-convert-a-string-to-an-inputstream-in-java","q":"\n\n<p>Given a string:</p>\n\n<pre><code>String exampleString = \"example\";\n</code></pre>\n\n<p>How do I convert it to an <code>InputStream</code>?</p>\n    ","a":"\n<p>Like this:</p>\n\n<pre><code>InputStream stream = new ByteArrayInputStream(exampleString.getBytes(StandardCharsets.UTF_8));\n</code></pre>\n\n<p>Note that this assumes that you want an InputStream that is a stream of bytes that represent your original string encoded as <em>UTF-8</em>.</p>\n    "},{"t":"try-finally block prevents StackOverflowError","l":"http://stackoverflow.com/questions/12438786/try-finally-block-prevents-stackoverflowerror","q":"\n\n<p>Take a look at the following two methods:</p>\n\n<pre><code>public static void foo() {\n    try {\n        foo();\n    } finally {\n        foo();\n    }\n}\n\npublic static void bar() {\n    bar();\n}\n</code></pre>\n\n<hr>\n\n<p>Running <code>bar()</code> clearly results in a <code>StackOverflowError</code>, but running <code>foo()</code> does not (the program just seems to run indefinitely). <em>Why is that?</em></p>\n    ","a":"\n<p>It doesn't run forever. Each stack overflow causes the code to move to the finally block. The problem is that it will take a really, really long time. The order of time is O(2^N) where N is the maximum stack depth.</p>\n\n<p>Imagine the maximum depth is 5</p>\n\n<pre><code>foo() calls\n    foo() calls\n       foo() calls\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n       finally\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n    finally calls\n       foo() calls\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n       finally\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\nfinally calls\n    foo() calls\n       foo() calls\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n       finally\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n    finally calls\n       foo() calls\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n       finally\n           foo() calls\n              foo() which fails to call foo()\n           finally calls\n              foo() which fails to call foo()\n</code></pre>\n\n<p>To work each level into the finally block take twice as long an the stack depth could be\n10,000 or more. If you can make 10,000,000 calls per second, this will take 10^3003 seconds or longer than the age of the universe.    </p>\n    "},{"t":"Linking to an external URL in Javadoc?","l":"http://stackoverflow.com/questions/1082050/linking-to-an-external-url-in-javadoc","q":"\n\n<p>Something like:</p>\n\n<pre><code>/**\n * See {@linktourl http://google.com}\n */\n</code></pre>\n    ","a":"\n<p>For anyone else coming across this question, Aaron's answer creates a \"See Also\" heading containing the link, i.e.</p>\n\n<pre><code>/**\n * @see &lt;a href=\"http://google.com\"&gt;http://google.com&lt;/a&gt;\n */\n</code></pre>\n\n<p>will render as:</p>\n\n<blockquote>\n  <p><strong>See Also:</strong><br>\n  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"http://google.com\">http://google.com</a></p>\n</blockquote>\n\n<p><br>whereas this:</p>\n\n<pre><code>/**\n * See &lt;a href=\"http://google.com\"&gt;http://google.com&lt;/a&gt;\n */\n</code></pre>\n\n<p>will create an in-line link:</p>\n\n<blockquote>\n  <p>See <a href=\"http://google.com\">http://google.com</a></p>\n</blockquote>\n    "},{"t":"What's the difference between JPA and Hibernate?","l":"http://stackoverflow.com/questions/9881611/whats-the-difference-between-jpa-and-hibernate","q":"\n\n<p>I understand that JPA 2 is a specification and Hibernate is a tool for ORM. Also, I understand that Hibernate has more features than JPA 2. But from a practical point of view, what really is the difference? </p>\n\n<p>I have experience using iBatis and now I'm trying to learn either Hibernate or JPA2. I picked up Pro JPA2 book and it keeps referring to \"JPA provider\". For example:</p>\n\n<blockquote>\n  <p>If you think a feature should be standardized, you should speak up\n  and request it from your JPA provider</p>\n</blockquote>\n\n<p>This confuses me so I have a few questions:</p>\n\n<ul>\n<li>Using JPA2 alone can I fetch data from DB by simply annotating my POJO's</li>\n<li>Is JPA2 supposed to be used with a \"JPA Provider\" e.g TopLink or Hibernate? If so, then what's the benefit of using JPA2 + Hibernate as compared to Hibernate alone?</li>\n<li>Can you recommend a good practical JPA2 book. \"Pro JPA2\" seems more like a bible and reference on JPA2 (It doesn't get into Queries until the later half of the book). Is there a book that takes a problem/solution approach to JPA2?</li>\n</ul>\n    ","a":"\n<p>As you state JPA is just a specification, meaning there is no implementation.  You can annotate your classes as much as you would like with JPA annotations, however without an implementation nothing will happen.  Think of JPA as the guidelines that must be followed or an interface, while Hibernate's JPA implementation is code that meets the API as defined by the JPA specification and provides the under the hood functionality.</p>\n\n<p>When you use Hibernate with JPA you are actually using the Hibernate JPA implementation.  The benefit of this is that you can swap out Hibernate's implementation of JPA for another implementation of the JPA specification.  When you use straight Hibernate you are locking into the implementation because other ORMs may use different methods/configurations and annotations, therefore you cannot just switch over to another ORM.</p>\n\n<p>For a more detailed explanation of this answer read my <a href=\"http://blog-tothought.rhcloud.com//post/2\">blog entry</a>.</p>\n    "},{"t":"What is the equivalent of Java's final in C#?","l":"http://stackoverflow.com/questions/1327544/what-is-the-equivalent-of-javas-final-in-c","q":"\n\n<p>What is the equivalent of Java's <code>final</code> in C#?</p>\n    ","a":"\n<p>The <a href=\"http://en.wikipedia.org/wiki/Final_%28Java%29\"><code>final</code></a> keyword has several usages in Java. It corresponds to both the <a href=\"http://msdn.microsoft.com/en-us/library/88c54tsw.aspx\"><code>sealed</code></a> and <a href=\"http://msdn.microsoft.com/en-us/library/acdd6hb7.aspx\"><code>readonly</code></a> keywords in C#, depending on the context in which it is used.</p>\n\n<h2>Classes</h2>\n\n<p>To prevent subclassing (inheritance from the defined class):</p>\n\n<p><strong>Java</strong>  </p>\n\n<pre><code>public final class MyFinalClass {...}\n</code></pre>\n\n<p><strong>C#</strong></p>\n\n<pre><code>public sealed class MyFinalClass {...}\n</code></pre>\n\n<h2>Methods</h2>\n\n<p>Prevent overriding of a <code>virtual</code> method.</p>\n\n<p><strong>Java</strong></p>\n\n<pre><code>public class MyClass\n{\n    public final void myFinalMethod() {...}\n}\n</code></pre>\n\n<p><strong>C#</strong></p>\n\n<pre><code>public class MyClass : MyBaseClass\n{\n    public sealed override void MyFinalMethod() {...}\n}\n</code></pre>\n\n<p>As Joachim Sauer points out, a notable difference between the two languages here is that Java by default marks all non-static methods as <code>virtual</code>, whereas C# marks them as <code>sealed</code>. Hence, you only need to use the <code>sealed</code> keyword in C# if you want to stop further overriding of a method that has been explicitly marked <code>virtual</code> in the base class.</p>\n\n<h2>Variables</h2>\n\n<p>To only allow a variable to be assigned once:</p>\n\n<p><strong>Java</strong></p>\n\n<pre><code>public final double pi = 3.14; // essentially a constant\n</code></pre>\n\n<p><strong>C#</strong></p>\n\n<pre><code>public readonly double pi = 3.14; // essentially a constant\n</code></pre>\n\n<p>As a side note, the effect of the <code>readonly</code> keyword differs from that of the <a href=\"http://msdn.microsoft.com/en-us/library/e6w8fe1b.aspx\"><code>const</code></a> keyword in that the expression is evaluated at <em>runtime</em> rather than <em>compile-time</em>, hence allowing arbitrary expressions.</p>\n    "},{"t":"Convert ArrayList containing Strings to an array of Strings in Java?","l":"http://stackoverflow.com/questions/4042434/convert-arraylist-containing-strings-to-an-array-of-strings-in-java","q":"\n\n<p>How might I convert an <code>ArrayList&lt;String&gt;</code> object to a <code>String[]</code> array in Java?</p>\n    ","a":"\n<pre><code>List&lt;String&gt; list = ..;\nString[] array = list.toArray(new String[list.size()]);\n</code></pre>\n\n<p>For example:</p>\n\n<pre><code>List&lt;String&gt; list =new ArrayList&lt;String&gt;();\n//add some stuff\nlist.add(\"android\");\nlist.add(\"apple\");\nString[] stringArray = list.toArray(new String[list.size()]);\n</code></pre>\n\n<p>The <code>toArray()</code> method without passing any argument returns <code>Object[]</code>. So you have to pass an array as an argument, which will be filled with the data from the list, and returned. You can pass an empty array as well, but you can also pass an array with the desired size.</p>\n    "},{"t":"When would you use the Builder Pattern? [closed]","l":"http://stackoverflow.com/questions/328496/when-would-you-use-the-builder-pattern","q":"\n\n<p>What are some <em>common</em>, <em>real world examples</em> of using the Builder Pattern?  What does it buy you?  Why not just use a Factory Pattern?</p>\n    ","a":"\n<p>The key difference between a builder and factory IMHO, is that a builder is useful when you need to do lots of things to build an object. For example imagine a DOM. You have to create plenty of nodes and attributes to get your final object. A factory is used when the factory can easily create the entire object within one method call.</p>\n\n<p>One example of using a builder is a building an XML document, I've used this model when building HTML fragments for example I might have a Builder for building a specific type of table and it might have the following methods <strong>(parameters are not shown)</strong>:</p>\n\n<pre><code>BuildOrderHeaderRow()\nBuildLineItemSubHeaderRow()\nBuildOrderRow()\nBuildLineItemSubRow()\n</code></pre>\n\n<p>This builder would then spit out the HTML for me. This is much easier to read then walking through a large procedural method.</p>\n\n<p>Check out <a href=\"http://en.wikipedia.org/wiki/Builder_pattern\">Builder Pattern on Wikipedia</a>.</p>\n    "},{"t":"How to convert a Map to List in Java?","l":"http://stackoverflow.com/questions/1026723/how-to-convert-a-map-to-list-in-java","q":"\n\n<p>What is the best way to convert a <code>Map&lt;key,value&gt;</code> to a <code>List&lt;value&gt;</code>? Just iterate over all values and insert them in a list or am I overlooking something?</p>\n    ","a":"\n<pre><code>List&lt;Value&gt; list = new ArrayList&lt;Value&gt;(map.values());\n</code></pre>\n\n<p>assuming:</p>\n\n<pre><code>Map&lt;Key,Value&gt; map;\n</code></pre>\n    "},{"t":"Converting array to list in Java","l":"http://stackoverflow.com/questions/2607289/converting-array-to-list-in-java","q":"\n\n<p>How do I convert an array to a list in Java?</p>\n\n<p>I used the Arrays.asList() but the behavior (and signature) somehow changed from <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Arrays.html#asList%28java.lang.Object%5b%5d%29\">1.4.2</a> to <a href=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/Arrays.html#asList%28T...%29\">1.5.0</a> and most snippets I found on the web use the 1.4.2 behaviour.</p>\n\n<p>For example:</p>\n\n<pre><code>int[] spam = new int[] { 1, 2, 3 };\nArrays.asList(spam)\n</code></pre>\n\n<ul>\n<li>on 1.4.2 returns a list containing the elements 1, 2, 3</li>\n<li>on 1.5.0 returns a list containing the array spam</li>\n</ul>\n\n<p>In many cases it should be easy to detect, but sometimes it can slip unnoticed:</p>\n\n<pre><code>Assert.assertTrue(Arrays.asList(spam).indexOf(4) == -1);\n</code></pre>\n    ","a":"\n<p>In your example, it is because you can't have a List of a primitive type. In other words, <code>List&lt;int&gt;</code> is not possible. You can, however, have a <code>List&lt;Integer&gt;</code>.</p>\n\n<pre><code>Integer[] spam = new Integer[] { 1, 2, 3 };\nArrays.asList(spam);\n</code></pre>\n\n<p>That works as expected.</p>\n    "},{"t":"IllegalArgumentException or NullPointerException for a null parameter?","l":"http://stackoverflow.com/questions/3881/illegalargumentexception-or-nullpointerexception-for-a-null-parameter","q":"\n\n<p>I have a simple setter method for a property and <code>null</code> is not appropriate for this particular property. I have always been torn in this situation: should I throw an <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/IllegalArgumentException.html\"><code>IllegalArgumentException</code></a>, or a <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/NullPointerException.html\"><code>NullPointerException</code></a>? From the javadocs, both seem appropriate. Is there some kind of an understood standard?  Or is this just one of those things that you should do whatever you prefer and both are really correct?</p>\n    ","a":"\n<p>I'm not a Java developer, but just from the sound of it, it seems like an <code>IllegalArgumentException</code> is called for if you don't want null to be an allowed value, and the <code>NullPointerException</code> would be thrown if you were trying to <em>use</em> a variable that turns out to be null.</p>\n    "},{"t":"Where is Java Installed on Mac OS X?","l":"http://stackoverflow.com/questions/15826202/where-is-java-installed-on-mac-os-x","q":"\n\n<p>I just downloaded Java 7u17 on Mac OS 10.7.5 from <a href=\"http://www.java.com/en/download/mac_download.jsp?locale=en\">here</a> and then successfully installed it. In order to do some JNI programming, I need to know where Java installed on my Mac. </p>\n\n<p>I thought that inside the <code>/Library/Java/JavaVirtualMachines/</code> folder, there would be a folder called <code>1.7.0.jdk</code> or something, but then I found that the folder is empty. This was confirmed by running <code>ls /Library/Java/JavaVirtualMachines/</code> in the Terminal. I've tried searching for it to find out if it was installed somewhere else, but that doesn't seem to be turning anything up.</p>\n\n<p>Could someone please tell me where Java is installed on my Mac?</p>\n    ","a":"\n<p>Use <code>/usr/libexec/java_home -v 1.7</code> command on a terminal shell to figure out where is your java 1.7 home directory</p>\n    "},{"t":"How to read a large text file line by line using Java?","l":"http://stackoverflow.com/questions/5868369/how-to-read-a-large-text-file-line-by-line-using-java","q":"\n\n<p>I need to read a large text file of around 5-6 GB line by line using Java.</p>\n\n<p>How can I do this quickly? </p>\n    ","a":"\n<p>A common pattern is to use</p>\n\n<pre><code>try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n    String line;\n    while ((line = br.readLine()) != null) {\n       // process the line.\n    }\n}\n</code></pre>\n\n<p>You can read the data faster if you assume there is no character encoding. e.g. ASCII-7 but it won't make much difference.  It is highly likely that what you do with the data will take much longer.</p>\n\n<p>EDIT: A less common pattern to use which avoids the scope of <code>line</code> leaking.</p>\n\n<pre><code>try(BufferedReader br = new BufferedReader(new FileReader(file))) {\n    for(String line; (line = br.readLine()) != null; ) {\n        // process the line.\n    }\n    // line is not visible here.\n}\n</code></pre>\n    "},{"t":"What is the point of the diamond operator in Java 7?","l":"http://stackoverflow.com/questions/4166966/what-is-the-point-of-the-diamond-operator-in-java-7","q":"\n\n<p>The diamond operator in java 7 allows code like the following:</p>\n\n<pre><code>List&lt;String&gt; list = new LinkedList&lt;&gt;();\n</code></pre>\n\n<p>However in Java 5/6, I can simply write:</p>\n\n<pre><code>List&lt;String&gt; list = new LinkedList();\n</code></pre>\n\n<p>My understanding of type erasure is that these are exactly the same. (The generic gets removed at runtime anyway). </p>\n\n<p>Why bother with the diamond at all? What new functionality / type safety does it allow? If it doesn't yield any new functionality why do they mention it as a feature? Is my understanding of this concept flawed?</p>\n    ","a":"\n<p>The issue with</p>\n\n<pre><code>List&lt;String&gt; list = new LinkedList();\n</code></pre>\n\n<p>is that on the left hand side, you are using the <em>generic</em> type <code>List&lt;String&gt;</code> where on the right side you are using the <em>raw</em> type <code>LinkedList</code>. Raw types in Java effectively only exist for compatibility with pre-generics code and should never be used in new code unless \nyou absolutely have to.</p>\n\n<p>Now, if Java had generics from the beginning and didn't have types, such as <code>LinkedList</code>, that were originally created before it had generics, it probably could have made it so that the constructor for a generic type automatically infers its type parameters from the left-hand side of the assignment if possible. But it didn't, and it must treat raw types and generic types differently for backwards compatibility. That leaves them needing to make a <em>slightly different</em>, but equally convenient, way of declaring a new instance of a generic object without having to repeat its type parameters... the diamond operator.</p>\n\n<p>As far as your original example of <code>List&lt;String&gt; list = new LinkedList()</code>, the compiler generates a warning for that assignment because it must. Consider this:</p>\n\n<pre><code>List&lt;String&gt; strings = ... // some list that contains some strings\n\n// Totally legal since you used the raw type and lost all type checking!\nList&lt;Integer&gt; integers = new LinkedList(strings);\n</code></pre>\n\n<p>Generics exist to provide compile-time protection against doing the wrong thing. In the above example, using the raw type means you don't get this protection and will get an error at runtime. This is why you should not use raw types.</p>\n\n<pre><code>// Not legal since the right side is actually generic!\nList&lt;Integer&gt; integers = new LinkedList&lt;&gt;(strings);\n</code></pre>\n\n<p>The diamond operator, however, allows the right hand side of the assignment to be defined as a true generic instance with the same type parameters as the left side... without having to type those parameters again. It allows you to keep the safety of generics with <em>almost</em> the same effort as using the raw type.</p>\n\n<p>I think the key thing to understand is that raw types (with no <code>&lt;&gt;</code>) cannot be treated the same as generic types. When you declare a raw type, you get none of the benefits and type checking of generics. You also have to keep in mind that <em>generics are a general purpose part of the Java language</em>... they don't just apply to the no-arg constructors of <code>Collection</code>s!</p>\n    "},{"t":"How to use java.String.format in Scala?","l":"http://stackoverflow.com/questions/3695230/how-to-use-java-string-format-in-scala","q":"\n\n<p>I am trying to use a <code>.format</code> method of a string. But if I place %1, %2, etc. in the string, java.util.UnknownFormatConversionException is thrown pointing to a confusing Java source code piece:</p>\n\n<pre><code>private void checkText(String s) {\n\n    int idx;\n\n    // If there are any '%' in the given string, we got a bad format\n    // specifier.\n    if ((idx = s.indexOf('%')) != -1) {\n        char c = (idx &gt; s.length() - 2 ? '%' : s.charAt(idx + 1));\n        throw new UnknownFormatConversionException(String.valueOf(c));\n    }\n}\n</code></pre>\n\n<p>From this I understand that <code>%</code> char is forbidden. If so, then what should I use for argument placeholders?</p>\n\n<p>I use <a href=\"http://en.wikipedia.org/wiki/Scala_%28programming_language%29\">Scala</a> 2.8.</p>\n    ","a":"\n<p>While all the previous responses are correct, they're all in Java. Here's a Scala example:</p>\n\n<pre><code>val placeholder = \"Hello %s, isn't %s cool?\"\nval formatted = placeholder.format(\"Ivan\", \"Scala\")\n</code></pre>\n\n<p>I also have a blog post about <a href=\"http://www.bubblefoundry.com/blog/2010/06/fun-with-scala-implicits/\">making <code>format</code> like Python's <code>%</code> operator</a> that might be useful.</p>\n    "},{"t":"How to convert Milliseconds to “X mins, x seconds” in Java?","l":"http://stackoverflow.com/questions/625433/how-to-convert-milliseconds-to-x-mins-x-seconds-in-java","q":"\n\n<p>I want to record the time using <code>System.currentTimeMillis()</code> when a user begins something in my program. When he finishes, I will subtract the current <code>System.currentTimeMillis()</code> from the <code>start</code> variable, and I want to show them the time elapsed using a human readable format such as \"XX hours, XX mins, XX seconds\" or even \"XX mins, XX seconds\" because its not likely to take someone an hour.</p>\n\n<p>What's the best way to do this?</p>\n    ","a":"\n<p>Since 1.5 there is the <code>java.util.concurrent.TimeUnit</code> class, use it like this:</p>\n\n<pre><code>String.format(\"%d min, %d sec\", \n    TimeUnit.MILLISECONDS.toMinutes(millis),\n    TimeUnit.MILLISECONDS.toSeconds(millis) - \n    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(millis))\n);\n</code></pre>\n\n<p>For Java versions below 1.5 or for systems that do not fully support the <code>TimeUnit</code> class (such as Android before API version 9), the following equations can be used:</p>\n\n<pre><code>int seconds = (int) (milliseconds / 1000) % 60 ;\nint minutes = (int) ((milliseconds / (1000*60)) % 60);\nint hours   = (int) ((milliseconds / (1000*60*60)) % 24);\n//etc...\n</code></pre>\n    "},{"t":"Installing Java on OS X 10.9 (Mavericks)","l":"http://stackoverflow.com/questions/19533528/installing-java-on-os-x-10-9-mavericks","q":"\n\n<p>I have installed the <a href=\"http://en.wikipedia.org/wiki/Java_Development_Kit\">JDK</a> on <a href=\"http://en.wikipedia.org/wiki/OS_X_Mountain_Lion\">Mac&nbsp;OS&nbsp;X&nbsp;v10.8</a> (Mountain Lion). When I upgraded it to <a href=\"https://en.wikipedia.org/wiki/OS_X_Mavericks\">Mac&nbsp;OS&nbsp;X&nbsp;v10.9</a> (Mavericks) and ran <code>java -version</code> in the terminal, it showed:</p>\n\n<blockquote>\n  <p>No Java runtime present, requesting install.</p>\n</blockquote>\n\n<p>Then I manually installed the JDK (1.7) on my Mac. It seems that the installation worked fine. When the installation was done, I opened the terminal and typed <code>java -version</code> as well. It also showed the same error:</p>\n\n<blockquote>\n  <p>No Java runtime present, requesting install.</p>\n</blockquote>\n\n<p>How can I solve this problem?</p>\n    ","a":"\n<p>The new <em>Mavericks</em> (10.9) showed me the \"Requesting install\", but nothing happened. </p>\n\n<p>The solution was to manually download and install the official Java package for OS&nbsp;X, which is in <del><em><a href=\"http://support.apple.com/kb/dl1421\">Java for OS X 2013-005</a></em></del>.</p>\n\n<p><strong>Update:</strong> As mentioned in the comments below, there is a newer version of this same package:</p>\n\n<p><del><a href=\"http://support.apple.com/kb/dl1572\">Java for OS X 2014-001</a></del></p>\n\n<p><em><a href=\"http://support.apple.com/kb/DL1572\">Java for OS X 2014-001</a></em> (Correcting dead line above)</p>\n\n<blockquote>\n  <p>Java for OS X 2014-001 includes installation improvements, and supersedes all previous versions of Java for OS X. This package installs the same version of Java 6 included in Java for OS X 2013-005.</p>\n</blockquote>\n    "},{"t":"What does 'synchronized' mean?","l":"http://stackoverflow.com/questions/1085709/what-does-synchronized-mean","q":"\n\n<p>Vector methods are <code>synchronized</code>. What does it mean programmatically and logically?</p>\n    ","a":"\n<p>The synchronized keyword is all about different threads reading and writing to the same variables, objects and resources.  This is not a trivial topic in Java, but here is a quote from Sun:</p>\n\n<blockquote>\n  <p>Synchronized methods enable a simple\n  strategy for preventing thread\n  interference and memory consistency\n  errors: if an object is visible to\n  more than one thread, all reads or\n  writes to that object's variables are\n  done through synchronized methods.</p>\n</blockquote>\n\n<p><em>In a very, very small nutshell:</em> When you have two threads that are reading and writing to the same 'resource', say a variable named <code>foo</code>, you need to ensure that these threads access the variable in an atomic way.  Without the <code>synchronized</code> keyword, your thread 1 may not see the change thread 2 made to <code>foo</code>, or worse, it may only be half changed.  This would not be what you logically expect.</p>\n\n<p>Again, this is a non-trivial topic in Java.  To learn more, explore topics here on SO and the Interwebs  about:</p>\n\n<ul>\n<li><a href=\"http://java.sun.com/docs/books/tutorial/essential/concurrency/index.html\">Concurrency</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Java%5FMemory%5FModel\">Java Memory Model</a></li>\n</ul>\n\n<p>Keep exploring these topics until the name <em>\"Brian Goetz\"</em> becomes permanently associated with the term <em>\"concurrency\"</em> in your brain.  </p>\n    "},{"t":"Java String.equals versus == [duplicate]","l":"http://stackoverflow.com/questions/767372/java-string-equals-versus","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/513832/how-do-i-compare-strings-in-java\" dir=\"ltr\">How do I compare strings in Java?</a>\n                <span class=\"question-originals-answer-count\">\n                    23 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>This code separates a string into tokens and stores them in an array of strings, and then compares a variable with the first home ... why isn't it working?</p>\n\n<pre><code>public static void main(String...aArguments) throws IOException {\n\n    String usuario = \"Jorman\";\n    String password = \"14988611\";\n\n    String strDatos = \"Jorman 14988611\";\n    StringTokenizer tokens = new StringTokenizer(strDatos, \" \");\n    int nDatos = tokens.countTokens();\n    String[] datos = new String[nDatos];\n    int i = 0;\n\n    while (tokens.hasMoreTokens()) {\n        String str = tokens.nextToken();\n        datos[i] = str;\n        i++;\n    }\n\n    //System.out.println (usuario);\n\n    if ((datos[0] == usuario)) {\n        System.out.println(\"WORKING\");\n    }\n}\n</code></pre>\n    ","a":"\n<p>Use the <a href=\"http://docs.oracle.com/javase/8/docs/api/java/lang/String.html#equals-java.lang.Object-\"><code>string.equals(String other)</code></a> function to compare strings, not the <code>==</code> operator.</p>\n\n<p>The function checks the actual contents of the string, the <code>==</code> operator checks whether the references to the objects are equal.  Note that string constants are usually \"interned\" such that two constants with the same value can actually be compared with <code>==</code>, but it's better not to rely on that.</p>\n\n<pre><code>if (usuario.equals(datos[0])) {\n    ...\n}\n</code></pre>\n\n<p>NB: the compare is done on 'usuario' because that's guaranteed non-null in your code, although you should still check that you've actually got some tokens in the <code>datos</code> array otherwise you'll get an array-out-of-bounds exception.</p>\n    "},{"t":"How to turn off the Eclipse code formatter for certain sections of Java code?","l":"http://stackoverflow.com/questions/1820908/how-to-turn-off-the-eclipse-code-formatter-for-certain-sections-of-java-code","q":"\n\n<p>I've got some Java code with SQL statements written as Java strings (please no OR/M flamewars, the embedded SQL is what it is - not my decision).</p>\n\n<p>I've broken the SQL statements semantically into several concatenated strings over several lines of code for ease of maintenance. So instead of something like:</p>\n\n<pre><code>String query = \"SELECT FOO, BAR, BAZ FROM ABC WHERE BAR &gt; 4\";\n</code></pre>\n\n<p>I have something like:</p>\n\n<pre><code>String query =\n    \"SELECT FOO, BAR, BAZ\" +\n    \"  FROM ABC          \" +\n    \" WHERE BAR &gt; 4      \";\n</code></pre>\n\n<p>This style makes the SQL much easier to read and maintain (IMHO), especially for larger queries. For example, I can put my editor into \"overwrite\" mode and modify the text in-place fairly easily.</p>\n\n<p><strong>Note that this issue generalizes beyond the particular example of SQL. Any code that is written with any vertical formatting, particularly tabular constructs, is susceptible to destruction by a pretty printer.</strong></p>\n\n<p>Now, some project members use the Eclipse editor and the semantic formatting is often destroyed when they format an entire source file.</p>\n\n<p><strong>Is there a way to instruct Eclipse to ignore certain lines of source with respect to formatting?</strong></p>\n\n<p>I'm looking for something like a special comment that toggles the Eclipse formatter. Ideally, such a comment could be configurable to be whatever we choose, and other formatters could be programmed to respect it as well:</p>\n\n<pre><code>// STOP-ECLIPSE-FORMATTING\nString query =\n    \"SELECT FOO, BAR, BAZ\" +\n    \"  FROM ABC          \" +\n    \" WHERE BAR &gt; 4      \";\n// START-ECLIPSE-FORMATTING\n</code></pre>\n\n<p>Obviously, one \"solution\" is to have our team members standardize on some external formatter like <a href=\"http://www.triemax.com/products/jalopy/\">Jalopy</a> or <a href=\"http://www.jindent.com/\">JIndent</a>, but that's not what this question is about (also, not my decision on this project): I'm specifically looking for a way to avoid the Eclipse formatter on an ad-hoc basis.</p>\n\n<p>Ideally, a solution will allow me to insert instructions for the Eclipse formatter <strong>without requiring team members using Eclipse to do any IDE reconfiguration</strong> (other than possibly choosing a formatter agnostic command comment: <code>STOP-ECLIPSE-FORMATTING</code> → <code>STOP-FORMATTING</code>).</p>\n    ","a":"\n<p>Eclipse 3.6 allows you to turn off formatting by placing a special comment, like</p>\n\n<pre><code>// @formatter:off\n...\n// @formatter:on\n</code></pre>\n\n<p>The on/off features have to be turned \"on\" in Eclipse preferences: Java &gt; Code Style &gt; Formatter. Click on \"Edit\" button, \"Off/On Tags\", check off \"Enable Off/On tags\".</p>\n\n<p>It's possible to change the magic strings in the preferences:</p>\n\n<p><a href=\"http://archive.eclipse.org/eclipse/downloads/drops/R-3.6-201006080911/eclipse-news-part2.html#JavaFormatter\">http://archive.eclipse.org/eclipse/downloads/drops/R-3.6-201006080911/eclipse-news-part2.html#JavaFormatter</a></p>\n\n<p><strong>More Information</strong></p>\n\n<pre><code>Java -&gt; Code Style -&gt; Formatter -&gt; Edit -&gt; Off/On Tags\n</code></pre>\n\n<p>This preference allows you to define one tag to disable and one tag to enable the formatter (see the Off/On Tags tab in your formatter profile):\n<img src=\"http://i.stack.imgur.com/GwcgT.png\" alt=\"enter image description here\">\nYou also need to enable the flags from <code>Java Formatting</code></p>\n    "},{"t":"How to convert byte size into human readable format in java?","l":"http://stackoverflow.com/questions/3758606/how-to-convert-byte-size-into-human-readable-format-in-java","q":"\n\n<p>How to convert byte size into human-readable format in Java? Like 1024 should become \"1 Kb\" and 1024*1024 should become \"1 Mb\".</p>\n\n<p>I am kind of sick of writing this utility method for each project. Are there any static methods in Apache Commons for this?</p>\n    ","a":"\n<p>Here is my go at it (no loops and handles both SI units and binary units):</p>\n\n<pre><code>public static String humanReadableByteCount(long bytes, boolean si) {\n    int unit = si ? 1000 : 1024;\n    if (bytes &lt; unit) return bytes + \" B\";\n    int exp = (int) (Math.log(bytes) / Math.log(unit));\n    String pre = (si ? \"kMGTPE\" : \"KMGTPE\").charAt(exp-1) + (si ? \"\" : \"i\");\n    return String.format(\"%.1f %sB\", bytes / Math.pow(unit, exp), pre);\n}\n</code></pre>\n\n<p>Example output:</p>\n\n<pre><code>                              SI     BINARY\n\n                   0:        0 B        0 B\n                  27:       27 B       27 B\n                 999:      999 B      999 B\n                1000:     1.0 kB     1000 B\n                1023:     1.0 kB     1023 B\n                1024:     1.0 kB    1.0 KiB\n                1728:     1.7 kB    1.7 KiB\n              110592:   110.6 kB  108.0 KiB\n             7077888:     7.1 MB    6.8 MiB\n           452984832:   453.0 MB  432.0 MiB\n         28991029248:    29.0 GB   27.0 GiB\n       1855425871872:     1.9 TB    1.7 TiB\n 9223372036854775807:     9.2 EB    8.0 EiB   (Long.MAX_VALUE)\n</code></pre>\n    "},{"t":"Eclipse Optimize Imports to Include Static Imports","l":"http://stackoverflow.com/questions/288861/eclipse-optimize-imports-to-include-static-imports","q":"\n\n<p>Is there anyway to get Eclipse to automatically look for static imports? For example, now that I've finally upgraded to Junit 4, I'd like to be able to write:</p>\n\n<pre><code>assertEquals(expectedValue, actualValue);\n</code></pre>\n\n<p>hit <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd> and have Eclipse add:</p>\n\n<pre><code>import static org.junit.Assert.assertEquals;\n</code></pre>\n\n<p>Maybe I'm asking too much.</p>\n    ","a":"\n<p>I'm using Eclipse Europa, which also has the Favorite preference section:<br>\n<strong>Window » Preferences » Java  » Editor » Content Assist » Favorites</strong><br>\nIn mine, I have the following entries (when adding, use \"New Type\" and ommit the <code>.*</code>): </p>\n\n<pre><code>org.hamcrest.Matchers.*\norg.hamcrest.CoreMatchers.*\norg.junit.*\norg.junit.Assert.*\norg.junit.Assume.*\norg.junit.matchers.JUnitMatchers.*\n</code></pre>\n\n<p>All but the third of those are static imports. By having those as favorites, if I type \"assertT\" and hit <strong><kbd>Ctrl</kbd>+<kbd>Space</kbd></strong>, Eclipse offers up assertThat as a suggestion, and if I pick it, it will add the proper static import to the file.</p>\n    "},{"t":"MVC pattern in Android?","l":"http://stackoverflow.com/questions/2925054/mvc-pattern-in-android","q":"\n\n<p>Is it possible to implement the Model-View-Controller pattern in Java for Android? Or is it already implemented through Activities? Or is there a better way to implement the MVC pattern for Android?</p>\n    ","a":"\n<p>In Android you don't have MVC, but you have the following:</p>\n\n<ul>\n<li>You define your <a href=\"http://developer.android.com/intl/de/guide/topics/ui/index.html\">user interface</a> in  various XML files by resolution, hardware, etc.</li>\n<li>You define your <a href=\"http://developer.android.com/intl/de/guide/topics/resources/index.html\">resources</a> in various XML files by locale, etc.</li>\n<li>You extend clases like <a href=\"http://developer.android.com/intl/de/reference/android/app/ListActivity.html\">ListActivity</a>, <a href=\"http://developer.android.com/intl/de/reference/android/app/TabActivity.html\">TabActivity</a> and make use of the XML file by <a href=\"http://developer.android.com/intl/de/reference/android/view/LayoutInflater.html\">inflaters</a>.</li>\n<li>You can create as many classes as you wish for your business logic.</li>\n<li>A lot of <a href=\"http://developer.android.com/intl/de/reference/android/util/package-summary.html\">Utils</a> have been already written for you - DatabaseUtils, Html.</li>\n</ul>\n    "},{"t":"Best XML parser for Java [closed]","l":"http://stackoverflow.com/questions/373833/best-xml-parser-for-java","q":"\n\n<p>I need to read smallish (few MB at the most, UTF-8 encoded) XML files, rummage around looking at various elements and attributes, perhaps modify a few and write the XML back out again to disk (preferably with nice, indented formatting).</p>\n\n<p>What would be the best XML parser for my needs?  There are lots to choose from.  Some I'm aware of are:</p>\n\n<ul>\n<li><a href=\"http://www.jdom.org/\">JDOM</a></li>\n<li><a href=\"http://woodstox.codehaus.org/\">Woodstox</a></li>\n<li><a href=\"http://xom.nu/\">XOM</a></li>\n<li><a href=\"http://dom4j.sourceforge.net/\">dom4j</a></li>\n<li><a href=\"http://vtd-xml.sourceforge.net/\">VTD-XML</a></li>\n<li><a href=\"http://xerces.apache.org/xerces-j/\">Xerces-J</a></li>\n<li><a href=\"http://xml.apache.org/crimson/\">Crimson</a></li>\n</ul>\n\n<p>And of course the one in the JDK (I'm using Java 6).  I'm familiar with Xerces but find it clunky.</p>\n\n<p>Recommendations?</p>\n    ","a":"\n<p>If speed and memory is no problem, <em>dom4j</em> is a really good option. If you need speed, using a StAX parser like <em>Woodstox</em> is the right way, but you have to write more code to get things done and you have to get used to process XML in streams.</p>\n    "},{"t":"Removing whitespace from strings in Java","l":"http://stackoverflow.com/questions/5455794/removing-whitespace-from-strings-in-java","q":"\n\n<p>I have a string like this: </p>\n\n<pre><code>mysz = \"name=john age=13 year=2001\";\n</code></pre>\n\n<p>I want to remove the whitespaces in the string. I tried <code>trim()</code> but this removes only whitespaces before and after the whole string. I also tried <code>replaceAll(\"\\\\W\", \"\")</code> but then the <code>=</code> also gets removed.</p>\n\n<p>How can I achieve a string with:</p>\n\n<pre><code>mysz2 = \"name=johnage=13year=2001\"\n</code></pre>\n    ","a":"\n<p><code>st.replaceAll(\"\\\\s+\",\"\")</code> removes all whitespaces and non visible characters such as tab, <code>\\n</code> .</p>\n\n<p>UPDATE :</p>\n\n<p><code>st.replaceAll(\"\\\\s+\",\"\")</code> and <code>st.replaceAll(\"\\\\s\",\"\")</code> produce the same result.</p>\n\n<p>For this sample, second regex is 20% faster than the first one. But as the number consecutive spaces increases, the first one performs better than the second one. Therefore I do prefer the first one. </p>\n    "},{"t":"How to set HttpResponse timeout for Android in Java","l":"http://stackoverflow.com/questions/693997/how-to-set-httpresponse-timeout-for-android-in-java","q":"\n\n<p>I have created the following function for checking the connection status:</p>\n\n<pre><code>private void checkConnectionStatus() {\n    HttpClient httpClient = new DefaultHttpClient();\n\n    try {\n      String url = \"http://xxx.xxx.xxx.xxx:8000/GaitLink/\"\n                   + strSessionString + \"/ConnectionStatus\";\n      Log.d(\"phobos\", \"performing get \" + url);\n      HttpGet method = new HttpGet(new URI(url));\n      HttpResponse response = httpClient.execute(method);\n\n      if (response != null) {\n        String result = getResponse(response.getEntity());\n        ...\n</code></pre>\n\n<p>When I shut down the server for testing the execution waits a long time at line</p>\n\n<pre><code>HttpResponse response = httpClient.execute(method);\n</code></pre>\n\n<p>Does anyone know how to set the timeout in order to avoid waiting too long?</p>\n\n<p>Thanks!</p>\n    ","a":"\n<p>In my example two timeouts are set. The connection timeout throws \"java.net.SocketTimeoutException: Socket is not connected\" and the socket timeout \"java.net.SocketTimeoutException: The operation timed out\".</p>\n\n<pre><code>HttpGet httpGet = new HttpGet(url);\nHttpParams httpParameters = new BasicHttpParams();\n// Set the timeout in milliseconds until a connection is established.\n// The default value is zero, that means the timeout is not used. \nint timeoutConnection = 3000;\nHttpConnectionParams.setConnectionTimeout(httpParameters, timeoutConnection);\n// Set the default socket timeout (SO_TIMEOUT) \n// in milliseconds which is the timeout for waiting for data.\nint timeoutSocket = 5000;\nHttpConnectionParams.setSoTimeout(httpParameters, timeoutSocket);\n\nDefaultHttpClient httpClient = new DefaultHttpClient(httpParameters);\nHttpResponse response = httpClient.execute(httpGet);\n</code></pre>\n\n<p>If you want to set the Parameters of any existing HTTPClient (e.g. DefaultHttpClient or AndroidHttpClient) you can use the function <strong>setParams()</strong>.</p>\n\n<pre><code>httpClient.setParams(httpParameters);\n</code></pre>\n    "},{"t":"How to make mock to void methods with mockito","l":"http://stackoverflow.com/questions/2276271/how-to-make-mock-to-void-methods-with-mockito","q":"\n\n<p>How to mock methods with void return type? </p>\n\n<p>I implemented an Observer pattern but I can't mock it with Mockito because I don't know how.</p>\n\n<p>And I tried to find an example on the Internet, but didn't succeed.</p>\n\n<p>My class looks like</p>\n\n<pre><code>public class World {\n\n    List&lt;Listener&gt; listeners;\n\n    void addListener(Listener item) {\n        listeners.add(item);\n    }\n\n    void doAction(Action goal,Object obj) {\n        setState(\"i received\");\n        goal.doAction(obj);\n        setState(\"i finished\");\n    }\n\n    private string state;\n    //setter getter state\n} \n\npublic class WorldTest implements Listener {\n\n    @Test public void word{\n    World  w= mock(World.class);\n    w.addListener(this);\n    ...\n    ...\n\n    }\n}\n\ninterface Listener {\n    void doAction();\n}\n</code></pre>\n\n<p>The system are not triggered with mock. =(\nI want to show above mentioned system state. And make assertion according to them.</p>\n    ","a":"\n<p>The solution of so-called problem is to use a <code>spy</code> <a href=\"http://mockito.googlecode.com/hg-history/1.5/javadoc/org/mockito/Mockito.html#spy%28T%29\">Mockito.spy(...)</a> instead of a <code>mock</code> <a href=\"http://mockito.googlecode.com/hg-history/1.5/javadoc/org/mockito/Mockito.html#mock%28java.lang.Class%29\">Mockito.mock(..)</a>. </p>\n\n<p>Spy enables us to partial mocking. Mockito is  good at this matter.  Because you have class which is not complete, in this way you mock some required place in this class.</p>\n    "},{"t":"How do I save a String to a text file using Java?","l":"http://stackoverflow.com/questions/1053467/how-do-i-save-a-string-to-a-text-file-using-java","q":"\n\n<p>In Java, I have text from a text field in a String variable called \"text\".</p>\n\n<p>How can I save the contents of the \"text\" variable to a file?</p>\n    ","a":"\n<p>If you're simply outputting text, rather than any binary data, the following will work:</p>\n\n<pre><code>PrintWriter out = new PrintWriter(\"filename.txt\");\n</code></pre>\n\n<p>Then, write your String to it, just like you would to any output stream:</p>\n\n<pre><code>out.println(text);\n</code></pre>\n\n<p>You'll need exception handling, as ever. Be sure to call <code>out.close()</code> when you've finished writing.</p>\n    "},{"t":"Multiple line code example in Javadoc comment","l":"http://stackoverflow.com/questions/541920/multiple-line-code-example-in-javadoc-comment","q":"\n\n<p>I have a small code example I want to include in the Javadoc comment for a method.  </p>\n\n<pre><code>/**\n * -- ex: looping through List of Map objects --\n * &lt;code&gt;\n * for (int i = 0; i &lt; list.size(); i++) {\n *      Map map = (Map)list.get(i);\n *      System.out.println(map.get(\"wordID\"));\n *      System.out.println(map.get(\"word\"));\n * }\n * &lt;/code&gt;\n * \n * @param query - select statement\n * @return List of Map objects\n */\n</code></pre>\n\n<p>The problem is the code example shows up in the Javadoc with no line breaks making it hard to read.  </p>\n\n<pre><code>-- ex: looping through List of Map objects -- for (int i = 0; i list.size(); i++) { Map map = (Map)list.get(i); System.out.println(map.get(\"wordID\")); System.out.println(map.get(\"word\")); } \nParameters\nquery - - select statement \nReturns:\nList of Map objects\n</code></pre>\n\n<p>I guess I am wrong in assuming the code tag would handle line breaks.  What is the best way to format code examples in Javadoc comments ?</p>\n    ","a":"\n<p>In addition to the already mentioned <code>&lt;pre&gt;</code> tags, you should also use the <code>@code</code> JavaDoc annotation, which will make life much easier when it comes to HTML entities issues (in particular with Generics), e.g.:</p>\n\n<pre><code>* &lt;pre&gt;\n* {@code\n* Set&lt;String&gt; s;\n* System.out.println(s);\n* }\n* &lt;/pre&gt;\n</code></pre>\n\n<p>Will give correct HTML output:</p>\n\n<pre><code>Set&lt;String&gt; s;\nSystem.out.println(s);\n</code></pre>\n\n<p>While omitting the <code>@code</code> block (or using a <code>&lt;code&gt;</code> tag) will result in HTML like this:</p>\n\n<pre><code>Set s;\nSystem.out.println(s);\n</code></pre>\n    "},{"t":"Decode Base64 data in Java","l":"http://stackoverflow.com/questions/469695/decode-base64-data-in-java","q":"\n\n<p>I have an image that is Base64 encoded. What is the best way to decode that in Java? Hopefully using only the libraries included with Sun Java 6.</p>\n    ","a":"\n<p>As of v6, Java SE ships with JAXB. <a href=\"http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html\"><code>javax.xml.bind.DatatypeConverter</code></a> has static methods that make this easy. See <a href=\"http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html#parseBase64Binary%28java.lang.String%29\"><code>parseBase64Binary()</code></a> and <a href=\"http://download.oracle.com/javase/6/docs/api/javax/xml/bind/DatatypeConverter.html#printBase64Binary%28byte%5b%5d%29\"><code>printBase64Binary()</code></a>.</p>\n    "},{"t":"What should I set JAVA_HOME to on OSX","l":"http://stackoverflow.com/questions/1348842/what-should-i-set-java-home-to-on-osx","q":"\n\n<p>Many Java applications that use shell scripts to configure their environment use the <code>JAVA_HOME</code> environment variable to start the correct version of Java, locate JRE JARs, and so on.</p>\n\n<p>On OSX 10.6, the following paths seem to be valid for this variable</p>\n\n<pre><code>/Library/Java/Home\n/System/Library/Frameworks/JavaVM.framework/Home\n/System/Library/Frameworks/JavaVM.framework/Versions/Current\n</code></pre>\n\n<p>Some of these are symlinks to the actual current VM (as defined in the Java Preference pane). </p>\n\n<p>But which one should be used—or is it okay to use any of them?</p>\n    ","a":"\n<p>Does Snow Leopard still have <code>/usr/libexec/java_home</code>? On 10.5, I just set <code>JAVA_HOME</code> to the output of that command, which should give you the Java path specified in your Java preferences. Here's a snippet from my <code>.bashrc</code> file, which sets this variable:</p>\n\n<pre><code>export JAVA_HOME=$(/usr/libexec/java_home)\n</code></pre>\n\n<p>I haven't experienced any problems with that technique.</p>\n\n<p>Occasionally I do have to change the value of <code>JAVA_HOME</code> to an earlier version of Java. For example, one program I'm maintaining requires 32-bit Java 5 on OS X, so when using that program, I set <code>JAVA_HOME</code> by running: </p>\n\n<pre><code>export JAVA_HOME=$(/usr/libexec/java_home -v 1.5)\n</code></pre>\n\n<p>For those of you who don't have <code>java_home</code> in your path add it like this.</p>\n\n<pre><code>sudo ln -s /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java_home /usr/bin/java_home\n</code></pre>\n    "},{"t":"How to get the path of a running JAR file?","l":"http://stackoverflow.com/questions/320542/how-to-get-the-path-of-a-running-jar-file","q":"\n\n<p>My code runs inside a JAR file, say foo.jar, and I need to know, in the code, in which folder the running foo.jar is.</p>\n\n<p>So, if foo.jar is in <code>C:\\FOO\\</code>, I want to get that path no matter what my current working directory is.</p>\n    ","a":"\n<pre><code>return new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation().toURI().getPath());\n</code></pre>\n\n<p>Obviously, this will do odd things if your class was loaded from a non-file location.</p>\n    "},{"t":"Getting a File's MD5 Checksum in Java","l":"http://stackoverflow.com/questions/304268/getting-a-files-md5-checksum-in-java","q":"\n\n<p>I am looking to use Java to get the MD5 checksum of a file.  I was really surprised but I haven't been able to find anything that shows how to get the MD5 checksum of a file.</p>\n\n<p>How is it done?</p>\n    ","a":"\n<p>There's an input stream decorator, <code>java.security.DigestInputStream</code>, so that you can compute the digest while using the input stream as you normally would, instead of having to make an extra pass over the data.</p>\n\n<pre><code>MessageDigest md = MessageDigest.getInstance(\"MD5\");\ntry (InputStream is = Files.newInputStream(Paths.get(\"file.txt\"))) {\n  DigestInputStream dis = new DigestInputStream(is, md);\n  /* Read stream to EOF as normal... */\n}\nbyte[] digest = md.digest();\n</code></pre>\n    "},{"t":"What exactly is a Maven Snapshot and why do we need it?","l":"http://stackoverflow.com/questions/5901378/what-exactly-is-a-maven-snapshot-and-why-do-we-need-it","q":"\n\n<p>I am a bit confused about the meaning of a Maven Snapshot and why we build one?</p>\n    ","a":"\n<p>A snapshot version in Maven is one that has not been released.</p>\n\n<p>The idea is that <strong>before</strong> a <code>1.0</code> release (or any other release) is done, there exists a <code>1.0-SNAPSHOT</code>. That version is what <em>might become</em> <code>1.0</code>. It's basically \"<code>1.0</code> under development\". This might be <em>close</em> to a real <code>1.0</code> release, or pretty far (right after the <code>0.9</code> release, for example).</p>\n\n<p>The difference between a \"real\" version and a snapshot version is that snapshots might get updates. That means that downloading <code>1.0-SNAPSHOT</code> today might give a different file than downloading it yesterday or tomorrow.</p>\n\n<p>Usually, snapshot dependencies should <strong>only</strong> exist during development and no released version (i.e. no non-snapshot) should have a dependency on a snapshot version.</p>\n    "},{"t":"Java - easily convert array to set","l":"http://stackoverflow.com/questions/3064423/java-easily-convert-array-to-set","q":"\n\n<p>I'd like to convert an array to a set in Java. There are some obvious ways of doing this (i.e. with a loop) but I would like something a bit neater, something like:</p>\n\n<pre><code>java.util.Arrays.asList(Object[] a);\n</code></pre>\n\n<p>Any ideas?</p>\n    ","a":"\n<p>Like this:</p>\n\n<pre><code>Set&lt;T&gt; mySet = new HashSet&lt;T&gt;(Arrays.asList(someArray));\n</code></pre>\n    "},{"t":"Android Studio installation on Windows 7 fails, no JDK found","l":"http://stackoverflow.com/questions/16574189/android-studio-installation-on-windows-7-fails-no-jdk-found","q":"\n\n<p>I downloaded Android Studio and attempted to launch the program.</p>\n\n<p>This is running on Windows 7 64-bit with Java 1.7. During the installation my Java 1.7 is detected, and the rest of the installation goes through just fine. However, when attempting to launch the application from the desktop icon, nothing happens. Looking at the task manager, a new process from the CMD is loaded. This is because it's attempting to run the batch file <code>studio.bat</code>.</p>\n\n<p>When I execute via CMD, I get the following error:</p>\n\n<blockquote>\n  <p>ERROR: cannot start Android Studio. No JDK found. Please validate\n  either ANDROID_STUDIO_JDK, or JDK_HOME or JAVA_HOME points to valid\n  JDK installation. ECHO is off. Press any key to continue . . .</p>\n</blockquote>\n\n<p>I've attempted to open the <code>idea</code> properties file to see if there was something I could configure for this <code>ANDROID_STUDIO_JDK</code> or something like that. However, I found nothing. I hope some of you can let me know if you were able to install this or if you are having problems as well.</p>\n    ","a":"\n<p>Adding a system variable <code>JDK_HOME</code> with value <code>c:\\Program Files\\Java\\jdk1.7.0_21\\</code> worked for me. The latest Java release can be downloaded <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\">here</a>.</p>\n\n<p>Additionally, make sure the variable <code>JAVA_HOME</code> is also set with the above location.</p>\n    "},{"t":"Can an abstract class have a constructor?","l":"http://stackoverflow.com/questions/260666/can-an-abstract-class-have-a-constructor","q":"\n\n<p>Can an abstract class have a constructor?</p>\n\n<p>If so, how it can be used and for what purposes?</p>\n    ","a":"\n<p>Yes, an abstract class can have a constructor. Consider this:</p>\n\n<pre><code>abstract class Product { \n    int multiplyBy;\n    public Product( int multiplyBy ) {\n        this.multiplyBy = multiplyBy;\n    }\n\n    public int mutiply(int val) {\n       return multiplyBy * val;\n    }\n}\n\nclass TimesTwo extends Product {\n    public TimesTwo() {\n        super(2);\n    }\n}\n\nclass TimesWhat extends Product {\n    public TimesWhat(int what) {\n        super(what);\n    }\n}\n</code></pre>\n\n<p>The superclass Product is abstract and has a constructor. The concrete class TimesTwo has a constructor that just hardcodes the value 2. The concrete class TimesWhat has a constructor that allows the caller to specify the value.</p>\n\n<p>NOTE: As there is no default (or no-arg) constructor in the parent abstract class the constructor used in subclasses must be specified.</p>\n\n<p>Abstract constructors will frequently be used to enforce class constraints or invariants such as the minimum fields required to setup the class.</p>\n    "},{"t":"java.util.Date vs java.sql.Date","l":"http://stackoverflow.com/questions/2305973/java-util-date-vs-java-sql-date","q":"\n\n<p><code>java.util.Date</code> vs <code>java.sql.Date</code>: when to use which and why?</p>\n    ","a":"\n<p>Congratulations, you've hit my favorite pet peeve with JDBC: Date class handling.</p>\n\n<p>Basically databases usually support at least <strong>three</strong> forms of datetime fields which are date, time and timestamp. Each of these have a corresponding class in JDBC and <strong>each of them extend <a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/util/Date.html\"><code>java.util.Date</code></a></strong>. Quick semantics of each of these three are the following:</p>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/sql/Date.html\"><code>java.sql.Date</code></a> corresponds to SQL DATE which means it stores <em>years, months and days</em> while <em>hour, minute, second and millisecond</em> are ignored. Additionally <code>sql.Date</code> isn't tied to timezones.</li>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/sql/Time.html\"><code>java.sql.Time</code></a> corresponds to SQL TIME and as should be obvious, only contains information about <em>hour, minutes, seconds and milliseconds</em>.</li>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/api/index.html?java/sql/Timestamp.html\"><code>java.sql.Timestamp</code></a> corresponds to SQL TIMESTAMP which is exact date to the nanosecond (<em>note that <code>util.Date</code> only supports milliseconds!</em>) with customizable precision.</li>\n</ul>\n\n<p><strong>One of the most common bugs when using JDBC drivers in relation to these three types is that the types are handled incorrectly.</strong> This means that <code>sql.Date</code> is timezone specific, <code>sql.Time</code> contains current year, month and day et cetera et cetera.</p>\n\n<h2>Finally: Which one to use?</h2>\n\n<p>Depends on the SQL type of the field, really. <code>PreparedStatement</code> has setters for all three values, <code>#setDate()</code> being the one for <code>sql.Date</code>, <code>#setTime()</code> for <code>sql.Time</code> and <code>#setTimestamp()</code> for <code>sql.Timestamp</code>.</p>\n\n<p>Do note that if you use <code>ps.setObject(fieldIndex, utilDateObject);</code> you can actually give a normal <code>util.Date</code> to most JDBC drivers which will happily devour it as if it was of the correct type but when you request the data afterwards, you may notice that you're actually missing stuff.</p>\n\n<h2>I'm really saying that none of the Dates should be used at all.</h2>\n\n<p>What I am saying that save the milliseconds/nanoseconds as plain longs and convert them to whatever objects you are using (<em><a href=\"http://www.joda.org/joda-time/\">obligatory joda-time plug</a></em>). One hacky way which can be done is to store the date component as one long and time component as another, for example right now would be 20100221 and 154536123. These magic numbers can be used in SQL queries and will be portable from database to another and will let you avoid this part of JDBC/Java Date API:s entirely.</p>\n    "},{"t":"Java: checked vs unchecked exception explanation","l":"http://stackoverflow.com/questions/6115896/java-checked-vs-unchecked-exception-explanation","q":"\n\n<p>I have read multiple posts on StackOverFlow about checked vs unchecked exceptions. I'm honestly still not quite sure how to use them properly. </p>\n\n<p>Joshua Bloch in \"<em>Effective Java</em>\" said that </p>\n\n<blockquote>\n  <p>Use checked exceptions for\n  recoverable conditions and runtime\n  exceptions for programming errors\n  (Item 58 in 2nd edition)</p>\n</blockquote>\n\n<p>Let see if I understand this correctly</p>\n\n<p>Here is my understanding of a checked exception:</p>\n\n<pre><code>try{\n    String userInput = //read in user input\n    Long id = Long.parseLong(userInput);\n}catch(NumberFormatException e){\n    id = 0; //recover the situation by set the id to 0\n}\n</code></pre>\n\n<p><strong>1. Is the above consider a checked exception?</strong></p>\n\n<p><strong>2. Is RuntimeException an unchecked exception?</strong></p>\n\n<p>Here is my understanding of a unchecked exception</p>\n\n<pre><code>try{\n    File file = new File(\"my/file/path\");\n    FileInputStream fis = new FileInputStream(file);   \n}catch(FileNotFoundException e){\n\n//3. What should I do here?\n    //Should I \"throw new FileNotFoundException(\"File not found\");\"?\n    //Should I log?\n    //Or should I System.exit(0);?\n}\n</code></pre>\n\n<p><strong>4. Now, couldnt the above code also be a checked exception? I can try to recover the situation like this? Can I?</strong> (Note: my 3rd question is inside the <code>catch</code> above)</p>\n\n<pre><code>try{\n    String filePath = //read in from user input file path\n    File file = new File(filePath);\n    FileInputStream fis = new FileInputStream(file);   \n}catch(FileNotFoundException e){\n    //Kindly prompt the user an error message\n    //Somehow ask the user to re-enter the file path.\n}\n</code></pre>\n\n<p><strong>5. Why do people do this?</strong></p>\n\n<pre><code>public void someMethod throws Exception{\n\n}\n</code></pre>\n\n<p>Why do they let the exception bubble up? Isn't handling the error sooner better? Why bubble up? </p>\n\n<p><strong>EDIT: Should I bubble up the exact exception or mask it using Exception?</strong></p>\n\n<p><strong>Below are my readings</strong></p>\n\n<p><a href=\"http://stackoverflow.com/questions/499437/in-java-when-should-i-create-a-checked-exception-and-when-should-it-be-a-runtim\">In Java, when should I create a checked exception, and when should it be a runtime exception?</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/27578/when-to-choose-checked-and-unchecked-exceptions\">When to choose checked and unchecked exceptions</a></p>\n    ","a":"\n<p>Many people say that checked exceptions (i.e. these that you should explicitly catch or rethrow) should not be used at all. They were eliminated in C# for example, and most languages don't have them. So you can always throw a subclass of <code>RuntimeException</code> (unchecked exception)</p>\n\n<p>However, I think checked exceptions are useful - they are used when you want to force the user of your API to think how to handle the exceptional situation (if it is recoverable). It's just that checked exceptions are overused in the Java platform, which makes people hate them.</p>\n\n<p><a href=\"http://techblog.bozho.net/?p=316\">Here's my extended view on the topic</a>.</p>\n\n<p>As for the particular questions:</p>\n\n<ol>\n<li>No. <code>NumberFormatException</code> is unchecked (= is subclass of <code>RuntimeException</code>). Why? I don't know. (but there should have been a method <code>isValidInteger(..)</code>)</li>\n<li>Yes, exactly</li>\n<li><p>It depends on where this code is and what you want to happen. If it is in the UI layer - catch it and show a warning; if it's in the service layer - don't catch it at all - let it bubble. Just don't swallow the exception. If an exception occurs in most of the cases you should choose one of these:</p>\n\n<ul>\n<li>log it and return</li>\n<li>rethrow it (declare it to be thrown by the method)</li>\n<li>construct a new exception by passing the current one in constructor  </li>\n</ul></li>\n<li><p>It could've been. But nothing stops you from catching the unchecked exception as well</p></li>\n<li>Most often - because people are lazy to consider what to catch and what to rethrow. Throwing <code>Exception</code> is a bad practice and should be avoided.</li>\n</ol>\n\n<p>Alas, there is no single rule to let you determine when to catch, when to rethrow, when to use checked and when to use unchecked exceptions. I agree this causes much confusion and a lot of bad code. The general principle is stated by Bloch (you quoted a part of it). And the general principle is to rethrow an exception to the layer where you can handle it.</p>\n    "},{"t":"Downloading Java JDK on Linux via wget is shown license page instead","l":"http://stackoverflow.com/questions/10268583/downloading-java-jdk-on-linux-via-wget-is-shown-license-page-instead","q":"\n\n<p>When I try to download Java from Oracle I instead end up downloading a page telling me that I need agree to the OTN license terms.</p>\n\n<blockquote>\n  <h1>Sorry!</h1>\n  \n  <p>In order to download products from Oracle Technology Network you must agree to the OTN license terms.</p>\n  \n  <p>Be sure that...</p>\n  \n  <ul>\n  <li>Your browser has \"cookies\" and JavaScript enabled.</li>\n  <li>You clicked on \"Accept License\" for the product you wish to download.</li>\n  <li>You attempt the download within 30 minutes of accepting the license.</li>\n  </ul>\n</blockquote>\n\n<p>How can I download and install Java?</p>\n    ","a":"\n<p><strong>UPDATED FOR JDK 8u45</strong></p>\n\n<p>RPM: </p>\n\n<pre><code> wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm\n</code></pre>\n\n<p>TAR GZ: </p>\n\n<pre><code> wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.tar.gz\n</code></pre>\n\n<p>RPM using curl:</p>\n\n<pre><code> curl -v -j -k -L -H \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm &gt; jdk-8u45-linux-x64.rpm\n</code></pre>\n\n<ul>\n<li><strong>-j</strong> -&gt; junk cookies</li>\n<li><strong>-k</strong> -&gt; ignore certificates</li>\n<li><strong>-L</strong> -&gt; follow redirects</li>\n<li><strong>-H [arg]</strong> -&gt; headers</li>\n</ul>\n\n<p><code>curl</code> can be used in place of <code>wget</code>.</p>\n\n<p><strong>UPDATE FOR JDK 7u79</strong></p>\n\n<pre><code>wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/7u79-b15/jdk-7u79-linux-x64.tar.gz\n</code></pre>\n\n<p>Once again, make sure you specify the correct URL for the version you are downloading. You can find the URL here: <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html\" rel=\"nofollow\">Oracle JDK download site</a></p>\n\n<p><strong>ORIGINAL ANSWER FROM 9th June 2012</strong></p>\n\n<p>If you are looking to download the Oracle JDK from the command line using <code>wget</code>, there is a workaround. Run the <code>wget</code> command as follows:</p>\n\n<pre><code>wget --no-cookies --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com\" \"http://download.oracle.com/otn-pub/java/jdk/7/jdk-7-linux-x64.tar.gz\"\n</code></pre>\n\n<p>Be sure to replace the download link with the correct one for the version you are downloading.</p>\n    "},{"t":"The case against checked exceptions","l":"http://stackoverflow.com/questions/613954/the-case-against-checked-exceptions","q":"\n\n<p>For a number of years now I have been unable to get a decent answer to the following question: why are some developers so against checked exceptions?  I have had numerous conversations, read things on blogs, read what Bruce Eckel had to say (the first person I saw speak out against them).  </p>\n\n<p>I am currently writing some new code and paying very careful attention to how I deal with exceptions.  I am trying to see the point of view of the \"we don't like checked exceptions\" crowd and I still cannot see it.</p>\n\n<p>Every conversation I have ends with the same question going unanswered... let me set it up:</p>\n\n<p>In general (from how Java was designed), </p>\n\n<ul>\n<li>Error is for things that should never be caught (VM has a peanut allergy and someone dropped a jar of peanuts on it)</li>\n<li>RuntimeException is for things that the programmer did wrong (programmer walked off the end of an array)</li>\n<li>Exception (except RuntimeException) is for things that are out of the programmer's control (disk fills up while writing to the file system, file handle limit for the process has been reached and you cannot open any more files)</li>\n<li>Throwable is simply the parent of all of the exception types.</li>\n</ul>\n\n<p>A common argument I hear is that if an exception happens then all the developer is going to do is exit the program.</p>\n\n<p>Another common argument I hear is that checked exceptions make it harder to refactor code.</p>\n\n<p>For the \"all I am going to do is exit\" argument I say that even if you are exiting you need to display a reasonable error message.  If you are just punting on handling errors then your users won't be overly happy when the program exits without a clear indication of why.</p>\n\n<p>For the \"it makes it hard to refactor\" crowd, that indicates that the proper level of abstraction wasn't chosen.  Rather than declare a method throws an IOException, the IOException should be transformed into an exception that is more suited for what is going on. </p>\n\n<p>I don't have an issue with wrapping Main with catch(Exception) (or in some cases catch(Throwable) to ensure that the program can exit gracefully - but I always catch the specific exceptions I need to.  Doing that allows me to, at the very least, display an appropriate error message.</p>\n\n<p>The question that people never reply to is this: </p>\n\n<blockquote>\n  <p>If you throw RuntimeException\n  subclasses instead of Exception\n  subclasses then how do you know what\n  you are supposed to catch?</p>\n</blockquote>\n\n<p>If the answer is catch Exception then you are also dealing with programmer errors the same way as system exceptions.  That seems wrong to me.</p>\n\n<p>If you catch Throwable then you are treating system exceptions and VM errors (and the like) the same way.  That seems wrong to me.</p>\n\n<p>If the answer is that you catch only the exceptions you know are thrown then how do you know what ones are thrown?  What happens when programmer X throws a new exception and forgot to catch it?  That seems very dangerous to me.</p>\n\n<p>I would say that a program that displays a stack trace is wrong.  Do people who don't like checked exceptions not feel that way?</p>\n\n<p>So, if you don't like checked exceptions can you explain why not AND answer the question that doesn't get answered please?</p>\n\n<p>Edit: I am not looking for advice on when to use either model, what I am looking for is <em>why</em> people extend from RuntimeException because they don't like extending from Exception and/or why they catch an exception and then rethrow a RuntimeException rather than add throws to their method.  I want to understand the motivation for disliking checked exceptions. </p>\n    ","a":"\n<p>I think I read the same Bruce Eckel interview that you did - and it's always bugged me. In fact, the argument was made by the interviewee (if this is indeed the post you're talking about) Anders Hejlsberg, the MS genius behind .Net and C#.</p>\n\n<p><a href=\"http://www.artima.com/intv/handcuffs.html\">http://www.artima.com/intv/handcuffs.html</a></p>\n\n<p>Fan though I am of Hejlsberg and his work, this argument has always struck me as bogus. It basically boils down to: </p>\n\n<p>\"Checked exceptions are bad because programmers just abuse them by always catching them and dismissing them which leads to problems being hidden and ignored that would otherwise be presented to the user\". </p>\n\n<p>By \"otherwise presented to the user\" I mean if you use a runtime exception the lazy programmer will just ignore it (versus catching it with an empty catch block) and the user will see it.</p>\n\n<p>The summary of the summary of the argument is that \"Programmers wont use them properly and not using them properly is worse than not having them\".</p>\n\n<p>There is some truth to this argument and in fact I suspect Goslings motivation for not putting operator overrides in Java comes from a similar argument - they confuse the programmer because they are often abused.</p>\n\n<p>But in the end I find it a bogus argument of Hejlsbergs and possibly a post-hoc one created to explain the lack rather than a well thought out decision.</p>\n\n<p>I would argue that while the over-use of checked exceptions is a bad thing and tends to lead to sloppy handling by users, but the proper use of them allows the API programmer to give great benefit to the API client programmer.</p>\n\n<p>Now the API programmer has to be careful not to throw checked exceptions all over the place, or they will simply annoy the client programmer. The very lazy client programmer will resort to catch (Exception) {} as Hejlsberg warns and all benefit will be lost and hell will ensue.\nBut in some circumstances there's just no substitute for a good checked exception. </p>\n\n<p>For me the classic example is the file-open API. Every programming language in the history of languages (on file systems at least) has an API somewhere that lets you open a file. And every client programmer using this API knows that they have to deal with the case that the file they are trying to open doesn't exist. \nLet me rephrase that: Every client programmer using this API <em>should know</em> that they have to deal with this case. \nAnd there's the rub: can the API progammer help them know they should deal with it through commenting alone or can they indeed <em>insist</em> the client deal with it.</p>\n\n<p>In C the idiom goes something like</p>\n\n<pre><code>  if (f = fopen(\"goodluckfindingthisfile\")) { ... } \n  else { // file not found ...\n</code></pre>\n\n<p>where fopen indicates failure by returning 0 and C (foolishly) lets you treat 0 as a boolean and... Basically you learn this idiom and you're okay. But what if you're a noob and you didn't learn the idiom. Then of course you start out with</p>\n\n<pre><code>   f = fopen(\"goodluckfindingthisfile\");\n   f.read(); // BANG! \n</code></pre>\n\n<p>and learn the hard way.</p>\n\n<p>Note that we're only talking about strongly typed languages here: There's a clear idea of what an API is in a strongly typed language: It's a smorgasbord of functionality (methods) for you to use with a clearly defined protocol for each one.</p>\n\n<p>That clearly defined protocol is typically defined by a method signature. \nHere fopen requires that you pass it a string (or a char* in the case of C). If you give it something else you get a compile-time error. You didn't follow the protocol - you're not using the API properly.</p>\n\n<p>In some (obscure) languages the return type is part of the protocol too. If you try to call the equivalent of fopen() in some languages without assigning it to a variable you'll also get a compile time error (you can only do that with void functions).</p>\n\n<p>The point I'm trying to make is that: <em>In a statically typed language the API programmer encourages the client to use the API properly by preventing their client code from compiling if it makes any obvious mistakes.</em></p>\n\n<p>(In a dynamically typed language, like Ruby, you can pass anything, say a float, as the file name - and it will compile. Why hassle the user with checked exceptions if you're not even going to control the method arguments. The arguments made here apply to statically-typed langauges only)</p>\n\n<p>So, what about checked exceptions?</p>\n\n<p>Well here's one of the Java APIs you can use for opening a file.</p>\n\n<pre><code>try {\n  f = new FileInputStream(\"goodluckfindingthisfile\");\n}\ncatch (FileNotFoundException e) {\n  // deal with it. No really, deal with it!\n  ... // this is me dealing with it\n}\n</code></pre>\n\n<p>See that catch? Here's the signature for that API method:</p>\n\n<pre><code>public FileInputStream(String name)\n                throws FileNotFoundException\n</code></pre>\n\n<p>Note that FileNotFoundException is a <em>checked</em> exception.</p>\n\n<p>The API programmer is saying this to you:\n  \"You may use this constructor to create a new FileInputStream but you </p>\n\n<p>a) <em>must</em> pass in the file name as a\n    String<br>\nb) <em>must</em> accept the\n    possibility that the file might not\n    be found at runtime\"</p>\n\n<p>And that's the whole point as far as I'm concerned.</p>\n\n<p>The key is basically what the question states as \"Things that are out of the programmers control\" My first thought was that he/she means things that are out of the <em>API</em> programmers control. But in fact, checked exceptions when used properly should really be for things that are out of both the client programmer's and the API programmer's control. I think this is the key to not abusing checked exceptions.</p>\n\n<p>I think the file-open illustrates the point nicely. The API programmer knows you might give them a file name that turns out to be nonexistent at the time the API is called, and that they won't be able to return you what you wanted, but will have to throw an exception. They also know that this will happen pretty regularly and that the client programmer might expect the file name to be correct at the time they wrote the call, but it might be wrong at runtime for reasons beyond their control too.</p>\n\n<p>So the API makes it explicit: There will be cases where this file doesn't exist at the time you call me and you had damn well better deal with it.</p>\n\n<p>This would be clearer with a counter-case. Imagine I'm writing a table API. I have  table model somewhere with an API with this method:</p>\n\n<pre><code>   public RowData getRowData(int row) \n</code></pre>\n\n<p>Now as an API programmer I know there will be cases where some client passes in a negative value for the row or a row value outside of the table. So I might be tempted to throw a checked exception and force the client to deal with it:</p>\n\n<pre><code>public RowData getRowData(int row) throws CheckedInvalidRowNumberException\n</code></pre>\n\n<p>(I wouldn't really call it \"Checked\" of course).</p>\n\n<p>This is bad use of checked exceptions. The client code is going to be full of calls to fetch row data, every one of which is going to have to use a try/catch, and for what? Are they going to report to the user that the wrong row was sought? Probably not - because whatever the UI surrounding my table view is, it shouldn't let the user get into a state where an illegal row is being requested. So it's a bug on the part of the client programmer. </p>\n\n<p>The API programmer can still predict that the client will code such bugs and should handle it with a runtime exception like an IllegalArgumentException. </p>\n\n<p>With a checked exception in getRowData, this is clearly a case that's going to lead to Hejlsbergs lazy programmer simply adding empty catches. When that happens, the illegal row values will not be obvious even to the tester or the client developer debugging, rather they'll lead to knock-on errors that are hard to pinpoint the source of. Arianne rockets will blow up after launch. </p>\n\n<p>Okay, so here's the problem: I'm saying that the checked exception FileNotFoundException is not just a good thing but an essential tool in the API programmers toolbox for defining the API in the most useful way for the client programmer. But the CheckedInvalidRowNumberException is a big inconvenience, leading to bad programming and should be avoided. But how to tell the difference. </p>\n\n<p>I guess it's not an exact science and I guess that underlies and perhaps justifies to a certain extent Hejlsbergs argument. But I'm not happy throwing the baby out with the bathwater here, so allow me to extract some rules here to distinguish good checked exceptions from bad:</p>\n\n<ol>\n<li><p>Out of clients control or Closed vs Open: </p>\n\n<p>Checked exceptions should only be used where the error case is out of control of both the API <em>and</em> the client programmer.\nThis has to do with how <em>open</em> or <em>closed</em> the system is. In a <em>constrained</em> UI where the client programmer has control, say, over all of the buttons, keyboard commands etc that add and delete rows from the table view, (a closed system) it is a client programming bug if it attempts to fetch data from a nonexistent row. In a file based operating system where any number of users/applications can add and delete files (an open system) it is conceivable that the file the client is requesting has been deleted without their knowledge so they should be expected to deal with it.  </p></li>\n<li><p>Ubiquity:</p>\n\n<p>Checked exceptions should not be used on an API call that is made frequently by the client.\nBy frequently I mean from a lot of places in the client code - not frequently in time. So a client code doesn't tend to try to open the same file a lot, but my table view gets RowData all over the place from different methods. In particular I'm going to be writing a lot of code like</p>\n\n<p>if (model.getRowData().getCell(0).isEmpty())</p>\n\n<p>and it will be painful to have to wrap in try/catch every time.</p></li>\n<li><p>Informing the User:</p>\n\n<p>Checked exceptions should be used in cases where you can imagine a useful error message being presented to the end user. \nThis is the \"and what will you when it happens?\" question I raise above. It also relates to item 1. Since you can predict that something outside of your client-API system might cause the file to not be there, you can reasonably tell the user about it:</p>\n\n<p>\"Error: could not find the file 'goodluckfindingthisfile'\"</p>\n\n<p>Since your illegal row number was caused by an internal bug and through no fault of the user, there's really no useful information you can give them. If your app doesn't let runtime exceptions fall through to the console it will probably end up giving them some ugly message like:</p>\n\n<p>\"Internal error occured: IllegalArgumentException in ....\"</p>\n\n<p>In short, if you don't think your client programmer can explain your exception in a way that helps the user, then you should probably not be using a checked exception.</p></li>\n</ol>\n\n<p>So those are my rules. Somewhat contrived, and there will doubtless be exceptions (please help me refine them if you will). But my main argument is that there are cases like FileNotFoundException where the checked exception is as important and useful a part of the API contract as the parameter types. So we should not dispense with it just because it is misused. </p>\n\n<p>Sorry, didn't mean to make this so long and waffly. Let me finish with two suggestions:</p>\n\n<p>A: API programmers: use checked exceptions sparingly to preserve their usefulness. When in doubt use an unchecked exception.</p>\n\n<p>B: Client programmers: get in the habit of creating a wrapped exception (google it) early on in your development. Jdk 1.4 and later provide a constructor in RuntimeException for this, but you can easily create your own too. Here's the constuctor:</p>\n\n<pre><code>public RuntimeException(Throwable cause)\n</code></pre>\n\n<p>Then get in the habit of whenever you have to handle a checked exception and you're feeling lazy (or you think the API programmer was overzealous in using the checked exception in the first place), don't just swallow the exception, wrap it and rethrow it.</p>\n\n<pre><code>try {\n  overzealousAPI(thisArgumentWontWork);\n}\ncatch (OverzealousCheckedException exception) {\n  throw new RuntimeException(exception);  \n}\n</code></pre>\n\n<p>Put this in one of your IDE's little code templates and use it when you're feeling lazy. This way if you really need to handle the checked exception you'll be forced to come back and deal with it after seeing the problem at runtime. Because, believe me (and Anders Hejlsberg) you're never going to come back to that TODO in your</p>\n\n<pre><code>catch (Exception e) { /* TODO deal with this at some point (yeah right) */}\n</code></pre>\n    "},{"t":"What's the difference between getPath(), getAbsolutePath(), and getCanonicalPath() in Java?","l":"http://stackoverflow.com/questions/1099300/whats-the-difference-between-getpath-getabsolutepath-and-getcanonicalpath","q":"\n\n<p>What's the difference between <code>getPath()</code>, <code>getAbsolutePath()</code>, and <code>getCanonicalPath()</code> in Java?</p>\n\n<p>And when do I use each one?</p>\n    ","a":"\n<p>Consider these filenames:</p>\n\n<p><code>C:\\temp\\file.txt</code> - This is a path, an absolute path, and a canonical path.</p>\n\n<p><code>.\\file.txt</code> - This is a path. It's neither an absolute path nor a canonical path.</p>\n\n<p><code>C:\\temp\\myapp\\bin\\..\\\\..\\file.txt</code> - This is a path and an absolute path. It's not a canonical path.</p>\n\n<p>A canonical path is always an absolute path.</p>\n\n<p>Converting from a path to a canonical path makes it absolute (usually tack on the current working directory so e.g. <code>./file.txt</code> becomes <code>c:/temp/file.txt</code>). The  canonical path of a file just \"purifies\" the path, removing and resolving stuff like <code>..\\</code> and resolving symlinks (on unixes).</p>\n    "},{"t":"Error java.lang.OutOfMemoryError: GC overhead limit exceeded","l":"http://stackoverflow.com/questions/1393486/error-java-lang-outofmemoryerror-gc-overhead-limit-exceeded","q":"\n\n<p>I get this error message as I execute my JUnit tests:</p>\n\n<pre><code>java.lang.OutOfMemoryError: GC overhead limit exceeded\n</code></pre>\n\n<p>I know what an <code>OutOfMemoryError</code> is, but what does GC overhead limit mean? How can I solve this?</p>\n    ","a":"\n<p>This message means that for some reason the garbage collector is taking an excessive amount of time (by default 98% of all CPU time of the process) and recovers very little memory in each run (by default 2% of the heap).</p>\n\n<p>This effectively means that your program stops doing any progress and is busy running only the garbage collection at all time.</p>\n\n<p>To prevent your application from soaking up CPU time without getting anything done, the JVM throws this <code>Error</code> so that you have a chance of diagnosing the problem.</p>\n\n<p>The rare cases where I've seen this happen is where some code was creating tons of temporary objects and tons of weakly-referenced objects in an already very memory-constrained environment.</p>\n\n<p>Check out <a href=\"http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html\">this article</a> for details (specifically <a href=\"http://www.oracle.com/technetwork/java/javase/gc-tuning-6-140523.html#par_gc.oom\">this part</a>).</p>\n    "},{"t":"What is the difference between canonical name, simple name and class name in Java Class?","l":"http://stackoverflow.com/questions/15202997/what-is-the-difference-between-canonical-name-simple-name-and-class-name-in-jav","q":"\n\n<p>In Java: What is the difference between:</p>\n\n<pre><code>Object o1= ....\no1.getClass().getSimpleName();\no1.getClass().getName();\no1.getClass().getCanonicalName();\n</code></pre>\n\n<p>?</p>\n\n<h1>UPDATE</h1>\n\n<p>I have already checked the Javadoc multiple times and yet this never explains it well.\nI also run a test and that didn't reflect any real meaning behind the way these methods are called.</p>\n\n<p>So please, instead of blaming me for asking this question and directing me to javadoc, try to give some efforts to explain the real meaning behind them. Thanks for your support.</p>\n    ","a":"\n<p>If you're unsure about something, try writing a test first.</p>\n\n<p>I did this:</p>\n\n<pre class=\"lang-java prettyprint-override\"><code>//primitive\nSystem.out.println(int.class.getName());\nSystem.out.println(int.class.getCanonicalName());\nSystem.out.println(int.class.getSimpleName());\n\nSystem.out.println();\n\n//class\nSystem.out.println(String.class.getName());\nSystem.out.println(String.class.getCanonicalName());\nSystem.out.println(String.class.getSimpleName());\n\nSystem.out.println();\n\n//inner class\nSystem.out.println(HashMap.SimpleEntry.class.getName());\nSystem.out.println(HashMap.SimpleEntry.class.getCanonicalName());\nSystem.out.println(HashMap.SimpleEntry.class.getSimpleName());        \n\nSystem.out.println();\n\n//anonymous inner class\nSystem.out.println(new Serializable(){}.getClass().getName());\nSystem.out.println(new Serializable(){}.getClass().getCanonicalName());\nSystem.out.println(new Serializable(){}.getClass().getSimpleName());\n</code></pre>\n\n<p>Prints:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>int\nint\nint\n\njava.lang.String\njava.lang.String\nString\n\njava.util.AbstractMap$SimpleEntry\njava.util.AbstractMap.SimpleEntry\nSimpleEntry\n\nClassnameTest$1\nnull\n</code></pre>\n\n<p>There's an empty line in the last block where <code>getSimpleName</code> returns an empty string.</p>\n\n<p>The upshot looking at this is:</p>\n\n<ul>\n<li>the <strong>name</strong> is the name that you'd use to dynamically load the class with, for example, a call to <code>Class.forName</code> with the default classloader.</li>\n<li>the <strong>canonical name</strong> is the name that would be used in an import statement and uniquely identifies the class.  Might be useful during <code>toString</code> or logging operations.</li>\n<li>the <strong>simple name</strong> loosely identifies the class, again might be useful during <code>toString</code> or logging operations but is not guaranteed to be unique.</li>\n</ul>\n    "},{"t":"How to pretty print XML from Java?","l":"http://stackoverflow.com/questions/139076/how-to-pretty-print-xml-from-java","q":"\n\n<p>I have a Java String that contains XML, with no line feeds or indentations. I would like to turn it into a String with nicely formatted XML. How do I do this?</p>\n\n<pre><code>String unformattedXml = \"&lt;tag&gt;&lt;nested&gt;hello&lt;/nested&gt;&lt;/tag&gt;\";\nString formattedXml = new [UnknownClass]().format(unformattedXml);\n</code></pre>\n\n<p>Note: My input is a <strong>String</strong>. My output is a <strong>String</strong>.</p>\n    ","a":"\n<p>Now it's 2012 and Java can do more than it used to with XML, I'd like to add an alternative to my accepted answer. This has no dependencies outside of Java 6.</p>\n\n<pre><code>import org.w3c.dom.Node;\nimport org.w3c.dom.bootstrap.DOMImplementationRegistry;\nimport org.w3c.dom.ls.DOMImplementationLS;\nimport org.w3c.dom.ls.LSSerializer;\nimport org.xml.sax.InputSource;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport java.io.StringReader;\n\n/**\n * Pretty-prints xml, supplied as a string.\n * &lt;p/&gt;\n * eg.\n * &lt;code&gt;\n * String formattedXml = new XmlFormatter().format(\"&lt;tag&gt;&lt;nested&gt;hello&lt;/nested&gt;&lt;/tag&gt;\");\n * &lt;/code&gt;\n */\npublic class XmlFormatter {\n\n    public String format(String xml) {\n\n        try {\n            final InputSource src = new InputSource(new StringReader(xml));\n            final Node document = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(src).getDocumentElement();\n            final Boolean keepDeclaration = Boolean.valueOf(xml.startsWith(\"&lt;?xml\"));\n\n        //May need this: System.setProperty(DOMImplementationRegistry.PROPERTY,\"com.sun.org.apache.xerces.internal.dom.DOMImplementationSourceImpl\");\n\n\n            final DOMImplementationRegistry registry = DOMImplementationRegistry.newInstance();\n            final DOMImplementationLS impl = (DOMImplementationLS) registry.getDOMImplementation(\"LS\");\n            final LSSerializer writer = impl.createLSSerializer();\n\n            writer.getDomConfig().setParameter(\"format-pretty-print\", Boolean.TRUE); // Set this to true if the output needs to be beautified.\n            writer.getDomConfig().setParameter(\"xml-declaration\", keepDeclaration); // Set this to true if the declaration is needed to be outputted.\n\n            return writer.writeToString(document);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n    public static void main(String[] args) {\n        String unformattedXml =\n                \"&lt;?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?&gt;&lt;QueryMessage\\n\" +\n                        \"        xmlns=\\\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/message\\\"\\n\" +\n                        \"        xmlns:query=\\\"http://www.SDMX.org/resources/SDMXML/schemas/v2_0/query\\\"&gt;\\n\" +\n                        \"    &lt;Query&gt;\\n\" +\n                        \"        &lt;query:CategorySchemeWhere&gt;\\n\" +\n                        \"   \\t\\t\\t\\t\\t         &lt;query:AgencyID&gt;ECB\\n\\n\\n\\n&lt;/query:AgencyID&gt;\\n\" +\n                        \"        &lt;/query:CategorySchemeWhere&gt;\\n\" +\n                        \"    &lt;/Query&gt;\\n\\n\\n\\n\\n\" +\n                        \"&lt;/QueryMessage&gt;\";\n\n        System.out.println(new XmlFormatter().format(unformattedXml));\n    }\n}\n</code></pre>\n    "},{"t":"How to parse command line arguments in Java? [closed]","l":"http://stackoverflow.com/questions/367706/how-to-parse-command-line-arguments-in-java","q":"\n\n<p>What is a good way of parsing command line arguments in Java?</p>\n    ","a":"\n<p>Check these out:</p>\n\n<ul>\n<li><a href=\"http://commons.apache.org/cli/\">http://commons.apache.org/cli/</a></li>\n<li><a href=\"http://www.martiansoftware.com/jsap/\">http://www.martiansoftware.com/jsap/</a></li>\n</ul>\n\n<p>Or roll your own:</p>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html\">http://docs.oracle.com/javase/7/docs/api/java/util/Scanner.html</a></li>\n</ul>\n    "},{"t":"Is there a destructor for Java?","l":"http://stackoverflow.com/questions/171952/is-there-a-destructor-for-java","q":"\n\n<p>Is there a destructor for Java? I don't seem to be able to find any documentation on this. If there isn't, how can I achieve the same effect?</p>\n\n<p>To make my question more specific, I am writing an application that deals with data, and the specification say that there should be a 'reset' button that brings the application back to its original just launched state. However, all data have to be 'live' unless application is closed or reset button is pressed.</p>\n\n<p>Being usually a C/C++ programmer, I thought this would be trivial to implement. (And hence I planned to implement it last.) I structured my program such that all the 'reset-able' objects would be in a same class so that I can just destroy all 'live' objects when reset button is pressed.</p>\n\n<p>I was thinking, if all I did was just to dereference the data and wait for the garbage collector to collect them, wouldn't there be a memory leak if my user repeatedly entered data and pressed the reset button? I was also thinking, since Java is quite mature as a language, there should be a way to prevent this from happening or gracefully tackle this.</p>\n    ","a":"\n<p>Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor.</p>\n\n<p>There is an inherited method called finalize, but this is called entirely at the discretion of the garbage collector. So for classes that need to explicitly tidy up, the convention is to define a <em>close</em> method and use finalize only for sanity checking (i.e. if <em>close</em> has not been called do it now and log an error).</p>\n\n<p>There was <a href=\"http://stackoverflow.com/questions/158174/why-would-you-ever-implement-finalize\">a question that spawned in-depth discussion of finalize</a> recently, so that should provide more depth if required...</p>\n    "},{"t":"What's the nearest substitute for a function pointer in Java?","l":"http://stackoverflow.com/questions/122407/whats-the-nearest-substitute-for-a-function-pointer-in-java","q":"\n\n<p>I have a method that's about ten lines of code.  I want to create more methods that do exactly the same thing, except for a small calculation that's going to change one line of code.  This is a perfect application for passing in a function pointer to replace that one line, but Java doesn't have function pointers.  What's my best alternative?</p>\n    ","a":"\n<p>Anonymous inner class</p>\n\n<p>Say you want to have a function passed in with a <code>String</code> param that returns an <code>int</code>.<br>\nFirst you have to define an interface with the function as its only member, if you can't reuse an existing one.</p>\n\n<pre><code>interface StringFunction {\n    int somefunction(String param);\n}\n</code></pre>\n\n<p>A method that takes the pointer would just accept <code>StringFunction</code> instance like so:</p>\n\n<pre><code>public void takingMethod(StringFunction sf) {\n   //stuff\n   int output = sf.somefunction(input);\n   // more stuff\n}\n</code></pre>\n\n<p>And would be called like so:</p>\n\n<pre><code>ref.takingMethod(new StringFunction() {\n    public int somefunction(String param) {\n        //body\n    }\n});\n</code></pre>\n\n<p><em>EDIT</em> In Java 8, you could call it with a lambda expression:</p>\n\n<pre><code>ref.takingMethod(param -&gt; bodyExpression);\n</code></pre>\n    "},{"t":"Get source JARs from Maven repository","l":"http://stackoverflow.com/questions/2059431/get-source-jars-from-maven-repository","q":"\n\n<p>Does anyone have any idea if you can find source JARs on Maven repositories?</p>\n    ","a":"\n<blockquote>\n  <h1>Maven Micro-Tip: Get sources and Javadocs</h1>\n  \n  <p>When you're using Maven in an IDE you often find the need for your IDE to resolve source code and Javadocs for your library dependencies.  There's an easy way to accomplish that goal.</p>\n\n<pre><code>mvn dependency:sources\nmvn dependency:resolve -Dclassifier=javadoc</code></pre>\n  \n  <p>The first command will attempt to download source code for each of the dependencies in your pom file.</p>\n  \n  <p>The second command will attempt to download the Javadocs.</p>\n  \n  <p>Maven is at the mercy of the library packagers here.  So some of them won't have source code packaged and many of them won't have Javadocs.</p>\n</blockquote>\n\n<p>Source: <a href=\"http://tedwise.com/2010/01/27/maven-micro-tip-get-sources-and-javadocs/\">http://tedwise.com/2010/01/27/maven-micro-tip-get-sources-and-javadocs/</a></p>\n    "},{"t":"What is the difference between instanceof and Class.isAssignableFrom(…)?","l":"http://stackoverflow.com/questions/496928/what-is-the-difference-between-instanceof-and-class-isassignablefrom","q":"\n\n<p>Which of the following is better?</p>\n\n<pre><code>a instanceof B\n</code></pre>\n\n<p>or</p>\n\n<pre><code>B.class.isAssignableFrom(a.getClass())\n</code></pre>\n\n<p>The only difference that I know of is, when 'a' is null, the first returns false, while the second throws an exception. Other than that, do they always give the same result?</p>\n    ","a":"\n<p>When using <code>instanceof</code>, you need to know the class of \"B\" at compile time.  When using <code>isAssignableFrom()</code> it can be dynamic and change during runtime.</p>\n    "},{"t":"Any way to declare an array in-line?","l":"http://stackoverflow.com/questions/1154008/any-way-to-declare-an-array-in-line","q":"\n\n<p>Let's say I have a method m() that takes an array of Strings as an argument.  Is there a way I can just declare this array in-line when I make the call?  i.e. Instead of:</p>\n\n<pre><code>String[] strs = {\"blah\", \"hey\", \"yo\"};\nm(strs);\n</code></pre>\n\n<p>Can I just replace this with one line, and avoid declaring a named variable that I'm never going to use?</p>\n    ","a":"\n<pre><code>m(new String[]{\"blah\", \"hey\", \"yo\"});\n</code></pre>\n    "},{"t":"How do I address unchecked cast warnings?","l":"http://stackoverflow.com/questions/509076/how-do-i-address-unchecked-cast-warnings","q":"\n\n<p>Eclipse is giving me a warning of the following form:</p>\n\n<pre><code>Type safety: Unchecked cast from Object to HashMap&lt;String, String&gt;\n</code></pre>\n\n<p>This is from a call to an API that I have no control over which returns Object:</p>\n\n<pre><code>HashMap&lt;String, String&gt; getItems(javax.servlet.http.HttpSession session) {\n  HashMap&lt;String, String&gt; theHash = (HashMap&lt;String, String&gt;)session.getAttribute(\"attributeKey\");\n  return theHash;\n}\n</code></pre>\n\n<p>I'd like to avoid Eclipse warnings, if possible, since theoretically they indicate at least a potential code problem.  I haven't found a good way to eliminate this one yet, though.  I can extract the single line involved out to a method by itself and add @SuppressWarnings(\"unchecked\") to that method, thus limiting the impact of having a block of code where I ignore warnings.  Any better options?  I don't want to turn these warnings off in Eclipse.</p>\n\n<p>Before I came to the code, it was simpler, but still provoked warnings:</p>\n\n<pre><code>HashMap getItems(javax.servlet.http.HttpSession session) {\n  HashMap theHash = (HashMap)session.getAttribute(\"attributeKey\");\n  return theHash;\n}\n</code></pre>\n\n<p>Problem was elsewhere when you tried to use the hash you'd get warnings:</p>\n\n<pre><code>HashMap items = getItems(session);\nitems.put(\"this\", \"that\");\n\nType safety: The method put(Object, Object) belongs to the raw type HashMap.  References to generic type HashMap&lt;K,V&gt; should be parameterized.\n</code></pre>\n    ","a":"\n<p>Wow; I think I figured out the answer to my own question.  I'm just not sure it's worth it! :)</p>\n\n<p>The problem is the cast isn't checked.  So, you have to check it yourself.  You can't just check a parameterized type with instanceof, because the parameterized type information is unavailable at runtime, having been erased at compile time.</p>\n\n<p>But, you can perform a check on each and every item in the hash, with instanceof, and in doing so, you can construct a new hash that is type-safe.  And you won't provoke any warnings.</p>\n\n<p>Thanks to mmyers and Esko Luontola, I've parameterized the code I originally wrote here, so it can be wrapped up in a utility class somewhere and used for any parameterized HashMap.  If you want to understand it better and aren't very familiar with generics, I encourage viewing the edit history of this answer.</p>\n\n<pre><code>public static &lt;K, V&gt; HashMap&lt;K, V&gt; castHash(HashMap input,\n                                            Class&lt;K&gt; keyClass,\n                                            Class&lt;V&gt; valueClass) {\n  HashMap&lt;K, V&gt; output = new HashMap&lt;K, V&gt;();\n  if (input == null)\n      return output;\n  for (Object key: input.keySet().toArray()) {\n    if ((key == null) || (keyClass.isAssignableFrom(key.getClass()))) {\n        Object value = input.get(key);\n        if ((value == null) || (valueClass.isAssignableFrom(value.getClass()))) {\n            K k = keyClass.cast(key);\n            V v = valueClass.cast(value);\n            output.put(k, v);\n        } else {\n            throw new AssertionError(\n                \"Cannot cast to HashMap&lt;\"+ keyClass.getSimpleName()\n                +\", \"+ valueClass.getSimpleName() +\"&gt;\"\n                +\", value \"+ value +\" is not a \"+ valueClass.getSimpleName()\n            );\n        }\n    } else {\n        throw new AssertionError(\n            \"Cannot cast to HashMap&lt;\"+ keyClass.getSimpleName()\n            +\", \"+ valueClass.getSimpleName() +\"&gt;\"\n            +\", key \"+ key +\" is not a \" + keyClass.getSimpleName()\n        );\n    }\n  }\n  return output;\n}\n</code></pre>\n\n<p>That's a lot of work, possibly for very little reward...  I'm not sure if I'll use it or not.  I'd appreciate any comments as to whether people think it's worth it or not.  Also, I'd appreciate improvement suggestions: is there something better I can do besides throw AssertionErrors?  Is there something better I could throw?  Should I make it a checked Exception?</p>\n    "},{"t":"Why does this() and super() have to be the first statement in a constructor?","l":"http://stackoverflow.com/questions/1168345/why-does-this-and-super-have-to-be-the-first-statement-in-a-constructor","q":"\n\n<p>Java requires that if you call this() or super() in a constructor, it must be the first statement. Why?</p>\n\n<p>For example:</p>\n\n<pre><code>public class MyClass {\n    public MyClass(int x) {}\n}\n\npublic class MySubClass extends MyClass {\n    public MySubClass(int a, int b) {\n        int c = a + b;\n        super(c);  // COMPILE ERROR\n    }\n}\n</code></pre>\n\n<p>The Sun compiler says \"call to super must be first statement in constructor\". The Eclipse compiler says \"Constructor call must be the first statement in a constructor\".</p>\n\n<p>However, you can get around this by re-arranging the code a little bit:</p>\n\n<pre><code>public class MySubClass extends MyClass {\n    public MySubClass(int a, int b) {\n        super(a + b);  // OK\n    }\n}\n</code></pre>\n\n<p>Here is another example:</p>\n\n<pre><code>public class MyClass {\n    public MyClass(List list) {}\n}\n\npublic class MySubClassA extends MyClass {\n    public MySubClassA(Object item) {\n        // Create a list that contains the item, and pass the list to super\n        List list = new ArrayList();\n        list.add(item);\n        super(list);  // COMPILE ERROR\n    }\n}\n\npublic class MySubClassB extends MyClass {\n    public MySubClassB(Object item) {\n        // Create a list that contains the item, and pass the list to super\n        super(Arrays.asList(new Object[] { item }));  // OK\n    }\n}\n</code></pre>\n\n<p>So, it is <strong>not stopping you from executing logic</strong> before the call to super. It is just stopping you from executing logic that you can't fit into a single expression.</p>\n\n<p>There are similar rules for calling <code>this()</code>. The compiler says \"call to this must be first statement in constructor\".</p>\n\n<p>Why does the compiler have these restrictions? Can you give a code example where, if the compiler did not have this restriction, something bad would happen?</p>\n    ","a":"\n<p>The parent class' constructor needs to be called before the subclass' constructor. This will ensure that if you call any methods on the parent class in your constructor, the parent class has already been set up correctly.</p>\n\n<p>What you are trying to do, pass args to the super constructor is perfectly legal, you just need to construct those args inline as you are doing, or pass them in to your constructor and then pass them to super:</p>\n\n<pre><code>public MySubClassB extends MyClass {\n        public MySubClassB(Object[] myArray) {\n                super(myArray);\n        }\n}\n</code></pre>\n\n<p>If the compiler did not enforce this you could do this:</p>\n\n<pre><code>public MySubClassB extends MyClass {\n        public MySubClassB(Object[] myArray) {\n                someMethodOnSuper(); //ERROR super not yet constructed\n                super(myArray);\n        }\n}\n</code></pre>\n\n<p>In cases where a parent class has a default constructor the call to super is inserted for you automatically by the compiler. Since every class in Java inherits from Object, objects constructor must be called somehow and it must be executed first. The automatic insertion of super() by the compiler allows this. Enforcing super to appear first, enforces that constructor bodies are executed in the correct order which would be: Object -&gt; Parent -&gt; Child -&gt; ChildOfChild -&gt; SoOnSoForth</p>\n    "},{"t":"Spring @Transactional Annotation Best Practice","l":"http://stackoverflow.com/questions/1079114/spring-transactional-annotation-best-practice","q":"\n\n<p>We are currently discussing the Best Practice for placing the <code>@Transactional</code> annotations in our code.</p>\n\n<p>Do you place the <code>@Transactional</code> in the <code>DAO</code> classes and/or their methods or is it better to annotate the Service classes which are calling using the DAO objects? Or does it make sense to annotate both \"layers\"?</p>\n    ","a":"\n<p>I think transactions belong on the Service layer.  It's the one that knows about units of work and use cases.  It's the right answer if you have several DAOs injected into a Service that need to work together in a single transaction.</p>\n    "},{"t":"Why is the Java main method static?","l":"http://stackoverflow.com/questions/146576/why-is-the-java-main-method-static","q":"\n\n<p>The method signature of a Java <strong><em>main()</em></strong> method is:</p>\n\n<pre><code>public static void main(String[] args){\n    ...\n}\n</code></pre>\n\n<p><strong>Is there a reason for this method to be static?</strong></p>\n    ","a":"\n<p>The method is static because otherwise there would be ambiguity: which constructor should be called?  Especially if your class looks like this:</p>\n\n<pre><code>public class JavaClass{\n  protected JavaClass(int x){}\n  public void main(String[] args){\n  }\n}\n</code></pre>\n\n<p>Should the JVM call <strong><em>new JavaClass</em></strong>(int)?  What should it pass for x?</p>\n\n<p>If not, should the JVM instantiate <strong><em>JavaClass</em></strong> without running any constructor method?  I think it shouldn't, because that will special-case your entire class - sometimes you have an instance that hasn't been initialized, and you have to check for it in every method that could be called.</p>\n\n<p>There are just too many edge cases and ambiguities for it to make sense for the JVM to have to instantiate a class before the entry point is called.  That's why <strong>main</strong> is static.</p>\n\n<p>I have no idea why <strong>main</strong> is always marked <strong>public</strong> though.</p>\n    "},{"t":"File to byte[] in Java","l":"http://stackoverflow.com/questions/858980/file-to-byte-in-java","q":"\n\n<p>How do I convert a <code>java.io.File</code> to a <code>byte[]</code>?</p>\n    ","a":"\n<p>It depends on what best means for you. Productivity wise, don't reinvent the wheel and use\nApache Commons. Which is here <a href=\"http://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/IOUtils.html#toByteArray%28java.io.InputStream%29\"><code>IOUtils.toByteArray(InputStream input)</code></a>.</p>\n    "},{"t":"Can enums be subclassed to add new elements?","l":"http://stackoverflow.com/questions/1414755/can-enums-be-subclassed-to-add-new-elements","q":"\n\n<p>I want to take an existing enum and add more elements to it as follows:</p>\n\n<pre><code>enum A {a,b,c}\n\nenum B extends A {d}\n\n/*B is {a,b,c,d}*/\n</code></pre>\n\n<p>Is this possible in Java?</p>\n    ","a":"\n<p>No, you can't do this in Java. Aside from anything else, <code>d</code> would then presumably be an instance of <code>A</code> (given the normal idea of \"extends\"), but users who only knew about <code>A</code> wouldn't know about it - which defeats the point of an enum being a well-known set of values.</p>\n\n<p>If you could tell us more about how you want to <em>use</em> this, we could potentially suggest alternative solutions.</p>\n    "},{"t":"Java and SQLite [closed]","l":"http://stackoverflow.com/questions/41233/java-and-sqlite","q":"\n\n<p>I'm attracted to the neatness that a single file database provides. What driver/connector library is out there to connect and use SQLite with Java.</p>\n\n<p>I've discovered a wrapper library, <a href=\"http://www.ch-werner.de/javasqlite/\">http://www.ch-werner.de/javasqlite</a>, but are there other more prominent projects available?</p>\n    ","a":"\n<p>The <a href=\"http://www.sqlite.org/cvstrac/wiki?p=SqliteWrappers\" rel=\"nofollow\">wiki</a> lists some more wrappers:</p>\n\n<ul>\n<li>Java wrapper (around a SWIG interface): <a href=\"http://tk-software.home.comcast.net/\" rel=\"nofollow\">http://tk-software.home.comcast.net/</a></li>\n<li>A good tutorial to use JDBC driver for SQLite. (it works at least !) <a href=\"http://www.ci.uchicago.edu/wiki/bin/view/VDS/VDSDevelopment/UsingSQLite\" rel=\"nofollow\">http://www.ci.uchicago.edu/wiki/bin/view/VDS/VDSDevelopment/UsingSQLite</a></li>\n<li>Cross-platform JDBC driver which uses embedded native SQLite libraries on Windows, Linux, OS X, and falls back to pure Java implementation on other OSes: <a href=\"https://github.com/xerial/sqlite-jdbc\" rel=\"nofollow\">https://github.com/xerial/sqlite-jdbc</a> (formerly <a href=\"http://www.zentus.com/sqlitejdbc\" rel=\"nofollow\">zentus</a>)</li>\n<li>Another Java - SWIG wrapper. It only works on Win32. <a href=\"http://rodolfo_3.tripod.com/index.html\" rel=\"nofollow\">http://rodolfo_3.tripod.com/index.html</a></li>\n<li>sqlite-java-shell: 100% pure Java port of the sqlite3 commandline shell built with NestedVM. (This is not a JDBC driver).</li>\n<li>SQLite JDBC Driver for Mysaifu JVM: SQLite JDBC Driver for Mysaifu JVM and SQLite JNI Library for Windows (x86) and Linux (i386/PowerPC). </li>\n</ul>\n    "},{"t":"What is the difference between JDK and JRE?","l":"http://stackoverflow.com/questions/1906445/what-is-the-difference-between-jdk-and-jre","q":"\n\n<p>What is the difference between JDK and JRE?<br>\nWhat are their roles and when should I use one or the other?</p>\n    ","a":"\n<p><strong>JRE</strong>: Java Runtime Environment. It is basically the Java Virtual Machine where your Java programs run on. It also includes browser plugins for Applet execution.</p>\n\n<p><strong>JDK</strong>: It's the full featured Software Development Kit for Java, including <strong>JRE</strong>, and the compilers and tools (like JavaDoc, and Java Debugger) to create and compile programs.</p>\n\n<p>Usually, when you only care about running Java programs on your browser or computer you will only install <strong>JRE</strong>. It's all you need. On the other hand, if you are planning to do some Java programming, you will also need <strong>JDK</strong>. </p>\n\n<p>Sometimes, even though you are not planning to do any Java Development on a computer, you still need the <strong>JDK</strong> installed. For example, if you are deploying a WebApp with <strong>JSP</strong>, you are <em>technically</em> <strong>just</strong> running Java Programs inside the application server. Why would you need <strong>JDK</strong> then? Because application server will convert <strong>JSP</strong> into Servlets and use <strong>JDK</strong> to compile the servlets. I am sure there might be more examples.</p>\n    "},{"t":"Android requires compiler compliance level 5.0 or 6.0. Found '1.7' instead. Please use Android Tools > Fix Project Properties","l":"http://stackoverflow.com/questions/7637144/android-requires-compiler-compliance-level-5-0-or-6-0-found-1-7-instead-plea","q":"\n\n<p>Did anybody have similar problem with this, I import android project and I get \nerrors like </p>\n\n<pre><code>[2011-10-03 17:20:09 - Screen] Android requires compiler compliance level 5.0 or 6.0. Found '1.7' instead. Please use Android Tools &gt; Fix Project Properties.\n[2011-10-03 17:21:55 - App] Android requires compiler compliance level 5.0 or 6.0. Found '1.7' instead. Please use Android Tools &gt; Fix Project Properties.\n[2011-10-03 17:21:59 - App] Android requires compiler compliance level 5.0 or 6.0. Found '1.7' instead. Please use Android Tools &gt; Fix Project Properties.\n</code></pre>\n\n<p>I got errors to delete all @Override above functions. I have Windows 7 x64, jvm7 x64. Does anyone have clue what is wrong ?( I done Android Tools -&gt; Fix Project Properties but didn;t help )</p>\n    ","a":"\n<p>That isn't the problem, Jack. Android SDK isn't x64, but works ok with x64 jvm (and x64 eclipse IDE).</p>\n\n<p>As helios said, you must set project compatibility to Java 5.0 or Java 6.0.</p>\n\n<p>To do that, 2 options: </p>\n\n<ol>\n<li>Right-click on your project and select <code>\"Android Tools -&gt; Fix\nProject Properties\"</code> (if this din't work, try second option)</li>\n<li>Right-click on your project and select <code>\"Properties -&gt; Java\n    Compiler\"</code>, check <strong>\"Enable project specific settings\"</strong> and select\n1.5 or 1.6 from <strong>\"Compiler compliance settings\"</strong> select box.</li>\n</ol>\n    "},{"t":"Eclipse cannot load SWT libraries","l":"http://stackoverflow.com/questions/10165693/eclipse-cannot-load-swt-libraries","q":"\n\n<p>Every time I try to open Eclipse in Ubuntu 12.04 I get an Unsatisfied Link Error and it will not open. I have recently installed the java JDK and Android SDK, could this be the problem? I followed <a href=\"http://forums.team-nocturnal.com/showthread.php/772\">this tutorial</a>.</p>\n\n<p>Here is the log info:</p>\n\n<pre><code>!SESSION 2012-04-15 21:05:46.902 -----------------------------------------------\neclipse.buildId=I20110613-1736\njava.version=1.7.0\njava.vendor=Oracle Corporation\nBootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_GB\nCommand-line arguments:  -os linux -ws gtk -arch x86_64\n\n!ENTRY org.eclipse.osgi 4 0 2012-04-15 21:05:47.885\n!MESSAGE Application error\n!STACK 1\njava.lang.UnsatisfiedLinkError: Could not load SWT library. Reasons: \nno swt-gtk-3740 in java.library.path\nno swt-gtk in java.library.path\nCan't load library: /home/tom/.swt/lib/linux/x86_64/libswt-gtk-3740.so\nCan't load library: /home/tom/.swt/lib/linux/x86_64/libswt-gtk.so\n\nat org.eclipse.swt.internal.Library.loadLibrary(Library.java:285)\nat org.eclipse.swt.internal.Library.loadLibrary(Library.java:194)\nat org.eclipse.swt.internal.C.&lt;clinit&gt;(C.java:21)\nat org.eclipse.swt.internal.Converter.wcsToMbcs(Converter.java:63)\nat org.eclipse.swt.internal.Converter.wcsToMbcs(Converter.java:54)\nat org.eclipse.swt.widgets.Display.&lt;clinit&gt;(Display.java:132)\nat org.eclipse.ui.internal.Workbench.createDisplay(Workbench.java:695)\nat org.eclipse.ui.PlatformUI.createDisplay(PlatformUI.java:161)\nat org.eclipse.ui.internal.ide.application.IDEApplication.createDisplay(IDEApplication.java:153)\nat org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:95)\nat org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)\nat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:344)\nat org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:179)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:601)\nat org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:622)\nat org.eclipse.equinox.launcher.Main.basicRun(Main.java:577)\nat org.eclipse.equinox.launcher.Main.run(Main.java:1410)\nat org.eclipse.equinox.launcher.Main.main(Main.java:1386)\n</code></pre>\n\n<p>I have tried uninstalling and reinstalling, and removing the <code>~/.eclipse</code> directory but it still doesn't work</p>\n    ","a":"\n<p>on my Ubuntu 12.04 <strong>32 bit</strong>. I edit the command to: </p>\n\n<pre><code>ln -s /usr/lib/jni/libswt-* ~/.swt/lib/linux/x86/\n</code></pre>\n\n<p>And on Ubuntu 12.04 <strong>64 bit</strong> try: </p>\n\n<pre><code>ln -s /usr/lib/jni/libswt-* ~/.swt/lib/linux/x86_64/\n</code></pre>\n    "},{"t":"How slow are Java exceptions?","l":"http://stackoverflow.com/questions/299068/how-slow-are-java-exceptions","q":"\n\n<p>Question:  Is exception handling in Java actually slow?</p>\n\n<p>Conventional wisdom, as well as a lot of Google results, says that exceptional logic shouldn't be used for normal program flow in Java.  Two reasons are usually given, 1) its really slow - even an order of magnitude slower than regular code (the reasons given vary), and 2) its messy because people expect only errors to be handled in exceptional code.  This question is about #1.</p>\n\n<p>As an example, <a href=\"http://leepoint.net/notes-java/flow/exceptions/03exceptions.html\">this page</a> describes Java exception handling as \"very slow\" and relates the slowness to the creation of the exception message string - \"this string is then used in creating the exception object that is thrown. This is not fast.\"  The article <a href=\"http://adtmag.com/articles/2000/08/22/effective-exception-handling-in-java.aspx\">Effective Exception Handling in Java</a> says that \"the reason for this is due to the object creation aspect of exception handling, which thereby makes throwing exceptions inherently slow\".  Another reason out there is that the stack trace generation is what slows it down.</p>\n\n<p>My testing (using Java 1.6.0_07, Java HotSpot 10.0, on 32 bit Linux), indicates that exception handling is no slower than regular code.  I tried running a method in a loop that executes some code.  At the end of the method, I use a boolean to indicate whether to <em>return</em> or <em>throw</em>.  This way the actual processing is the same. I tried running the methods in different orders and averaging my test times, thinking it may have been the JVM warming up.  In all my tests, the throw was at least as fast as the return, if not faster (up to 3.1% faster).  I am completely open to the possibility that my tests were wrong, but I haven't seen anything out there in the way of code sample, test comparisons, or results in the last year or two that show exception handling in Java to actually be slow.</p>\n\n<p>What lead me down this path was an API I needed to use that threw exceptions as part of normal control logic.  I wanted to correct them in their usage, but now I may not be able to.  Will I instead have to praise them on their forward thinking?</p>\n\n<p>In the paper <a href=\"http://portal.acm.org/citation.cfm?id=337453\">Efficient Java exception handling in just-in-time compilation</a>, the authors suggest that the presence of exception handlers alone, even if no exceptions are thrown, is enough to prevent the JIT compiler from optimizing the code properly, thus slowing it down.  I haven't tested this theory yet.</p>\n    ","a":"\n<p>It depends how exceptions are implemented. The simplest way is using setjmp and longjmp. That means all registers of the CPU are written to the stack (which already takes some time) and possibly some other data needs to be created... all this already happens in the try statement. The throw statement needs to unwind the stack and restore the values of all registers (and possible other values in the VM). So try and throw are equally slow, and that is pretty slow, however if no exception is thrown, exiting the try block takes no time whatsoever in most cases (as everything is put on the stack which cleans up automatically if the method exists).</p>\n\n<p>Sun and others recognized, that this is possibly suboptimal and of course VMs get faster and faster over the time. There is another way to implement exceptions, which makes try itself lightning fast (actually nothing happens for try at all in general - everything that needs to happen is already done when the class is loaded by the VM) and it makes throw not quite as slow. I don't know which JVM uses this new, better technique... </p>\n\n<p>...but are you writing in Java so your code later on only runs on one JVM on one specific system? Since if it may ever run on any other platform or any other JVM version (possibly of any other vendor), who says they also use the fast implementation? The fast one is more complicated than the slow one and not easily possible on all systems. You want to stay portable? Then don't rely on exceptions being fast.</p>\n\n<p>It also makes a big difference what you do within a try block. If you open a try block and never call any method from within this try block, the try block will be ultra fast, as the JIT can then actually treat a throw like a simple goto. It neither needs to save stack-state nor does it need to unwind the stack if an exception is thrown (it only needs to jump to the catch handlers). However, this is not what you usually do. Usually you open a try block and then call a method that might throw an exception, right? And even if you just use the try block within your method, what kind of method will this be, that does not call any other method? Will it just calculate a number? Then what for do you need exceptions? There are much more elegant ways to regulate program flow. For pretty much anything else but simple math, you will have to call an external method and this already destroys the advantage of a local try block.</p>\n\n<p>See the following test code:</p>\n\n<pre><code>public class Test {\n    int value;\n\n\n    public int getValue() {\n        return value;\n    }\n\n    public void reset() {\n        value = 0;\n    }\n\n    // Calculates without exception\n    public void method1(int i) {\n        value = ((value + i) / i) &lt;&lt; 1;\n        // Will never be true\n        if ((i &amp; 0xFFFFFFF) == 1000000000) {\n            System.out.println(\"You'll never see this!\");\n        }\n    }\n\n    // Could in theory throw one, but never will\n    public void method2(int i) throws Exception {\n        value = ((value + i) / i) &lt;&lt; 1;\n        // Will never be true\n        if ((i &amp; 0xFFFFFFF) == 1000000000) {\n            throw new Exception();\n        }\n    }\n\n    // This one will regularly throw one\n    public void method3(int i) throws Exception {\n        value = ((value + i) / i) &lt;&lt; 1;\n        // i &amp; 1 is equally fast to calculate as i &amp; 0xFFFFFFF; it is both\n        // an AND operation between two integers. The size of the number plays\n        // no role. AND on 32 BIT always ANDs all 32 bits\n        if ((i &amp; 0x1) == 1) {\n            throw new Exception();\n        }\n    }\n\n    public static void main(String[] args) {\n        int i;\n        long l;\n        Test t = new Test();\n\n        l = System.currentTimeMillis();\n        t.reset();\n        for (i = 1; i &lt; 100000000; i++) {\n            t.method1(i);\n        }\n        l = System.currentTimeMillis() - l;\n        System.out.println(\n            \"method1 took \" + l + \" ms, result was \" + t.getValue()\n        );\n\n        l = System.currentTimeMillis();\n        t.reset();\n        for (i = 1; i &lt; 100000000; i++) {\n            try {\n                t.method2(i);\n            } catch (Exception e) {\n                System.out.println(\"You'll never see this!\");\n            }\n        }\n        l = System.currentTimeMillis() - l;\n        System.out.println(\n            \"method2 took \" + l + \" ms, result was \" + t.getValue()\n        );\n\n        l = System.currentTimeMillis();\n        t.reset();\n        for (i = 1; i &lt; 100000000; i++) {\n            try {\n                t.method3(i);\n            } catch (Exception e) {\n                // Do nothing here, as we will get here\n            }\n        }\n        l = System.currentTimeMillis() - l;\n        System.out.println(\n            \"method3 took \" + l + \" ms, result was \" + t.getValue()\n        );\n    }\n}\n</code></pre>\n\n<p>Result:</p>\n\n<pre><code>method1 took 972 ms, result was 2\nmethod2 took 1003 ms, result was 2\nmethod3 took 66716 ms, result was 2\n</code></pre>\n\n<p>The slowdown from the try block is too small to rule out confounding factors such as background processes. But the catch block killed everything and made it 66 times slower!</p>\n\n<p>As I said, the result will not be that bad if you put try/catch and throw all within the same method (method3), but this is a special JIT optimization I would not rely upon. And even when using this optimization, the throw is still pretty slow. So I don't know what you are trying to do here, but there is definitely a better way of doing it than using try/catch/throw.</p>\n    "},{"t":"Do I really have a car in my garage? [duplicate]","l":"http://stackoverflow.com/questions/24883075/do-i-really-have-a-car-in-my-garage","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/4937180/a-base-class-pointer-can-point-to-a-derived-class-object-why-is-the-vice-versa\" dir=\"ltr\">A Base Class pointer can point to a derived class object. Why is the vice-versa not true?</a>\n                <span class=\"question-originals-answer-count\">\n                    9 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>I'm a newbie to Java programming, trying to get the hang of OOP.</p>\n\n<p>So I built this abstract class:</p>\n\n<pre><code>public abstract class Vehicle{....}\n</code></pre>\n\n<p>and 2 subclasses:</p>\n\n<pre><code>public class Car extends Vehicle{....}\npublic class Boat extends Vehicle{....}\n</code></pre>\n\n<p><code>Car</code> and <code>Boat</code> also hold some unique fields and methods that aren't common (don't have the same name, so I can't define an abstract method for them in Vehicle).</p>\n\n<p>Now in mainClass I have setup my new Garage:</p>\n\n<pre><code>Vehicle[] myGarage= new Vehicle[10];\nmyGarage[0]=new Car(2,true);\nmyGarage[1]=new Boat(4,600);\n</code></pre>\n\n<p>I was very happy with polymorphism until I tried to access one of the fields that are unique to Car, such as:</p>\n\n<pre><code>boolean carIsAutomatic = myGarage[0].auto;\n</code></pre>\n\n<p>The compiler doesn't accept that. I worked around this issue using casting:</p>\n\n<pre><code>boolean carIsAutomatic = ((Car)myGarage[0]).auto;\n</code></pre>\n\n<p>That works... but it doesn't help with methods, just fields. Meaning I can't do</p>\n\n<pre><code>(Car)myGarage[0].doSomeCarStuff();\n</code></pre>\n\n<p>So my question is - what do I really have in my garage? I'm trying to get the intuition as well as understand what's going on \"behind the scenes\".</p>\n\n<hr>\n\n<p>for the sake of future readers, a short summary of the answers below:</p>\n\n<ol>\n<li>Yes, there's a <code>Car</code> in <code>myGarage[]</code></li>\n<li>Being a static typed language, the Java compiler will not lend access to methods/fields that are non-\"Vehicle\", if accessing those through a data structure based on the Vehicle super class( such as <code>Vehicle myGarage[]</code>)</li>\n<li>As for how to solve, there are 2 main approaches below:\n<ol>\n<li>Use type casting, which will ease the compiler's concerns and leave any errors in the design to run time</li>\n<li>The fact that I need casting says the design is flawed. If I need access to non-Vehicle capabilities then I shouldn't be storing the Cars and Boats in a Vehicle based data structure. Either make all those capabilities belong to Vehicle, or use more specific (derived) type based structures</li>\n</ol></li>\n<li>In many cases, composition and/or interfaces would be a better alternative to inheritance. Probably the subject of my next question...</li>\n<li>Plus many other good insights down there, if one does have the time to browse through the answers. </li>\n</ol>\n    ","a":"\n<p>If you need to make the difference between <code>Car</code> and <code>Boat</code> in your garage, then you should store them in distinct structures.</p>\n\n<p>For instance:</p>\n\n<pre><code>public class Garage {\n    private List&lt;Car&gt; cars;\n    private List&lt;Boat&gt; boats;\n}\n</code></pre>\n\n<p>Then you can define methods that are specific on boats or specific on cars.</p>\n\n<h2>Why have polymorphism then?</h2>\n\n<p>Let's say <code>Vehicle</code> is like:</p>\n\n<pre><code>public abstract class Vehicle {\n   protected int price;\n   public getPrice() { return price; }\n   public abstract int getPriceAfterYears(int years);\n}\n</code></pre>\n\n<p>Every <code>Vehicle</code> has a price so it can be put inside the <code>Vehicle</code> abstract class.</p>\n\n<p>Yet, the formula determining the price after n years depends on the vehicle, so it left to the implementing class to define it. For instance:</p>\n\n<pre><code>public Car extends Vehicle {\n    // car specific\n    private boolean automatic;\n    @Override\n    public getPriceAfterYears(int years) {\n        // losing 1000$ every year\n        return Math.max(0, this.price - (years * 1000));  \n    }\n}\n</code></pre>\n\n<p>The <code>Boat</code> class may have an other definition for <code>getPriceAfterYears</code> and specific attributes and methods.</p>\n\n<p>So now back in the <code>Garage</code> class, you can define:</p>\n\n<pre><code>// car specific\npublic int numberOfAutomaticCars() {\n    int s = 0;\n    for(Car car : cars) {\n        if(car.isAutomatic()) {\n            s++;\n        }\n    }\n    return s;\n}\npublic List&lt;Vehicle&gt; getVehicles() {\n    List&lt;Vehicle&gt; v = new ArrayList&lt;&gt;(); // init with sum\n    v.addAll(cars);\n    v.addAll(boats);\n    return v;\n}\n// all vehicles method\npublic getAveragePriceAfterYears(int years) {\n    List&lt;Vehicle&gt; vehicules = getVehicles();\n    int s = 0;\n    for(Vehicle v : vehicules) {\n        // call the implementation of the actual type!\n        s += v.getPriceAfterYears(years);  \n    }\n    return s / vehicules.size();\n}\n</code></pre>\n\n<p>The interest of polymorphism is to be able to call <code>getPriceAfterYears</code> on a <code>Vehicle</code> <strong>without</strong> caring about the implementation.</p>\n\n<p>Usually, downcasting is a sign of a flawed design: do not store your vehicles all together if you need to differenciate their actual type.</p>\n\n<p>Note: of course the design here can be easily improved. It is just an example to demonstrate the points.</p>\n    "},{"t":"The Use of Multiple JFrames, Good/Bad Practice? [closed]","l":"http://stackoverflow.com/questions/9554636/the-use-of-multiple-jframes-good-bad-practice","q":"\n\n<p>I'm developing an application which displays images, and plays sounds from a database. I'm trying to decide, whether to use a separate JFrame to add Images to the Database from the GUI. I'm just wondering whether it is good practice to use multiple JFrames?</p>\n    ","a":"\n<blockquote>\n  <p>I'm just wondering whether it is good practice to use multiple JFrames?</p>\n</blockquote>\n\n<p>Bad (bad, bad) practice.  </p>\n\n<ul>\n<li>User unfriendly: The user sees multiple icons in their task bar when expecting to see only one.  Plus the side effects of the coding problems..</li>\n<li>A nightmare to code and maintain:\n<ul>\n<li>A <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/misc/modality.html\">modal dialog</a> offers the easy opportunity to focus attention on the content of that dialog - choose/fix/cancel this, <strong>then</strong> proceed.  Multiple frames do not.</li>\n<li>A dialog (or floating tool-bar) with a parent will come to front when the parent is clicked on - you'd have to implement that in frames if that was the desired behavior.</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<p>There are any number of ways of displaying many elements in one GUI, e.g.:</p>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/layout/card.html\"><code>CardLayout</code></a> (short <a href=\"http://stackoverflow.com/a/5786005/418556\">demo.</a>). Good for:\n<ol>\n<li>Showing wizard like dialogs.</li>\n<li>Displaying list, tree etc. selections for items that have an associated component.</li>\n<li>Flipping between no component and visible component.</li>\n</ol></li>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html\"><code>JInternalFrame</code>/<code>JDesktopPane</code></a> typically used for an <a href=\"http://en.wikipedia.org/wiki/Multiple_document_interface\">MDI</a>.</li>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html\"><code>JTabbedPane</code></a> for groups of components.</li>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html\"><code>JSplitPane</code></a> A way to display two components of which the importance between one or the other (the size) varies according to what the user is doing.</li>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html\"><code>JLayeredPane</code></a> far many well ..layered components.</li>\n<li><a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html\"><code>JToolBar</code></a> typically contains groups of actions or controls.  Can be dragged around the GUI, or off it entirely according to user need.  As mentioned above, will minimize/restore according to the parent doing so.</li>\n<li>As items in a <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/list.html\"><code>JList</code></a> (simple example below).</li>\n<li>As nodes in a <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html\"><code>JTree</code></a>.</li>\n<li><a href=\"http://stackoverflow.com/a/5630271/418556\">Nested layouts</a>.<br><img src=\"http://i.stack.imgur.com/Jaqap.png\"></li>\n</ul>\n\n<p>But if those strategies do not work for a particular use-case, try the following.  Establish a single main <code>JFrame</code>, then have <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html\"><code>JDialog</code></a> or <a href=\"http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html#features\"><code>JOptionPane</code></a> instances appear for the rest of the free-floating elements, using the frame as the parent for the dialogs.</p>\n\n<h2>Many images</h2>\n\n<p>In this case where the multiple elements are images, it would be better to use either of the following instead:</p>\n\n<ol>\n<li>A single <code>JLabel</code> (centered in a scroll pane) to display whichever image the user is interested in at that moment.  As seen in <a href=\"http://stackoverflow.com/a/13463684/418556\"><code>ImageViewer</code></a>.<br><img src=\"http://i.stack.imgur.com/5JXpC.gif\"></li>\n<li>A single row <code>JList</code>. As seen in <a href=\"http://stackoverflow.com/a/9544652/418556\">this answer</a>.  The 'single row' part of that only works if they are all the same dimensions.  Alternately, if you are prepared to scale the images on the fly, and they are all the same aspect ratio (e.g. 4:3 or 16:9).</li>\n</ol>\n\n<p><img src=\"http://i.stack.imgur.com/q8hEl.jpg\"></p>\n    "},{"t":"What are the reasons why Map.get(Object key) is not (fully) generic","l":"http://stackoverflow.com/questions/857420/what-are-the-reasons-why-map-getobject-key-is-not-fully-generic","q":"\n\n<p>What are the reasons behind the decision to not have a fully generic get method \nin the interface of <a href=\"http://java.sun.com/javase/6/docs/api/java/util/Map.html#get(java.lang.Object)\"><code>java.util.Map&lt;K, V&gt;</code></a>.</p>\n\n<p>To clarify the question, the signature of the method is </p>\n\n<p><code>V get(Object key)</code></p>\n\n<p>instead of </p>\n\n<p><code>V get(K key)</code></p>\n\n<p>and I'm wondering why (same thing for <code>remove, containsKey, containsValue</code>).</p>\n    ","a":"\n<p>As mentioned by others, the reason why <code>get()</code>, etc. is not generic because the key of the entry you are retrieving does not have to be the same type as the object that you pass in to <code>get()</code>; the specification of the method only requires that they be equal. This follows from how the <code>equals()</code> method takes in an Object as parameter, not just the same type as the object.</p>\n\n<p>Although it may be commonly true that many classes have <code>equals()</code> defined so that its objects can only be equal to objects of its own class, there are many places in Java where this is not the case. For example, the specification for <code>List.equals()</code> says that two List objects are equal if they are both Lists and have the same contents, even if they are different implementations of <code>List</code>. So coming back to the example in this question, according to the specification of the method is possible to have a <code>Map&lt;ArrayList, Something&gt;</code> and for me to call <code>get()</code> with a <code>LinkedList</code> as argument, and it should retrieve the key which is a list with the same contents. This would not be possible if <code>get()</code> were generic and restricted its argument type.</p>\n    "},{"t":"CharSequence VS String in Java?","l":"http://stackoverflow.com/questions/1049228/charsequence-vs-string-in-java","q":"\n\n<p>Programming in Android, most of the text values are expected in <code>CharSequence</code>.</p>\n\n<p>Why is that? What is the benefit, and what are the main impacts of using <code>CharSequence</code> over String?</p>\n\n<p>What are the main differences, and what issues are expected, while using them, and converting from one to another?</p>\n    ","a":"\n<p><a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/String.html\">Strings are CharSequences</a>, so you can just use Strings and not worry. Android is merely trying to be helpful by allowing you to also specify other CharSequence objects, like StringBuffers.</p>\n    "},{"t":"Why does changing the sum order returns a different result?","l":"http://stackoverflow.com/questions/19820297/why-does-changing-the-sum-order-returns-a-different-result","q":"\n\n<p>Why does changing the sum order returns a different result?</p>\n\n<p><code>23.53 + 5.88 + 17.64</code> <strong>=</strong> <code>47.05</code></p>\n\n<p><code>23.53 + 17.64 + 5.88</code> <strong>=</strong> <code>47.050000000000004</code></p>\n\n<p>Both <a href=\"http://en.wikipedia.org/wiki/Java_%28programming_language%29\">Java</a> and <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> return the same results.</p>\n\n<p>I understand that, due to the way floating point numbers are represented in binary, some rational numbers (<em>like 1/3 - 0.333333...</em>) cannot be represented precisely.</p>\n\n<p>Why does simply changing the order of the elements affects the result?</p>\n    ","a":"\n<blockquote>\n  <p>Maybe this question is stupid, but why does simply changing the order of the elements affects the result?</p>\n</blockquote>\n\n<p>It will change the points at which the values are rounded, based on their magnitude. As an example of the <em>kind</em> of thing that we're seeing, let's pretend that instead of binary floating point, we were using a decimal floating point type with 4 significant digits, where each addition is performed at \"infinite\" precision and then rounded to the nearest representable number. Here are two sums:</p>\n\n<pre><code>1/3 + 2/3 + 2/3 = (0.3333 + 0.6667) + 0.6667\n                = 1.000 + 0.6667 (no rounding needed!)\n                = 1.667 (where 1.6667 is rounded to 1.667)\n\n2/3 + 2/3 + 1/3 = (0.6667 + 0.6667) + 0.3333\n                = 1.333 + 0.3333 (where 1.3334 is rounded to 1.333)\n                = 1.666 (where 1.6663 is rounded to 1.666)\n</code></pre>\n\n<p>We don't even need non-integers for this to be a problem:</p>\n\n<pre><code>10000 + 1 - 10000 = (10000 + 1) - 10000\n                  = 10000 - 10000 (where 10001 is rounded to 10000)\n                  = 0\n\n10000 - 10000 + 1 = (10000 - 10000) + 1\n                  = 0 + 1\n                  = 1\n</code></pre>\n\n<p>This demonstrates possibly more clearly that the important part is that we have a limited number of <em>significant digits</em> - not a limited number of <em>decimal places</em>. If we could always keep the same number of decimal places, then with addition and subtraction at least, we'd be fine (so long as the values didn't overflow). The problem is that when you get to bigger numbers, smaller information is lost - the 10001 being rounded to 10000 in this case. (This is an example of the problem that <a href=\"http://stackoverflow.com/a/19821327/22656\">Eric Lippert noted in his answer</a>.)</p>\n\n<p>It's important to note that the values on the first line of the right hand side are the same in all cases - so although it's important to understand that your decimal numbers (23.53, 5.88, 17.64) won't be represented exactly as <code>double</code> values, that's only a problem because of the problems shown above.</p>\n    "},{"t":":: (double colon) operator in Java 8","l":"http://stackoverflow.com/questions/20001427/double-colon-operator-in-java-8","q":"\n\n<p>I was exploring the Java 8 source and found this particular part of code very surprising:</p>\n\n<pre><code>//defined in IntPipeline.java\n@Override\npublic final OptionalInt reduce(IntBinaryOperator op) {\n    return evaluate(ReduceOps.makeInt(op));\n}\n\n@Override\npublic final OptionalInt max() {\n    return reduce(Math::max); //this is the gotcha line\n}\n\n//defined in Math.java\npublic static int max(int a, int b) {\n    return (a &gt;= b) ? a : b;\n}\n</code></pre>\n\n<p>Is <code>Math::max</code> something like a method pointer? How does a normal <code>static</code> method get converted to <code>IntBinaryOperator</code>?</p>\n    ","a":"\n<p>Usually, one would call the <code>reduce</code> method using <code>Math.max(int, int)</code> as follows:</p>\n\n<pre><code>reduce(new IntBinaryOperator() {\n    int applyAsInt(int left, int right) {\n        return Math.max(left, right);\n    }\n});\n</code></pre>\n\n<p>Now that requires lot of syntax for just calling <code>Math.max</code>. That's where lambda expressions come into play. Since Java 8 it is allowed to do the same thing in a much shorter way:</p>\n\n<pre><code>reduce( (int left, int right) -&gt; Math.max(left, right) );\n</code></pre>\n\n<p>How does this work? The java compiler \"detects\", that you want to implement a method that accepts two <code>int</code>s and returns one <code>int</code>. This is equivalent to the formal parameters of the one and only method of interface <code>IntBinaryOperator</code> (the parameter of method <code>reduce</code> you wanna call). So the compiler does the rest for you - it just assumes you want to implement <code>IntBinaryOperator</code>.</p>\n\n<p>But as <code>Math.max(int, int)</code> itself fulfills the formal requirements of <code>IntBinaryOperator</code>, it can be used directly. Now java does not have any syntax that allows a method itself to be passed as an argument (you can only pass method results, but never methods itself), the <code>::</code> syntax was introduced in Java 8 to reference methods:</p>\n\n<pre><code>reduce(Math::max);\n</code></pre>\n\n<p>Note that this will be interpreted by the compiler, not by the JVM at runtime! Although it produces different bytecodes for all three code snippets, they are semantically equal, so the last two can be considered to be short (and probably more efficient) versions of the <code>IntBinaryOperator</code> implementation above!</p>\n\n<p>(See also <a href=\"http://cr.openjdk.java.net/~briangoetz/lambda/lambda-translation.html\">Translation of Lambda Expressions</a>)</p>\n    "},{"t":"Good Java graph algorithm library? [closed]","l":"http://stackoverflow.com/questions/51574/good-java-graph-algorithm-library","q":"\n\n<p>Has anyone had good experiences with any Java libraries for Graph algorithms. I've tried <a href=\"http://www.jgraph.com/jgraph.html\">JGraph</a> and found it ok, and there are a lot of different ones in google. Are there any that people are actually using successfully in production code or would recommend?</p>\n\n<p>To clarify, I'm not looking for a library that produces graphs/charts, I'm looking for one that helps with Graph algorithms, eg minimum spanning tree, Kruskal's algorithm Nodes, Edges, etc. Ideally one with some good algorithms/data structures in a nice Java OO API.</p>\n    ","a":"\n<p>If you were using JGraph, you should give a try to <a href=\"http://jgrapht.org/\" rel=\"nofollow\">JGraphT</a> which is designed for algorithms.  One of its features is visualization using the JGraph library. It's still developed, but pretty stable. I analyzed the complexity of JGraphT algorithms some time ago.  Some of them aren't the quickest, but if you're going to implement them on your own and need to display your graph, then it might be the best choice.  I really liked using its API, when I quickly had to write an app that was working on graph and displaying it later.</p>\n    "},{"t":"How can I clear or empty a StringBuilder?","l":"http://stackoverflow.com/questions/5192512/how-can-i-clear-or-empty-a-stringbuilder","q":"\n\n<p>I'm using a <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html\">StringBuilder</a> in a loop and every x iterations I want to empty it and start with an empty <code>StringBuilder</code>, but I can't see any method similar to the .Net <a href=\"http://msdn.microsoft.com/en-us/library/system.text.stringbuilder.clear.aspx\">StringBuilder.Clear</a> in the docs, just the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/lang/StringBuilder.html#delete%28int,%20int%29\">delete</a> method which seems overly complicated.<br>\nSo what is the best way to clean out a <code>StringBuilder</code> in Java?</p>\n    ","a":"\n<p><em>Edit</em> Updated to bring in feedback.</p>\n\n<p>So two ways that work:</p>\n\n<ol>\n<li><code>setLength(0)</code> on the StringBuilder.</li>\n<li>Allocate a new one instead of clearing the buffer</li>\n</ol>\n    "},{"t":".war vs .ear file","l":"http://stackoverflow.com/questions/1594667/war-vs-ear-file","q":"\n\n<p>What is the difference between a .war and .ear file?</p>\n    ","a":"\n<p>From <a href=\"http://www.geekinterview.com/question_details/630\">GeekInterview</a>:</p>\n\n<blockquote>\n  <p>In J2EE application modules are packaged as EAR, JAR and WAR based on their functionality  </p>\n  \n  <p>JAR: \n  EJB modules which contains enterprise java beans class files and EJB deployment descriptor are packed as JAR files with .jar extenstion </p>\n  \n  <p>WAR: \n  Web modules which contains Servlet class files,JSP FIles,supporting files, GIF and HTML files are packaged as JAR file with .war (web archive) extension </p>\n  \n  <p>EAR: \n  All above files (.jar and .war) are packaged as JAR file with .ear (enterprise archive) extension and deployed into Application Server.</p>\n</blockquote>\n    "},{"t":"Real differences between “java -server” and “java -client”?","l":"http://stackoverflow.com/questions/198577/real-differences-between-java-server-and-java-client","q":"\n\n<p>Is there any real practical difference between \"java -server\" and \"java -client\"?  All I can find on Sun's site is a vague \"-server starts slower but should run faster\".  What are the real differences?  (Using JDK 1.6.0_07 currently.)</p>\n    ","a":"\n<p>This is really linked to <em>HotSpot</em> and the default <em>option values</em> (<a href=\"http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html\">Java HotSpot VM Options</a>) which differ between client and server configuration.</p>\n\n<p>From <a href=\"http://www.oracle.com/technetwork/java/whitepaper-135217.html#2\">Chapter 2</a> of the whitepaper (<a href=\"http://www.oracle.com/technetwork/java/whitepaper-135217.html\">The Java HotSpot Performance Engine Architecture</a>):</p>\n\n<blockquote>\n  <p>The JDK includes two flavors of the VM -- a client-side offering, and a VM tuned for server applications. These two solutions share the Java HotSpot runtime environment code base, but use different compilers that are suited to the distinctly unique performance characteristics of clients and servers. These differences include the compilation inlining policy and heap defaults. </p>\n  \n  <p>Although the Server and the Client VMs are similar, the Server VM has been specially tuned to maximize peak operating speed. It is intended for executing long-running server applications, which need the fastest possible operating speed more than a fast start-up time or smaller runtime memory footprint.</p>\n  \n  <p>The Client VM compiler serves as an upgrade for both the Classic VM and the just-in-time (JIT) compilers used by previous versions of the JDK. The Client VM offers improved run time performance for applications and applets. The Java HotSpot Client VM has been specially tuned to reduce application start-up time and memory footprint, making it particularly well suited for client environments. In general, the client system is better for GUIs. </p>\n</blockquote>\n\n<p>So the real difference is also on the compiler level:</p>\n\n<blockquote>\n  <p>The Client VM compiler does not try to execute many of the more complex optimizations performed by the compiler in the Server VM, but in exchange, it requires less time to analyze and compile a piece of code. This means the Client VM can start up faster and requires a smaller memory footprint.</p>\n  \n  <p>The Server VM contains an advanced adaptive compiler that supports many of the same types of optimizations performed by optimizing C++ compilers, as well as some optimizations that cannot be done by traditional compilers, such as aggressive inlining across virtual method invocations. This is a competitive and performance advantage over static compilers. Adaptive optimization technology is very flexible in its approach, and typically outperforms even advanced static analysis and compilation techniques. </p>\n</blockquote>\n\n<p>Note: The release of <em>jdk6 update 10</em> (see <a href=\"http://www.oracle.com/technetwork/java/javase/6u10-142936.html\">Update Release Notes:Changes in 1.6.0_10</a>) tried to improve startup time, but for a different reason than the hotspot options, being packaged differently with a much smaller kernel.</p>\n    "},{"t":"Java Date vs Calendar","l":"http://stackoverflow.com/questions/1404210/java-date-vs-calendar","q":"\n\n<p>Could someone please advise the current \"best practice\" around <code>Date</code> and <code>Calendar</code> types.</p>\n\n<p>When writing new code, is it best to always favour <code>Calendar</code> over <code>Date</code>, or are there circumstances where <code>Date</code> is the more appropriate datatype?</p>\n    ","a":"\n<p>Date is a simpler class and is mainly there for backward compatibility reasons. If you need to set particular dates or do date arithmetic, use a Calendar. Calendars also handle localization. The previous date manipulation functions of Date have since been deprecated.</p>\n\n<p>Personally I tend to use either time in milliseconds as a long (or Long, as appropriate) or Calendar when there is a choice.</p>\n\n<p>Both Date and Calendar are mutable, which tends to present issues when using either in an API.</p>\n    "},{"t":"Java Generics: What is PECS?","l":"http://stackoverflow.com/questions/2723397/java-generics-what-is-pecs","q":"\n\n<p>I came across PECS (short for <em>Producer <code>extends</code> and Consumer <code>super</code></em>) while reading up on generics. </p>\n\n<p>Can someone explain to me how to use PECS to resolve confusion between <code>extends</code> and <code>super</code>?</p>\n    ","a":"\n<p><strong>tl;dr:</strong> \"PECS\" is from the collection's point of view. If you are <em>only</em> pulling items from a generic collection, it is a producer and you should use <code>extends</code>; if you are <em>only</em> stuffing items in, it is a consumer and you should use <code>super</code>. If you do both with the same collection, you shouldn't use either <code>extends</code> or <code>super</code>.</p>\n\n<hr>\n\n<p>Suppose you have a method that takes as its parameter a collection of things, but you want it to be more flexible than just accepting a <code>Collection&lt;Thing&gt;</code>.</p>\n\n<p><strong>Case 1: You want to go through the collection and do things with each item.</strong><br>\nThen the list is a <strong>producer</strong>, so you should use a <code>Collection&lt;? extends Thing&gt;</code>.</p>\n\n<p>The reasoning is that a <code>Collection&lt;? extends Thing&gt;</code> could hold any subtype of <code>Thing</code>, and thus each element will behave as a <code>Thing</code> when you perform your operation. (You actually cannot add anything to a <code>Collection&lt;? extends Thing&gt;</code>, because you cannot know at runtime which <em>specific</em> subtype of <code>Thing</code> the collection holds.)</p>\n\n<p><strong>Case 2: You want to add things to the collection.</strong><br>\nThen the list is a <strong>consumer</strong>, so you should use a <code>Collection&lt;? super Thing&gt;</code>.</p>\n\n<p>The reasoning here is that unlike <code>Collection&lt;? extends Thing&gt;</code>, <code>Collection&lt;? super Thing&gt;</code> can always hold a <code>Thing</code> no matter what the actual parameterized type is. Here you don't care what is already in the list as long as it will allow a <code>Thing</code> to be added; this is what <code>? super Thing</code> guarantees.</p>\n    "},{"t":"Can you find all classes in a package using reflection?","l":"http://stackoverflow.com/questions/520328/can-you-find-all-classes-in-a-package-using-reflection","q":"\n\n<p>Is it possible to find all classes or interfaces in a given package? (Quickly looking at e.g. <a href=\"http://java.sun.com/javase/6/docs/api/java/lang/Package.html\" rel=\"nofollow\"><code>Package</code></a>, it would seem like no.)</p>\n    ","a":"\n<p>Due to the dynamic nature of class loaders, this is not possible. Class loaders are not required to tell the VM which classes it can provide, instead they are just handed requests for classes, and have to return a class or throw an exception.</p>\n\n<p>However, if you write your own class loaders, or examine the classpaths and it's jars, it's possible to find this information. This will be via filesystem operations though, and not reflection. There might even be libraries that can help you do this.</p>\n\n<p>If there are classes that get generated, or delivered remotely, you will not be able to discover those classes.</p>\n\n<p>The normal method is instead to somewhere register the classes you need access to in a file, or reference them in a different class. Or just use convention when it comes to naming.</p>\n\n<p>Addendum: <a href=\"https://github.com/ronmamo/reflections\">The Reflections Library</a> will allow you to look up classes in the current classpath. It can be used to get all classes in a package:</p>\n\n<pre><code> Reflections reflections = new Reflections(\"my.project.prefix\");\n\n Set&lt;Class&lt;? extends Object&gt;&gt; allClasses = \n     reflections.getSubTypesOf(Object.class);\n</code></pre>\n    "},{"t":"How to get UTF-8 working in Java webapps?","l":"http://stackoverflow.com/questions/138948/how-to-get-utf-8-working-in-java-webapps","q":"\n\n<p>I need to get UTF-8 working in my Java webapp (servlets + JSP, no framework used) to support <code>äöå</code> etc. for regular Finnish text and Cyrillic alphabets like <code>ЦжФ</code> for special cases.</p>\n\n<p>My setup is the following:</p>\n\n<ul>\n<li>Development environment: Windows XP</li>\n<li>Production environment: Debian</li>\n</ul>\n\n<p>Database used: MySQL 5.x</p>\n\n<p>Users mainly use Firefox2 but also Opera 9.x, FF3, IE7 and Google Chrome are used to access the site.</p>\n\n<p>How to achieve this?</p>\n    ","a":"\n<p><em>Answering myself as the FAQ of this site encourages it. This works for me: </em></p>\n\n<p>Mostly characters äåö are not a problematic as the default character set used by browsers and tomcat/java for webapps is latin1 ie. ISO-8859-1 which \"understands\" those characters.</p>\n\n<p>To get UTF-8 working under Java+Tomcat+Linux/Windows+Mysql requires the following:</p>\n\n<h2>Configuring Tomcat's server.xml</h2>\n\n<p>It's necessary to configure that the connector uses UTF-8 to encode url (GET request) parameters:</p>\n\n<pre><code>&lt;Connector port=\"8080\" maxHttpHeaderSize=\"8192\"\n maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n enableLookups=\"false\" redirectPort=\"8443\" acceptCount=\"100\"\n connectionTimeout=\"20000\" disableUploadTimeout=\"true\" \n compression=\"on\" \n compressionMinSize=\"128\" \n noCompressionUserAgents=\"gozilla, traviata\" \n compressableMimeType=\"text/html,text/xml,text/plain,text/css,text/ javascript,application/x-javascript,application/javascript\"\n URIEncoding=\"UTF-8\"\n/&gt;\n</code></pre>\n\n<p>The key part being <b>URIEncoding=\"UTF-8\"</b> in the above example. This quarantees that Tomcat handles all incoming GET parameters as UTF-8 encoded.\nAs a result, when the user writes the following to the address bar of the browser:</p>\n\n<pre><code> https://localhost:8443/ID/Users?action=search&amp;name=*ж*\n</code></pre>\n\n<p>the character ж is handled as UTF-8 and is encoded to (usually by the browser before even getting to the server) as <b>%D0%B6</b>.</p>\n\n<p><i>POST request are not affected by this.</i></p>\n\n<h2> CharsetFilter </h2>\n\n<p>Then it's time to force the java webapp to handle all requests and responses as UTF-8 encoded. This requires that we define a character set filter like the following:</p>\n\n<pre><code>  package fi.foo.filters;\n\n  import java.io.IOException;\n  import javax.servlet.Filter;\n  import javax.servlet.FilterChain;\n  import javax.servlet.FilterConfig;\n  import javax.servlet.ServletException;\n  import javax.servlet.ServletRequest;\n  import javax.servlet.ServletResponse;\n\n  public class CharsetFilter implements Filter\n   {\n   private String encoding;\n\n   public void init(FilterConfig config) throws ServletException\n   {\n    encoding = config.getInitParameter(\"requestEncoding\");\n\n    if( encoding==null ) encoding=\"UTF-8\";\n   }\n\n   public void doFilter(ServletRequest request, ServletResponse response, FilterChain       next)\n   throws IOException, ServletException\n   {\n    // Respect the client-specified character encoding\n    // (see HTTP specification section 3.4.1)\n    if(null == request.getCharacterEncoding())\n      request.setCharacterEncoding(encoding);\n\n\n    /**\n * Set the default response content type and encoding\n */\n response.setContentType(\"text/html; charset=UTF-8\");\n response.setCharacterEncoding(\"UTF-8\");\n\n\n    next.doFilter(request, response);\n   }\n\n    public void destroy(){}\n   }\n</code></pre>\n\n<p>This filter makes sure that if the browser hasn't set the encoding used in the request, that it's set to UTF-8. </p>\n\n<p>The other thing done by this filter is to set the default response encoding ie. the encoding in which the returned html/whatever is. The alternative is to set the response encoding etc. in each controller of the application. </p>\n\n<p>This filter has to be added to the <b>web.xml</b> or the deployment descriptor of the webapp:</p>\n\n<pre><code> &lt;!--CharsetFilter start--&gt; \n\n  &lt;filter&gt;\n    &lt;filter-name&gt;CharsetFilter&lt;/filter-name&gt;\n    &lt;filter-class&gt;fi.foo.filters.CharsetFilter&lt;/filter-class&gt;\n      &lt;init-param&gt;\n        &lt;param-name&gt;requestEncoding&lt;/param-name&gt;\n        &lt;param-value&gt;UTF-8&lt;/param-value&gt;\n      &lt;/init-param&gt;\n  &lt;/filter&gt;\n\n  &lt;filter-mapping&gt;\n    &lt;filter-name&gt;CharsetFilter&lt;/filter-name&gt;\n    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n  &lt;/filter-mapping&gt;\n</code></pre>\n\n<p>The instructions for making this filter are found at the <a href=\"http://wiki.apache.org/tomcat/Tomcat/UTF-8\">tomcat wiki (</a><a href=\"http://wiki.apache.org/tomcat/Tomcat/UTF-8\">http://wiki.apache.org/tomcat/Tomcat/UTF-8</a>) </p>\n\n<h2> JSP page encoding </h2>\n\n<p>In your <strong>web.xml</strong>, add the following:</p>\n\n<pre><code>&lt;jsp-config&gt;\n    &lt;jsp-property-group&gt;\n        &lt;url-pattern&gt;*.jsp&lt;/url-pattern&gt;\n        &lt;page-encoding&gt;UTF-8&lt;/page-encoding&gt;\n    &lt;/jsp-property-group&gt;\n&lt;/jsp-config&gt;\n</code></pre>\n\n<p>Alternatively, all JSP-pages of the webapp would need to have the following at the top of them:</p>\n\n<pre><code> &lt;%@page pageEncoding=\"UTF-8\" contentType=\"text/html; charset=UTF-8\"%&gt;\n</code></pre>\n\n<p>If some kind of a layout with different JSP-fragments is used, then this is needed in <b>all</b> of them.</p>\n\n<h2> HTML-meta tags </h2>\n\n<p>JSP page encoding tells the JVM to handle the characters in the JSP page in the correct encoding.\nThen it's time to tell the vrowser in which encoding the html page is:</p>\n\n<p>This is done with the following at the top of each xhtml page produced by the webapp:</p>\n\n<pre><code>   &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n   &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\"&gt;\n   &lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"fi\"&gt;\n   &lt;head&gt;\n   &lt;meta http-equiv='Content-Type' content='text/html; charset=UTF-8' /&gt;\n   ...\n</code></pre>\n\n<h2> JDBC-connection </h2>\n\n<p>When using a db, it has to be defined that the connection uses UTF-8 encoding. This is done in <b>context.xml</b> or wherever the JDBC connection is defiend as follows: </p>\n\n<pre><code>      &lt;Resource name=\"jdbc/AppDB\" \n        auth=\"Container\"\n        type=\"javax.sql.DataSource\"\n        maxActive=\"20\" maxIdle=\"10\" maxWait=\"10000\"\n        username=\"foo\"\n        password=\"bar\"\n        driverClassName=\"com.mysql.jdbc.Driver\" url=\"jdbc:mysql://localhost:3306/      ID_development?useEncoding=true&amp;amp;characterEncoding=UTF-8\"\n    /&gt;\n</code></pre>\n\n<h2> MySQL database and tables</h2>\n\n<p>The used database must use UTF-8 encoding. This is achieved by creating the database with the following:</p>\n\n<pre><code>   CREATE DATABASE `ID_development` \n   /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_swedish_ci */;\n</code></pre>\n\n<p>Then, all of the tables need to be in UTF-8 also:</p>\n\n<pre><code>   CREATE TABLE  `Users` (\n    `id` int(10) unsigned NOT NULL auto_increment,\n    `name` varchar(30) collate utf8_swedish_ci default NULL\n    PRIMARY KEY  (`id`)\n   ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_swedish_ci ROW_FORMAT=DYNAMIC;\n</code></pre>\n\n<p>The key part being <b>CHARSET=utf8</b>.</p>\n\n<h2> MySQL server configuration </h2>\n\n<p>MySQL serveri has to be configured also. Typically this is done in Windows by modifying <b>my.ini</b> -file and in Linux by configuring <b>my.cnf</b> -file.\nIn those files it should be defined that all clients connected to the server use utf8 as the default character set and that the default charset used by the server is also utf8.</p>\n\n<pre><code>   [client]\n   port=3306\n   default-character-set=utf8\n\n   [mysql]\n   default-character-set=utf8\n</code></pre>\n\n<h2> Mysql procedures and functions </h2>\n\n<p>These also need to have the character set defined. For example:</p>\n\n<pre><code>   DELIMITER $$\n\n   DROP FUNCTION IF EXISTS `pathToNode` $$\n   CREATE FUNCTION `pathToNode` (ryhma_id INT) RETURNS TEXT CHARACTER SET utf8\n   READS SQL DATA\n   BEGIN\n\n    DECLARE path VARCHAR(255) CHARACTER SET utf8;\n\n   SET path = NULL;\n\n   ...\n\n   RETURN path;\n\n   END $$\n\n   DELIMITER ;\n</code></pre>\n\n<h2> GET requests: latin1 and UTF-8 </h2>\n\n<p>If and when it's defined in tomcat's server.xml that GET request parameters are encoded in UTF-8, the following GET requests are handled properly:</p>\n\n<pre><code>   https://localhost:8443/ID/Users?action=search&amp;name=Petteri\n   https://localhost:8443/ID/Users?action=search&amp;name=ж\n</code></pre>\n\n<p>Because ASCII-characters are encoded in the same way both with latin1 and UTF-8, the string \"Petteri\" is handled correctly.</p>\n\n<p>The Cyrillic character ж is not understood at all in latin1. Because Tomcat is instructed to handle request parameters as UTF-8 it encodes that character correctly as <b>%D0%B6</b>. </p>\n\n<p>If and when browsers are instructed to read the pages in UTF-8 encoding (with request headers and html meta-tag), at least Firefox 2/3 and other browsers from this period all encode the character themselves as <b>%D0%B6</b>. </p>\n\n<p>The end result is that all users with name \"Petteri\" are found and also all users with the name \"ж\" are found.</p>\n\n<h3>But what about äåö?</h3>\n\n<p>HTTP-specification defines that by default URLs are encoded as latin1. This results in firefox2, firefox3 etc. encoding the following</p>\n\n<pre><code>    https://localhost:8443/ID/Users?action=search&amp;name=*Päivi*\n</code></pre>\n\n<p>in to the encoded version</p>\n\n<pre><code>    https://localhost:8443/ID/Users?action=search&amp;name=*P%E4ivi*\n</code></pre>\n\n<p>In latin1 the character <b>ä</b> is encoded as <b>%E4</b>. <em>Even though the page/request/everything is defined to use UTF-8</em>. The UTF-8 encoded version of ä is <b>%C3%A4</b></p>\n\n<p>The result of this is that it's quite impossible for the webapp to correly handle the request parameters from GET requests as some characters are encoded in latin1 and others in UTF-8.\n<b>Notice: POST requests do work as browsers encode all request parameters from forms completely in UTF-8 if the page is defined as being UTF-8</b></p>\n\n<h2> Stuff to read </h2>\n\n<p>A very big thank you for the writers of the following for giving the answers for my problem:</p>\n\n<ul>\n<li> http://tagunov.tripod.com/i18n/i18n.html&gt;http://tagunov.tripod.com/i18n/i18n.html</li>\n<li> http://wiki.apache.org/tomcat/Tomcat/UTF-8 </li>\n<li> http://java.sun.com/developer/technicalArticles/Intl/HTTPCharset/ </li>\n<li> http://dev.mysql.com/doc/refman/5.0/en/charset-syntax.html </li>\n<li> http://cagan327.blogspot.com/2006/05/utf-8-encoding-fix-tomcat-jsp-etc.html </li>\n<li> http://cagan327.blogspot.com/2006/05/utf-8-encoding-fix-for-mysql-tomcat.html </li>\n<li> http://jeppesn.dk/utf-8.html </li>\n<li> http://www.nabble.com/request-parameters-mishandle-utf-8-encoding-td18720039.html </li>\n<li> http://www.utoronto.ca/webdocs/HTMLdocs/NewHTML/iso_table.html </li>\n<li> http://www.utf8-chartable.de/ </li>\n</ul>\n\n<h2>Important Note</h2>\n\n<p><a href=\"/questions/tagged/mysql\" class=\"post-tag\" title=\"show questions tagged 'mysql'\" rel=\"tag\">mysql</a> supports the <a href=\"http://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane\">Basic Multilingual Plane</a> using 3-byte UTF-8 characters. If you need to go outside of that (certain alphabets require more than 3-bytes of UTF-8), then you either need to use a flavor of <code>VARBINARY</code> column type or use the <a href=\"http://dev.mysql.com/doc/refman/5.5/en/charset-unicode-utf8mb4.html\"><code>utf8mb4</code> character set</a> (which requires MySQL 5.5.3 or later). Just be aware that using the <code>utf8</code> character set in MySQL won't work 100% of the time.</p>\n\n<h2>Tomcat with Apache</h2>\n\n<p>One more thing If you are using Apache + Tomcat + mod_JK connector then you also need to do following changes:</p>\n\n<ol>\n<li>Add URIEncoding=\"UTF-8\" into tomcat server.xml file for 8009 connector, it is used by mod_JK connector. <code>&lt;Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" URIEncoding=\"UTF-8\"/&gt;</code></li>\n<li>Goto your apache folder i.e. <code>/etc/httpd/conf</code> and add <code>AddDefaultCharset utf-8</code> in <code>httpd.conf file</code>. <strong>Note:</strong> First check that it is exist or not. If exist you may update it with this line. You can add this line at bottom also.</li>\n</ol>\n    "},{"t":"Design Patterns web based applications","l":"http://stackoverflow.com/questions/3541077/design-patterns-web-based-applications","q":"\n\n<p>I am designing a simple web based application. I am new to this web based domain.I needed your advice regarding the design patterns like how responsibility should be distributed among Servlets, criteria to make new Servlet, etc.</p>\n\n<p>Actually I have few entities on my home page and corresponding to each one of them we have few options like add, edit and delete. Earlier I was using one Servlet per options like Servlet1 for add entity1, Servlet2 for edit entity1 and so on and in this way we ended up having a large number of servlets.</p>\n\n<p>Now we are changing our design. My question is how you exactly choose how you choose the responsibility of a servlet. Should we have one Servlet per entity which will process all it's options and forward request to service layer.Or should we have one servlet for the whole page which will process the whole page request and then forward it to corresponding service layer.Also should the request object forwarded to service layer or not.</p>\n\n<p>Please you guide us in choosing the best design.Also any pointer to a good design pattern material will be welcome.</p>\n    ","a":"\n<p>A bit decent web application consists of a mix of design patterns. I'll mention only the most important ones.</p>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\">Model View Controller pattern</a></h2>\n\n<p>The core (architectural) design pattern you'd like to use is the <a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\">Model-View-Controller pattern</a>. The <em>Controller</em> is to be represented by a Servlet which (in)directly creates/uses a specific <em>Model</em> and <em>View</em> based on the request. The <em>Model</em> is to be represented by Javabean classes. This is often further dividable in <em>Business Model</em> which contains the actions (behaviour) and <em>Data Model</em> which contains the data (information). The <em>View</em> is to be represented by JSP files which have direct access to the (<em>Data</em>) <em>Model</em> by EL (Expression Language). </p>\n\n<p>Then there are variations based on how actions and events are handled. The popular ones are:</p>\n\n<ul>\n<li><p><strong>Request (action) based MVC</strong>: this is the simplest to implement. The (<em>Business</em>) <em>Model</em> works directly with <code>HttpServletRequest</code> and <code>HttpServletResponse</code> objects. You have to gather, convert and validate the request parameters (mostly) yourself. The <em>View</em> can be represented by plain vanilla HTML/CSS/JS and it does not maintain state across requests. This is how among others <a href=\"http://static.springsource.org/spring/docs/3.0.x/spring-framework-reference/html/mvc.html\">Spring MVC</a>, <a href=\"http://struts.apache.org/\">Struts</a> and <a href=\"http://www.stripesframework.org\">Stripes</a> works.</p></li>\n<li><p><strong>Component based MVC</strong>: this is harder to implement. But you end up with a simpler model and view wherein all the \"raw\" Servlet API is abstracted completely away. You shouldn't have the need to gather, convert and validate the request parameters yourself. The <em>Controller</em> does this task and sets the gathered, converted and validated request parameters in the <em>Model</em>. All you need to do is to define action methods which works directly with the model properties. The <em>View</em> is represented by \"components\" in flavor of JSP taglibs or XML elements which in turn generates HTML/CSS/JS. The state of the <em>View</em> for the subsequent requests is maintained in the session. This is particularly helpful for server-side conversion, validation and value change events. This is how among others <a href=\"http://javaserverfaces.java.net/\">JSF</a>, <a href=\"http://wicket.apache.org/\">Wicket</a> and <a href=\"http://www.playframework.org/\">Play!</a> works.</p></li>\n</ul>\n\n<p>As a side note, I warmly recommend to pick an existing framework rather than reinventing your own. Learning an existing and well-developed framework takes in long term less time than developing and maintaining a robust framework yourself. From the mentioned ones I personally recommend <a href=\"http://download.oracle.com/javaee/6/tutorial/doc/bnaph.html\">JSF 2.0</a>.</p>\n\n<p>In the below detailed explanation I'll restrict myself to request based MVC since that's easier to implement.</p>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Front_Controller_pattern\">Front Controller pattern</a> (<a href=\"http://en.wikipedia.org/wiki/Mediator_pattern\">Mediator pattern</a>)</h2>\n\n<p>First, the <em>Controller</em> part should implement the <a href=\"http://en.wikipedia.org/wiki/Front_Controller_pattern\">Front Controller pattern</a> (which is a specialized kind of <a href=\"http://en.wikipedia.org/wiki/Mediator_pattern\">Mediator pattern</a>). It should consist of only a single servlet which provides a centralized entry point of all requests. It should create the <em>Model</em> based on information available by the request, such as the pathinfo or servletpath, the method and/or specific parameters. The <em>Business Model</em> is called <code>Action</code> in the below <a href=\"http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServlet.html\"><code>HttpServlet</code></a> example.</p>\n\n<pre><code>protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n    try {\n        Action action = ActionFactory.getAction(request);\n        String view = action.execute(request, response);\n        if (view.equals(request.getPathInfo().substring(1)) {\n            request.getRequestDispatcher(\"/WEB-INF/\" + view + \".jsp\").forward(request, response);\n        } else {\n            response.sendRedirect(view); // We'd like to fire redirect in case of a view change as result of the action (PRG pattern).\n        }\n    } catch (Exception e) {\n        throw new ServletException(\"Executing action failed.\", e);\n    }\n}\n</code></pre>\n\n<p>Executing the action should return some identifier to locate the view. Simplest would be to use it as filename of the JSP. Map this servlet on a specific <code>url-pattern</code> in <code>web.xml</code>, e.g. <code>/pages/*</code>, <code>*.do</code> or even just <code>*.html</code>. </p>\n\n<p>In case of prefix-patterns as for example <code>/pages/*</code> you could then invoke URL's like <a href=\"http://example.com/pages/register\">http://example.com/pages/register</a>, <a href=\"http://example.com/pages/login\">http://example.com/pages/login</a>, etc and provide <code>/WEB-INF/register.jsp</code>, <code>/WEB-INF/login.jsp</code> with the appropriate GET and POST actions. The parts <code>register</code>, <code>login</code>, etc are then available by <a href=\"http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getPathInfo%28%29\"><code>request.getPathInfo()</code></a> as in above example. </p>\n\n<p>When you're using suffix-patterns like <code>*.do</code>, <code>*.html</code>, etc, then you could then invoke URL's like <a href=\"http://example.com/register.do\">http://example.com/register.do</a>, <a href=\"http://example.com/login.do\">http://example.com/login.do</a>, etc and you should change the code examples in this answer (also the <code>ActionFactory</code>) to extract the <code>register</code> and <code>login</code> parts by <a href=\"http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getServletPath%28%29\"><code>request.getServletPath()</code></a> instead.</p>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Strategy_pattern\">Strategy pattern</a></h2>\n\n<p>The <code>Action</code> should follow the <a href=\"http://en.wikipedia.org/wiki/Strategy_pattern\">Strategy pattern</a>. It needs to be defined as an abstract/interface type which should do the work based on the <em>passed-in</em> arguments of the abstract method (this is the difference with the <a href=\"http://en.wikipedia.org/wiki/Command_pattern\">Command pattern</a>, wherein the abstract/interface type should do the work based on the arguments which are been passed-in during the <em>creation</em> of the implementation).</p>\n\n<pre><code>public interface Action {\n    public String execute(HttpServletRequest request, HttpServletResponse response) throws Exception;\n}\n</code></pre>\n\n<p>You may want to make the <code>Exception</code> more specific with a custom exception like <code>ActionException</code>. It's just a basic kickoff example, the rest is all up to you.</p>\n\n<p>Here's an example of a <code>LoginAction</code> which (as its name says) logs in the user. The <code>User</code> itself is in turn a <em>Data Model</em>. The <em>View</em> is aware of the presence of the <code>User</code>.</p>\n\n<pre><code>public class LoginAction implements Action {\n    public String execute(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String username = request.getParameter(\"username\");\n        String password = request.getParameter(\"password\");\n        User user = userDAO.find(username, password);\n        if (user != null) {\n            request.getSession().setAttribute(\"user\", user); // Login user.\n            return \"home\"; // Redirect to home page.\n        } else {\n            request.setAttribute(\"error\", \"Unknown username/password. Please retry.\"); // Store error message in request scope.\n            return \"login\"; // Go back to redisplay login form with error.\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<h2><a href=\"http://en.wikipedia.org/wiki/Abstract_factory_pattern\">Factory method pattern</a></h2>\n\n<p>The <code>ActionFactory</code> should follow the <a href=\"http://en.wikipedia.org/wiki/Factory_method\">Factory method pattern</a>. Basically, it should provide a creational method which returns a concrete implementation of an abstract/interface type. In this case, it should return an implementation of the <code>Action</code> interface based on the information provided by the request. For example, the <a href=\"http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getMethod%28%29\">method</a> and <a href=\"http://download.oracle.com/javaee/6/api/javax/servlet/http/HttpServletRequest.html#getPathInfo%28%29\">pathinfo</a> (the pathinfo is the part after the context and servlet path in the request URL, excluding the query string).</p>\n\n<pre><code>public static Action getAction(HttpServletRequest request) {\n    return actions.get(request.getMethod() + request.getPathInfo());\n}\n</code></pre>\n\n<p>The <code>actions</code> in turn should be some static/applicationwide <code>Map&lt;String, Action&gt;</code> which holds all known actions. It's up to you how to fill this map. Hardcoding:</p>\n\n<pre><code>actions.put(\"POST/register\", new RegisterAction());\nactions.put(\"POST/login\", new LoginAction());\nactions.put(\"GET/logout\", new LogoutAction());\n// ...\n</code></pre>\n\n<p>Or configurable based on a properties/XML configuration file in the classpath: (pseudo)</p>\n\n<pre><code>for (Entry entry : configuration) {\n    actions.put(entry.getKey(), Class.forName(entry.getValue()).newInstance());\n}\n</code></pre>\n\n<p>Or dynamically based on a scan in the classpath for classes implementing a certain interface and/or annotation: (pseudo)</p>\n\n<pre><code>for (ClassFile classFile : classpath) {\n    if (classFile.isInstanceOf(Action.class)) {\n       actions.put(classFile.getAnnotation(\"mapping\"), classFile.newInstance());\n    }\n}\n</code></pre>\n\n<p>Keep in mind to create a \"do nothing\" <code>Action</code> for the case there's no mapping. Let it for example return directly the <code>request.getPathInfo().substring(1)</code> then.</p>\n\n<hr>\n\n<h3>Other patterns</h3>\n\n<p>Those were the important patterns so far. </p>\n\n<p>To get a step further, you could use the <a href=\"http://en.wikipedia.org/wiki/Facade_pattern\">Facade pattern</a> to create a <code>Context</code> class which in turn wraps the request and response objects and offers several convenience methods delegating to the request and response objects and pass that as argument into the <code>Action#execute()</code> method instead. This adds an extra abstract layer to hide the raw Servlet API away. You should then basically end up with <strong>zero</strong> <code>import javax.servlet.*</code> declarations in every <code>Action</code> implementation. In JSF terms, this is what the <a href=\"http://download.oracle.com/javaee/6/api/javax/faces/context/FacesContext.html\"><code>FacesContext</code></a> and <a href=\"http://download.oracle.com/javaee/6/api/javax/faces/context/ExternalContext.html\"><code>ExternalContext</code></a> classes are doing.</p>\n\n<p>Then there's the <a href=\"http://en.wikipedia.org/wiki/State_pattern\">State pattern</a> for the case that you'd like to add an extra abstraction layer to split the tasks of gathering the request parameters, converting them, validating them, updating the model values and execute the actions. In JSF terms, this is what the <a href=\"http://download.oracle.com/javaee/6/api/javax/faces/lifecycle/Lifecycle.html\"><code>LifeCycle</code></a> is doing.</p>\n\n<p>Then there's the <a href=\"http://en.wikipedia.org/wiki/Composite_pattern\">Composite pattern</a> for the case that you'd like to create a component based view which can be attached with the model and whose behaviour depends on the state of the request based lifecycle. In JSF terms, this is what the <a href=\"http://download.oracle.com/javaee/6/api/javax/faces/component/UIComponent.html\"><code>UIComponent</code></a> represent. </p>\n\n<p>This way you can evolve bit by bit towards a component based framework.</p>\n\n<hr>\n\n<h3>Related questions/answers</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/1673841/examples-of-gof-design-patterns/2707195#2707195\">Real world implementations of GoF design patterns</a></li>\n</ul>\n    "},{"t":"Too many 'if' statements?","l":"http://stackoverflow.com/questions/22501230/too-many-if-statements","q":"\n\n<p>The following code does work how I need it to, but it's ugly, excessive or a number of other things. I've looked at formulas and attempted to write a few solutions, but I end up with a similar amount of statements.</p>\n\n<p>Is there a type of math formula that would benefit me in this instance or are 16 if statements acceptable?</p>\n\n<p>To explain the code, it's for a kind of simultaneous-turn-based game.. two players have four action buttons each and the results come from an array (0-3), but the variables 'one' &amp; 'two' can be assigned anything if this helps. The result is, 0 = neither win, 1 = p1 wins, 2 = p2 wins, 3 = both win.</p>\n\n<pre><code>public int fightMath(int one, int two) {\n\n    if(one == 0 &amp;&amp; two == 0) { result = 0; }\n    else if(one == 0 &amp;&amp; two == 1) { result = 0; }\n    else if(one == 0 &amp;&amp; two == 2) { result = 1; }\n    else if(one == 0 &amp;&amp; two == 3) { result = 2; }\n    else if(one == 1 &amp;&amp; two == 0) { result = 0; }\n    else if(one == 1 &amp;&amp; two == 1) { result = 0; }\n    else if(one == 1 &amp;&amp; two == 2) { result = 2; }\n    else if(one == 1 &amp;&amp; two == 3) { result = 1; }\n    else if(one == 2 &amp;&amp; two == 0) { result = 2; }\n    else if(one == 2 &amp;&amp; two == 1) { result = 1; }\n    else if(one == 2 &amp;&amp; two == 2) { result = 3; }\n    else if(one == 2 &amp;&amp; two == 3) { result = 3; }\n    else if(one == 3 &amp;&amp; two == 0) { result = 1; }\n    else if(one == 3 &amp;&amp; two == 1) { result = 2; }\n    else if(one == 3 &amp;&amp; two == 2) { result = 3; }\n    else if(one == 3 &amp;&amp; two == 3) { result = 3; }\n\n    return result;\n}\n</code></pre>\n    ","a":"\n<p>If you cannot come up with a formula, you can use a table for such a limited number of outcomes:</p>\n\n<pre><code>final int[][] result = new int[][] {\n  { 0, 0, 1, 2 },\n  { 0, 0, 2, 1 },\n  { 2, 1, 3, 3 },\n  { 1, 2, 3, 3 }\n};\nreturn result[one][two];\n</code></pre>\n    "},{"t":"Trusting all certificates using HttpClient over HTTPS","l":"http://stackoverflow.com/questions/2642777/trusting-all-certificates-using-httpclient-over-https","q":"\n\n<p>Recently posted a question regarding the <code>HttpClient</code> over Https (<a href=\"http://stackoverflow.com/questions/2603691/android-httpclient-and-https\">found here</a>).  I've made some headway, but I've run into new issues. As with my last problem, I can't seem to find an example anywhere that works for me. Basically, I want my client to accept any certificate (because I'm only ever pointing to one server) but I keep getting a <code>javax.net.ssl.SSLException: Not trusted server certificate exception.</code></p>\n\n<p>So this is what I have:</p>\n\n<pre><code>public void connect() throws A_WHOLE_BUNCH_OF_EXCEPTIONS {\n\n    HttpPost post = new HttpPost(new URI(PROD_URL));\n    post.setEntity(new StringEntity(BODY));\n\n    KeyStore trusted = KeyStore.getInstance(\"BKS\");\n    trusted.load(null, \"\".toCharArray());\n    SSLSocketFactory sslf = new SSLSocketFactory(trusted);\n    sslf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n\n    SchemeRegistry schemeRegistry = new SchemeRegistry();\n    schemeRegistry.register(new Scheme (\"https\", sslf, 443));\n    SingleClientConnManager cm = new SingleClientConnManager(post.getParams(),\n            schemeRegistry);\n\n    HttpClient client = new DefaultHttpClient(cm, post.getParams());\n    HttpResponse result = client.execute(post);\n}\n</code></pre>\n\n<p>And here's the error I'm getting:</p>\n\n<pre><code>W/System.err(  901): javax.net.ssl.SSLException: Not trusted server certificate\nW/System.err(  901):    at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:360)\nW/System.err(  901):    at org.apache.http.conn.ssl.AbstractVerifier.verify(AbstractVerifier.java:92)\nW/System.err(  901):    at org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(SSLSocketFactory.java:321)\nW/System.err(  901):    at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:129)\nW/System.err(  901):    at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:164)\nW/System.err(  901):    at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:119)\nW/System.err(  901):    at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:348)\nW/System.err(  901):    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:555)\nW/System.err(  901):    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:487)\nW/System.err(  901):    at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:465)\nW/System.err(  901):    at me.harrisonlee.test.ssl.MainActivity.connect(MainActivity.java:129)\nW/System.err(  901):    at me.harrisonlee.test.ssl.MainActivity.access$0(MainActivity.java:77)\nW/System.err(  901):    at me.harrisonlee.test.ssl.MainActivity$2.run(MainActivity.java:49)\nW/System.err(  901): Caused by: java.security.cert.CertificateException: java.security.InvalidAlgorithmParameterException: the trust anchors set is empty\nW/System.err(  901):    at org.apache.harmony.xnet.provider.jsse.TrustManagerImpl.checkServerTrusted(TrustManagerImpl.java:157)\nW/System.err(  901):    at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:355)\nW/System.err(  901):    ... 12 more\nW/System.err(  901): Caused by: java.security.InvalidAlgorithmParameterException: the trust anchors set is empty\nW/System.err(  901):    at java.security.cert.PKIXParameters.checkTrustAnchors(PKIXParameters.java:645)\nW/System.err(  901):    at java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:89)\nW/System.err(  901):    at org.apache.harmony.xnet.provider.jsse.TrustManagerImpl.&lt;init&gt;(TrustManagerImpl.java:89)\nW/System.err(  901):    at org.apache.harmony.xnet.provider.jsse.TrustManagerFactoryImpl.engineGetTrustManagers(TrustManagerFactoryImpl.java:134)\nW/System.err(  901):    at javax.net.ssl.TrustManagerFactory.getTrustManagers(TrustManagerFactory.java:226)\nW/System.err(  901):    at org.apache.http.conn.ssl.SSLSocketFactory.createTrustManagers(SSLSocketFactory.java:263)\nW/System.err(  901):    at org.apache.http.conn.ssl.SSLSocketFactory.&lt;init&gt;(SSLSocketFactory.java:190)\nW/System.err(  901):    at org.apache.http.conn.ssl.SSLSocketFactory.&lt;init&gt;(SSLSocketFactory.java:216)\nW/System.err(  901):    at me.harrisonlee.test.ssl.MainActivity.connect(MainActivity.java:107)\nW/System.err(  901):    ... 2 more\n</code></pre>\n    ","a":"\n<p><strong>Note: Do not implement this in production code you are ever going to use on a network you do not entirely trust. Especially anything going over the public internet.</strong> </p>\n\n<p>Your question is just what I want to know. After I did some searches, the conclusion is as follows.</p>\n\n<p>In HttpClient way, you should create a custom class from org.apache.http.conn.ssl.SSLSocketFactory, not the one org.apache.http.conn.ssl.SSLSocketFactory\n itself. Some clues can be found in this post <a href=\"http://stackoverflow.com/questions/2899079/custom-ssl-handling-stopped-working-on-android-2-2-froyo\">Custom SSL handling stopped working on Android 2.2 FroYo</a>.</p>\n\n<p>An example is like  ...</p>\n\n<pre><code>import java.io.IOException;\nimport java.net.Socket;\nimport java.net.UnknownHostException;\nimport java.security.KeyManagementException;\nimport java.security.KeyStore;\nimport java.security.KeyStoreException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.UnrecoverableKeyException;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\n\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManager;\nimport javax.net.ssl.X509TrustManager;\n\nimport org.apache.http.conn.ssl.SSLSocketFactory;\npublic class MySSLSocketFactory extends SSLSocketFactory {\n    SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n\n    public MySSLSocketFactory(KeyStore truststore) throws NoSuchAlgorithmException, KeyManagementException, KeyStoreException, UnrecoverableKeyException {\n        super(truststore);\n\n        TrustManager tm = new X509TrustManager() {\n            public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n            }\n\n            public void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n            }\n\n            public X509Certificate[] getAcceptedIssuers() {\n                return null;\n            }\n        };\n\n        sslContext.init(null, new TrustManager[] { tm }, null);\n    }\n\n    @Override\n    public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {\n        return sslContext.getSocketFactory().createSocket(socket, host, port, autoClose);\n    }\n\n    @Override\n    public Socket createSocket() throws IOException {\n        return sslContext.getSocketFactory().createSocket();\n    }\n}\n</code></pre>\n\n<p>and use this class while creating instance of HttpClient.</p>\n\n<pre><code>public HttpClient getNewHttpClient() {\n    try {\n        KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n        trustStore.load(null, null);\n\n        MySSLSocketFactory sf = new MySSLSocketFactory(trustStore);\n        sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n\n        HttpParams params = new BasicHttpParams();\n        HttpProtocolParams.setVersion(params, HttpVersion.HTTP_1_1);\n        HttpProtocolParams.setContentCharset(params, HTTP.UTF_8);\n\n        SchemeRegistry registry = new SchemeRegistry();\n        registry.register(new Scheme(\"http\", PlainSocketFactory.getSocketFactory(), 80));\n        registry.register(new Scheme(\"https\", sf, 443));\n\n        ClientConnectionManager ccm = new ThreadSafeClientConnManager(params, registry);\n\n        return new DefaultHttpClient(ccm, params);\n    } catch (Exception e) {\n        return new DefaultHttpClient();\n    }\n}\n</code></pre>\n\n<p>BTW, the link below is for someone who is looking for HttpURLConnection solution.\n<a href=\"http://stackoverflow.com/questions/995514/https-connection-android/1000205#1000205\">Https Connection Android</a></p>\n\n<p>I have tested the above two kinds of solutions on froyo, and they all work like a charm in my cases. Finally, using HttpURLConnection may face the redirect problems, but this is beyond the topic.</p>\n\n<p>Note: Before you decide to trust all certificates, you probably should know the site full well and won't be harmful of it to end-user.</p>\n\n<p>Indeed, the risk you take should be considered carefully, including the effect of hacker's mock site mentioned in the following comments that I deeply appreciated. In some situation, although it might be hard to take care of all certificates, you'd better know the implicit drawbacks to trust all of them.</p>\n    "},{"t":"How do I programmatically determine operating system in Java?","l":"http://stackoverflow.com/questions/228477/how-do-i-programmatically-determine-operating-system-in-java","q":"\n\n<p>I would like to determine the operating system of the host that my Java program is running programmatically (for example: I would like to be able to load different properties based on whether I am on a Windows or Unix platform). What is the safest way to do this with 100% reliability?</p>\n    ","a":"\n<p>You can use:</p>\n\n<pre><code>System.getProperty(\"os.name\")\n</code></pre>\n\n<p>P.S. You may find this code useful:</p>\n\n<pre><code>class ShowProperties {\n    public static void main(String[] args) {\n        System.getProperties().list(System.out);\n    }\n}\n</code></pre>\n\n<p>All it does is print out all the properties provided by your Java implementations. It'll give you an idea of what you can find out about your Java environment via properties. :-)</p>\n    "},{"t":"Why doesn't Java support unsigned ints?","l":"http://stackoverflow.com/questions/430346/why-doesnt-java-support-unsigned-ints","q":"\n\n<p>Why doesn't Java include support for unsigned integers?  </p>\n\n<p>It seems to me to be an odd omission, given that they allow one to write code that is less likely to produce overflows on unexpectedly large input.  </p>\n\n<p>Furthermore, using unsigned integers can be a form of self-documentation, since they indicate that the value which the unsigned int was intended to hold is never supposed to be negative.  </p>\n\n<p>Lastly, in some cases, unsigned integers can be more efficient for certain operations, such as division.  </p>\n\n<p>What's the downside to including these?</p>\n    ","a":"\n<p>This is from an <a href=\"http://www.gotw.ca/publications/c_family_interview.htm\">interview with Gosling and others</a>, about simplicity:</p>\n\n<blockquote>\n  <p>Gosling: For me as a language designer, which I don't really count myself as these days, what \"simple\" really ended up meaning was could I expect J. Random Developer to hold the spec in his head. That definition says that, for instance, Java isn't -- and in fact a lot of these languages end up with a lot of corner cases, things that nobody really understands. Quiz any C developer about unsigned, and pretty soon you discover that almost no C developers actually understand what goes on with unsigned, what unsigned arithmetic is. Things like that made C complex. The language part of Java is, I think, pretty simple. The libraries you have to look up.</p>\n</blockquote>\n    "},{"t":"Easiest way to convert a List to a Set? - Java","l":"http://stackoverflow.com/questions/1429860/easiest-way-to-convert-a-list-to-a-set-java","q":"\n\n<p>Easiest way to convert a List to a Set? - In Java</p>\n    ","a":"\n<pre><code>Set&lt;Foo&gt; foo = new HashSet&lt;Foo&gt;(myList);\n</code></pre>\n    "},{"t":"How to send HTTP request in java? [duplicate]","l":"http://stackoverflow.com/questions/1359689/how-to-send-http-request-in-java","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/2793150/using-java-net-urlconnection-to-fire-and-handle-http-requests\" dir=\"ltr\">Using java.net.URLConnection to fire and handle HTTP requests</a>\n                <span class=\"question-originals-answer-count\">\n                    7 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>In Java, How to compose a HTTP request message and send it to a HTTP WebServer?</p>\n    ","a":"\n<p>You can use <a href=\"http://download.oracle.com/javase/7/docs/api/java/net/HttpURLConnection.html\">java.net.HttpUrlConnection</a>.</p>\n\n<p>Example (<a href=\"http://www.xyzws.com/Javafaq/how-to-use-httpurlconnection-post-data-to-web-server/139\">from here</a>), with improvements. Included in case of link rot:</p>\n\n<pre><code>public static String excutePost(String targetURL, String urlParameters) {\n  HttpURLConnection connection = null;  \n  try {\n    //Create connection\n    URL url = new URL(targetURL);\n    connection = (HttpURLConnection)url.openConnection();\n    connection.setRequestMethod(\"POST\");\n    connection.setRequestProperty(\"Content-Type\", \n        \"application/x-www-form-urlencoded\");\n\n    connection.setRequestProperty(\"Content-Length\", \n        Integer.toString(urlParameters.getBytes().length);\n    connection.setRequestProperty(\"Content-Language\", \"en-US\");  \n\n    connection.setUseCaches(false);\n    connection.setDoOutput(true);\n\n    //Send request\n    DataOutputStream wr = new DataOutputStream (\n        connection.getOutputStream());\n    wr.writeBytes(urlParameters);\n    wr.close();\n\n    //Get Response  \n    InputStream is = connection.getInputStream();\n    BufferedReader rd = new BufferedReader(new InputStreamReader(is));\n    StringBuilder response = new StringBuilder(); // or StringBuffer if not Java 5+ \n    String line;\n    while((line = rd.readLine()) != null) {\n      response.append(line);\n      response.append('\\r');\n    }\n    rd.close();\n    return response.toString();\n  } catch (Exception e) {\n    e.printStackTrace();\n    return null;\n  } finally {\n    if(connection != null) {\n      connection.disconnect(); \n    }\n  }\n}\n</code></pre>\n    "},{"t":"Equivalent of C#'s DateTime.Now in Java?","l":"http://stackoverflow.com/questions/2010284/equivalent-of-cs-datetime-now-in-java","q":"\n\n<p>How do I get the current date in Java?</p>\n\n<p>In C# it is <code>DateTime.Now</code>.</p>\n    ","a":"\n<p>Just construct a new <code>Date</code> object without any arguments; this will assign the current date and time to the new object.</p>\n\n<pre><code>import java.util.Date;\n\nDate d = new Date();\n</code></pre>\n\n<p>In the words of <a href=\"http://java.sun.com/javase/6/docs/api/index.html?java/util/Date.html\">the Javadocs</a> for <a href=\"http://java.sun.com/javase/6/docs/api/java/util/Date.html#Date%28%29\">the zero-argument constructor</a>:</p>\n\n<blockquote>\n  <p>Allocates a Date object and <strong>initializes it so that it represents the time at which it was allocated</strong>, measured to the nearest millisecond.</p>\n</blockquote>\n\n<p>Make sure you're using <code>java.util.Date</code> and not <code>java.sql.Date</code> -- the latter doesn't have a zero-arg constructor, and has somewhat different semantics that are the topic of an entirely different conversation. :)</p>\n    "},{"t":"How can I change font size in Eclipse for Java text editors?","l":"http://stackoverflow.com/questions/4922305/how-can-i-change-font-size-in-eclipse-for-java-text-editors","q":"\n\n<p>I have just tried to change my font size in Eclipse 3.6.0 in the following way:</p>\n\n<blockquote>\n  <p>General → Appearance → Colors and Fonts → Java Editor text font</p>\n</blockquote>\n\n<p>However, the font size only changed in the file I had open. How can I change the font size for all Java files and projects I open in Eclipse?</p>\n    ","a":"\n<p>If you are changing the font size, but it is only working for the currently open file, then I suspect that you are changing the wrong preferences.  </p>\n\n<ol>\n<li>On the eclipse toolbar, select Window ! Preferences</li>\n<li>Set the font size (General → Appearance → Colors and Fonts → Java &gt; Java  Editor text font).</li>\n<li>Save the preferences.</li>\n</ol>\n\n<p>Check that you do not have per-project preferences, these will override the top level preferences.</p>\n\n<p><strong>Juno Note</strong><br>\nPer comment below, This has moved to the Eclipse ! Preferences menu (no longer named the Window menu).</p>\n\n<p><strong>Kepler Note</strong><br>\nThe <code>Window</code> menu is live again i.e. <code>Window ! Preferences</code></p>\n    "},{"t":"Java URL encoding of query string parameters","l":"http://stackoverflow.com/questions/10786042/java-url-encoding-of-query-string-parameters","q":"\n\n<p>Say I have a URL </p>\n\n<pre><code>http://example.com/query?q= \n</code></pre>\n\n<p>and I have a query entered by the user such as:</p>\n\n<blockquote>\n  <p>random word £500 bank $</p>\n</blockquote>\n\n<p>I want the result to be a properly encoded URL:</p>\n\n<pre><code>http://example.com/query?q=random%20word%20%A3500%20bank%20%24\n</code></pre>\n\n<p>What's the best way to achieve this? I tried <code>URLEncoder</code> and creating URI/URL objects but none of them come out quite right.</p>\n    ","a":"\n<p><a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html\"><code>URLEncoder</code></a> should be the way to go. You only need to keep in mind to encode <em>only</em> the individual query string parameter name and/or value, not the entire URL, for sure not the query string parameter separator character <code>&amp;</code> nor the parameter name-value separator character <code>=</code>.</p>\n\n<pre><code>String q = \"random word £500 bank $\";\nString url = \"http://example.com/query?q=\" + URLEncoder.encode(q, \"UTF-8\");\n</code></pre>\n\n<hr>\n\n<p>Note that spaces in query parameters are represented by <code>+</code>, not <code>%20</code>, which is legitimately valid. The <code>%20</code> is usually to be used to represent spaces in URI itself (the part before the URI-query string separator character <code>?</code>), not in query string (the part after <code>?</code>).</p>\n\n<p>Also note that there are two <code>encode()</code> methods. One without charset argument and another with. The one without charset argument is deprecated. Never use it and always specify the charset argument. The <a href=\"http://docs.oracle.com/javase/8/docs/api/java/net/URLEncoder.html\">javadoc</a> even explicitly recommends to use the UTF-8 encoding, as mandated by <a href=\"http://tools.ietf.org/html/rfc3986\">RFC3986</a> and <a href=\"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">W3C</a>.</p>\n\n<blockquote>\n  <p>All other characters are unsafe and are first converted into one or more bytes using some encoding scheme. Then each byte is represented by the 3-character string \"%xy\", where xy is the two-digit hexadecimal representation of the byte. <strong>The recommended encoding scheme to use is UTF-8</strong>. However, for compatibility reasons, if an encoding is not specified, then the default encoding of the platform is used.</p>\n</blockquote>\n\n<h3>See also:</h3>\n\n<ul>\n<li><a href=\"http://blog.lunatech.com/2009/02/03/what-every-web-developer-must-know-about-url-encoding\">What every web developer must know about URL encoding</a></li>\n</ul>\n    "},{"t":"IntelliJ tooltip shows JavaDocs","l":"http://stackoverflow.com/questions/6615516/intellij-tooltip-shows-javadocs","q":"\n\n<p>In Eclipse, hovering over a method, variable, etc displays a tooltip with the corresponding JavaDocs. Is there such a feature in IntelliJ?</p>\n    ","a":"\n<p>For Intellij 13, there is a checkbox in Editor's page in IDE Settings</p>\n\n<p><img src=\"http://i.stack.imgur.com/K0Z2p.jpg\" alt=\"enter image description here\"></p>\n\n<p><strong>EDIT:</strong> For <strong>Intellij 14</strong>, the option has been moved to Editor &gt; General page: its the last option in the \"Other\" group.</p>\n    "},{"t":"Java multiline string","l":"http://stackoverflow.com/questions/878573/java-multiline-string","q":"\n\n<p>Coming from Perl, I sure am missing the \"here-document\" means of creating a multi-line string in source code:</p>\n\n<pre><code>$string = &lt;&lt;\"EOF\"  # create a three line string\ntext\ntext\ntext\nEOF\n</code></pre>\n\n<p>In Java I have to have cumbersome quotes and plus signs on every line as I concatenate my multiline string from scratch.</p>\n\n<p>What are some better alternatives?  Define my string in a properties file?</p>\n\n<p><strong>Edit</strong>: Two answers say StringBuilder.append() is preferable to the plus notation.  Could anyone elaborate as to why they think so?  It doesn't look more preferable to me at all.  I'm looking for away around the fact that multiline strings are not a first-class language construct, which means I definitely don't want to replace a first-class language construct (string concatenation with plus) with method calls.</p>\n\n<p><strong>Edit</strong>: To clarify my question further, I'm not concerned about performance at all.  I'm concerned about maintainability and design issues.</p>\n    ","a":"\n<p>Stephen Colebourne has created a <a href=\"http://blog.joda.org/2008/01/java-7-multi-line-string-literals_594.html\">proposal</a> for adding multi-line strings in Java 7.</p>\n\n<p>Also, Groovy already has support for <a href=\"http://groovy.codehaus.org/Strings+and+GString\">multi-line strings</a>.</p>\n    "},{"t":"HTTP URL Address Encoding in Java","l":"http://stackoverflow.com/questions/724043/http-url-address-encoding-in-java","q":"\n\n<p>My Java standalone application gets a URL (which points to a file) from the user and I need to hit it and download it. The problem I am facing is that I am not able to encode the HTTP URL address properly...</p>\n\n<p>Example: </p>\n\n<pre><code>URL:  http://search.barnesandnoble.com/booksearch/first book.pdf\n\njava.net.URLEncoder.encode(url.toString(), \"ISO-8859-1\");\n</code></pre>\n\n<p>returns me:</p>\n\n<pre><code>http%3A%2F%2Fsearch.barnesandnoble.com%2Fbooksearch%2Ffirst+book.pdf\n</code></pre>\n\n<p>But, what I want is</p>\n\n<pre><code>http://search.barnesandnoble.com/booksearch/first%20book.pdf\n</code></pre>\n\n<p>(space replaced by %20)</p>\n\n<p>I guess <code>URLEncoder</code> is not designed to encode HTTP URLs... The JavaDoc says \"Utility class for HTML form encoding\"... Is there any other way to do this?</p>\n    ","a":"\n<p>The <a href=\"http://java.sun.com/javase/6/docs/api/java/net/URI.html\">java.net.URI</a> class can help; in the documentation of URL you find</p>\n\n<blockquote>\n  <p>Note, the URI class does perform escaping of its component fields in certain circumstances. The recommended way to manage the encoding and decoding of URLs is to use an URI</p>\n</blockquote>\n\n<p>Use one of the constructors with more than one argument, like:</p>\n\n<pre><code>URI uri = new URI(\n    \"http\", \n    \"search.barnesandnoble.com\", \n    \"/booksearch/first book.pdf\",\n    null);\nURL url = uri.toURL();\n//or String request = uri.toString();\n</code></pre>\n\n<p><em>(the single-argument constructor of URI does NOT escape illegal characters)</em>  </p>\n\n<hr>\n\n<p>EDIT: added fully qualified class name to avoid confusion with other <code>URI</code> classes (like apaches httpclient)</p>\n\n<hr>\n\n<p>EDIT 2:<br>\nOnly illegal characters get escaped by above code - it does NOT escape non-ASCII characters (see fatih's comment).<br>\nThe <code>toASCIIString</code> method can be used to get a String only with US-ASCII characters:  </p>\n\n<pre><code>URI uri = new URI(\n    \"http\", \n    \"search.barnesandnoble.com\", \n    \"/booksearch/é\",\n    null);\nString request = uri.toASCIIString();\n</code></pre>\n\n<hr>\n\n<p>EDIT 3:<br>\nFor an URL with a query like <code>http://www.google.com/ig/api?weather=São Paulo</code>, use the 5-parameter version of the constructor:  </p>\n\n<pre><code>URI uri = new URI(\n        \"http\", \n        \"www.google.com\", \n        \"/ig/api\",\n        \"weather=São Paulo\",\n        null);\nString request = uri.toASCIIString();\n</code></pre>\n    "},{"t":"Should I avoid the use of set(Preferred|Maximum|Minimum)Size methods in Java Swing?","l":"http://stackoverflow.com/questions/7229226/should-i-avoid-the-use-of-setpreferredmaximumminimumsize-methods-in-java-swi","q":"\n\n<p>Several times I've been criticized for having suggested the use of the following methods:</p>\n\n<ol>\n<li><strong>setPreferredSize</strong></li>\n<li><strong>setMinimumSize</strong></li>\n<li><strong>setMaximumSize</strong></li>\n</ol>\n\n<p>on <code>Swing</code> components. I don't see any alternative to their use when I want to define proportions between displayed components. I have been told this:</p>\n\n<blockquote>\n  <p>With layouts the answer is always the same: use a suitable\n  LayoutManager</p>\n</blockquote>\n\n<p>I have searched the web a little bit, but I haven't found any comprehensive analysis of the subject. So I have the following questions:</p>\n\n<ol>\n<li>Should I completely avoid the use of those methods?</li>\n<li>The methods have been defined for a reason. So when should I use them? In which context? For what purposes? </li>\n<li>What exactly are the negative consequences of using those methods? (I can only think adding portability between systems with different screen resolution).</li>\n<li>I don't think any LayoutManager can exactly satisfy all desired layout needs. Do I really need to implement a new LayoutManager for every little variation on my layout ? </li>\n<li>If the answer to 4 is \"yes\", won't this lead to a proliferation of LayoutManager classes which will become difficult to maintain?</li>\n<li>In a situation where I need to define proportions between children of a Component (eg, child1 should use 10% of space, child2 40% ,child3 50%), is it possible to achieve that without implementing a custom LayoutManager?</li>\n</ol>\n\n<p>I hope to have been clear.</p>\n    ","a":"\n<ol>\n<li><blockquote>\n  <p>Should I completely avoid the use of those methods?</p>\n</blockquote>\n\n<p>Yes for application code</p></li>\n<li><blockquote>\n  <p>The methods have been defined for a reason. So when should I use them? In which context? For what purposes?</p>\n</blockquote>\n\n<p>I don't know, personally I think of it as an api design accident. Slightly forced by compound components having special ideas about child sizes. \"Slightly\", because they should have implemented their needs with a custom LayoutManager</p></li>\n<li><blockquote>\n  <p>What exactly are the negative consequences of using those methods? (I can only think adding portability between systems with different screen resolution).</p>\n</blockquote>\n\n<p>Some (incomplete, and unfortunately the links are broken due to migration of SwingLabs to java.net) technical reasons are f.i. mentioned in the <a href=\"http://web.archive.org/web/20110614145256/http://wiki.java.net/twiki/bin/view/Javadesktop/SwingLabsImperialRules?TWIKISID=e1a6667476691b56753dc9b0744828c6#Do_not_use_component_setXXSize\">Rules (hehe)</a> or in the <a href=\"http://web.archive.org/web/20100207211337/http://www.jguru.com/faq/view.jsp?EID=237070\">link</a> @bendicott found in his/her comment to <a href=\"http://stackoverflow.com/questions/7074514/images-in-jtable-cells-off-by-one-pixel\">my answer</a>. Socially, posing tons of work onto your unfortunate fellow who has to maintain the code and has to track down a broken layout. </p></li>\n<li><blockquote>\n  <p>I don't think any LayoutManager can exactly satisfy all desired layout needs. Do I really need to implement a new LayoutManager for every little variation on my layout ?</p>\n</blockquote>\n\n<p>Yes, there are LayoutManagers powerful enough to satisfy a very good approximation to \"all layout needs\". The big three are JGoodies FormLayout, MigLayout, DesignGridLayout. So no, in practice, you rarely write LayoutManagers except for simple highly specialized environments.</p></li>\n<li><blockquote>\n  <p>If the answer to 4 is \"yes\", won't this lead to a proliferation of LayoutManager classes which will become difficult to maintain? </p>\n</blockquote>\n\n<p>-</p></li>\n<li><blockquote>\n  <p>In a situation where I need to define proportions between children of a Component (eg, child1 should use 10% of space, child2 40% ,child3 50%), is it possible to achieve that without implementing a custom LayoutManager?</p>\n</blockquote>\n\n<p>Any of the Big-Three can, can't even GridBag (never bothered to really master, too much trouble for too little power.</p></li>\n</ol>\n    "},{"t":"Why does Java switch on contiguous ints appear to run faster with added cases?","l":"http://stackoverflow.com/questions/15621083/why-does-java-switch-on-contiguous-ints-appear-to-run-faster-with-added-cases","q":"\n\n<p>I am working on some Java code which needs to be highly optimized as it will run in hot functions that are invoked at many points in my main program logic. Part of this code involves multiplying <code>double</code> variables by <code>10</code> raised to arbitrary non-negative <code>int</code> <code>exponent</code>s. One fast way (edit: but not the fastest possible, see Update 2 below) to get the multiplied value is to <code>switch</code> on the <code>exponent</code>:</p>\n\n<pre><code>double multiplyByPowerOfTen(final double d, final int exponent) {\n   switch (exponent) {\n      case 0:\n         return d;\n      case 1:\n         return d*10;\n      case 2:\n         return d*100;\n      // ... same pattern\n      case 9:\n         return d*1000000000;\n      case 10:\n         return d*10000000000L;\n      // ... same pattern with long literals\n      case 18:\n         return d*1000000000000000000L;\n      default:\n         throw new ParseException(\"Unhandled power of ten \" + power, 0);\n   }\n}\n</code></pre>\n\n<p>The commented ellipses above indicate that the <code>case</code> <code>int</code> constants continue incrementing by 1, so there are really 19 <code>case</code>s in the above code snippet. Since I wasn't sure whether I would actually need all the powers of 10 in <code>case</code> statements <code>10</code> thru <code>18</code>, I ran some microbenchmarks comparing the time to complete 10 million operations with this <code>switch</code> statement versus a <code>switch</code> with only <code>case</code>s <code>0</code> thru <code>9</code> (with the <code>exponent</code> limited to 9 or less to avoid breaking the pared-down <code>switch</code>). I got the rather surprising (to me, at least!) result that the longer <code>switch</code> with more <code>case</code> statements actually ran faster.</p>\n\n<p>On a lark, I tried adding even more <code>case</code>s which just returned dummy values, and found that  I could get the switch to run even faster with around 22-27 declared <code>case</code>s (even though those dummy cases are never actually hit while the code is running). (Again, <code>case</code>s were added in a contiguous fashion by incrementing the prior <code>case</code> constant by <code>1</code>.) These execution time differences are not very significant: for a random <code>exponent</code> between <code>0</code> and <code>10</code>, the dummy padded <code>switch</code> statement finishes 10 million executions in 1.49 secs versus 1.54 secs for the unpadded version, for a grand total savings of 5ns per execution. So, not the kind of thing that makes obsessing over padding out a <code>switch</code> statement worth the effort from an optimization standpoint. But I still just find it curious and counter-intuitive that a <code>switch</code> doesn't become slower (or perhaps at best maintain constant <em>O(1)</em> time) to execute as more <code>case</code>s are added to it.  </p>\n\n<p><img src=\"http://i.stack.imgur.com/kbnan.png\" alt=\"switch benchmarking results\"></p>\n\n<p>These are the results I obtained from running with various limits on the randomly-generated <code>exponent</code> values. I didn't include the results all the way down to <code>1</code> for the <code>exponent</code> limit, but the general shape of the curve remains the same, with a ridge around the 12-17 case mark, and a valley between 18-28. All tests were run in JUnitBenchmarks using shared containers for the random values to ensure identical testing inputs. I also ran the tests both in order from longest <code>switch</code> statement to shortest, and vice-versa, to try and eliminate the possibility of ordering-related test problems.  I've put my testing code up on a github repo if anyone wants to try to reproduce these results.</p>\n\n<p>So, what's going on here? Some vagaries of my architecture or micro-benchmark construction? Or is the Java <code>switch</code> really a little faster to execute in the <code>18</code> to <code>28</code> <code>case</code> range than it is from <code>11</code> up to <code>17</code>?</p>\n\n<p><a href=\"https://github.com/abissell/switch-experiment\">github test repo \"switch-experiment\"</a></p>\n\n<p><strong>UPDATE:</strong> I cleaned up the benchmarking library quite a bit and added a text file in /results with some output across a wider range of possible <code>exponent</code> values. I also added an option in the testing code not to throw an <code>Exception</code> from <code>default</code>, but this doesn't appear to affect the results.</p>\n\n<p><strong>UPDATE 2:</strong> Found some pretty good discussion of this issue from back in 2009 on the xkcd forum here: <a href=\"http://forums.xkcd.com/viewtopic.php?f=11&amp;t=33524\">http://forums.xkcd.com/viewtopic.php?f=11&amp;t=33524</a>. The OP's discussion of using <code>Array.binarySearch()</code> gave me the idea for a simple array-based implementation of the exponentiation pattern above. There's no need for the binary search since I know what the entries in the <code>array</code> are. It appears to run about 3 times faster than using <code>switch</code>, obviously at the expense of some of the control flow that <code>switch</code> affords. That code has been added to the github repo also.</p>\n    ","a":"\n<p>As pointed out <a href=\"http://stackoverflow.com/a/15621857/632951\">by the other answer</a>, because the case values are contiguous (as opposed to sparse), the generated bytecode for your various tests uses a switch table (bytecode instruction <code>tableswitch</code>).</p>\n\n<p>However, once the JIT starts its job and compiles the bytecode into assembly, the <code>tableswitch</code> instruction does not always result in an array of pointers: sometimes the switch table is transformed into what looks like a <code>lookupswitch</code> (similar to an <code>if</code>/<code>else if</code> structure).</p>\n\n<p>Decompiling the assembly generated by the JIT (hotspot JDK 1.7) shows that it uses a succession of if/else if when there are 17 cases or less, an array of pointers when there are more than 18 (more efficient).</p>\n\n<p>The reason why this magic number of 18 is used seems to come down to the default value of the <a href=\"http://hg.openjdk.java.net/jdk7/jdk7/hotspot/file/357d4e2eb4dd/src/share/vm/opto/c2_globals.hpp\"><code>MinJumpTableSize</code></a> JVM flag (around line 352 in the code).</p>\n\n<p>I have raised the issue on the hotspot compiler list and <a href=\"http://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2013-March/009998.html\">it seems to be a legacy of past testing</a>. Note that this default value <a href=\"http://hg.openjdk.java.net/jdk8/jdk8/hotspot/rev/34bd5e86aadb\">has been removed in JDK 8</a> after <a href=\"http://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2013-May/010670.html\">more benchmarking was performed</a>.</p>\n\n<p>Finally, when the method becomes too long (&gt; 25 cases in my tests), it is in not inlined any longer with the default JVM settings - that is the likeliest cause for the drop in performance at that point.</p>\n\n<hr>\n\n<p>With 5 cases, the decompiled code looks like this (notice the cmp/je/jg/jmp instructions, the assembly for if/goto):</p>\n\n<pre><code>[Verified Entry Point]\n  # {method} 'multiplyByPowerOfTen' '(DI)D' in 'javaapplication4/Test1'\n  # parm0:    xmm0:xmm0   = double\n  # parm1:    rdx       = int\n  #           [sp+0x20]  (sp of caller)\n  0x00000000024f0160: mov    DWORD PTR [rsp-0x6000],eax\n                                                ;   {no_reloc}\n  0x00000000024f0167: push   rbp\n  0x00000000024f0168: sub    rsp,0x10           ;*synchronization entry\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@-1 (line 56)\n  0x00000000024f016c: cmp    edx,0x3\n  0x00000000024f016f: je     0x00000000024f01c3\n  0x00000000024f0171: cmp    edx,0x3\n  0x00000000024f0174: jg     0x00000000024f01a5\n  0x00000000024f0176: cmp    edx,0x1\n  0x00000000024f0179: je     0x00000000024f019b\n  0x00000000024f017b: cmp    edx,0x1\n  0x00000000024f017e: jg     0x00000000024f0191\n  0x00000000024f0180: test   edx,edx\n  0x00000000024f0182: je     0x00000000024f01cb\n  0x00000000024f0184: mov    ebp,edx\n  0x00000000024f0186: mov    edx,0x17\n  0x00000000024f018b: call   0x00000000024c90a0  ; OopMap{off=48}\n                                                ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@72 (line 83)\n                                                ;   {runtime_call}\n  0x00000000024f0190: int3                      ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@72 (line 83)\n  0x00000000024f0191: mulsd  xmm0,QWORD PTR [rip+0xffffffffffffffa7]        # 0x00000000024f0140\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@52 (line 62)\n                                                ;   {section_word}\n  0x00000000024f0199: jmp    0x00000000024f01cb\n  0x00000000024f019b: mulsd  xmm0,QWORD PTR [rip+0xffffffffffffff8d]        # 0x00000000024f0130\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@46 (line 60)\n                                                ;   {section_word}\n  0x00000000024f01a3: jmp    0x00000000024f01cb\n  0x00000000024f01a5: cmp    edx,0x5\n  0x00000000024f01a8: je     0x00000000024f01b9\n  0x00000000024f01aa: cmp    edx,0x5\n  0x00000000024f01ad: jg     0x00000000024f0184  ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n  0x00000000024f01af: mulsd  xmm0,QWORD PTR [rip+0xffffffffffffff81]        # 0x00000000024f0138\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@64 (line 66)\n                                                ;   {section_word}\n  0x00000000024f01b7: jmp    0x00000000024f01cb\n  0x00000000024f01b9: mulsd  xmm0,QWORD PTR [rip+0xffffffffffffff67]        # 0x00000000024f0128\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@70 (line 68)\n                                                ;   {section_word}\n  0x00000000024f01c1: jmp    0x00000000024f01cb\n  0x00000000024f01c3: mulsd  xmm0,QWORD PTR [rip+0xffffffffffffff55]        # 0x00000000024f0120\n                                                ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n                                                ;   {section_word}\n  0x00000000024f01cb: add    rsp,0x10\n  0x00000000024f01cf: pop    rbp\n  0x00000000024f01d0: test   DWORD PTR [rip+0xfffffffffdf3fe2a],eax        # 0x0000000000430000\n                                                ;   {poll_return}\n  0x00000000024f01d6: ret    \n</code></pre>\n\n<p>With 18 cases, the assembly looks like this (notice the array of pointers which is used and suppresses the need for all the comparisons: <code>jmp    QWORD PTR [r8+r10*1]</code> jumps directly to the right multiplication) - that is the likely reason for the performance improvement:</p>\n\n<pre><code>[Verified Entry Point]\n  # {method} 'multiplyByPowerOfTen' '(DI)D' in 'javaapplication4/Test1'\n  # parm0:    xmm0:xmm0   = double\n  # parm1:    rdx       = int\n  #           [sp+0x20]  (sp of caller)\n  0x000000000287fe20: mov    DWORD PTR [rsp-0x6000],eax\n                                                ;   {no_reloc}\n  0x000000000287fe27: push   rbp\n  0x000000000287fe28: sub    rsp,0x10           ;*synchronization entry\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@-1 (line 56)\n  0x000000000287fe2c: cmp    edx,0x13\n  0x000000000287fe2f: jae    0x000000000287fe46\n  0x000000000287fe31: movsxd r10,edx\n  0x000000000287fe34: shl    r10,0x3\n  0x000000000287fe38: movabs r8,0x287fd70       ;   {section_word}\n  0x000000000287fe42: jmp    QWORD PTR [r8+r10*1]  ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n  0x000000000287fe46: mov    ebp,edx\n  0x000000000287fe48: mov    edx,0x31\n  0x000000000287fe4d: xchg   ax,ax\n  0x000000000287fe4f: call   0x00000000028590a0  ; OopMap{off=52}\n                                                ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@202 (line 96)\n                                                ;   {runtime_call}\n  0x000000000287fe54: int3                      ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@202 (line 96)\n  0x000000000287fe55: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe8b]        # 0x000000000287fce8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@194 (line 92)\n                                                ;   {section_word}\n  0x000000000287fe5d: jmp    0x000000000287ff16\n  0x000000000287fe62: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe86]        # 0x000000000287fcf0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@188 (line 90)\n                                                ;   {section_word}\n  0x000000000287fe6a: jmp    0x000000000287ff16\n  0x000000000287fe6f: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe81]        # 0x000000000287fcf8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@182 (line 88)\n                                                ;   {section_word}\n  0x000000000287fe77: jmp    0x000000000287ff16\n  0x000000000287fe7c: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe7c]        # 0x000000000287fd00\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@176 (line 86)\n                                                ;   {section_word}\n  0x000000000287fe84: jmp    0x000000000287ff16\n  0x000000000287fe89: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe77]        # 0x000000000287fd08\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@170 (line 84)\n                                                ;   {section_word}\n  0x000000000287fe91: jmp    0x000000000287ff16\n  0x000000000287fe96: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe72]        # 0x000000000287fd10\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@164 (line 82)\n                                                ;   {section_word}\n  0x000000000287fe9e: jmp    0x000000000287ff16\n  0x000000000287fea0: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe70]        # 0x000000000287fd18\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@158 (line 80)\n                                                ;   {section_word}\n  0x000000000287fea8: jmp    0x000000000287ff16\n  0x000000000287feaa: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe6e]        # 0x000000000287fd20\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@152 (line 78)\n                                                ;   {section_word}\n  0x000000000287feb2: jmp    0x000000000287ff16\n  0x000000000287feb4: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe24]        # 0x000000000287fce0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@146 (line 76)\n                                                ;   {section_word}\n  0x000000000287febc: jmp    0x000000000287ff16\n  0x000000000287febe: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe6a]        # 0x000000000287fd30\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@140 (line 74)\n                                                ;   {section_word}\n  0x000000000287fec6: jmp    0x000000000287ff16\n  0x000000000287fec8: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe68]        # 0x000000000287fd38\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@134 (line 72)\n                                                ;   {section_word}\n  0x000000000287fed0: jmp    0x000000000287ff16\n  0x000000000287fed2: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe66]        # 0x000000000287fd40\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@128 (line 70)\n                                                ;   {section_word}\n  0x000000000287feda: jmp    0x000000000287ff16\n  0x000000000287fedc: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe64]        # 0x000000000287fd48\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@122 (line 68)\n                                                ;   {section_word}\n  0x000000000287fee4: jmp    0x000000000287ff16\n  0x000000000287fee6: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe62]        # 0x000000000287fd50\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@116 (line 66)\n                                                ;   {section_word}\n  0x000000000287feee: jmp    0x000000000287ff16\n  0x000000000287fef0: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe60]        # 0x000000000287fd58\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@110 (line 64)\n                                                ;   {section_word}\n  0x000000000287fef8: jmp    0x000000000287ff16\n  0x000000000287fefa: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe5e]        # 0x000000000287fd60\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@104 (line 62)\n                                                ;   {section_word}\n  0x000000000287ff02: jmp    0x000000000287ff16\n  0x000000000287ff04: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe5c]        # 0x000000000287fd68\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@98 (line 60)\n                                                ;   {section_word}\n  0x000000000287ff0c: jmp    0x000000000287ff16\n  0x000000000287ff0e: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe12]        # 0x000000000287fd28\n                                                ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n                                                ;   {section_word}\n  0x000000000287ff16: add    rsp,0x10\n  0x000000000287ff1a: pop    rbp\n  0x000000000287ff1b: test   DWORD PTR [rip+0xfffffffffd9b00df],eax        # 0x0000000000230000\n                                                ;   {poll_return}\n  0x000000000287ff21: ret    \n</code></pre>\n\n<p>And finally the assembly with 30 cases (below) looks similar to 18 cases, except for the additional <code>movapd xmm0,xmm1</code> that appears towards the middle of the code, <a href=\"http://stackoverflow.com/q/15621083/632951#comment-22166408\">as spotted by @cHao</a> - however the likeliest reason for the drop in performance is that the method is too long to be inlined with the default JVM settings:</p>\n\n<pre><code>[Verified Entry Point]\n  # {method} 'multiplyByPowerOfTen' '(DI)D' in 'javaapplication4/Test1'\n  # parm0:    xmm0:xmm0   = double\n  # parm1:    rdx       = int\n  #           [sp+0x20]  (sp of caller)\n  0x0000000002524560: mov    DWORD PTR [rsp-0x6000],eax\n                                                ;   {no_reloc}\n  0x0000000002524567: push   rbp\n  0x0000000002524568: sub    rsp,0x10           ;*synchronization entry\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@-1 (line 56)\n  0x000000000252456c: movapd xmm1,xmm0\n  0x0000000002524570: cmp    edx,0x1f\n  0x0000000002524573: jae    0x0000000002524592  ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n  0x0000000002524575: movsxd r10,edx\n  0x0000000002524578: shl    r10,0x3\n  0x000000000252457c: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe3c]        # 0x00000000025243c0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@364 (line 118)\n                                                ;   {section_word}\n  0x0000000002524584: movabs r8,0x2524450       ;   {section_word}\n  0x000000000252458e: jmp    QWORD PTR [r8+r10*1]  ;*tableswitch\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@1 (line 56)\n  0x0000000002524592: mov    ebp,edx\n  0x0000000002524594: mov    edx,0x31\n  0x0000000002524599: xchg   ax,ax\n  0x000000000252459b: call   0x00000000024f90a0  ; OopMap{off=64}\n                                                ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@370 (line 120)\n                                                ;   {runtime_call}\n  0x00000000025245a0: int3                      ;*new  ; - javaapplication4.Test1::multiplyByPowerOfTen@370 (line 120)\n  0x00000000025245a1: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe27]        # 0x00000000025243d0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@358 (line 116)\n                                                ;   {section_word}\n  0x00000000025245a9: jmp    0x0000000002524744\n  0x00000000025245ae: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe22]        # 0x00000000025243d8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@348 (line 114)\n                                                ;   {section_word}\n  0x00000000025245b6: jmp    0x0000000002524744\n  0x00000000025245bb: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe1d]        # 0x00000000025243e0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@338 (line 112)\n                                                ;   {section_word}\n  0x00000000025245c3: jmp    0x0000000002524744\n  0x00000000025245c8: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe18]        # 0x00000000025243e8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@328 (line 110)\n                                                ;   {section_word}\n  0x00000000025245d0: jmp    0x0000000002524744\n  0x00000000025245d5: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe13]        # 0x00000000025243f0\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@318 (line 108)\n                                                ;   {section_word}\n  0x00000000025245dd: jmp    0x0000000002524744\n  0x00000000025245e2: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe0e]        # 0x00000000025243f8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@308 (line 106)\n                                                ;   {section_word}\n  0x00000000025245ea: jmp    0x0000000002524744\n  0x00000000025245ef: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe09]        # 0x0000000002524400\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@298 (line 104)\n                                                ;   {section_word}\n  0x00000000025245f7: jmp    0x0000000002524744\n  0x00000000025245fc: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe04]        # 0x0000000002524408\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@288 (line 102)\n                                                ;   {section_word}\n  0x0000000002524604: jmp    0x0000000002524744\n  0x0000000002524609: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffdff]        # 0x0000000002524410\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@278 (line 100)\n                                                ;   {section_word}\n  0x0000000002524611: jmp    0x0000000002524744\n  0x0000000002524616: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffdfa]        # 0x0000000002524418\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@268 (line 98)\n                                                ;   {section_word}\n  0x000000000252461e: jmp    0x0000000002524744\n  0x0000000002524623: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffd9d]        # 0x00000000025243c8\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@258 (line 96)\n                                                ;   {section_word}\n  0x000000000252462b: jmp    0x0000000002524744\n  0x0000000002524630: movapd xmm0,xmm1\n  0x0000000002524634: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffe0c]        # 0x0000000002524448\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@242 (line 92)\n                                                ;   {section_word}\n  0x000000000252463c: jmp    0x0000000002524744\n  0x0000000002524641: movapd xmm0,xmm1\n  0x0000000002524645: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffddb]        # 0x0000000002524428\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@236 (line 90)\n                                                ;   {section_word}\n  0x000000000252464d: jmp    0x0000000002524744\n  0x0000000002524652: movapd xmm0,xmm1\n  0x0000000002524656: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffdd2]        # 0x0000000002524430\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@230 (line 88)\n                                                ;   {section_word}\n  0x000000000252465e: jmp    0x0000000002524744\n  0x0000000002524663: movapd xmm0,xmm1\n  0x0000000002524667: mulsd  xmm0,QWORD PTR [rip+0xfffffffffffffdc9]        # 0x0000000002524438\n                                                ;*dmul\n                                                ; - javaapplication4.Test1::multiplyByPowerOfTen@224 (line 86)\n                                                ;   {section_word}\n\n[etc.]\n\n  0x0000000002524744: add    rsp,0x10\n  0x0000000002524748: pop    rbp\n  0x0000000002524749: test   DWORD PTR [rip+0xfffffffffde1b8b1],eax        # 0x0000000000340000\n                                                ;   {poll_return}\n  0x000000000252474f: ret    \n</code></pre>\n    "},{"t":"How to add an image to a JPanel?","l":"http://stackoverflow.com/questions/299495/how-to-add-an-image-to-a-jpanel","q":"\n\n<p>I have a <a href=\"http://download.oracle.com/javase/1.4.2/docs/api/javax/swing/JPanel.html\">JPanel</a> to which I'd like to add JPEG and PNG images that I generate on the fly.</p>\n\n<p>All the examples I've seen so far in the <a href=\"http://java.sun.com/docs/books/tutorial/uiswing/\">Swing Tutorials</a>, specially in the <a href=\"http://java.sun.com/docs/books/tutorial/uiswing/examples/components/\">Swing examples</a> use <code>ImageIcon</code>s.</p>\n\n<p>I'm generating these images as byte arrays, and they are usually larger than the common icon they use in the examples, at 640x480.</p>\n\n<ol>\n<li>Is there any (performance or other) problem in using the ImageIcon class to display an image that size in a JPanel?</li>\n<li>What's the <em>usual</em> way of doing it?</li>\n<li>How to add an image to a JPanel without using the ImageIcon class?</li>\n</ol>\n\n<p><strong>Edit</strong>: A more careful examination of the tutorials and the API shows that you cannot add an ImageIcon directly to a JPanel. Instead, they achieve the same effect by setting the image as an icon of a JLabel. This just doesn't feel right...</p>\n    ","a":"\n<p>Here's how I do it (with a little more info on how to load an image):</p>\n\n<pre><code>import java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.imageio.ImageIO;\nimport javax.swing.JPanel;\n\npublic class ImagePanel extends JPanel{\n\n    private BufferedImage image;\n\n    public ImagePanel() {\n       try {                \n          image = ImageIO.read(new File(\"image name and path\"));\n       } catch (IOException ex) {\n            // handle exception...\n       }\n    }\n\n    @Override\n    protected void paintComponent(Graphics g) {\n        super.paintComponent(g);\n        g.drawImage(image, 0, 0, null); // see javadoc for more info on the parameters            \n    }\n\n}\n</code></pre>\n    "},{"t":"Why can I throw null in Java?","l":"http://stackoverflow.com/questions/17576922/why-can-i-throw-null-in-java","q":"\n\n<p>When running this:</p>\n\n<pre><code>public class WhatTheShoot {\n\n    public static void main(String args[]){\n        try {\n            throw null;\n        } catch (Exception e){\n            System.out.println(e instanceof NullPointerException);\n            System.out.println(e instanceof FileNotFoundException);\n        }\n    }\n}\n</code></pre>\n\n<p>The response is:</p>\n\n<pre><code>true  \nfalse\n</code></pre>\n\n<p>Which was fairly stunning for me. I would have thought this would net a compile-time error. </p>\n\n<p><strong>Why can I throw null in Java, and why does it upcast it to a NullPointerException?</strong></p>\n\n<p><em>(Actually, I don't know if it is an \"upcast\", given I'm throwing null)</em></p>\n\n<p>Aside from a really really stupid interview question (please nobody ask this in an interview) I cannot see any reason to <code>throw null</code>. Maybe you want to be fired, but that's... I mean, why else would anyone <code>throw null</code>?</p>\n\n<p><strong>Fun fact</strong> <a href=\"http://en.wikipedia.org/wiki/IntelliJ_IDEA\">IntelliJ IDEA</a> 12 tells me that my line, <code>e instanceof NullPointerException</code>, will always be false. Which isn't true at all.</p>\n    ","a":"\n<p>It looks like it's not that <code>null</code> is treated as a <code>NullPointerException</code>, but that the act of attempting to <code>throw null</code> <em>itself</em> throws a <code>NullPointerException</code>.  </p>\n\n<p>In other words, <code>throw</code> checks that its argument is nonnull, and if it is null, it throws a <code>NullPointerException</code>.</p>\n\n<p>JLS 14.18 <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-14.html#jls-14.18\">specifies</a> this behavior:</p>\n\n<blockquote>\n  <p>If evaluation of the Expression completes normally, producing a null value, then an instance V' of class NullPointerException is created and thrown instead of null. The throw statement then completes abruptly, the reason being a throw with value V'.</p>\n</blockquote>\n    "},{"t":"How to convert java.util.date to java.sql.date?","l":"http://stackoverflow.com/questions/530012/how-to-convert-java-util-date-to-java-sql-date","q":"\n\n<p>I am trying to use java.util.Date as input and then creating a query with it - so I need java.sql.Date.  </p>\n\n<p>I was surprised to find that it couldn't do the conversion implicitly or explicitly - but I don't even know how I would do this, as the Java API is still fairly new to me.  Any suggestions?  It seems like this should be an easy feat to accomplish.</p>\n    ","a":"\n<p>Nevermind....</p>\n\n<pre><code>public class MainClass {\n\n  public static void main(String[] args) {\n    java.util.Date utilDate = new java.util.Date();\n    java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());\n    System.out.println(\"utilDate:\" + utilDate);\n    System.out.println(\"sqlDate:\" + sqlDate);\n\n  }\n\n}\n</code></pre>\n\n<p>explains it.  The link is <a href=\"http://www.java2s.com/Tutorial/Java/0040__Data-Type/ConvertfromajavautilDateObjecttoajavasqlDateObject.htm\">http://www.java2s.com/Tutorial/Java/0040__Data-Type/ConvertfromajavautilDateObjecttoajavasqlDateObject.htm</a></p>\n    "},{"t":"Do you ever use the volatile keyword in Java?","l":"http://stackoverflow.com/questions/106591/do-you-ever-use-the-volatile-keyword-in-java","q":"\n\n<p>In work today, I came across the <code>volatile</code> keyword in Java. Not being very familiar with it, I found this explaination: <a href=\"http://www.ibm.com/developerworks/java/library/j-jtp06197\">Java theory and practice: Managing volatility</a></p>\n\n<p>Given the detail in which that article explains the keyword in question, do you ever use it or could you ever see a case in which you could use this keyword in the correct manner?</p>\n    ","a":"\n<p><code>volatile</code> has semantics for memory visibility. Basically, the value of a <code>volatile</code> field becomes visible to all readers (other threads in particular) after a write operation completes on it. Without <code>volatile</code>, readers could see some non-updated value.</p>\n\n<p>To answer your question: Yes, I use a <code>volatile</code> variable to control whether some code continues a loop. The loop tests the <code>volatile</code> value and continues if it is <code>true</code>. The condition can be set to <code>false</code> by calling a \"stop\" method. The loop sees <code>false</code> and terminates when it tests the value after the stop method completes execution.</p>\n\n<p>The book \"<a href=\"http://jcip.net\">Java Concurrency in Practice</a>,\" which I highly recommend, gives a good explanation of <code>volatile</code>. This book is written by the same person who wrote the IBM article that is referenced in the question (in fact, he cites his book at the bottom of that article). My use of <code>volatile</code> is what his article calls the \"pattern 1 status flag.\"</p>\n\n<p>If you want to learn more about how <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-8.html#jls-8.3.1.4\"><code>volatile</code></a> works under the hood, read up on <a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html\">the Java memory model</a>. If you want to go beyond that level, check out a good computer architecture book like <a href=\"http://mkp.com/news/computer-architecture-5th-edition-a-quantitative-approach-by-john-l-hennessy-david-a-patterson\">Hennessy &amp; Patterson</a> and read about cache coherence and cache consistency.</p>\n    "},{"t":"What does the Java assert keyword do, and when should it be used?","l":"http://stackoverflow.com/questions/2758224/what-does-the-java-assert-keyword-do-and-when-should-it-be-used","q":"\n\n<p>What are some <strong>real life examples</strong> to understand the key role of assertions?</p>\n    ","a":"\n<p>Assertions (by way of the <strong>assert</strong> keyword) were added in Java 1.4.  They are used to verify the correctness of an invariant in the code.  They should never be triggered in production code, and are indicative of a bug or misuse of a code path.  They can be activated at run-time by way of the <code>-ea</code> option on the <code>java</code> command, but are not turned on by default.</p>\n\n<p>An example:</p>\n\n<pre><code>public Foo acquireFoo(int id) {\n  Foo result = null;\n  if (id &gt; 50) {\n    result = fooService.read(id);\n  } else {\n    result = new Foo(id);\n  }\n  assert result != null;\n\n  return result;\n}\n</code></pre>\n    "},{"t":"Should we @Override an interface's method implementation?","l":"http://stackoverflow.com/questions/212614/should-we-override-an-interfaces-method-implementation","q":"\n\n<p>Should a method that implements an interface method be annotated with <code>@Override</code>?</p>\n\n<p>The <a href=\"http://java.sun.com/javase/6/docs/api/java/lang/Override.html\">javadoc of the <code>Override</code> annotation</a> says: </p>\n\n<blockquote>\n  <p>Indicates that a method declaration is intended to override a method declaration in a superclass. If a method is annotated with this annotation type but does not override a superclass method, compilers are required to generate an error message.</p>\n</blockquote>\n\n<p>I don't think that an interface is technically a superclass. Or is it?</p>\n\n<p><kbd><a href=\"http://stackoverflow.com/revisions/212614/5\">Question Elaboration</a></kbd></p>\n    ","a":"\n<p>You should use @Override whenever possible.  It prevents simple mistakes from being made.  Example:</p>\n\n<pre><code>class C {\n    @Override\n    public boolean equals(SomeClass obj){\n        // code ...\n    }\n}\n</code></pre>\n\n<p>This doesn't compile because it doesn't properly override <a href=\"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#equals(java.lang.Object)\"><code>public boolean equals(Object obj)</code></a>.</p>\n\n<p>The same will go for methods that implement an interface (<strong>1.6 and above only</strong>) or override a Super class's method.</p>\n    "},{"t":"Why would you ever implement finalize()?","l":"http://stackoverflow.com/questions/158174/why-would-you-ever-implement-finalize","q":"\n\n<p>I've been reading through a lot of the rookie Java questions on finalize() and find it kind of bewildering that no one has really made it plain that finalize() is an unreliable way to clean up resources.  I saw someone comment that they use it to clean up Connections, which is really scary since the only way to come as close to a guarantee that a Connection is closed is to implement try (catch) finally.  </p>\n\n<p>I was not schooled in CS, but I have been programming in Java professionally for close to a decade now and I have never seen anyone implement finalize() in a production system ever.  This still doesn't mean that it doesn't have its uses, or that people I've worked with have been doing it right.</p>\n\n<p>So my question is, what use cases are there for implementing finalize() that cannot be handled more reliably via another process or syntax within the language?  </p>\n\n<p>Please provided specific scenarios or your experience, simply repeating a Java text book, or finalize's intended use is not enough, and is not the intent of this question.</p>\n    ","a":"\n<p>You could use it as a backstop for an object holding an external resource (socket, file, etc).  Implement a close() method and document that it needs to be called.</p>\n\n<p>Implement finalize() to do the close() processing if you detect it hasn't been done.  Maybe with something dumped to stderr to point out that you're cleaning up after a buggy caller.</p>\n\n<p>It provides extra safety in an exceptional/buggy situation.  Not every caller is going to do the correct try {} finally {} stuff every time.  Unfortunate, but true in most environments.</p>\n\n<p>I agree that it's rarely needed.  And as commenters point out, it comes with GC overhead.  Only use if you need that \"belt and suspenders\" safety in a long-running app.</p>\n    "},{"t":"Java tree data-structure?","l":"http://stackoverflow.com/questions/3522454/java-tree-data-structure","q":"\n\n<p>Is there a good available (standard Java) data structure to represent a tree in Java?</p>\n\n<p>Specifically I need to represent the following:</p>\n\n<ul>\n<li>The tree at any node can have an arbitrary number of children</li>\n<li>Each node (after the root) is just a String (whose children are also Strings)</li>\n<li>I need to be able to get all the children (some sort of list or array of Strings) given an input string representing a given node</li>\n</ul>\n\n<p>Is there an available structure for this or do I need to create my own (if so implementation suggestions would be great).</p>\n    ","a":"\n<p>Here: </p>\n\n<pre><code>public class Tree&lt;T&gt; {\n    private Node&lt;T&gt; root;\n\n    public Tree(T rootData) {\n        root = new Node&lt;T&gt;();\n        root.data = rootData;\n        root.children = new ArrayList&lt;Node&lt;T&gt;&gt;();\n    }\n\n    public static class Node&lt;T&gt; {\n        private T data;\n        private Node&lt;T&gt; parent;\n        private List&lt;Node&lt;T&gt;&gt; children;\n    }\n}\n</code></pre>\n\n<p>That is a basic tree structure that can be used for <code>String</code> or any other object.  It is fairly easy to implement simple trees to do what you need.</p>\n\n<p>All you need to add are methods for add to, removing from, traversing, and constructors.  The <code>Node</code> is the basic building block of the <code>Tree</code>.</p>\n    "},{"t":"Why can't I define a static method in a Java interface?","l":"http://stackoverflow.com/questions/512877/why-cant-i-define-a-static-method-in-a-java-interface","q":"\n\n<p>Here's the example:</p>\n\n<pre><code>public interface IXMLizable&lt;T&gt;\n{\n  static T newInstanceFromXML(Element e);\n  Element toXMLElement();\n}\n</code></pre>\n\n<p>Of course this won't work.  But why not?</p>\n\n<p>One of the possible issues would be, what happens when you call:</p>\n\n<pre><code>IXMLizable.newInstanceFromXML(e);\n</code></pre>\n\n<p>In this case, I think it should just call an empty method (i.e. {}).  All subclasses would be forced to implement the static method, so they'd all be fine when calling the static method.  So why isn't this possible?</p>\n\n<p><strong>EDIT:</strong> I guess I'm looking for answer that's deeper than \"because that's the way Java is\". </p>\n\n<p>Is there a particular technological reason why static methods can't be overwritten? That is, why did the designers of Java decide to make instance methods overrideable but not static methods?</p>\n\n<p><strong>EDIT:</strong> The problem with my design is I'm trying to use interfaces to enforce a coding convention.</p>\n\n<p>That is, the goal of the interface is twofold:</p>\n\n<ol>\n<li><p>I want the IXMLizable interface to allow me to convert classes that implement it to XML elements (using polymorphism, works fine).</p></li>\n<li><p>If someone wants to make a new instance of a class that implements the IXMLizable interface, they will always know that there will be a newInstanceFromXML(Element e) static constructor.</p></li>\n</ol>\n\n<p>Is there any other way to ensure this, other than just putting a comment in the interface?</p>\n\n<p><strong>EDIT:</strong> <em>As of Java 8, static methods are now allowed in interfaces.</em></p>\n    ","a":"\n<p>There are two questions here: </p>\n\n<ol>\n<li>Why can't interfaces contain static methods?</li>\n<li>Why can't static methods be overridden?</li>\n</ol>\n\n<p>There is no technical reason why an interface couldn't support static methods. This is <a href=\"http://stackoverflow.com/questions/129267/why-no-static-methods-in-interfaces-but-static-fields-and-inner-classes-ok/135722#135722\">summed up nicely by the poster</a> of the question you duplicated. One of the comments I made there emphasizes this point. In the end, I think this was just a choice by the language designers. This might actually be considered as a <a href=\"http://blogs.oracle.com/darcy/entry/project_coin\">small language change</a>. [Update: An <a href=\"http://docs.google.com/Doc?docid=dfkwr6vq_30dtg2z9d8&amp;hl=en\">official proposal</a> was made to add static methods to interfaces in Java 7,] and was initially slated for inclusion, but was later <a href=\"http://bugs.sun.com/view_bug.do?bug_id=4093687\">dropped due to unforeseen complications.</a></p>\n\n<p><em>Update:</em> In fact, in Java 8, <em>interfaces can have static methods,</em> as well as override-able methods with a default implementation. They still can't have instance fields though. These features are part of the lambda expression support, and you can read more about them in <a href=\"http://jcp.org/en/jsr/detail?id=335\">Part H of JSR 335.</a></p>\n\n<p>The answer to the second question is a little more complicated.</p>\n\n<p>Static methods are resolvable at compile time. Dynamic dispatch makes sense for instance methods, where the compiler can't determine the the concrete type of the object, and, thus, can't resolve the method to invoke. But invoking a static method requires a class, and since that class is known at compile time, dynamic dispatch is unnecessary.</p>\n\n<p>A little background on how instance methods work is necessary to understand what's going on here. I'm sure the actual implementation is quite different, but let me explain my notion of method dispatch, which models observed behavior accurately.</p>\n\n<p>Pretend that each class has a hash table that maps method signatures (name and parameter types) to an actual chunk of code to implement the method. When the virtual machine attempts to invoke a method on an instance, it gets the object's class, and looks up the requested signature in the class's table. If a method body is found, it is invoked. Otherwise, the parent class of the class is obtained, and the lookup is repeated there. This proceeds until the method is found, or there are no more parent classes—which results in a <code>NoSuchMethodError</code>.</p>\n\n<p>If a super class and a sub class both have an entry in their tables for the same method signature, the sub class's version is encountered first, and the super class's version is never used—this is an \"override\".</p>\n\n<p>Now, suppose we skip the object instance, and just start with a subclass. The resolution could proceed as above, giving you a sort of \"overridable\" static method. However, since the compiler is starting from a class known at compile time, rather than an object of unknown type passed in at runtime, the resolution can all happen at compile-time. There is no point in \"overriding\" a static method, since one can always specify the class that contains the desired version.</p>\n\n<hr>\n\n<p>Here's a little more material to address the recent edit to the question.</p>\n\n<p>It sounds like you want to effectively mandate a constructor-like method for each implementation of <code>IXMLizable</code>. Forget about trying to enforce this with an interface for a minute, and pretend that you have some classes that meet this requirement. How would you use it?</p>\n\n<pre><code>class Foo implements IXMLizable&lt;Foo&gt; {\n  public static Foo newInstanceFromXML(Element e) { ... }\n}\n\nFoo obj = Foo.newInstanceFromXML(e);\n</code></pre>\n\n<p>Since you have to explicitly name the concrete type <code>Foo</code> when \"constructing\" the new object, the compiler can verify that it does indeed have the necessary factory method. And if it doesn't, so what? If I can implement an <code>IXMLizable</code> that lacks the \"constructor\", and I create an instance and pass it to your code, it <em>is</em> an <code>IXMLizable</code> with all the necessary interface.</p>\n\n<p><em>Construction is part of the implementation,</em> not the interface. Any code that works successfully with the interface doesn't care about the constructor. Any code that cares about the constructor needs to know the concrete type anyway, and the interface can be ignored.</p>\n    "},{"t":"Can I catch multiple Java exceptions in the same catch clause?","l":"http://stackoverflow.com/questions/3495926/can-i-catch-multiple-java-exceptions-in-the-same-catch-clause","q":"\n\n<p>In Java, I want to do something like this:</p>\n\n<pre><code>try {\n    ...     \n} catch (IllegalArgumentException, SecurityException, \n       IllegalAccessException, NoSuchFieldException e) {\n   someCode();\n}\n</code></pre>\n\n<p>...instead of:</p>\n\n<pre><code>try {\n    ...     \n} catch (IllegalArgumentException e) {\n    someCode();\n} catch (SecurityException e) {\n    someCode();\n} catch (IllegalAccessException e) {\n    someCode();\n} catch (NoSuchFieldException e) {\n    someCode();\n}\n</code></pre>\n\n<p>Is there any way to do this?</p>\n    ","a":"\n<p><strong>UPDATE</strong> \nThis is possible <a href=\"http://docs.oracle.com/javase/7/docs/technotes/guides/language/catch-multiple.html\">since Java 7</a>\nThe syntax for try-catch block is:</p>\n\n<pre><code>try { \n ...\n} catch( IOException | SQLException ex ) { \n  logger.log(ex);\n  throw ex;\n}\n</code></pre>\n\n<p><em>Original answer follows:</em></p>\n\n<p><em>No.</em></p>\n\n<p><em>That is proposed for <a href=\"http://blogs.oracle.com/darcy/entry/project_coin_multi_catch_rethrow\">the next version of Java</a>, but currently that's not possible. \nIf all the exceptions belong to the same class hierarchy, you can catch that, otherwise you'll have to catch them all.</em> </p>\n    "},{"t":"Avoid synchronized(this) in Java?","l":"http://stackoverflow.com/questions/442564/avoid-synchronizedthis-in-java","q":"\n\n<p>Whenever a question pops up on SO about Java synchronization, some people are very eager to point out that <code>synchronized(this)</code> should be avoided. Instead, they claim, a lock on a private reference is to be preferred.</p>\n\n<p>Some of the given reasons are:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/416183/in-java-critical-sections-what-should-i-synchronize-on#416198\">some <em>evil code</em> may steal your lock</a> (very popular this one, also has an \"accidentally\" variant)</li>\n<li><a href=\"http://stackoverflow.com/questions/309631/what-cases-require-synchronized-method-access-in-java#309677\">all synchronized methods within the same class use the exact same lock, which reduces throughput</a></li>\n<li><a href=\"http://stackoverflow.com/questions/439302/allowing-a-method-to-lock-its-parent-object-in-java#439317\">you are (unnecessarily) exposing too much information</a></li>\n</ul>\n\n<p>Other people, including me, argue that <code>synchronized(this)</code> is an idiom that is used a lot (also in Java libraries), is safe and well understood. It should not be avoided because you have a bug and you don't have a clue of what is going on in your multithreaded program. In other words: if it is applicable, then use it.</p>\n\n<p>I am interested in seeing some real-world examples (no foobar stuff) where avoiding a lock on <code>this</code> is preferable when <code>synchronized(this)</code> would also do the job.</p>\n\n<p>Therefore: <strong>should you always avoid <code>synchronized(this)</code> and replace it with a lock on a private reference?</strong>  </p>\n\n<p></p><hr><p></p>\n\n<p>Some further info (updated as answers are given):</p>\n\n<ul>\n<li>we are talking about instance synchronization</li>\n<li>both implicit (synchronized methods) and explicit form of <code>synchronized(this)</code> are considered</li>\n<li>if you quote Bloch or other authorities on the subject, don't leave out the parts you don't like (e.g. Effective Java, item on Thread Safety: \"Typically it is the lock on the instance itself, but there are exceptions.\")</li>\n<li>if you need granularity in your locking other than <code>synchronized(this)</code> provides, then <code>synchronized(this)</code> is not applicable so that's not the issue</li>\n</ul>\n    ","a":"\n<p>I'll cover each point separately.</p>\n\n<ol>\n<li><blockquote>\n  <p>Some evil code may steal your lock (very popular this one, also has an\n  \"accidentally\" variant)</p>\n</blockquote>\n\n<p>I'm more worried about <em>accidentally</em>.  What it amounts to is that this use of <code>this</code> is part of your class' exposed interface, and should be documented.  Sometimes the ability of other code to use your lock is desired.  This is true of things like <code>Collections.synchronizedMap</code> (see the javadoc).</p></li>\n2. \n</ol>\n\n<blockquote>\n  <p>All synchronized methods within the same class use the exact same\n  lock, which reduces throughput</p>\n</blockquote>\n\n<p>This is overly simplistic thinking; just getting rid of <code>synchronized(this)</code> won't solve the problem.  Proper synchronization for throughput will take more thought.</p>\n\n<ol start=\"3\">\n<li><blockquote>\n  <p>You are (unnecessarily) exposing too much information</p>\n</blockquote>\n\n<p>This is a variant of #1.  Use of <code>synchronized(this)</code> is part of your interface.  If you don't want/need this exposed, don't do it.</p></li>\n</ol>\n    "},{"t":"read/write to Windows Registry using Java","l":"http://stackoverflow.com/questions/62289/read-write-to-windows-registry-using-java","q":"\n\n<p>How is it possible to read/write to windows registry using java?</p>\n    ","a":"\n<p>I know this question is old, but it is the first search result on google to \"java read/write to registry\".  Recently I found this amazing piece of code which:</p>\n\n<ul>\n<li>Can read/write to ANY part of the registry. </li>\n<li>DOES NOT USE JNI.</li>\n<li>DOES NOT USE ANY 3rd PARTY/EXTERNAL APPLICATIONS TO WORK.</li>\n<li>DOES NOT USE THE WINDOWS API (directly)</li>\n</ul>\n\n<p>This is pure, Java code.</p>\n\n<p>It uses reflection to work, by actually accessing the private methods in the java.util.prefs.Preferences class. The internals of this class are complicated, but the class itself is very easy to use.</p>\n\n<p>For example, the following code obtains the exact windows distribution <strong>from the registry</strong>:</p>\n\n<pre><code>String value = WinRegistry.readString (\n    WinRegistry.HKEY_LOCAL_MACHINE,                             //HKEY\n   \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\",           //Key\n   \"ProductName\");                                              //ValueName\n    System.out.println(\"Windows Distribution = \" + value);          \n</code></pre>\n\n<p>Here is the original class. Just copy paste it and it should work:</p>\n\n<pre><code>import java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.prefs.Preferences;\n\npublic class WinRegistry {\n  public static final int HKEY_CURRENT_USER = 0x80000001;\n  public static final int HKEY_LOCAL_MACHINE = 0x80000002;\n  public static final int REG_SUCCESS = 0;\n  public static final int REG_NOTFOUND = 2;\n  public static final int REG_ACCESSDENIED = 5;\n\n  private static final int KEY_ALL_ACCESS = 0xf003f;\n  private static final int KEY_READ = 0x20019;\n  private static Preferences userRoot = Preferences.userRoot();\n  private static Preferences systemRoot = Preferences.systemRoot();\n  private static Class&lt;? extends Preferences&gt; userClass = userRoot.getClass();\n  private static Method regOpenKey = null;\n  private static Method regCloseKey = null;\n  private static Method regQueryValueEx = null;\n  private static Method regEnumValue = null;\n  private static Method regQueryInfoKey = null;\n  private static Method regEnumKeyEx = null;\n  private static Method regCreateKeyEx = null;\n  private static Method regSetValueEx = null;\n  private static Method regDeleteKey = null;\n  private static Method regDeleteValue = null;\n\n  static {\n    try {\n      regOpenKey = userClass.getDeclaredMethod(\"WindowsRegOpenKey\",\n          new Class[] { int.class, byte[].class, int.class });\n      regOpenKey.setAccessible(true);\n      regCloseKey = userClass.getDeclaredMethod(\"WindowsRegCloseKey\",\n          new Class[] { int.class });\n      regCloseKey.setAccessible(true);\n      regQueryValueEx = userClass.getDeclaredMethod(\"WindowsRegQueryValueEx\",\n          new Class[] { int.class, byte[].class });\n      regQueryValueEx.setAccessible(true);\n      regEnumValue = userClass.getDeclaredMethod(\"WindowsRegEnumValue\",\n          new Class[] { int.class, int.class, int.class });\n      regEnumValue.setAccessible(true);\n      regQueryInfoKey = userClass.getDeclaredMethod(\"WindowsRegQueryInfoKey1\",\n          new Class[] { int.class });\n      regQueryInfoKey.setAccessible(true);\n      regEnumKeyEx = userClass.getDeclaredMethod(  \n          \"WindowsRegEnumKeyEx\", new Class[] { int.class, int.class,  \n              int.class });  \n      regEnumKeyEx.setAccessible(true);\n      regCreateKeyEx = userClass.getDeclaredMethod(  \n          \"WindowsRegCreateKeyEx\", new Class[] { int.class,  \n              byte[].class });  \n      regCreateKeyEx.setAccessible(true);  \n      regSetValueEx = userClass.getDeclaredMethod(  \n          \"WindowsRegSetValueEx\", new Class[] { int.class,  \n              byte[].class, byte[].class });  \n      regSetValueEx.setAccessible(true); \n      regDeleteValue = userClass.getDeclaredMethod(  \n          \"WindowsRegDeleteValue\", new Class[] { int.class,  \n              byte[].class });  \n      regDeleteValue.setAccessible(true); \n      regDeleteKey = userClass.getDeclaredMethod(  \n          \"WindowsRegDeleteKey\", new Class[] { int.class,  \n              byte[].class });  \n      regDeleteKey.setAccessible(true); \n    }\n    catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  private WinRegistry() {  }\n\n  /**\n   * Read a value from key and value name\n   * @param hkey   HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n   * @param key\n   * @param valueName\n   * @return the value\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static String readString(int hkey, String key, String valueName) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      return readString(systemRoot, hkey, key, valueName);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      return readString(userRoot, hkey, key, valueName);\n    }\n    else {\n      throw new IllegalArgumentException(\"hkey=\" + hkey);\n    }\n  }\n\n  /**\n   * Read value(s) and value name(s) form given key \n   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n   * @param key\n   * @return the value name(s) plus the value(s)\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static Map&lt;String, String&gt; readStringValues(int hkey, String key) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      return readStringValues(systemRoot, hkey, key);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      return readStringValues(userRoot, hkey, key);\n    }\n    else {\n      throw new IllegalArgumentException(\"hkey=\" + hkey);\n    }\n  }\n\n  /**\n   * Read the value name(s) from a given key\n   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n   * @param key\n   * @return the value name(s)\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static List&lt;String&gt; readStringSubKeys(int hkey, String key) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      return readStringSubKeys(systemRoot, hkey, key);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      return readStringSubKeys(userRoot, hkey, key);\n    }\n    else {\n      throw new IllegalArgumentException(\"hkey=\" + hkey);\n    }\n  }\n\n  /**\n   * Create a key\n   * @param hkey  HKEY_CURRENT_USER/HKEY_LOCAL_MACHINE\n   * @param key\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static void createKey(int hkey, String key) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int [] ret;\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      ret = createKey(systemRoot, hkey, key);\n      regCloseKey.invoke(systemRoot, new Object[] { new Integer(ret[0]) });\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      ret = createKey(userRoot, hkey, key);\n      regCloseKey.invoke(userRoot, new Object[] { new Integer(ret[0]) });\n    }\n    else {\n      throw new IllegalArgumentException(\"hkey=\" + hkey);\n    }\n    if (ret[1] != REG_SUCCESS) {\n      throw new IllegalArgumentException(\"rc=\" + ret[1] + \"  key=\" + key);\n    }\n  }\n\n  /**\n   * Write a value in a given key/value name\n   * @param hkey\n   * @param key\n   * @param valueName\n   * @param value\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static void writeStringValue\n    (int hkey, String key, String valueName, String value) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      writeStringValue(systemRoot, hkey, key, valueName, value);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      writeStringValue(userRoot, hkey, key, valueName, value);\n    }\n    else {\n      throw new IllegalArgumentException(\"hkey=\" + hkey);\n    }\n  }\n\n  /**\n   * Delete a given key\n   * @param hkey\n   * @param key\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static void deleteKey(int hkey, String key) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int rc = -1;\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      rc = deleteKey(systemRoot, hkey, key);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      rc = deleteKey(userRoot, hkey, key);\n    }\n    if (rc != REG_SUCCESS) {\n      throw new IllegalArgumentException(\"rc=\" + rc + \"  key=\" + key);\n    }\n  }\n\n  /**\n   * delete a value from a given key/value name\n   * @param hkey\n   * @param key\n   * @param value\n   * @throws IllegalArgumentException\n   * @throws IllegalAccessException\n   * @throws InvocationTargetException\n   */\n  public static void deleteValue(int hkey, String key, String value) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int rc = -1;\n    if (hkey == HKEY_LOCAL_MACHINE) {\n      rc = deleteValue(systemRoot, hkey, key, value);\n    }\n    else if (hkey == HKEY_CURRENT_USER) {\n      rc = deleteValue(userRoot, hkey, key, value);\n    }\n    if (rc != REG_SUCCESS) {\n      throw new IllegalArgumentException(\"rc=\" + rc + \"  key=\" + key + \"  value=\" + value);\n    }\n  }\n\n  // =====================\n\n  private static int deleteValue\n    (Preferences root, int hkey, String key, String value)\n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n        new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });\n    if (handles[1] != REG_SUCCESS) {\n      return handles[1];  // can be REG_NOTFOUND, REG_ACCESSDENIED\n    }\n    int rc =((Integer) regDeleteValue.invoke(root,  \n        new Object[] { \n          new Integer(handles[0]), toCstr(value) \n          })).intValue();\n    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n    return rc;\n  }\n\n  private static int deleteKey(Preferences root, int hkey, String key) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int rc =((Integer) regDeleteKey.invoke(root,  \n        new Object[] { new Integer(hkey), toCstr(key) })).intValue();\n    return rc;  // can REG_NOTFOUND, REG_ACCESSDENIED, REG_SUCCESS\n  }\n\n  private static String readString(Preferences root, int hkey, String key, String value)\n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n        new Integer(hkey), toCstr(key), new Integer(KEY_READ) });\n    if (handles[1] != REG_SUCCESS) {\n      return null; \n    }\n    byte[] valb = (byte[]) regQueryValueEx.invoke(root, new Object[] {\n        new Integer(handles[0]), toCstr(value) });\n    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n    return (valb != null ? new String(valb).trim() : null);\n  }\n\n  private static Map&lt;String,String&gt; readStringValues\n    (Preferences root, int hkey, String key)\n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    HashMap&lt;String, String&gt; results = new HashMap&lt;String,String&gt;();\n    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n        new Integer(hkey), toCstr(key), new Integer(KEY_READ) });\n    if (handles[1] != REG_SUCCESS) {\n      return null;\n    }\n    int[] info = (int[]) regQueryInfoKey.invoke(root,\n        new Object[] { new Integer(handles[0]) });\n\n    int count = info[0]; // count  \n    int maxlen = info[3]; // value length max\n    for(int index=0; index&lt;count; index++)  {\n      byte[] name = (byte[]) regEnumValue.invoke(root, new Object[] {\n          new Integer\n            (handles[0]), new Integer(index), new Integer(maxlen + 1)});\n      String value = readString(hkey, key, new String(name));\n      results.put(new String(name).trim(), value);\n    }\n    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n    return results;\n  }\n\n  private static List&lt;String&gt; readStringSubKeys\n    (Preferences root, int hkey, String key)\n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    List&lt;String&gt; results = new ArrayList&lt;String&gt;();\n    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n        new Integer(hkey), toCstr(key), new Integer(KEY_READ) \n        });\n    if (handles[1] != REG_SUCCESS) {\n      return null;\n    }\n    int[] info = (int[]) regQueryInfoKey.invoke(root,\n        new Object[] { new Integer(handles[0]) });\n\n    int count  = info[0]; // Fix: info[2] was being used here with wrong results. Suggested by davenpcj, confirmed by Petrucio\n    int maxlen = info[3]; // value length max\n    for(int index=0; index&lt;count; index++)  {\n      byte[] name = (byte[]) regEnumKeyEx.invoke(root, new Object[] {\n          new Integer\n            (handles[0]), new Integer(index), new Integer(maxlen + 1)\n          });\n      results.add(new String(name).trim());\n    }\n    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n    return results;\n  }\n\n  private static int [] createKey(Preferences root, int hkey, String key)\n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    return  (int[]) regCreateKeyEx.invoke(root,\n        new Object[] { new Integer(hkey), toCstr(key) });\n  }\n\n  private static void writeStringValue \n    (Preferences root, int hkey, String key, String valueName, String value) \n    throws IllegalArgumentException, IllegalAccessException,\n    InvocationTargetException \n  {\n    int[] handles = (int[]) regOpenKey.invoke(root, new Object[] {\n        new Integer(hkey), toCstr(key), new Integer(KEY_ALL_ACCESS) });\n\n    regSetValueEx.invoke(root,  \n        new Object[] { \n          new Integer(handles[0]), toCstr(valueName), toCstr(value) \n          }); \n    regCloseKey.invoke(root, new Object[] { new Integer(handles[0]) });\n  }\n\n  // utility\n  private static byte[] toCstr(String str) {\n    byte[] result = new byte[str.length() + 1];\n\n    for (int i = 0; i &lt; str.length(); i++) {\n      result[i] = (byte) str.charAt(i);\n    }\n    result[str.length()] = 0;\n    return result;\n  }\n}\n</code></pre>\n\n<p>I was unable to find and give credit to the original author of this code. If you find any details, please add a comment and I will add it here.</p>\n    "},{"t":"Any good ORM tools for Android development? [closed]","l":"http://stackoverflow.com/questions/371538/any-good-orm-tools-for-android-development","q":"\n\n<p>Anyone working on the Android ('gPhone') have or know of a place where I can find a good ORM tool for it? The code is written in Java, and the database is SQLite. What I would like to find is a tool that given the object definition, can auto-generate the tables and the CRUD functions (that would be awesome), or, barring that, a tool that can take the table definition, the object definition, and auto-generate the CRUD functionality. The rub is that all of this must happen within the Android framework, which has its own conventions as to how database access works.</p>\n    ","a":"\n<p>This thread might give you some to explore:  <a href=\"http://stackoverflow.com/questions/296587/light-weight-alternative-to-hibernate\">Lightweight Alternatives to Hibernate</a></p>\n    "},{"t":"Why doesn't RecyclerView have onItemClickListener()? And how RecyclerView is different from Listview?","l":"http://stackoverflow.com/questions/24885223/why-doesnt-recyclerview-have-onitemclicklistener-and-how-recyclerview-is-dif","q":"\n\n<p>I don't know whether I am asking the right question. I was exploring <code>RecyclerView</code> and I was surprised to see that <code>RecyclerView</code> does not have <code>onItemClickListener()</code>. Because <code>RecyclerView</code> extends     </p>\n\n<blockquote>\n  <p><strong>android.view.ViewGroup</strong></p>\n</blockquote>\n\n<p>and <code>ListView</code> extends </p>\n\n<blockquote>\n  <p><strong>android.widget.AbsListView</strong></p>\n</blockquote>\n\n<p>.  However I solved my problem by writing <code>onClick</code> in my <code>RecyclerView.Adapter</code>:</p>\n\n<pre><code>public static class ViewHolder extends RecyclerView.ViewHolder implements OnClickListener {\n\n    public TextView txtViewTitle;\n    public ImageView imgViewIcon;\n\n    public ViewHolder(View itemLayoutView) {\n        super(itemLayoutView);\n        txtViewTitle = (TextView) itemLayoutView.findViewById(R.id.item_title);\n        imgViewIcon = (ImageView) itemLayoutView.findViewById(R.id.item_icon);\n    }\n\n    @Override\n    public void onClick(View v) {\n\n    }\n}\n</code></pre>\n\n<p>But still I want to know why Google removed <code>onItemClickListener()</code>? </p>\n\n<p>Is there a performance issue or something else?</p>\n    ","a":"\n<p>Since the introduction of <code>ListView</code>, <code>onItemClickListener</code> has been problematic. The moment you have a click listener for any of the internal elements the callback would not be triggered but it wasn't notified or well documented (if at all) so there was a lot of confusion and SO questions about it.</p>\n\n<p>Given that <code>RecyclerView</code> takes it a step further and doesn't have a concept of a row/column, but rather an arbitrarily laid out amount of children, they have delegated the onClick to each one of them, or to programmer implementation.</p>\n\n<p>Think of <code>Recyclerview</code> not as a <code>ListView</code> 1:1 replacement but rather as a more flexible component for complex use cases. And as you say, your solution is what google expected of you. Now you have an adapter who can delegate onClick to an interface passed on the constructor, which is the correct pattern for both <code>ListView</code> and <code>Recyclerview</code>.</p>\n\n<pre><code>public static class ViewHolder extends RecyclerView.ViewHolder implements OnClickListener {\n\n    public TextView txtViewTitle;\n    public ImageView imgViewIcon;\n    public IMyViewHolderClicks mListener;\n\n\n    public ViewHolder(View itemLayoutView, IMyViewHolderClicks listener) {\n        super(itemLayoutView);\n        mListener = listener;\n        txtViewTitle = (TextView) itemLayoutView.findViewById(R.id.item_title);\n        imgViewIcon = (ImageView) itemLayoutView.findViewById(R.id.item_icon);\n        imgViewIcon.setOnClickListener(this);\n        itemLayoutView.setOnClickListener(this);\n    }\n\n    @Override\n    public void onClick(View v) {\n        if (v instanceof Imageview){\n           mListener.onTomato((ImageView)v)\n        } else {\n           mListener.onPotato(v);\n        }\n    }\n\n    public static interface IMyViewHolderClicks {\n        public void onPotato(View caller);\n        public void onTomato(ImageView callerImage);\n    }\n\n}\n</code></pre>\n\n<p>and then on your adapter</p>\n\n<pre><code>public class MyAdapter extends RecyclerView.Adapter&lt;MyAdapter.ViewHolder&gt; {\n\n   String[] mDataset = { \"Data\" };\n\n   @Override\n   public MyAdapter.ViewHolder onCreateViewHolder(ViewGroup parent,\n                                                  int viewType) {\n       View v = LayoutInflater.from(parent.getContext())\n                    .inflate(R.layout.my_layout, parent, false);\n\n       MyAdapter.ViewHolder vh = new ViewHolder(v, new MyAdapter.ViewHolder.IMyViewHolderClicks() { \n           public void onPotato(View caller) { Log.d(\"Poh-tah-tos\"); };\n           public void onTomato(ImageView callerImage) {&nbsp;Log.d(\"To-m8-tohs\"); }\n        });\n        return vh;\n    }\n\n    // Replace the contents of a view (invoked by the layout manager) \n    @Override \n    public void onBindViewHolder(ViewHolder holder, int position) {\n        // Get element from your dataset at this position \n        // Replace the contents of the view with that element \n        // Clear the ones that won't be used\n        holder.txtViewTitle.setText(mDataset[position]);\n\n    } \n\n    // Return the size of your dataset (invoked by the layout manager) \n    @Override \n    public int getItemCount() { \n        return mDataset.length;\n    } \n\n  ...\n</code></pre>\n\n<p>Now look into that last piece of code: <code>onCreateViewHolder(ViewGroup parent, int viewType)</code> the signature already suggest different view types. For each one of them you'll require a different viewholder too, and subsequently each one of them can have a different set of clicks. Or you can just create a generic viewholder that takes any view and one <code>onClickListener</code> and applies accordingly. Or delegate up one level to the orchestrator so several fragments/activities have the same list with different click behaviour. Again, all flexibility is on your side.</p>\n\n<p>It is a really needed component and fairly close to what our internal implementations and improvements to <code>ListView</code> were until now. It's good that Google finally acknowledges it.</p>\n    "},{"t":"Remove HTML tags from a String","l":"http://stackoverflow.com/questions/240546/remove-html-tags-from-a-string","q":"\n\n<p>Is there a good way to remove HTML from a Java string?  A simple regex like </p>\n\n<pre><code> replaceAll(\"\\\\&lt;.*?&gt;\",\"\")\n</code></pre>\n\n<p>will work, but things like</p>\n\n<pre><code>&amp;amp;\n</code></pre>\n\n<p>wont be converted correctly and non-HTML between the two angle brackets will be removed (ie the .*? in the regex will disappear).  </p>\n    ","a":"\n<p>This is actually dead simple with <a href=\"http://jsoup.org\">Jsoup</a>.</p>\n\n<pre><code>public static String html2text(String html) {\n    return Jsoup.parse(html).text();\n}\n</code></pre>\n    "},{"t":"Connection pooling options with JDBC: DBCP vs C3P0 [closed]","l":"http://stackoverflow.com/questions/520585/connection-pooling-options-with-jdbc-dbcp-vs-c3p0","q":"\n\n<p>What is the best connection pooling library available for Java/JDBC?</p>\n\n<p>I'm considering the 2 main candidates (free / open-source): </p>\n\n<ul>\n<li>Apache DBCP - <a href=\"http://commons.apache.org/dbcp/\">http://commons.apache.org/dbcp/</a></li>\n<li>C3P0 - <a href=\"http://sourceforge.net/projects/c3p0\">http://sourceforge.net/projects/c3p0</a></li>\n</ul>\n\n<p>I've read a lot about them in blogs and other forums but could not reach a decision.</p>\n\n<p>Are there any relevant alternatives to these two?</p>\n    ","a":"\n<p>DBCP is out of date and not production grade. Some time back we conducted an in-house analysis of the two, creating a test fixture which generated load and concurrency against the two to assess their suitability under real life conditions. </p>\n\n<p>DBCP consistently generated exceptions into our test application and struggled to reach levels of performance which C3P0 was more than capable of handling without any exceptions. </p>\n\n<p>C3P0 also robustly handled DB disconnects and transparent reconnects on resume whereas DBCP never recovered connections if the link was taken out from beneath it. Worse still DBCP was returning Connection objects to the application for which the underlying transport had broken. </p>\n\n<p>Since then we have used C3P0 in 4 major heavy-load consumer web apps and have never looked back.</p>\n\n<p><strong>UPDATE:</strong> It turns out that after many years of sitting on a shelf, the Apache Commons folk have taken <a href=\"http://commons.apache.org/dbcp/\">DBCP out of dormancy</a> and it is now, once again, an actively developed project. Thus my original post may be out of date. </p>\n\n<p>That being said, I haven't yet experienced this new upgraded library's performance, nor heard of it being de-facto in any recent app framework, yet.</p>\n    "},{"t":"How can I increment a date by one day in Java?","l":"http://stackoverflow.com/questions/428918/how-can-i-increment-a-date-by-one-day-in-java","q":"\n\n<p>I am getting date in the format as yyyy-mm-dd. I need to increment this by one day. How can I do this?</p>\n    ","a":"\n<p>Something like this should do the trick:</p>\n\n<pre><code>String dt = \"2008-01-01\";  // Start date\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\nCalendar c = Calendar.getInstance();\nc.setTime(sdf.parse(dt));\nc.add(Calendar.DATE, 1);  // number of days to add\ndt = sdf.format(c.getTime());  // dt is now the new date\n</code></pre>\n    "},{"t":"How do I count the number of occurrences of a char in a String?","l":"http://stackoverflow.com/questions/275944/how-do-i-count-the-number-of-occurrences-of-a-char-in-a-string","q":"\n\n<p>I have the string </p>\n\n<pre><code>a.b.c.d\n</code></pre>\n\n<p>I want to count the occurrences of '.' in an idiomatic way, preferably a one-liner.</p>\n\n<p>(Previously I had expressed this constraint as \"without a loop\", in case you're wondering why everyone's trying to answer without using a loop).</p>\n    ","a":"\n<p>My 'idiomatic one-liner' for this is:</p>\n\n<pre><code>int count = StringUtils.countMatches(\"a.b.c.d\", \".\");\n</code></pre>\n\n<p>Why write it yourself when it's already in <a href=\"http://commons.apache.org/lang/\">commons lang</a>?</p>\n\n<p>Spring Framework's oneliner for this is:</p>\n\n<pre><code>int occurance = StringUtils.countOccurrencesOf(\"a.b.c.d\", \".\");\n</code></pre>\n    "},{"t":"What is the difference between @Inject and @Autowired in Spring Framework? Which one to use under what condition?","l":"http://stackoverflow.com/questions/7142622/what-is-the-difference-between-inject-and-autowired-in-spring-framework-which","q":"\n\n<p>I am going through some blogs on SpringSource and in one of the blog author is using <code>@Inject</code> and I suppose he can also use <code>@Autowired</code></p>\n\n<p>Here is the piece of code:</p>\n\n<p><code>@Inject private CustomerOrderService customerOrderService;</code></p>\n\n<p>I am not sure about the difference between <code>@Inject</code> and <code>@Autowired</code> and would appreciate if someone can explain the difference and which one to use under what situation?</p>\n    ","a":"\n<p>Assuming here you're referring to the <a href=\"http://download.oracle.com/javaee/6/api/javax/inject/Inject.html\"><code>javax.inject.Inject</code></a> annotations. <code>@Inject</code> is part of the Java CDI standard introduced in Java EE 6 (JSR-299), <a href=\"http://www.oracle.com/technetwork/articles/javaee/javaee6overview-141808.html\">read more</a>. Spring has chosen to support using <code>@Inject</code> synonymously with their own <code>@Autowired</code> annotation.</p>\n\n<p>So, to answer your question, <code>@Autowired</code> is Spring's own (legacy) annotation. <code>@Inject</code> is part of a new Java technology called CDI that defines a standard for dependency injection similar to Spring. In a Spring application, the two annotations works the same way as Spring has decided to support some JSR-299 annotations in addition to their own.</p>\n    "},{"t":"Change private static final field using Java reflection","l":"http://stackoverflow.com/questions/3301635/change-private-static-final-field-using-java-reflection","q":"\n\n<p>I have a class with a <code>private static final</code> field that, unfortunately, I need to change at run-time.</p>\n\n<p>Using reflection I get this error: <code>java.lang.IllegalAccessException: Can not set static final boolean field</code></p>\n\n<p>Is there any way to change the value?</p>\n\n<pre><code>Field hack = WarpTransform2D.class.getDeclaredField(\"USE_HACK\");\nhack.setAccessible(true);\nhack.set(null, true);\n</code></pre>\n    ","a":"\n<p>Assuming no <code>SecurityManager</code> is preventing you from doing this, you can use <code>setAccessible</code> to get around <code>private</code> and resetting the modifier to get rid of <code>final</code>, and actually modify a <code>private static final</code> field.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>import java.lang.reflect.*;\n\npublic class EverythingIsTrue {\n   static void setFinalStatic(Field field, Object newValue) throws Exception {\n      field.setAccessible(true);\n\n      Field modifiersField = Field.class.getDeclaredField(\"modifiers\");\n      modifiersField.setAccessible(true);\n      modifiersField.setInt(field, field.getModifiers() &amp; ~Modifier.FINAL);\n\n      field.set(null, newValue);\n   }\n   public static void main(String args[]) throws Exception {      \n      setFinalStatic(Boolean.class.getField(\"FALSE\"), true);\n\n      System.out.format(\"Everything is %s\", false); // \"Everything is true\"\n   }\n}\n</code></pre>\n\n<p>Assuming no <code>SecurityException</code> is thrown, the above code prints <code>\"Everything is true\"</code>.</p>\n\n<p>What's actually done here is as follows:</p>\n\n<ul>\n<li>The primitive <code>boolean</code> values <code>true</code> and <code>false</code> in <code>main</code> are autoboxed to reference type <code>Boolean</code> \"constants\" <code>Boolean.TRUE</code> and <code>Boolean.FALSE</code></li>\n<li>Reflection is used to change the <a href=\"http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/lang/Boolean.html#FALSE\"><code>public static final Boolean.FALSE</code></a> to refer to the <code>Boolean</code> referred to by <code>Boolean.TRUE</code></li>\n<li>As a result, subsequently whenever a <code>false</code> is autoboxed to <code>Boolean.FALSE</code>, it refers to the same <code>Boolean</code> as the one refered to by <code>Boolean.TRUE</code></li>\n<li>Everything that was <code>\"false\"</code> now is <code>\"true\"</code></li>\n</ul>\n\n<h3>Related questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2474017/using-reflection-to-change-static-final-file-separatorchar-for-unit-testing/2474242#2474242\">Using reflection to change <code>static final File.separatorChar</code> for unit testing</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2481862/how-to-limit-setaccessible-to-only-legitimate-uses\">How to limit setAccessible to only “legitimate” uses?</a>\n<ul>\n<li>Has examples of messing with <code>Integer</code>'s cache, mutating a <code>String</code>, etc</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<h3>Caveats</h3>\n\n<p>Extreme care should be taken whenever you do something like this. It may not work because a <code>SecurityManager</code> may be present, but even if it doesn't, depending on usage pattern, it may or may not work.</p>\n\n<blockquote>\n  <p><a href=\"http://java.sun.com/docs/books/jls/third_edition/html/memory.html#17.5.3\">JLS 17.5.3 Subsequent Modification of Final Fields</a></p>\n  \n  <p>In some cases, such as deserialization, the system will need to change the <code>final</code> fields of an object after construction. <code>final</code> fields can be changed via reflection and other implementation dependent means. The only pattern in which this has reasonable semantics is one in which an object is constructed and then the <code>final</code> fields of the object are updated. The object should not be made visible to other threads, nor should the <code>final</code> fields be read, until all updates to the <code>final</code> fields of the object are complete. Freezes of a <code>final</code> field occur both at the end of the constructor in which the <code>final</code> field is set, and immediately after each modification of a <code>final</code> field via reflection or other special mechanism.</p>\n  \n  <p>Even then, there are a number of complications. If a <code>final</code> field is initialized to a compile-time constant in the field declaration, changes to the <code>final</code> field may not be observed, since uses of that <code>final</code> field are replaced at compile time with the compile-time constant.</p>\n  \n  <p>Another problem is that the specification allows aggressive optimization of <code>final</code> fields. Within a thread, it is permissible to reorder reads of a <code>final</code> field with those modifications of a final field that do not take place in the constructor.</p>\n</blockquote>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/specs/jls/se7/html/jls-15.html#jls-15.28\">JLS 15.28 Constant Expression</a>\n<ul>\n<li>It's unlikely that this technique works with a primitive <code>private static final boolean</code>, because it's inlineable as a compile-time constant and thus the \"new\" value may not be observable</li>\n</ul></li>\n</ul>\n\n<hr>\n\n<h3>Appendix: On the bitwise manipulation</h3>\n\n<p>Essentially,</p>\n\n<pre><code>field.getModifiers() &amp; ~Modifier.FINAL\n</code></pre>\n\n<p>turns off the bit corresponding to <code>Modifier.FINAL</code> from <code>field.getModifiers()</code>. <code>&amp;</code> is the bitwise-and, and <code>~</code> is the bitwise-complement.</p>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Bitwise_operations\">Wikipedia/Bitwise operation</a></li>\n</ul>\n    "},{"t":"Why doesn't Java allow overriding of static methods?","l":"http://stackoverflow.com/questions/2223386/why-doesnt-java-allow-overriding-of-static-methods","q":"\n\n<p>Why is it not possible to override static methods?</p>\n\n<p>If possible, please use an example.</p>\n    ","a":"\n<p>Overriding depends on having an instance of a class. The point of polymorphism is that you can subclass a class and the objects implementing those subclasses will have different behaviors for the same methods defined in the superclass (and overridden in the subclasses). A static method is not associated with any instance of a class so the concept is not applicable.</p>\n\n<p>There were two considerations driving Java's design that impacted this. One was a concern with performance: there had been a lot of criticism of Smalltalk about it being too slow (garbage collection and polymorphic calls being part of that) and Java's creators were determined to avoid that. Another was the decision that the target audience for Java was C++ developers. Making static methods work the way they do had the benefit of familiarity for C++ programmers and was also very fast, because there's no need to wait until runtime to figure out which method to call.</p>\n    "},{"t":"What is the most appropriate way to store user settings in Android application","l":"http://stackoverflow.com/questions/785973/what-is-the-most-appropriate-way-to-store-user-settings-in-android-application","q":"\n\n<p>I am creating an application which connects to the server using username/password and I would like to enable the option \"Save password\" so the user wouldn't have to type the password each time the application starts.</p>\n\n<p>I was trying to do it with Shared Preferences but am not sure if this is the best solution.</p>\n\n<p>I would appreciate any suggestion on how to store user values/settings in Android application.</p>\n    ","a":"\n<p>In general SharedPreferences are your best bet for storing preferences, so in general I'd recommend that approach for saving application and user settings.</p>\n\n<p>The only area of concern here is what you're saving. Passwords are always a tricky thing to store, and I'd be particularly wary of storing them as clear text. The Android architecture is such that your application's SharedPreferences are sandboxed to prevent other applications from being able to access the values so there's some security there, but physical access to a phone could potentially allow access to the values.</p>\n\n<p>If possible I'd consider modifying the server to use a negotiated token for providing access, something like <a href=\"http://code.google.com/p/oauth/\">OAuth</a>. Alternatively you may need to construct some sort of cryptographic store, though that's non-trivial. At the very least, make sure you're encrypting the password before writing it to disk.</p>\n    "},{"t":"Check orientation on Android phone","l":"http://stackoverflow.com/questions/2795833/check-orientation-on-android-phone","q":"\n\n<p>How can I check if the Android phone is in Landscape or Portrait? </p>\n    ","a":"\n<p>The current configuration, as used to determine which resources to retrieve etc, as available from the Resources' Configuration object as:</p>\n\n<pre><code>getResources().getConfiguration().orientation\n</code></pre>\n\n<p><a href=\"http://developer.android.com/reference/android/content/res/Configuration.html#orientation\">http://developer.android.com/reference/android/content/res/Configuration.html#orientation</a></p>\n    "},{"t":"Why doesn't Java offer operator overloading?","l":"http://stackoverflow.com/questions/77718/why-doesnt-java-offer-operator-overloading","q":"\n\n<p>Coming from C++ to Java, the obvious unanswered question is why didn't Java include operator overloading?</p>\n\n<p>Isn't <code>Complex a, b, c; a = b + c;</code> much simpler than <code>Complex a, b, c; a=b.add(c);</code>?</p>\n\n<p>Is there a known reason for this, valid arguments for <em>not</em> allowing operator overloading? Is the reason arbitrary, or lost to time?</p>\n    ","a":"\n<p>Assuming you wanted to overwrite the previous value of the object referred to by 'a', then a member function would have to be invoked.</p>\n\n<pre><code>    Complex a, b, c;\n    ..\n    a = b.add(c)\n</code></pre>\n\n<p>In C++, this expression tells the compiler to create 3 objects on the stack, perform addition, and <em>copy</em> the resultant value from the temporary object into the existing object 'a'.</p>\n\n<p>However, in java, operator= doesn't perform value copy for reference types, and users can only create new reference types, not value types.  So for a user defined type named 'Complex', assignment means to copy a reference to an existing value.</p>\n\n<p>consider instead:</p>\n\n<pre><code>b.set(1, 0); // initialize to real number '1'\na = b; \nb.set(2, 0);\nassert( !a.Equals(b) );\n</code></pre>\n\n<p>In C++, this copies the value, so the comparison will result not-equal.  In Java, operator= performs reference copy, so 'a' and 'b' are now referring to the same value.  As a result, the comparison will produce 'equal', since the object will compare equal to itself.</p>\n\n<p>The difference between copies and references only adds to the confusion of operator overloading.  As Sebastian mentioned, Java and C# both have to deal with value and reference equality separately -- operator+ would likely deal with values and objects, but operator= is already implemented to deal with references.</p>\n\n<p>In C++, you should only be dealing with one kind of comparison at a time, so it can be less confusing.  For example, on Complex, operator= and operator== are both working on values -- copying values and comparing values respectively.  </p>\n    "},{"t":"Is there an advantage to use a Synchronized Method instead of a Synchronized Block?","l":"http://stackoverflow.com/questions/574240/is-there-an-advantage-to-use-a-synchronized-method-instead-of-a-synchronized-blo","q":"\n\n<p>Can any one tell me the advantage of synchronized method over synchronized block with an example?</p>\n    ","a":"\n<blockquote>\n  <p><em>Can any one tell me the advantage of synchronized method over synchronized block with an example?Thanks.</em></p>\n</blockquote>\n\n<p>There is not a clear advantage of using synchronized method over block. </p>\n\n<p>Perhaps the only one ( but I wouldn't call it advantage ) is you don't need to include the object reference <code>this</code>.</p>\n\n<p>Method:</p>\n\n<pre><code>public synchronized void method() { // blocks \"this\" from here.... \n    ...\n    ...\n    ...\n} // to here\n</code></pre>\n\n<p>Block:</p>\n\n<pre><code>public void method() { \n    synchronized( this ) { // blocks \"this\" from here .... \n        ....\n        ....\n        ....\n    }  // to here...\n}\n</code></pre>\n\n<p>See? No advantage at all. </p>\n\n<p>Blocks <strong>do</strong> have advantages over methods, most of all in flexibility because you can use other object as lock whereas syncing the method would lock the complete class.</p>\n\n<p>Compare: </p>\n\n<pre><code>// locks the whole object\n... \nprivate synchronized void someInputRelatedWork() {\n    ... \n}\nprivate synchronized void someOutputRelatedWork() {\n    ... \n}\n</code></pre>\n\n<p>Vs. </p>\n\n<pre><code>// Using specific locks\nObject inputLock = new Object();\nObject outputLock = new Object();\n\nprivate void someInputRelatedWork() {\n    synchronize(inputLock) { \n        ... \n    } \n}\nprivate void someOutputRelatedWork() {\n    synchronize(outputLock) { \n        ... \n    }\n}\n</code></pre>\n\n<p>Also if the method grows you can still keep the synchronized section separated:</p>\n\n<pre><code> private void method() {\n     ... code here\n     ... code here\n     ... code here\n    synchronized( lock ) { \n        ... very few lines of code here\n    }\n     ... code here\n     ... code here\n     ... code here\n     ... code here\n}\n</code></pre>\n    "},{"t":"Is List<Dog> a subclass of List<Animal>? Why aren't Java's generics implicitly polymorphic?","l":"http://stackoverflow.com/questions/2745265/is-listdog-a-subclass-of-listanimal-why-arent-javas-generics-implicitly-p","q":"\n\n<p>I'm a bit confused about how Java generics handle inheritance / polymorphism.</p>\n\n<p>Assume the following hierarchy -</p>\n\n<p><strong>Animal</strong> (Parent)</p>\n\n<p><strong>Dog</strong> - <strong>Cat</strong> (Children)</p>\n\n<p>So suppose I have a method <code>doSomething(List&lt;Animal&gt; animals)</code>. By all the rules of inheritance and polymorphism, I would assume that a <code>List&lt;Dog&gt;</code> <em>is</em> a <code>List&lt;Animal&gt;</code> and a <code>List&lt;Cat&gt;</code> <em>is</em> a <code>List&lt;Animal&gt;</code> - and so either one could be passed to this method. Not so. If I want to achieve this behavior, I have to explicitly tell the method to accept a list of any subset of Animal by saying <code>doSomething(List&lt;? extends Animal&gt; animals)</code>. </p>\n\n<p>I understand that this is Java's behavior. My question is <em>why</em>? Why is polymorphism generally implicit, but when it comes to generics it must be specified?</p>\n    ","a":"\n<p>No, a <code>List&lt;Dog&gt;</code> is <em>not</em> a <code>List&lt;Animal&gt;</code>. Consider what you can do with a <code>List&lt;Animal&gt;</code> - you can add <em>any</em> animal to it... including a cat. Now, can you logically add a cat to a litter of puppies? Absolutely not.</p>\n\n<pre><code>// Illegal code - because otherwise life would be Bad\nList&lt;Dog&gt; dogs = new List&lt;Dog&gt;();\nList&lt;Animal&gt; animals = dogs; // Awooga awooga\nanimals.add(new Cat());\nDog dog = dogs.get(0); // This should be safe, right?\n</code></pre>\n\n<p>Suddenly you have a <em>very</em> confused cat.</p>\n\n<p>Now, you <em>can't</em> add a <code>Cat</code> to a <code>List&lt;? extends Animal&gt;</code> because you don't know it's a <code>List&lt;Cat&gt;</code>. You can retrieve a value and know that it will be an <code>Animal</code>, but you can't add arbitrary animals. The reverse is true for <code>List&lt;? super Animal&gt;</code> - in that case you can add an <code>Animal</code> to it safely, but you don't know anything about what might be retrieved from it, because it could be a <code>List&lt;Object&gt;</code>.</p>\n    "},{"t":"What is a raw type and why shouldn't we use it?","l":"http://stackoverflow.com/questions/2770321/what-is-a-raw-type-and-why-shouldnt-we-use-it","q":"\n\n<h3>Questions:</h3>\n\n<ul>\n<li>What are raw types in Java, and why do I often hear that they shouldn't be used in new code?</li>\n<li>What is the alternative if we can't use raw types, and how is it better?</li>\n</ul>\n\n<h3>Similar questions</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/233628/should-java-raw-types-be-deprecated\">Should Java Raw Types be Deprecated?</a></li>\n</ul>\n    ","a":"\n<h2>What is a raw type?</h2>\n\n<p>The Java Language Specification defines a <em>raw type</em> as follows:</p>\n\n<h3><a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.8\">JLS 4.8 Raw Types</a></h3>\n\n<blockquote>\n  <p>A raw type is define to be either:</p>\n  \n  <ul>\n  <li>The name of a generic type declaration used without any accompanying actual type parameters.</li>\n  <li>Any non-static type member of a raw type <code>R</code> that is not inherited from a superclass or superinterface of <code>R</code>.</li>\n  </ul>\n</blockquote>\n\n<p>Here's an example to illustrate:</p>\n\n<pre><code>public class MyType&lt;E&gt; {\n    class Inner { }\n    static class Nested { }\n\n    public static void main(String[] args) {\n        MyType mt;          // warning: MyType is a raw type\n        MyType.Inner inn;   // warning: MyType.Inner is a raw type\n\n        MyType.Nested nest; // no warning: not parameterized type\n        MyType&lt;Object&gt; mt1; // no warning: type parameter given\n        MyType&lt;?&gt; mt2;      // no warning: type parameter given (wildcard OK!)\n    }\n}\n</code></pre>\n\n<p>Here, <code>MyType&lt;E&gt;</code> is a <em>parameterized type</em> (<a href=\"http://java.sun.com/docs/books/jls/third_edition/html/typesValues.html#4.5\">JLS 4.5</a>). It is common to colloquially refer to this type as simply <code>MyType</code> for short, but technically the name is <code>MyType&lt;E&gt;</code>.</p>\n\n<p><code>mt</code> has a raw type (and generates a compilation warning) by the first bullet point in the above definition; <code>inn</code> also has a raw type by the second bullet point.</p>\n\n<p><code>MyType.Nested</code> is not a parameterized type, even though it's a member type of a parameterized type <code>MyType&lt;E&gt;</code>, because it's <code>static</code>.</p>\n\n<p><code>mt1</code>, and <code>mt2</code> are both declared with actual type parameters, so they're not raw types.</p>\n\n<hr>\n\n<h2>What's so special about raw types?</h2>\n\n<p>Essentially, raw types behaves just like they were before generics were introduced. That is, the following is entirely legal at compile-time.</p>\n\n<pre><code>List names = new ArrayList(); // warning: raw type!\nnames.add(\"John\");\nnames.add(\"Mary\");\nnames.add(Boolean.FALSE); // not a compilation error!\n</code></pre>\n\n<p>The above code runs just fine, but suppose you also have the following:</p>\n\n<pre><code>for (Object o : names) {\n    String name = (String) o;\n    System.out.println(name);\n} // throws ClassCastException!\n  //    java.lang.Boolean cannot be cast to java.lang.String\n</code></pre>\n\n<p>Now we run into trouble at run-time, because <code>names</code> contains something that isn't an <code>instanceof String</code>.</p>\n\n<p>Presumably, if you want <code>names</code> to contain only <code>String</code>, you <em>could</em> perhaps still use a raw type and <em>manually check every</em> <code>add</code> yourself, and then <em>manually cast</em> to <code>String</code> every item from <code>names</code>. <strong>Even better</strong>, though is NOT to use a raw type and <em>let the compiler does all the work for you</em>, harnessing the power of Java generics.</p>\n\n<pre><code>List&lt;String&gt; names = new ArrayList&lt;String&gt;();\nnames.add(\"John\");\nnames.add(\"Mary\");\nnames.add(Boolean.FALSE); // compilation error!\n</code></pre>\n\n<p>Of course, if you <em>DO</em> want <code>names</code> to allow a <code>Boolean</code>, then you can declare it as <code>List&lt;Object&gt; names</code>, and the above code would compile.</p>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://java.sun.com/docs/books/tutorial/extra/generics/index.html\">Java Tutorials/Generics</a></li>\n</ul>\n\n<hr>\n\n<h2>How's a raw type different from using <code>&lt;Object&gt;</code> as type parameters</h2>\n\n<p>The following is a quote from <em>Effective Java 2nd Edition, Item 23: Don't use raw types in new code</em>:</p>\n\n<blockquote>\n  <p>Just what is the difference between the raw type <code>List</code> and the parameterized type <code>List&lt;Object&gt;</code>? Loosely speaking, the former has opted out generic type checking, while the latter explicitly told the compiler that it is capable of holding objects of any type. While you can pass a <code>List&lt;String&gt;</code> to a parameter of type <code>List</code>, you can't pass it to a parameter of type <code>List&lt;Object&gt;</code>. There are subtyping rules for generics, and <code>List&lt;String&gt;</code> is a subtype of the raw type <code>List</code>, but not of the parameterized type <code>List&lt;Object&gt;</code>. As a consequence, <strong>you lose type safety if you use raw type like <code>List</code>, but not if you use a parameterized type like <code>List&lt;Object&gt;</code></strong>.</p>\n</blockquote>\n\n<p>To illustrate the point, consider the following method which takes a <code>List&lt;Object&gt;</code> and appends a <code>new Object()</code>.</p>\n\n<pre><code>void appendNewObject(List&lt;Object&gt; list) {\n   list.add(new Object());\n}\n</code></pre>\n\n<p>Generics in Java are invariant. A <code>List&lt;String&gt;</code> is not a <code>List&lt;Object&gt;</code>, so the following would generate a compiler warning:</p>\n\n<pre><code>List&lt;String&gt; names = new ArrayList&lt;String&gt;();\nappendNewObject(names); // compilation error!\n</code></pre>\n\n<p>If you had declared <code>appendNewObject</code> to take a raw type <code>List</code> as parameter, then this would compile, and you'd therefore lose the type safety that you get from generics.</p>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2770264/what-is-the-difference-between-e-extends-number-and-number/\">What is the difference between <code>&lt;E extends Number&gt;</code> and <code>&lt;Number&gt;</code>?</a></li>\n<li><a href=\"http://stackoverflow.com/questions/2660827/java-generics-covariance\">java generics (not) covariance</a></li>\n</ul>\n\n<hr>\n\n<h2>How's a raw type different from using <code>&lt;?&gt;</code> as a type parameter?</h2>\n\n<p><code>List&lt;Object&gt;</code>, <code>List&lt;String&gt;</code>, etc are all <code>List&lt;?&gt;</code>, so it may be tempting to just say that they're just <code>List</code> instead. However, there is a major difference: since a <code>List&lt;E&gt;</code> defines only <code>add(E)</code>, you can't add just any arbitrary object to a <code>List&lt;?&gt;</code>. On the other hand, since the raw type <code>List</code> does not have type safety, you can <code>add</code> just about anything to a <code>List</code>.</p>\n\n<p>Consider the following variation of the previous snippet:</p>\n\n<pre><code>static void appendNewObject(List&lt;?&gt; list) {\n    list.add(new Object()); // compilation error!\n}\n//...\n\nList&lt;String&gt; names = new ArrayList&lt;String&gt;();\nappendNewObject(names); // this part is fine!\n</code></pre>\n\n<p>The compiler did a wonderful job of protecting you from potentially violating the type invariance of the <code>List&lt;?&gt;</code>! If you had declared the parameter as the raw type <code>List list</code>, then the code would compile, and you'd violate the type invariant of <code>List&lt;String&gt; names</code>.</p>\n\n<hr>\n\n<h2>If it's unsafe, why is it allowed to use a raw type?</h2>\n\n<p>Here's another quote from JLS 4.8:</p>\n\n<blockquote>\n  <p>The use of raw types is allowed only as a concession to compatibility of legacy code. <em>The use of raw types in code written after the introduction of genericity into the Java programming language is strongly discouraged. It is possible that future versions of the Java programming language will disallow the use of raw types.</em></p>\n</blockquote>\n\n<p><em>Effective Java 2nd Edition</em> also has this to add:</p>\n\n<blockquote>\n  <p>Given that you shouldn't use raw types, why did the language designers allow them? To provide compatibility.</p>\n  \n  <p>The Java platform was about to enter its second decade when generics were introduced, and there was an enormous amount of Java code in existence that did not use generics. It was deemed critical that all this code remains legal and interoperable with new code that does use generics. It had to be legal to pass instances of parameterized types to methods that were designed for use with ordinary types, and vice versa. This requirement, known as <em>migration compatibility</em>, drove the decision to support raw types.</p>\n</blockquote>\n\n<p>In summary, raw types should NEVER be used in new code. <strong>You should always use parameterized types</strong>.</p>\n\n<hr>\n\n<h2>Are there no exceptions?</h2>\n\n<p>Unfortunately, because Java generics are non-reified, there are two exceptions where raw types must be used in new code:</p>\n\n<ul>\n<li>Class literals, e.g. <code>List.class</code>, not <code>List&lt;String&gt;.class</code></li>\n<li><code>instanceof</code> operand, e.g. <code>o instanceof Set</code>, not <code>o instanceof Set&lt;String&gt;</code></li>\n</ul>\n\n<h3>See also</h3>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/2745193/why-is-collectionstring-class-illegal/\">Why is <code>Collection&lt;String&gt;.class</code> Illegal?</a></li>\n</ul>\n    "},{"t":"Is it possible to use Java 8 for Android development?","l":"http://stackoverflow.com/questions/23318109/is-it-possible-to-use-java-8-for-android-development","q":"\n\n<p>Searching the web, it is not clear if Java 8 is supported for Android development or not.</p>\n\n<p>Before I download/setup Java 8, can some one point me at any \"official\" documentation that say Java 8 is or is not supported for Android development.</p>\n    ","a":"\n<p>I think it is too early to say if Java 8 is suitable for android development, officially android needs the Java 6 JDK as mentioned at the bottom of this page: <a href=\"https://developer.android.com/sdk/installing/installing-adt.html\">https://developer.android.com/sdk/installing/installing-adt.html</a></p>\n\n<p>If you installed the Java 8 JDK, then give it a try, if any problems appears try to set the compiler as 1.6 in eclipse from window menu -&gt; preferences -&gt; java -&gt; Compiler</p>\n\n<p>by the way, this is works for me with java 7</p>\n\n<p><img src=\"http://i.stack.imgur.com/SCTyV.png\" alt=\"enter image description here\"> </p>\n\n<h1>Update:</h1>\n\n<p>To build apps for android 5.0 and higher, JDK 7 is required.\nThis is according to Installing Android Studio webpage:\n<a href=\"http://developer.android.com/sdk/installing/index.html?pkg=studio\">http://developer.android.com/sdk/installing/index.html?pkg=studio</a></p>\n\n<p>\"Before you set up Android Studio, be sure you have installed JDK 6 or higher (the JRE alone is not sufficient)—JDK 7 is required when developing for Android 5.0 and higher. To check if you have JDK installed (and which version), open a terminal and type javac -version. If the JDK is not available or the version is lower than 6, go download JDK.\"</p>\n    "},{"t":"How can I get the current date and time in UTC or GMT in Java?","l":"http://stackoverflow.com/questions/308683/how-can-i-get-the-current-date-and-time-in-utc-or-gmt-in-java","q":"\n\n<p>When I create a new <code>Date</code> object, it is initialized to the current time but in the local timezone. How can I get the current date and time in GMT?</p>\n    ","a":"\n<p><code>java.util.Date</code> has no specific time zone, although its value is most commonly thought of in relation to UTC. What makes you think it's in local time?</p>\n\n<p>To be precise: the value within a <code>java.util.Date</code> is the number of milliseconds since the Unix epoch, which occurred at midnight January 1st 1970, UTC. The same epoch could also be described in other time zones, but the traditional description is in terms of UTC. As it's a number of milliseconds since a fixed epoch, the value within <code>java.util.Date</code> is the same around the world at any particular instant, regardless of local time zone.</p>\n\n<p>I suspect the problem is that you're displaying it via an instance of Calendar which uses the local timezone, or possibly using <code>Date.toString()</code> which also uses the local timezone, or a <code>SimpleDateFormat</code> instance, which, by default, also uses local timezone.</p>\n\n<p>If this isn't the problem, please post some sample code.</p>\n\n<p>I would, however, recommend that you use <a href=\"http://www.joda.org/joda-time/\">Joda-Time</a> anyway, which offers a much clearer API.</p>\n    "},{"t":"Java equivalent to #region in c#","l":"http://stackoverflow.com/questions/2344524/java-equivalent-to-region-in-c-sharp","q":"\n\n<p>I want to use regions for code folding in <strong>Eclipse</strong>; how can that be done in Java?</p>\n\n<p>An example usage in <a href=\"https://msdn.microsoft.com/en-us/library/9a1ybwek.aspx\">C#</a>:</p>\n\n<pre><code>#region name\n//code\n#endregion\n</code></pre>\n    ","a":"\n<p>There's no such <em>standard</em> equivalent. Some IDEs - Intellij, for instance, or Eclipse - can fold depending on the code types involved (constructors, imports etc.), but there's nothing quite like <code>#region</code>.</p>\n    "},{"t":"Use of final class in Java","l":"http://stackoverflow.com/questions/5181578/use-of-final-class-in-java","q":"\n\n<p>I am reading a book about Java and it says that you can declare the whole class as <code>final</code>. I cannot think of anything where I'd use this. </p>\n\n<p>I am just new to programming and I am wondering <strong>if programmers actually use this on their programs</strong>. If they do, when do they use it so I can understand it better and know when to use it. </p>\n\n<p>If Java is object oriented, and you declare a class <code>final</code>, doesn't it stop the idea of class having the characteristics of objects?</p>\n    ","a":"\n<blockquote>\n  <p><strong>If they do, when do they use it so I can understand it better and know when to use it.</strong></p>\n</blockquote>\n\n<p>A <code>final</code> class is simply a class that <strong>can't be extended</strong>.</p>\n\n<p>(This does not mean that all references to objects of the class would act as if they were declared as <code>final</code>.) </p>\n\n<p>When it's useful to declare a class as final is covered in the answers of this question:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/218744/good-reasons-to-prohibit-inheritance-in-java\">Good reasons to prohibit inheritance in Java?</a></li>\n</ul>\n\n<blockquote>\n  <p><strong>If Java is object oriented, and you declare a class <code>final</code>, doesn't it stop the idea of class having the characteristics of objects?</strong></p>\n</blockquote>\n\n<p>In some sense yes.</p>\n\n<p>By marking a class as final you disable a powerful and flexible feature of the language for that part of the code. Some classes however, should not (and in certain cases <em>can</em> not) be designed to take subclassing into account in a good way. In these cases it makes sense to mark the class as final, even though it limits OOP. (Remember however that a final class can still extend another non-final class.)</p>\n    "},{"t":"Singletons vs. Application Context in Android?","l":"http://stackoverflow.com/questions/3826905/singletons-vs-application-context-in-android","q":"\n\n<p>Recalling this <a href=\"http://www.antonioshome.net/blog/2006/20060906-1.php\">post enumerating several problems of using singletons</a>\nand having seen several examples of Android applications using singleton pattern, I wonder if it's a good idea to use Singletons instead of single instances shared through global application state (subclassing android.os.Application and obtaining it through context.getApplication()).</p>\n\n<p>What advantages/drawbacks would both mechanisms have?</p>\n\n<p>To be honest, I expect the same answer in this post <a href=\"http://stackoverflow.com/questions/2709071/singleton-pattern-with-web-application-not-a-good-idea\">Singleton pattern with Web application, Not a good idea!</a> but applied to Android. Am I correct? What's different in DalvikVM otherwise?</p>\n\n<p>EDIT: I would like to have opinions on several aspects involved:</p>\n\n<ul>\n<li>Synchronization</li>\n<li>Reusability</li>\n<li>Testing</li>\n</ul>\n    ","a":"\n<p>I very much disagree with Dianne Hackborn (and yes, I realize she's an Android framework engineer, thanks.) We are bit by bit removing all singletons from our project in favor of lightweight, task scoped objects which can easiliy be re-created when you actually need them.</p>\n\n<p>Singletons are a nightmare for testing and, if lazily initialized, will introduce \"state indeterminism\" with subtle side effects (which may suddenly surface when moving calls to getInstance() from one scope to another). Visibility has been mentioned as another problem, and since singletons imply \"global\" (= random) access to shared state, subtle bugs may arise when not properly synchronized in concurrent applications.</p>\n\n<p>I consider it an anti-pattern, it's a bad object-oriented style often embraced by people coming from procedural languages like C, where it is common to maintain global state.</p>\n\n<p>To come back to your question:\nAlthough the app context can be considered a singleton itself, it is framework-managed and has a well defined life-cycle, scope, and access path. Hence I believe that if you do need to manage app-global state, it should go here, nowhere else. For anything else, rethink if you <em>really</em> need a singleton object, or if it would also be possible to rewrite your singleton class to instead instantiate small, short-lived objects that perform the task at hand.</p>\n    "},{"t":"What is a Null Pointer Exception, and how do I fix it?","l":"http://stackoverflow.com/questions/218384/what-is-a-null-pointer-exception-and-how-do-i-fix-it","q":"\n\n<p>What are Null Pointer Exceptions (<code>java.lang.NullPointerException</code>) and what causes them?</p>\n\n<p>What methods/tools can be used to determine the cause so that you stop the exception from causing the program to terminate prematurely?</p>\n    ","a":"\n<p>When you declare a reference variable (i.e. an object) you are really creating a pointer to an object. Consider the following code where you declare a variable of primitive type int:</p>\n\n<pre><code>int x;\nx = 10;\n</code></pre>\n\n<p>In this example the variable x is an <code>int</code> and Java will initialize it to 0 for you. When you assign it to 10 in the second line your value 10 is written into the memory location pointed to by x.</p>\n\n<p>But, when you try to declare a reference type something different happens. Take the following code:</p>\n\n<pre><code>Integer num;\nnum = new Integer(10);\n</code></pre>\n\n<p>The first line declares a variable named <code>num</code>, but, it does not contain a primitive value. Instead it contains a pointer (because the type is <code>Integer</code> which is a reference type). Since you did not say as yet what to point to Java sets it to null, meaning \"I am pointing at nothing\".</p>\n\n<p>In the second line, the <code>new</code> keyword is used to instantiate (or create) an object of type Integer and the pointer variable num is assigned this object. You can now reference the object using the dereferencing operator <code>.</code> (a dot).  </p>\n\n<p>The <code>Exception</code> that you asked about occurs when you declare a variable but did not create an object. If you attempt to dereference num BEFORE creating the object you get   a NullPointerException. In the most trivial cases the compiler will catch the problem and let you know that \"num may not have been initialized\" but sometime you write code that does not directly create the object.</p>\n\n<p>For instance you may have a method as follows:</p>\n\n<pre><code>public void doSomething(Integer num){\n   //do something to num\n}\n</code></pre>\n\n<p>in which case you are not creating the object num, rather assuming that is was created before the doSomething method was called. Unfortunately it is possible to call the method like this:</p>\n\n<pre><code>doSomething(null);\n</code></pre>\n\n<p>In which case num is null. The best way to avoid this type of exception is to always check for null when you did not create the object yourself. So doSomething should be re-written as:</p>\n\n<pre><code>public void doSomething(Integer num){\n    if(num != null){\n       //do something to num\n    }\n}\n</code></pre>\n    "},{"t":"ArithmeticException: “Non-terminating decimal expansion; no exact representable decimal result”","l":"http://stackoverflow.com/questions/4591206/arithmeticexception-non-terminating-decimal-expansion-no-exact-representable","q":"\n\n<p>Why does the following code raise the exception shown below?</p>\n\n<pre><code>BigDecimal a = new BigDecimal(\"1.6\");\nBigDecimal b = new BigDecimal(\"9.2\");\na.divide(b) // results in the following exception.\n</code></pre>\n\n<p>--</p>\n\n<pre><code>java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.\n</code></pre>\n    ","a":"\n<p>From the <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/math/BigDecimal.html\">docs</a>: </p>\n\n<blockquote>\n  <p>When a MathContext object is supplied with a precision setting of 0 (for\n  example, MathContext.UNLIMITED), arithmetic operations are exact, as\n  are the arithmetic methods which take no MathContext object. (This is the\n  only behavior that was supported in releases prior to 5.) </p>\n  \n  <p>As a corollary of computing the exact result, the rounding mode setting of a MathContext\n  object with a precision setting of 0 is not used and thus irrelevant. In\n  the case of divide, the exact quotient could have an infinitely long decimal\n  expansion; for example, 1 divided by 3. </p>\n  \n  <p>If the quotient has a nonterminating decimal expansion and\n  the operation is specified to return an exact result, an ArithmeticException is thrown.\n  Otherwise, the exact result of the division is returned, as done for\n  other operations.</p>\n</blockquote>\n\n<p><strong>To fix, you need to do something like this</strong>:</p>\n\n<pre><code>a.divide(b, 2, RoundingMode.HALF_UP)\n\nwhere 2 is precision and RoundingMode.HALF_UP is rounding mode\n</code></pre>\n\n<p>More details: <a href=\"http://jaydeepm.wordpress.com/2009/06/04/bigdecimal-and-non-terminating-decimal-expansion-error/\">http://jaydeepm.wordpress.com/2009/06/04/bigdecimal-and-non-terminating-decimal-expansion-error/</a></p>\n    "},{"t":"What are the Xms and Xmx parameters when starting JVMs?","l":"http://stackoverflow.com/questions/14763079/what-are-the-xms-and-xmx-parameters-when-starting-jvms","q":"\n\n<p>Please explain the use of Xms and Xmx parameters in JVMs. What are the default values for them?</p>\n    ","a":"\n<p>The flag <code>Xmx</code> specifies the maximum memory allocation pool for a Java Virtual Machine (JVM), while <code>Xms</code> specifies the initial memory allocation pool.</p>\n\n<p>This means that your JVM will be started with <code>Xms</code> amount of memory and will be able to use a maximum of <code>Xmx</code> amount of memory. For example, starting a JVM like below will start it with 256MB of memory, and will allow the process to use up to 2048MB of memory:</p>\n\n<pre><code>java -Xmx2048m -Xms256m\n</code></pre>\n\n<p>The memory flag can also be specified in multiple sizes, such as kilobytes, megabytes, and so on.</p>\n\n<pre><code>-Xmx1024k\n-Xmx512m\n-Xmx8g\n</code></pre>\n\n<p>The <code>Xms</code> flag has no default value, and <code>Xmx</code> typically has a default value of 256MB. A common use for these flags is when you encounter a <code>java.lang.OutOfMemoryError</code>.</p>\n\n<p>When using these settings, keep in mind that these settings are for the JVM's <em>heap</em>, and that the JVM can/will use more memory than just the size allocated to the heap. From <a href=\"http://docs.oracle.com/cd/E13150_01/jrockit_jvm/jrockit/geninfo/diagnos/garbage_collect.html\">Oracle's Documentation</a>:</p>\n\n<blockquote>\n  <p>Note that the JVM uses more memory than just the heap. For example Java methods, thread stacks and native handles are allocated in memory separate from the heap, as well as JVM internal data structures.</p>\n</blockquote>\n    "},{"t":"Read all files in a folder","l":"http://stackoverflow.com/questions/1844688/read-all-files-in-a-folder","q":"\n\n<p>I want to read all the files in a folder through Java. Can anyone help me?</p>\n    ","a":"\n<pre><code>public void listFilesForFolder(final File folder) {\n    for (final File fileEntry : folder.listFiles()) {\n        if (fileEntry.isDirectory()) {\n            listFilesForFolder(fileEntry);\n        } else {\n            System.out.println(fileEntry.getName());\n        }\n    }\n}\n\nfinal File folder = new File(\"/home/you/Desktop\");\nlistFilesForFolder(folder);\n</code></pre>\n\n<p>Edit: <a href=\"http://docs.oracle.com/javase/8/docs/api/java/nio/file/Files.html#walk-java.nio.file.Path-java.nio.file.FileVisitOption...-\">This</a> API is now available from Java 8.</p>\n\n<pre><code>Files.walk(Paths.get(\"/home/you/Desktop\")).forEach(filePath -&gt; {\n    if (Files.isRegularFile(filePath)) {\n        System.out.println(filePath);\n    }\n});\n</code></pre>\n    "},{"t":"Run a single test method with maven","l":"http://stackoverflow.com/questions/1873995/run-a-single-test-method-with-maven","q":"\n\n<p>I know you can run all the tests in a certain class using:</p>\n\n<pre><code>mvn test -Dtest=classname\n</code></pre>\n\n<p>But I want to run an individual method and -Dtest=classname.methodname  doesn't seem to work.</p>\n    ","a":"\n<p>To run a single test method in Maven, you need to provide the command as:</p>\n\n<pre><code>mvn -Dtest=TestCircle#xyz test\n</code></pre>\n\n<p>where <code>TestCircle</code> is the test class name and <code>xyz</code> is the test method.</p>\n\n<p>Wild card characters also work; both in the method name and class name.</p>\n    "},{"t":"javadoc: writing links to methods","l":"http://stackoverflow.com/questions/5915992/javadoc-writing-links-to-methods","q":"\n\n<p>How can I use the <code>@link</code> tag to link to a method?</p>\n\n<p>I want to change</p>\n\n<pre><code>/**\n * Returns the Baz object owned by the Bar object owned by Foo owned by this.\n * A convenience method, equivalent to getFoo().getBar().getBaz()\n * @return baz\n */\npublic Baz fooBarBaz()\n</code></pre>\n\n<p>to</p>\n\n<pre><code>/**\n * Returns the Baz object owned by the Bar object owned by Foo owned by this.\n * A convenience method, equivalent to {@link getFoo()}.{@link getBar()}.{@link getBaz()}\n * @return baz\n */\npublic Baz fooBarBaz()\n</code></pre>\n\n<p>but I don't know how to format the <code>@link</code> tag correctly.</p>\n    ","a":"\n<p>You will find much information about JavaDoc at the <a href=\"http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html\">JavaDoc Tool reference page</a>, including the information on the <a href=\"http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html#CHDDIECH\">{@link  package.class#member  label}</a> tag (that you are looking for):</p>\n\n<blockquote>\n  <p>For example, here is a comment that refers to the getComponentAt(int, int) method:</p>\n  \n  <p><code>Use the {@link #getComponentAt(int, int) getComponentAt} method.</code></p>\n</blockquote>\n\n<hr>\n\n<p>Other useful links about JavaDoc are:</p>\n\n<ul>\n<li><a href=\"http://docs.oracle.com/javase/8/docs/technotes/guides/javadoc/index.html\">JavaDoc Technology</a></li>\n<li><a href=\"http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html\">How to Write Doc Comments for the Javadoc Tool</a> </li>\n</ul>\n    "},{"t":"What does $NON-NLS-1$ mean?","l":"http://stackoverflow.com/questions/654037/what-does-non-nls-1-mean","q":"\n\n<p>In Eclipse source code, I've found some '$NON-NLS-1$' in comments used like that :</p>\n\n<pre><code>private String toolTip = \"\"; //$NON-NLS-1$\n</code></pre>\n\n<p>What does that mean ?</p>\n    ","a":"\n<p>They silence a warning that Eclipse emits when it encounters string literals (and has been configured to complain).</p>\n\n<p>The idea is that UI messages should not be embedded as string literals, but rather sourced from a resource file (so that they can be translated, proofed, etc). Consequently, Eclipse can be configured to detect string literals, so that you don't accidentally have leave unexternalized UI strings in the code; however, there are strings which should not be externalized (such as regexps) and so, //$NON-NLS-1$ gives you a way to communicate that fact to the compiler.</p>\n    "},{"t":"How to convert a byte array to a hex string in Java?","l":"http://stackoverflow.com/questions/9655181/how-to-convert-a-byte-array-to-a-hex-string-in-java","q":"\n\n<p>I have a byte array filled with hex numbers and printing it the easy way is pretty pointless because there are many unprintable elements. What I need is the exact hexcode in the form of: <code>3a5f771c</code></p>\n    ","a":"\n<p>From the discussion <a href=\"http://stackoverflow.com/q/332079/1284661\">here</a>, and especially <a href=\"http://stackoverflow.com/a/2197650/1284661\">this</a> answer, this is the function I currently use:</p>\n\n<pre><code>final protected static char[] hexArray = \"0123456789ABCDEF\".toCharArray();\npublic static String bytesToHex(byte[] bytes) {\n    char[] hexChars = new char[bytes.length * 2];\n    for ( int j = 0; j &lt; bytes.length; j++ ) {\n        int v = bytes[j] &amp; 0xFF;\n        hexChars[j * 2] = hexArray[v &gt;&gt;&gt; 4];\n        hexChars[j * 2 + 1] = hexArray[v &amp; 0x0F];\n    }\n    return new String(hexChars);\n}\n</code></pre>\n\n<p>My own tiny benchmarks (a million bytes a thousand times, 256 bytes 10 million times) showed it to be much faster than any other alternative, about half the time on long arrays.  Compared to the answer I took it from, switching to bitwise ops --- as suggested in the discussion --- cut about 20% off of the time for long arrays. (Edit: When I say it's faster than the alternatives, I mean the alternative code offered in the discussions. Performance is equivalent to Commons Codec, which uses very similar code.)</p>\n    "},{"t":"How to directly initialize a HashMap (in a literal way)? [duplicate]","l":"http://stackoverflow.com/questions/6802483/how-to-directly-initialize-a-hashmap-in-a-literal-way","q":"\n\n<div class=\"question-status question-originals-of-duplicate\">\n    <p>This question already has an answer here:</p>\n    <ul>\n        <li>\n            <a href=\"/questions/507602/how-can-i-initialize-a-static-map\" dir=\"ltr\">How can I Initialize a static Map?</a>\n                <span class=\"question-originals-answer-count\">\n                    24 answers\n                </span>\n        </li>\n    </ul>\n</div>\n<p>Is there some way of initializing a Java HashMap like this?:</p>\n\n<pre><code>Map&lt;String,String&gt; test = \n    new HashMap&lt;String, String&gt;{\"test\":\"test\",\"test\":\"test\"};\n</code></pre>\n\n<p>What would be the correct syntax? I have not found anything regarding this. Is this possible? I am looking for the shortest/fastet way to put some \"final/static\" values in a map that never change and are known in advance when crerating the Map.</p>\n    ","a":"\n<p>No, you will have to add all the elements manually. You can use a static initializer though:</p>\n\n<pre><code>public class Demo\n{\n    private static final Map&lt;String, String&gt; myMap;\n    static\n    {\n        myMap = new HashMap&lt;String, String&gt;();\n        myMap.put(\"a\", \"b\");\n        myMap.put(\"c\", \"d\");\n    }\n}\n</code></pre>\n    "},{"t":"How to get the current date/time in java","l":"http://stackoverflow.com/questions/5175728/how-to-get-the-current-date-time-in-java","q":"\n\n<p>What's the best way to get the current date/time? </p>\n    ","a":"\n<p>It depends on what form of date / time you want:</p>\n\n<ul>\n<li><p>If you want the date / time as a single numeric value, then <code>System.currentTimeMillis()</code> gives you that, expressed as the number of milliseconds after the UNIX epoch (as a Java <code>long</code>).  This value is a delta from a UTC time-point, and is independent of the local time-zone ... assuming that the system clock has been set correctly.</p></li>\n<li><p>If you want the date / time in a form that allows you to access the components (year, month, etc) numerically, you could use one of the following:</p>\n\n<ul>\n<li><p><code>new Date()</code> gives you a <code>Date</code> object initialized with the current date / time.  The problem is that the <code>Date</code> API methods are mostly flawed ... and deprecated.</p></li>\n<li><p><code>Calendar.getInstance()</code> gives you a <code>Calendar</code> object initialized with the current date / time, using the default <code>Locale</code> and <code>TimeZone</code>.  Other overloads allow you to use a specific <code>Locale</code> and/or <code>TimeZone</code>.  Calendar works ... but the APIs are still cumbersome.</p></li>\n<li><p><code>new org.joda.time.DateTime()</code> gives you a <a href=\"http://joda-time.sourceforge.net/\">Joda-time</a> object initialized with the current date / time, using the default time zone and chronology.  There are lots of other Joda alternatives ... too many to describe here.</p></li>\n<li><p>in Java 8, calling <code>LocalDateTime.now()</code> and <code>ZonedDateTime.now()</code> will give you representations for the current date / time.</p></li>\n</ul></li>\n</ul>\n\n<p>People who know about these things recommend <a href=\"http://joda-time.sourceforge.net/\">Joda-time</a> as having (by far) the best Java APIs for doing things involving time point and duration calculations.</p>\n    "},{"t":"How to detect a loop in a linked list?","l":"http://stackoverflow.com/questions/2663115/how-to-detect-a-loop-in-a-linked-list","q":"\n\n<p>Say you have a linked list structure in Java.  It's made up of Nodes:</p>\n\n<pre><code>class Node {\n    Node next;\n    // some user data\n}\n</code></pre>\n\n<p>and each Node points to the next node, except for the last Node, which has null for next.  Say there is a possibility that the list can contain a loop - i.e. the final Node, instead of having a null, has a reference to one of the nodes in the list which came before it.</p>\n\n<p>What's the best way of writing</p>\n\n<pre><code>boolean hasLoop(Node first)\n</code></pre>\n\n<p>which would return <code>true</code> if the given Node is the first of a list with a loop, and <code>false</code> otherwise?  How could you write so that it takes a constant amount of space and a reasonable amount of time?</p>\n\n<p>Here's a picture of what a list with a loop looks like:</p>\n\n<p><img src=\"http://i.stack.imgur.com/irw1S.jpg\" alt=\"alt text\"></p>\n    ","a":"\n<p>You can make use of <a href=\"http://en.wikipedia.org/wiki/Cycle_detection#Tortoise_and_hare\"><strong>Floyd's cycle-finding algorithm</strong></a>, also know as <em>tortoise and hare algorithm</em>.<br><br>\n The idea is to have two references to the list and move them at <strong>different speeds</strong>. Move one forward by <code>1</code> node and the other by <code>2</code> nodes. </p>\n\n<ul>\n<li>If the linked list has a loop they\nwill <em>definitely</em> meet.</li>\n<li>Else either of\nthe two references(or their <code>next</code>)\nwill become <code>null</code>.</li>\n</ul>\n\n<p>Java function implementing the algorithm:</p>\n\n<pre><code>boolean hasLoop(Node first) {\n\n    if(first == null) // list does not exist..so no loop either.\n        return false;\n\n    Node slow, fast; // create two references.\n\n    slow = fast = first; // make both refer to the start of the list.\n\n    while(true) {\n\n        slow = slow.next;          // 1 hop.\n\n        if(fast.next != null)\n            fast = fast.next.next; // 2 hops.\n        else\n            return false;          // next node null =&gt; no loop.\n\n        if(slow == null || fast == null) // if either hits null..no loop.\n            return false;\n\n        if(slow == fast) // if the two ever meet...we must have a loop.\n            return true;\n    }\n}\n</code></pre>\n    "},{"t":"Java int to String - Integer.toString(i) vs new Integer(i).toString()","l":"http://stackoverflow.com/questions/3930210/java-int-to-string-integer-tostringi-vs-new-integeri-tostring","q":"\n\n<p>Sometimes java puzzles me.<br>\nI have a huge amount of <em>int</em> initializations to make.</p>\n\n<p>What's the <em>real</em> difference?</p>\n\n<ol>\n<li><code>Integer.toString(i)</code></li>\n<li><code>new Integer(i).toString()</code></li>\n</ol>\n    ","a":"\n<p><code>Integer.toString</code> calls the static method in the class <code>Integer</code>. It does not need an instance of <code>Integer</code>.</p>\n\n<p>If you call <code>new Integer(i)</code> you create an instance of type <code>Integer</code>, which is a full Java object encapsulating the value of your int. Then you call the <code>toString</code> method on it to ask it to return a string representation of <em>itself</em>.</p>\n\n<p>If all you want is print an <code>int</code>, you'd use the first one because it's lighter, faster and doesn't use extra memory (aside from the returned string).<br>\nIf you want an object representing an integer value to put it inside a collection for example,  you'd use the second one, since it gives you a full-fledged object to do all sort of things that you cannot do with a bare <code>int</code>.</p>\n    "},{"t":"Why is super.super.method(); not allowed in Java?","l":"http://stackoverflow.com/questions/586363/why-is-super-super-method-not-allowed-in-java","q":"\n\n<p>I read <a href=\"http://stackoverflow.com/questions/580984/how-do-you-get-the-object-reference-of-an-object-in-java-when-tostring-and-hash\">this question</a> and thought that would easily be solved (not that it isn't solvable without) if one could write: </p>\n\n<pre><code>@Override\npublic String toString() {\n    return super.super.toString();\n}\n</code></pre>\n\n<p>I'm not sure if it is useful in many cases, but I wonder <em>why</em> it isn't and if something like this exists in other languages.</p>\n\n<p>What do you guys think?</p>\n\n<p><strong>EDIT:</strong>\nTo clarify: yes I know, that's impossible in Java and I don't really miss it. This is nothing I expected to work and was surprised getting a compiler error. I just had the idea and like to discuss it.</p>\n    ","a":"\n<p>It violates encapsulation. You shouldn't be able to bypass the parent class's behaviour. It makes sense to sometimes be able to bypass your <em>own</em> class's behaviour (particularly from within the same method) but not your parent's. For example, suppose we have a base \"collection of items\", a subclass representing \"a collection of red items\" and a subclass of that representing \"a collection of big red items\". It makes sense to have:</p>\n\n<pre><code>public class Items\n{\n    public void add(Item item) { ... }\n}\n\npublic class RedItems extends Items\n{\n    @Override\n    public void add(Item item)\n    {\n        if (!item.isRed())\n        {\n            throw new NotRedItemException();\n        }\n        super.add(item);\n    }\n}\n\npublic class BigRedItems extends RedItems\n{\n    @Override\n    public void add(Item item)\n    {\n        if (!item.isBig())\n        {\n            throw new NotBigItemException();\n        }\n        super.add(item);\n    }\n}\n</code></pre>\n\n<p>That's fine - RedItems can always be confident that the items it contains are all red. Now suppose we <em>were</em> able to call super.super.add():</p>\n\n<pre><code>public class NaughtyItems extends RedItems\n{\n    @Override\n    public void add(Item item)\n    {\n        // I don't care if it's red or not. Take that, RedItems!\n        super.super.add(item);\n    }\n}\n</code></pre>\n\n<p>Now we could add whatever we like, and the invariant in <code>RedItems</code> is broken.</p>\n\n<p>Does that make sense?</p>\n    "},{"t":"Java 256-bit AES Password-Based Encryption","l":"http://stackoverflow.com/questions/992019/java-256-bit-aes-password-based-encryption","q":"\n\n<p>I need to implement 256 bit AES encryption, but all the examples I have found online use a \"KeyGenerator\" to generate a 256 bit key, but I would like to use my own passkey. How can I create my own key? I have tried padding it out to 256 bits, but then I get an error saying that the key is too long. I do have the unlimited jurisdiction patch installed, so thats not the problem :)</p>\n\n<p>Ie. The KeyGenerator looks like this ...</p>\n\n<pre><code>// Get the KeyGenerator\nKeyGenerator kgen = KeyGenerator.getInstance(\"AES\");\nkgen.init(128); // 192 and 256 bits may not be available\n\n// Generate the secret key specs.\nSecretKey skey = kgen.generateKey();\nbyte[] raw = skey.getEncoded();\n</code></pre>\n\n<p><a href=\"http://java.sun.com/developer/technicalArticles/Security/AES/AES%5Fv1.html\">Code taken from here</a></p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I was actually padding the password out to 256 bytes, not bits, which is too long. The following is some code I am using now that I have some more experience with this.</p>\n\n<pre><code>byte[] key = null; // TODO\nbyte[] input = null; // TODO\nbyte[] output = null;\nSecretKeySpec keySpec = null;\nkeySpec = new SecretKeySpec(key, \"AES\");\nCipher cipher = Cipher.getInstance(\"AES/CBC/PKCS7Padding\");\ncipher.init(Cipher.ENCRYPT_MODE, keySpec);\noutput = cipher.doFinal(input)\n</code></pre>\n\n<p>The \"TODO\" bits you need to do yourself :-)</p>\n    ","a":"\n<p>Share the <code>password</code> (a <code>char[]</code>) and <code>salt</code> (a <code>byte[]</code>—8 bytes selected by a <code>SecureRandom</code> makes a good salt—which doesn't need to be kept secret) with the recipient out-of-band. Then to derive a good key from this information (in Java 6):</p>\n\n<pre><code>/* Derive the key, given password and salt. */\nSecretKeyFactory factory = SecretKeyFactory.getInstance(\"PBKDF2WithHmacSHA256\");\nKeySpec spec = new PBEKeySpec(password, salt, 65536, 256);\nSecretKey tmp = factory.generateSecret(spec);\nSecretKey secret = new SecretKeySpec(tmp.getEncoded(), \"AES\");\n/* Encrypt the message. */\nCipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\ncipher.init(Cipher.ENCRYPT_MODE, secret);\nAlgorithmParameters params = cipher.getParameters();\nbyte[] iv = params.getParameterSpec(IvParameterSpec.class).getIV();\nbyte[] ciphertext = cipher.doFinal(\"Hello, World!\".getBytes(\"UTF-8\"));\n</code></pre>\n\n<p>Now send the <code>ciphertext</code> and the <code>iv</code> to the recipient. The recipient generates a <code>SecretKey</code> in exactly the same way, using the same salt and password. Then initialize the cipher with the key <em>and</em> the initialization vector.</p>\n\n<pre><code>/* Decrypt the message, given derived key and initialization vector. */\nCipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\ncipher.init(Cipher.DECRYPT_MODE, secret, new IvParameterSpec(iv));\nString plaintext = new String(cipher.doFinal(ciphertext), \"UTF-8\");\nSystem.out.println(plaintext);\n</code></pre>\n\n<hr>\n\n<p>A <code>java.security.InvalidKeyException</code> with the message \"Illegal key size or default parameters\" means that the cryptography strength <em>is</em> limited; the unlimited strength jurisdiction policy files are not in the correct location. In a JDK, they should be placed under <code>${jdk}/jre/lib/security</code> </p>\n\n<p>Based on the problem description, it sounds like the policy files are not correctly installed. Systems can easily have multiple Java runtimes; double-check to make sure that the correct location is being used.</p>\n    "},{"t":"Why does Java's hashCode() in String use 31 as a multiplier?","l":"http://stackoverflow.com/questions/299304/why-does-javas-hashcode-in-string-use-31-as-a-multiplier","q":"\n\n<p>In Java, the <a href=\"http://java.sun.com/javase/6/docs/api/java/lang/String.html#hashCode()\">hash code</a> for a <code>String</code> object is computed as</p>\n\n<p><code>s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]</code></p>\n\n<p>using <code>int</code> arithmetic, where <code>s[i]</code> is the <code>i</code><sup>th</sup> character of the string, <code>n</code> is the length of the string, and <code>^</code> indicates exponentiation.</p>\n\n<p>Why is 31 used as a multiplier?</p>\n\n<p>I understand that the multiplier should be a relatively large prime number. So why not 29, or 37, or even 97?</p>\n    ","a":"\n<p>According to Joshua Bloch's <a href=\"http://rads.stackoverflow.com/amzn/click/0321356683\">Effective Java</a> (a book that can't be recommended enough, and which I bought thanks to continual mentions on stackoverflow):</p>\n\n<blockquote>\n  <p>The value 31 was chosen because it is an odd prime. If it were even and the multiplication overflowed, information would be lost, as multiplication by 2 is equivalent to shifting. The advantage of using a prime is less clear, but it is traditional. A nice property of 31 is that the multiplication can be replaced by a shift and a subtraction for better performance: <code>31 * i == (i &lt;&lt; 5) - i</code>. Modern VMs do this sort of optimization automatically.</p>\n</blockquote>\n\n<p><em>(from Chapter 3, Item 9: Always override hashcode when you override equals, page 48)</em></p>\n    "},{"t":"How to call a method after a delay in Android","l":"http://stackoverflow.com/questions/3072173/how-to-call-a-method-after-a-delay-in-android","q":"\n\n<p>I want to be able to call the following method after a specified delay.\n In objective c there was something like:</p>\n\n<pre><code>[self performSelector:@selector(DoSomething) withObject:nil afterDelay:5];\n</code></pre>\n\n<p>Is there an equivalent of this method in android with java?\nFor example I need to be able to call a method after 5 seconds.</p>\n\n<pre><code>public void DoSomething()\n{\n     //do something here\n}\n</code></pre>\n    ","a":"\n<p>It looks like the Mac OS API lets the current thread continue, and schedules the task to run asynchronously. In the Java, the equivalent function is provided by the <code>java.util.concurrent</code> package. I'm not sure what limitations Android might impose.</p>\n\n<pre><code>private static final ScheduledExecutorService worker = \n  Executors.newSingleThreadScheduledExecutor();\n\nvoid someMethod() {\n  ⋮\n  Runnable task = new Runnable() {\n    public void run() {\n      /* Do something… */\n    }\n  };\n  worker.schedule(task, 5, TimeUnit.SECONDS);\n  ⋮\n}\n</code></pre>\n    "},{"t":"Static Classes In Java","l":"http://stackoverflow.com/questions/7486012/static-classes-in-java","q":"\n\n<p>Is there anything like <code>static class</code> in java?\nWhat is the meaning of such a class. Do all the methods of the static class need to be <code>static</code> too?\nIs it required the other way round, that if a class contains all the static methods, shall the class be static too?</p>\n\n<p>What good are static classes?</p>\n    ","a":"\n<p>Java has static <em>nested</em> classes but it sounds like you're looking for a top-level static class. Java has no way of making a top-level class static but you can simulate a static class like this:</p>\n\n<ul>\n<li>Declare your class <code>final</code> - Prevents extension of the class since extending a static class makes no sense</li>\n<li>Make the constructor <code>private</code> - Prevents instantiation by client code as it makes no sense to instantiate a static class</li>\n<li>Make <strong>all</strong> the members and functions of the class <code>static</code> -  Since the class cannot be instantiated no instance methods can be called or instance fields accessed</li>\n<li>Note that the compiler will not prevent you from declaring an instance (non-static) member. The issue will only show up if you attempt to call the instance member</li>\n</ul>\n\n<p>Simple example per suggestions from above:</p>\n\n<pre><code>public class TestMyStaticClass {\n     public static void main(String []args){\n        MyStaticClass.setMyStaticMember(5);\n        System.out.println(\"Static value: \" + MyStaticClass.getMyStaticMember());\n        System.out.println(\"Value squared: \" + MyStaticClass.squareMyStaticMember());\n        // MyStaticClass x = new MyStaticClass(); // results in compile time error\n     }\n}\n\n// A top-level Java class mimicking static class behavior\npublic final class MyStaticClass {\n    private MyStaticClass () { // private constructor\n        myStaticMember = 1;\n    }\n    private static int myStaticMember;\n    public static void setMyStaticMember(int val) {\n        myStaticMember = val;\n    }\n    public static int getMyStaticMember() {\n        return myStaticMember;\n    }\n    public static int squareMyStaticMember() {\n        return myStaticMember * myStaticMember;\n    }\n}\n</code></pre>\n\n<p><strong>What good are static classes?</strong> A good use of a static class is in defining one-off, utility and/or library classes where instantiation would not make sense. A great example is the Math class that contains some mathematical constants such as PI and E and simply provides mathematical calculations. Requiring instantiation in such a case would be unnecessary and confusing. <a href=\"http://download.oracle.com/javase/6/docs/api/java/lang/Math.html\">See Java's Math class</a>. Notice that it is final and all of its members are static. If Java allowed top-level classes to be declared static then the Math class would indeed be static.</p>\n    "},{"t":"How to convert List<Integer> to int[] in Java?","l":"http://stackoverflow.com/questions/960431/how-to-convert-listinteger-to-int-in-java","q":"\n\n<p>This is similar to this question:\n<a href=\"http://stackoverflow.com/questions/880581/java-convert-int-to-integer\">http://stackoverflow.com/questions/880581/java-convert-int-to-integer</a></p>\n\n<p>I'm new to Java. How can i convert a List to int[] in Java? I'm confused because List.toArray() actually returns an Object[], which can be cast to nether Integer[] or int[].</p>\n\n<p>Right now I'm using a loop to do so:</p>\n\n<pre><code>int[] toIntArray(List&lt;Integer&gt; list){\n  int[] ret = new int[list.size()];\n  for(int i = 0;i &lt; ret.length;i++)\n    ret[i] = list.get(i);\n  return ret;\n}\n</code></pre>\n\n<p>I'm sure there's a better way to do this.</p>\n    ","a":"\n<p>Unfortunately, I don't believe there really <em>is</em> a better way of doing this due to the nature of Java's handling of primitive types, boxing, arrays and generics. In particular:</p>\n\n<ul>\n<li><code>List&lt;T&gt;.toArray</code> won't work because there's no conversion from <code>Integer</code> to <code>int</code></li>\n<li>You can't use <code>int</code> as a type argument for generics, so it would <em>have</em> to be an <code>int</code>-specific method (or one which used reflection to do nasty trickery).</li>\n</ul>\n\n<p>I believe there are libraries which have autogenerated versions of this kind of method for all the primitive types (i.e. there's a template which is copied for each type). It's ugly, but that's the way it is I'm afraid :(</p>\n\n<p>Even though the <a href=\"http://java.sun.com/javase/6/docs/api/java/util/Arrays.html\"><code>Arrays</code></a> class came out before generics arrived in Java, it would still have to include all the horrible overloads if it were introduced today (assuming you want to use primitive arrays).</p>\n    "},{"t":"Java method with return type compiles without return statement","l":"http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-return-statement","q":"\n\n<p><strong>Question 1:</strong></p>\n\n<p>Why does the following code compile without having a return statement?</p>\n\n<pre><code>public int a() \n{\n    while(true);\n}\n</code></pre>\n\n<p><strong>Question 2:</strong> </p>\n\n<p>On the other hand, why does the following code compile,</p>\n\n<pre><code>public int a() \n{\n    while(0 == 0);\n}\n</code></pre>\n\n<p>even though the following does not.</p>\n\n<pre><code>public int a(int b)\n{\n    while(b == b);\n}\n</code></pre>\n\n<p><strong>Edit:</strong> This is no duplicate! The second question makes this post unique. Please read carefully before deciding this is a duplicate.</p>\n    ","a":"\n<blockquote>\n  <p><strong>Question 1:</strong></p>\n  \n  <p>Why does the following code compile without having a return statement?</p>\n\n<pre><code>public int a() \n{\n    while(true);\n}\n</code></pre>\n</blockquote>\n\n<p>This is covered by <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.7\">JLS§8.4.7</a>:</p>\n\n<blockquote>\n  <p>If a method is declared to have a return type (§8.4.5), then a compile-time error occurs if the body of the method can complete normally (§14.1).</p>\n  \n  <p>In other words, a method with a return type must return only by using a return statement that provides a value return; the method is not allowed to \"drop off the end of its body\". See §14.17 for the precise rules about return statements in a method body.</p>\n  \n  <p>It is possible for a method to have a return type and yet contain no return statements. Here is one example:</p>\n\n<pre><code>class DizzyDean {\n    int pitch() { throw new RuntimeException(\"90 mph?!\"); }\n}\n</code></pre>\n</blockquote>\n\n<p>Since the compiler knows that the loop will never terminate (<code>true</code> is always true, of course), it knows the function cannot \"return normally\" (drop off the end of its body), and thus it's okay that there's no <code>return</code>.</p>\n\n<blockquote>\n  <p><strong>Question 2:</strong></p>\n  \n  <p>On the other hand, why does the following code compile,</p>\n\n<pre><code>public int a() \n{\n    while(0 == 0);\n}\n</code></pre>\n  \n  <p>even though the following does not.</p>\n\n<pre><code>public int a(int b)\n{\n    while(b == b);\n}\n</code></pre>\n</blockquote>\n\n<p>In the <code>0 == 0</code> case, the compiler knows that the loop will never terminate (that <code>0 == 0</code> will always be true). But it <strong>doesn't</strong> know that for <code>b == b</code>.</p>\n\n<p>Why not?</p>\n\n<p>The compiler understands <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.28\">constant expressions (§15.28)</a>. Quoting <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-15.2\">§15.2 - Forms of Expressions</a> <em>(because oddly this sentence isn't in §15.28)</em>:</p>\n\n<blockquote>\n  <p>Some expressions have a value that can be determined at compile time. These are <em>constant expressions</em> (§15.28).</p>\n</blockquote>\n\n<p>In your <code>b == b</code> example, because there is a variable involved, it isn't a constant expression and isn't specified to be determined at compilation time. <strong>We</strong> can see that it's always going to be true in this case (although if <code>b</code> were a <code>double</code>, as QBrute <a href=\"http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-actually-returning-anything/31050290#comment50126058_31050290\">pointed out</a>, we could easily be fooled by <code>Double.NaN</code>, which is <a href=\"https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-4.2.3\">not <code>==</code> itself</a>), but the JLS only specifies that constant expressions are determined at compile time, it doesn't allow the compiler to try to evaluate non-constant expressions. bayou.io <a href=\"http://stackoverflow.com/questions/31050114/java-method-with-return-type-compiles-without-actually-returning-anything#comment50122240_31050290\">raised a good point</a> for why not: If you start going down the road of trying to determine expressions involving variables at compilation time, where do you stop? <code>b == b</code> is obvious (er, for non-<code>NaN</code> values), but what about <code>a + b == b + a</code>? Or <code>(a + b) * 2 == a * 2 + b * 2</code>? Drawing the line at constants makes sense.</p>\n\n<p>So since it doesn't \"determine\" the expression, the compiler doesn't know that the loop will never terminate, so it thinks the method can return normally&nbsp;— which it's not allowed to do, because it's required to use <code>return</code>. So it complains about the lack of a <code>return</code>.</p>\n    "},{"t":"Java Hashmap: How to get key from value?","l":"http://stackoverflow.com/questions/1383797/java-hashmap-how-to-get-key-from-value","q":"\n\n<p>If I have the value <code>\"foo\"</code>, and a <code>HashMap&lt;String&gt; ftw</code> for which <code>ftw.containsValue(\"foo\")</code> returns <code>true</code>, how can I get the corresponding key? Do I have to loop through the hashmap? What is the best way to do that?</p>\n    ","a":"\n<p>If you choose to use the <a href=\"http://commons.apache.org/collections/\">Commons Collections library</a> instead of the standard Java Collections API, you can achieve this with ease.</p>\n\n<p>The <a href=\"http://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/BidiMap.html\">BidiMap</a> interface in the Collections library is a bi-directional map, allowing you to map a key to a value (like normal maps), and also to map a value to a key, thus allowing you to perform lookups in both directions. Obtaining a key for a value is supported by the <a href=\"http://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/BidiMap.html#getKey%28java.lang.Object%29\">getKey() method</a>.</p>\n\n<p>There is a caveat though, bidi maps cannot have multiple values mapped to keys, and hence unless your data set has 1:1 mappings between keys and values, you cannot use bidimaps.</p>\n\n<p><strong>Update</strong></p>\n\n<p>If you want to rely on the Java Collections API, you will have to ensure the 1:1 relationship between keys and values at the time of inserting the value into the map. This is easier said than done.</p>\n\n<p>Once you can ensure that, use the <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Map.html#entrySet%28%29\">entrySet() method</a> to obtain the set of entries (mappings) in the Map. Once you have obtained the set whose type is <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Map.Entry.html\">Map.Entry</a>, iterate through the entries, comparing the <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Map.Entry.html#getValue%28%29\">stored value</a> against the expected, and obtain the <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Map.Entry.html#getKey%28%29\">corresponding key</a>.</p>\n\n<p><strong>Update #2</strong></p>\n\n<p>Support for bidi maps with generics can be found in <a href=\"http://code.google.com/p/google-collections/\">Google Collections</a> and the refactored <a href=\"http://sourceforge.net/projects/collections/\">Commons-Collections</a> libraries (the latter is not an Apache project). Thanks to Esko for pointing out the missing generic support in Apache Commons Collections. Using collections with generics makes more maintainable code.</p>\n    "},{"t":"Making a private method public to unit test it…good idea?","l":"http://stackoverflow.com/questions/7075938/making-a-private-method-public-to-unit-test-it-good-idea","q":"\n\n<blockquote>\n  <p><strong>Moderator Note:</strong>  <em>There are already 39 answers posted here (some have been deleted).</em>  Before you post <em>your</em> answer, consider whether or not you can add something\n  meaningful to the discussion.  You're more than likely just repeating\n  what someone else has already said.</p>\n</blockquote>\n\n<p>I occasionally find myself needing to make a private method in a class public just to write some unit tests for it.</p>\n\n<p>Usually this would be because the method contains logic shared between other methods in the class and it's tidier to test the logic on its own, or another reason could be possible be I want to test logic used in synchronous threads without having to worry about threading problems.</p>\n\n<p>Do other people find themselves doing this, because I don't really like doing it?? I personally think the bonuses outweigh the problems of making a method public which doesn't really provide any service outside of the class...</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p>Thanks for answers everyone, seems to have piqued peoples' interest. I think the general consensus is testing should happen via the public API as this is the only way a class will ever be used, and I do agree with this. The couple of cases I mentioned above where I would do this above were uncommon cases and I thought the benefits of doing it was worth it.</p>\n\n<p>I can however, see everyones point that it should never really happen. And when thinking about it a bit more I think changing your code to accommodate tests is a bad idea - after all I suppose testing is a support tool in a way and changing a system to 'support a support tool' if you will, is blatant bad practice.</p>\n    ","a":"\n<blockquote>\n  <p><strong>Note:</strong><br>\n  This answer was originally posted for the question <a href=\"http://stackoverflow.com/q/31646092/2422776\">Is unit testing alone ever a good reason to expose private instance variables via getters? </a> which was merged into this one, so it may be a tad specific to the usecase presented there.</p>\n</blockquote>\n\n<p>As a general statement, I'm usually all for refactoring \"production\" code to make it easier to test. However, I don't think that would be a good call here. A good unit test (usually) shouldn't care about the class' implementation details, only about its visible behavior. Instead of exposing the internal stacks to the test, you could test that the class returns the pages in the order you expect it to after calling <code>first()</code> or <code>last()</code>. </p>\n\n<p>For example, consider this pseudo-code:</p>\n\n<pre><code>public class NavigationTest {\n    private Navigation nav;\n\n    @Before\n    public void setUp() {\n        // Set up nav so the order is page1-&gt;page2-&gt;page3 and\n        // we've moved back to page2\n        nav = ...;\n    }\n\n    @Test\n    public void testFirst() {\n        nav.first();\n\n        assertEquals(\"page1\", nav.getPage());\n\n        nav.next();\n        assertEquals(\"page2\", nav.getPage());\n\n        nav.next();\n        assertEquals(\"page3\", nav.getPage());\n    }\n\n    @Test\n    public void testLast() {\n        nav.last();\n\n        assertEquals(\"page3\", nav.getPage());\n\n        nav.previous();\n        assertEquals(\"page2\", nav.getPage());\n\n        nav.previous();\n        assertEquals(\"page1\", nav.getPage());\n    }\n}\n</code></pre>\n    "}]